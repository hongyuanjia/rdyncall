:lib
SDL
.
:fun
SDL_AddTimer(I*p*v)*<_SDL_TimerID>;
SDL_AllocRW()*<SDL_RWops>;
SDL_AudioDriverName(*ci)*c;
SDL_AudioInit(*c)i;
SDL_AudioQuit()v;
SDL_BuildAudioCVT(*<SDL_AudioCVT>SCiSCi)i;
SDL_CDClose(*<SDL_CD>)v;
SDL_CDEject(*<SDL_CD>)i;
SDL_CDName(i)*c;
SDL_CDNumDrives()i;
SDL_CDOpen(i)*<SDL_CD>;
SDL_CDPause(*<SDL_CD>)i;
SDL_CDPlay(*<SDL_CD>ii)i;
SDL_CDPlayTracks(*<SDL_CD>iiii)i;
SDL_CDResume(*<SDL_CD>)i;
SDL_CDStatus(*<SDL_CD>)i;
SDL_CDStop(*<SDL_CD>)i;
SDL_ClearError()v;
SDL_CloseAudio()v;
SDL_CondBroadcast(*<SDL_cond>)i;
SDL_CondSignal(*<SDL_cond>)i;
SDL_CondWait(*<SDL_cond>*<SDL_mutex>)i;
SDL_CondWaitTimeout(*<SDL_cond>*<SDL_mutex>I)i;
SDL_ConvertAudio(*<SDL_AudioCVT>)i;
SDL_ConvertSurface(*<SDL_Surface>*<SDL_PixelFormat>I)*<SDL_Surface>;
SDL_CreateCond()*<SDL_cond>;
SDL_CreateCursor(*C*Ciiii)*<SDL_Cursor>;
SDL_CreateMutex()*<SDL_mutex>;
SDL_CreateRGBSurface(IiiiIIII)*<SDL_Surface>;
SDL_CreateRGBSurfaceFrom(*viiiiIIII)*<SDL_Surface>;
SDL_CreateSemaphore(I)*<SDL_semaphore>;
SDL_CreateThread(*p*v)*<SDL_Thread>;
SDL_CreateYUVOverlay(iiI*<SDL_Surface>)*<SDL_Overlay>;
SDL_Delay(I)v;
SDL_DestroyCond(*<SDL_cond>)v;
SDL_DestroyMutex(*<SDL_mutex>)v;
SDL_DestroySemaphore(*<SDL_semaphore>)v;
SDL_DisplayFormat(*<SDL_Surface>)*<SDL_Surface>;
SDL_DisplayFormatAlpha(*<SDL_Surface>)*<SDL_Surface>;
SDL_DisplayYUVOverlay(*<SDL_Overlay>*<SDL_Rect>)i;
SDL_EnableKeyRepeat(ii)i;
SDL_EnableUNICODE(i)i;
SDL_Error(i)v;
SDL_EventState(Ci)C;
SDL_FillRect(*<SDL_Surface>*<SDL_Rect>I)i;
SDL_Flip(*<SDL_Surface>)i;
SDL_FreeCursor(*<SDL_Cursor>)v;
SDL_FreeRW(*<SDL_RWops>)v;
SDL_FreeSurface(*<SDL_Surface>)v;
SDL_FreeWAV(*C)v;
SDL_FreeYUVOverlay(*<SDL_Overlay>)v;
SDL_GL_GetAttribute(i*i)i;
SDL_GL_GetProcAddress(*c)*v;
SDL_GL_LoadLibrary(*c)i;
SDL_GL_Lock()v;
SDL_GL_SetAttribute(ii)i;
SDL_GL_SwapBuffers()v;
SDL_GL_Unlock()v;
SDL_GL_UpdateRects(i*<SDL_Rect>)v;
SDL_GetAppState()C;
SDL_GetAudioStatus()i;
SDL_GetClipRect(*<SDL_Surface>*<SDL_Rect>)v;
SDL_GetCursor()*<SDL_Cursor>;
SDL_GetError()*c;
SDL_GetEventFilter()*p;
SDL_GetGammaRamp(*S*S*S)i;
SDL_GetKeyName(i)*c;
SDL_GetKeyRepeat(*i*i)v;
SDL_GetKeyState(*i)*C;
SDL_GetModState()i;
SDL_GetMouseState(*i*i)C;
SDL_GetRGB(I*<SDL_PixelFormat>*C*C*C)v;
SDL_GetRGBA(I*<SDL_PixelFormat>*C*C*C*C)v;
SDL_GetRelativeMouseState(*i*i)C;
SDL_GetThreadID(*<SDL_Thread>)I;
SDL_GetTicks()I;
SDL_GetVideoInfo()*<SDL_VideoInfo>;
SDL_GetVideoSurface()*<SDL_Surface>;
SDL_Has3DNow()i;
SDL_Has3DNowExt()i;
SDL_HasAltiVec()i;
SDL_HasMMX()i;
SDL_HasMMXExt()i;
SDL_HasRDTSC()i;
SDL_HasSSE()i;
SDL_HasSSE2()i;
SDL_Init(I)i;
SDL_InitSubSystem(I)i;
SDL_JoystickClose(*<_SDL_Joystick>)v;
SDL_JoystickEventState(i)i;
SDL_JoystickGetAxis(*<_SDL_Joystick>i)s;
SDL_JoystickGetBall(*<_SDL_Joystick>i*i*i)i;
SDL_JoystickGetButton(*<_SDL_Joystick>i)C;
SDL_JoystickGetHat(*<_SDL_Joystick>i)C;
SDL_JoystickIndex(*<_SDL_Joystick>)i;
SDL_JoystickName(i)*c;
SDL_JoystickNumAxes(*<_SDL_Joystick>)i;
SDL_JoystickNumBalls(*<_SDL_Joystick>)i;
SDL_JoystickNumButtons(*<_SDL_Joystick>)i;
SDL_JoystickNumHats(*<_SDL_Joystick>)i;
SDL_JoystickOpen(i)*<_SDL_Joystick>;
SDL_JoystickOpened(i)i;
SDL_JoystickUpdate()v;
SDL_KillThread(*<SDL_Thread>)v;
SDL_Linked_Version()*<SDL_version>;
SDL_ListModes(*<SDL_PixelFormat>I)*;
SDL_LoadBMP_RW(*<SDL_RWops>i)*<SDL_Surface>;
SDL_LoadFunction(*v*c)*v;
SDL_LoadObject(*c)*v;
SDL_LoadWAV_RW(*<SDL_RWops>i*<SDL_AudioSpec>**I)*<SDL_AudioSpec>;
SDL_LockAudio()v;
SDL_LockSurface(*<SDL_Surface>)i;
SDL_LockYUVOverlay(*<SDL_Overlay>)i;
SDL_LowerBlit(*<SDL_Surface>*<SDL_Rect>*<SDL_Surface>*<SDL_Rect>)i;
SDL_MapRGB(*<SDL_PixelFormat>CCC)I;
SDL_MapRGBA(*<SDL_PixelFormat>CCCC)I;
SDL_MixAudio(*C*CIi)v;
SDL_NumJoysticks()i;
SDL_OpenAudio(*<SDL_AudioSpec>*<SDL_AudioSpec>)i;
SDL_PauseAudio(i)v;
SDL_PeepEvents(*<SDL_Event>iiI)i;
SDL_PollEvent(*<SDL_Event>)i;
SDL_PumpEvents()v;
SDL_PushEvent(*<SDL_Event>)i;
SDL_Quit()v;
SDL_QuitSubSystem(I)v;
SDL_RWFromConstMem(*vi)*<SDL_RWops>;
SDL_RWFromFP(*<__sFILE>i)*<SDL_RWops>;
SDL_RWFromFile(*c*c)*<SDL_RWops>;
SDL_RWFromMem(*vi)*<SDL_RWops>;
SDL_ReadBE16(*<SDL_RWops>)S;
SDL_ReadBE32(*<SDL_RWops>)I;
SDL_ReadBE64(*<SDL_RWops>)L;
SDL_ReadLE16(*<SDL_RWops>)S;
SDL_ReadLE32(*<SDL_RWops>)I;
SDL_ReadLE64(*<SDL_RWops>)L;
SDL_RemoveTimer(*<_SDL_TimerID>)i;
SDL_SaveBMP_RW(*<SDL_Surface>*<SDL_RWops>i)i;
SDL_SemPost(*<SDL_semaphore>)i;
SDL_SemTryWait(*<SDL_semaphore>)i;
SDL_SemValue(*<SDL_semaphore>)I;
SDL_SemWait(*<SDL_semaphore>)i;
SDL_SemWaitTimeout(*<SDL_semaphore>I)i;
SDL_SetAlpha(*<SDL_Surface>IC)i;
SDL_SetClipRect(*<SDL_Surface>*<SDL_Rect>)i;
SDL_SetColorKey(*<SDL_Surface>II)i;
SDL_SetColors(*<SDL_Surface>*<SDL_Color>ii)i;
SDL_SetCursor(*<SDL_Cursor>)v;
SDL_SetError(*c)v;
SDL_SetEventFilter(*p)v;
SDL_SetGamma(fff)i;
SDL_SetGammaRamp(*S*S*S)i;
SDL_SetModState(i)v;
SDL_SetPalette(*<SDL_Surface>i*<SDL_Color>ii)i;
SDL_SetTimer(I*p)i;
SDL_SetVideoMode(iiiI)*<SDL_Surface>;
SDL_ShowCursor(i)i;
SDL_SoftStretch(*<SDL_Surface>*<SDL_Rect>*<SDL_Surface>*<SDL_Rect>)i;
SDL_Swap16(S)S;
SDL_Swap32(I)I;
SDL_Swap64(L)L;
SDL_ThreadID()I;
SDL_UnloadObject(*v)v;
SDL_UnlockAudio()v;
SDL_UnlockSurface(*<SDL_Surface>)v;
SDL_UnlockYUVOverlay(*<SDL_Overlay>)v;
SDL_UpdateRect(*<SDL_Surface>iiII)v;
SDL_UpdateRects(*<SDL_Surface>i*<SDL_Rect>)v;
SDL_UpperBlit(*<SDL_Surface>*<SDL_Rect>*<SDL_Surface>*<SDL_Rect>)i;
SDL_VideoDriverName(*ci)*c;
SDL_VideoInit(*cI)i;
SDL_VideoModeOK(iiiI)i;
SDL_VideoQuit()v;
SDL_WM_GetCaption(**)v;
SDL_WM_GrabInput(i)i;
SDL_WM_IconifyWindow()i;
SDL_WM_SetCaption(*c*c)v;
SDL_WM_SetIcon(*<SDL_Surface>*C)v;
SDL_WM_ToggleFullScreen(*<SDL_Surface>)i;
SDL_WaitEvent(*<SDL_Event>)i;
SDL_WaitThread(*<SDL_Thread>*i)v;
SDL_WarpMouse(SS)v;
SDL_WasInit(I)I;
SDL_WriteBE16(*<SDL_RWops>S)i;
SDL_WriteBE32(*<SDL_RWops>I)i;
SDL_WriteBE64(*<SDL_RWops>L)i;
SDL_WriteLE16(*<SDL_RWops>S)i;
SDL_WriteLE32(*<SDL_RWops>I)i;
SDL_WriteLE64(*<SDL_RWops>L)i;
SDL_iconv(*<_SDL_iconv_t>**J**J)J;
SDL_iconv_close(*<_SDL_iconv_t>)i;
SDL_iconv_open(*c*c)*<_SDL_iconv_t>;
SDL_iconv_string(*c*c*cJ)*c;
SDL_lltoa(l*ci)*c;
SDL_ltoa(j*ci)*c;
SDL_main(i*)i;
SDL_mutexP(*<SDL_mutex>)i;
SDL_mutexV(*<SDL_mutex>)i;
SDL_strlwr(*c)*c;
SDL_strrev(*c)*c;
SDL_strupr(*c)*c;
SDL_ulltoa(L*ci)*c;
SDL_ultoa(J*ci)*c;
.
:const
AUDIO_S16=0x8010
AUDIO_S16LSB=0x8010
AUDIO_S16MSB=0x9010
AUDIO_S16SYS=0x8010
AUDIO_S8=0x8008
AUDIO_U16=0x0010
AUDIO_U16LSB=0x0010
AUDIO_U16MSB=0x1010
AUDIO_U16SYS=0x0010
AUDIO_U8=0x0008
SDL_ALLEVENTS=0xFFFFFFFF
SDL_ALL_HOTKEYS=0xFFFFFFFF
SDL_ALPHA_OPAQUE=255
SDL_ALPHA_TRANSPARENT=0
SDL_ANYFORMAT=0x10000000
SDL_APPACTIVE=0x04
SDL_APPINPUTFOCUS=0x02
SDL_APPMOUSEFOCUS=0x01
SDL_ASSEMBLY_ROUTINES=1
SDL_ASYNCBLIT=0x00000004
SDL_AUDIO_DRIVER_COREAUDIO=1
SDL_AUDIO_DRIVER_DISK=1
SDL_AUDIO_DRIVER_DUMMY=1
SDL_AUDIO_DRIVER_SNDMGR=1
SDL_AUDIO_TRACK=0x00
SDL_INIT_AUDIO=0x00000010
SDL_INIT_CDROM=0x00000100
SDL_INIT_EVENTTHREAD=0x01000000
SDL_INIT_EVERYTHING=0x0000FFFF
SDL_INIT_JOYSTICK=0x00000200
SDL_INIT_NOPARACHUTE=0x00100000
SDL_INIT_TIMER=0x00000001
SDL_INIT_VIDEO=0x00000020
SDL_OPENGL=0x00000002
SDL_OPENGLBLIT=0x0000000A
SDL_NOFRAME=0x00000020
SDL_FULLSCREEN=0x80000000
SDL_RESIZABLE=0x00000010
SDL_RLEACCEL=0x00004000
SDL_RLEACCELOK=0x00002000
SDL_SRCALPHA=0x00010000
SDL_SRCCOLORKEY=0x00001000
SDL_SWSURFACE=0x00000000
SDL_BUTTON_LEFT=1
SDL_BUTTON_MIDDLE=2
SDL_BUTTON_RIGHT=3
SDL_BUTTON_WHEELDOWN=5
SDL_BUTTON_WHEELUP=4
SDL_DOUBLEBUF=0x40000000
SDL_FULLSCREEN=0x80000000
.
:struct
SDL_version{CCC}major minor patch ;
SDL_SysWMEvent{C*<SDL_SysWMmsg>}type msg ;
SDL_SysWMmsg{};
SDL_UserEvent{Ci*v*v}type code data1 data2 ;
SDL_QuitEvent{C}type ;
SDL_ExposeEvent{C}type ;
SDL_ResizeEvent{Cii}type w h ;
SDL_JoyButtonEvent{CCCC}type which button state ;
SDL_JoyHatEvent{CCCC}type which hat value ;
SDL_JoyBallEvent{CCCss}type which ball xrel yrel ;
SDL_JoyAxisEvent{CCCs}type which axis value ;
SDL_MouseButtonEvent{CCCCSS}type which button state x y ;
SDL_MouseMotionEvent{CCCSSss}type which state x y xrel yrel ;
SDL_KeyboardEvent{CCC<SDL_keysym>}type which state keysym ;
SDL_ActiveEvent{CCC}type gain state ;
SDL_Cursor{<SDL_Rect>ss*C*C[2]*C*<WMcursor>}area hot_x hot_y data mask save wm_cursor ;
WMcursor{};
SDL_Overlay{Iiii*S**C*<private_yuvhwfuncs>*<private_yuvhwdata>II}format w h planes pitches pixels hwfuncs hwdata hw_overlay UnusedBits ;
private_yuvhwdata{};
private_yuvhwfuncs{};
SDL_VideoInfo{IIIIIIIIIIIII*<SDL_PixelFormat>ii}hw_available wm_available UnusedBits1 UnusedBits2 blit_hw blit_hw_CC blit_hw_A blit_sw blit_sw_CC blit_sw_A blit_fill UnusedBits3 video_mem vfmt current_w current_h ;
SDL_Surface{I*<SDL_PixelFormat>iiS*vi*<private_hwdata><SDL_Rect>II*<SDL_BlitMap>Ii}flags format w h pitch pixels offset hwdata clip_rect unused1 locked map format_version refcount ;
SDL_BlitMap{};
private_hwdata{};
SDL_PixelFormat{*<SDL_Palette>CCCCCCCCCCIIIIIC}palette BitsPerPixel BytesPerPixel Rloss Gloss Bloss Aloss Rshift Gshift Bshift Ashift Rmask Gmask Bmask Amask colorkey alpha ;
SDL_Palette{i*<SDL_Color>}ncolors colors ;
SDL_Color{CCCC}r g b unused ;
SDL_Rect{ssSS}x y w h ;
SDL_keysym{CiiS}scancode sym mod unicode ;
SDL_CD{iiiii[100]<SDL_CDtrack>}id status numtracks cur_track cur_frame track ;
SDL_CDtrack{CCSII}id type unused length offset ;
SDL_AudioCVT{iSSd*Ciiid[10]*pi}needed src_format dst_format rate_incr buf len len_cvt len_mult len_ratio filters filter_index ;
SDL_AudioSpec{iSCCSSI*p*v}freq format channels silence samples padding size callback userdata ;
SDL_RWops{*p*p*p*pI<$_16>}seek read write close type hidden ;
SDL_Thread{};
SDL_cond{};
SDL_semaphore{};
SDL_mutex{};
.
:union
.
.
