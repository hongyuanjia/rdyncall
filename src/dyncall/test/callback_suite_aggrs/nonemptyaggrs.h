/* {iCIlsBCSBisd} */
#pragma pack(push,2)
struct A1 { i m0; C m1; I m2; l m3; s m4; B m5; C m6; S m7; B m8; i m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA1(const struct A1 *x, const struct A1 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1));
		AF('i',struct A1,m0,1)
		AF('C',struct A1,m1,1)
		AF('I',struct A1,m2,1)
		AF('l',struct A1,m3,1)
		AF('s',struct A1,m4,1)
		AF('B',struct A1,m5,1)
		AF('C',struct A1,m6,1)
		AF('S',struct A1,m7,1)
		AF('B',struct A1,m8,1)
		AF('i',struct A1,m9,1)
		AF('s',struct A1,m10,1)
		AF('d',struct A1,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcBcpBLl} */
#pragma pack(push,4)
struct A2 { l m0; c m1; B m2; c m3; p m4; B m5; L m6; l m7; };
#pragma pack(pop)
int f_cmpA2(const struct A2 *x, const struct A2 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA2() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A2));
		AF('l',struct A2,m0,1)
		AF('c',struct A2,m1,1)
		AF('B',struct A2,m2,1)
		AF('c',struct A2,m3,1)
		AF('p',struct A2,m4,1)
		AF('B',struct A2,m5,1)
		AF('L',struct A2,m6,1)
		AF('l',struct A2,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BpScJBSjJsil> */
#pragma pack(push,2)
union A3 { B m0; p m1; S m2; c m3; J m4; B m5; S m6; j m7; J m8; s m9; i m10; l m11; };
#pragma pack(pop)
int f_cmpA3(const union A3 *x, const union A3 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA3() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A3));
		AF('B',union A3,m0,1)
		AF('p',union A3,m1,1)
		AF('S',union A3,m2,1)
		AF('c',union A3,m3,1)
		AF('J',union A3,m4,1)
		AF('B',union A3,m5,1)
		AF('S',union A3,m6,1)
		AF('j',union A3,m7,1)
		AF('J',union A3,m8,1)
		AF('s',union A3,m9,1)
		AF('i',union A3,m10,1)
		AF('l',union A3,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lI> */
#pragma pack(push,2)
union A4 { l m0; I m1; };
#pragma pack(pop)
int f_cmpA4(const union A4 *x, const union A4 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA4() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A4));
		AF('l',union A4,m0,1)
		AF('I',union A4,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f[6]jLIjCCLjSIS} */
#pragma pack(push,8)
struct A5 { f m0[6]; j m1; L m2; I m3; j m4; C m5; C m6; L m7; j m8; S m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA5(const struct A5 *x, const struct A5 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA5() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A5));
		AF('f',struct A5,m0,6)
		AF('j',struct A5,m1,1)
		AF('L',struct A5,m2,1)
		AF('I',struct A5,m3,1)
		AF('j',struct A5,m4,1)
		AF('C',struct A5,m5,1)
		AF('C',struct A5,m6,1)
		AF('L',struct A5,m7,1)
		AF('j',struct A5,m8,1)
		AF('S',struct A5,m9,1)
		AF('I',struct A5,m10,1)
		AF('S',struct A5,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLsjjfLJsJIL} */
#pragma pack(push,2)
struct A6 { J m0; L m1; s m2; j m3; j m4; f m5; L m6; J m7; s m8; J m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA6(const struct A6 *x, const struct A6 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA6() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A6));
		AF('J',struct A6,m0,1)
		AF('L',struct A6,m1,1)
		AF('s',struct A6,m2,1)
		AF('j',struct A6,m3,1)
		AF('j',struct A6,m4,1)
		AF('f',struct A6,m5,1)
		AF('L',struct A6,m6,1)
		AF('J',struct A6,m7,1)
		AF('s',struct A6,m8,1)
		AF('J',struct A6,m9,1)
		AF('I',struct A6,m10,1)
		AF('L',struct A6,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BS} */
#pragma pack(push,1)
struct A7 { B m0; S m1; };
#pragma pack(pop)
int f_cmpA7(const struct A7 *x, const struct A7 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA7() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A7));
		AF('B',struct A7,m0,1)
		AF('S',struct A7,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip> */
#pragma pack(push,4)
union A8 { I m0; p m1; J m2; struct A5 m3; i m4; struct A6 m5; S m6; p m7; L m8; struct A7 m9; i m10; p m11; };
#pragma pack(pop)
int f_cmpA8(const union A8 *x, const union A8 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA5(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA6(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA7(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA8() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A8));
		AF('I',union A8,m0,1)
		AF('p',union A8,m1,1)
		AF('J',union A8,m2,1)
		AFa(union A8,m3,1,A5)
		AF('i',union A8,m4,1)
		AFa(union A8,m5,1,A6)
		AF('S',union A8,m6,1)
		AF('p',union A8,m7,1)
		AF('L',union A8,m8,1)
		AFa(union A8,m9,1,A7)
		AF('i',union A8,m10,1)
		AF('p',union A8,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lljCplLiLJBj> */
#pragma pack(push,8)
union A9 { l m0; l m1; j m2; C m3; p m4; l m5; L m6; i m7; L m8; J m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA9(const union A9 *x, const union A9 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA9() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A9));
		AF('l',union A9,m0,1)
		AF('l',union A9,m1,1)
		AF('j',union A9,m2,1)
		AF('C',union A9,m3,1)
		AF('p',union A9,m4,1)
		AF('l',union A9,m5,1)
		AF('L',union A9,m6,1)
		AF('i',union A9,m7,1)
		AF('L',union A9,m8,1)
		AF('J',union A9,m9,1)
		AF('B',union A9,m10,1)
		AF('j',union A9,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dS<lljCplLiLJBj>LCIS} */
#pragma pack(push,2)
struct A10 { d m0; S m1; union A9 m2; L m3; C m4; I m5; S m6; };
#pragma pack(pop)
int f_cmpA10(const struct A10 *x, const struct A10 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA9(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA10() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A10));
		AF('d',struct A10,m0,1)
		AF('S',struct A10,m1,1)
		AFa(struct A10,m2,1,A9)
		AF('L',struct A10,m3,1)
		AF('C',struct A10,m4,1)
		AF('I',struct A10,m5,1)
		AF('S',struct A10,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI> */
#pragma pack(push,2)
union A11 { l m0; I m1; j m2; l m3; J m4; l m5; union A8 m6; struct A10 m7; d m8; C m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA11(const union A11 *x, const union A11 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA8(&x->m6, &y->m6) && f_cmpA10(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA11() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A11));
		AF('l',union A11,m0,1)
		AF('I',union A11,m1,1)
		AF('j',union A11,m2,1)
		AF('l',union A11,m3,1)
		AF('J',union A11,m4,1)
		AF('l',union A11,m5,1)
		AFa(union A11,m6,1,A8)
		AFa(union A11,m7,1,A10)
		AF('d',union A11,m8,1)
		AF('C',union A11,m9,1)
		AF('s',union A11,m10,1)
		AF('I',union A11,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BSJJ[6]BCpdfffC> */
#pragma pack(push,4)
union A12 { B m0; S m1; J m2; J m3[6]; B m4; C m5; p m6; d m7; f m8; f m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA12(const union A12 *x, const union A12 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA12() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A12));
		AF('B',union A12,m0,1)
		AF('S',union A12,m1,1)
		AF('J',union A12,m2,1)
		AF('J',union A12,m3,6)
		AF('B',union A12,m4,1)
		AF('C',union A12,m5,1)
		AF('p',union A12,m6,1)
		AF('d',union A12,m7,1)
		AF('f',union A12,m8,1)
		AF('f',union A12,m9,1)
		AF('f',union A12,m10,1)
		AF('C',union A12,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SpSJJpjcfs> */
#pragma pack(push,2)
union A13 { S m0; p m1; S m2; J m3; J m4; p m5; j m6; c m7; f m8; s m9; };
#pragma pack(pop)
int f_cmpA13(const union A13 *x, const union A13 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA13() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A13));
		AF('S',union A13,m0,1)
		AF('p',union A13,m1,1)
		AF('S',union A13,m2,1)
		AF('J',union A13,m3,1)
		AF('J',union A13,m4,1)
		AF('p',union A13,m5,1)
		AF('j',union A13,m6,1)
		AF('c',union A13,m7,1)
		AF('f',union A13,m8,1)
		AF('s',union A13,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IB> */
#pragma pack(push,1)
union A14 { I m0; B m1; };
#pragma pack(pop)
int f_cmpA14(const union A14 *x, const union A14 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA14() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A14));
		AF('I',union A14,m0,1)
		AF('B',union A14,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILLl} */
#pragma pack(push,4)
struct A15 { I m0; L m1; L m2; l m3; };
#pragma pack(pop)
int f_cmpA15(const struct A15 *x, const struct A15 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA15() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A15));
		AF('I',struct A15,m0,1)
		AF('L',struct A15,m1,1)
		AF('L',struct A15,m2,1)
		AF('l',struct A15,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dJpcddCdClCj> */
#pragma pack(push,1)
union A16 { d m0; J m1; p m2; c m3; d m4; d m5; C m6; d m7; C m8; l m9; C m10; j m11; };
#pragma pack(pop)
int f_cmpA16(const union A16 *x, const union A16 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA16() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A16));
		AF('d',union A16,m0,1)
		AF('J',union A16,m1,1)
		AF('p',union A16,m2,1)
		AF('c',union A16,m3,1)
		AF('d',union A16,m4,1)
		AF('d',union A16,m5,1)
		AF('C',union A16,m6,1)
		AF('d',union A16,m7,1)
		AF('C',union A16,m8,1)
		AF('l',union A16,m9,1)
		AF('C',union A16,m10,1)
		AF('j',union A16,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjJL} */
#pragma pack(push,4)
struct A17 { B m0; j m1; J m2; L m3; };
#pragma pack(pop)
int f_cmpA17(const struct A17 *x, const struct A17 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA17() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A17));
		AF('B',struct A17,m0,1)
		AF('j',struct A17,m1,1)
		AF('J',struct A17,m2,1)
		AF('L',struct A17,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfBid[9]Ldfjdcj> */
#pragma pack(push,4)
union A18 { s m0; f m1; B m2; i m3; d m4[9]; L m5; d m6; f m7; j m8; d m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA18(const union A18 *x, const union A18 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA18() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A18));
		AF('s',union A18,m0,1)
		AF('f',union A18,m1,1)
		AF('B',union A18,m2,1)
		AF('i',union A18,m3,1)
		AF('d',union A18,m4,9)
		AF('L',union A18,m5,1)
		AF('d',union A18,m6,1)
		AF('f',union A18,m7,1)
		AF('j',union A18,m8,1)
		AF('d',union A18,m9,1)
		AF('c',union A18,m10,1)
		AF('j',union A18,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <j> */
#pragma pack(push,1)
union A19 { j m0; };
#pragma pack(pop)
int f_cmpA19(const union A19 *x, const union A19 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA19() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A19));
		AF('j',union A19,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BjjLs[13]SicJic> */
#pragma pack(push,2)
union A20 { B m0; j m1; j m2; L m3; s m4[13]; S m5; i m6; c m7; J m8; i m9; c m10; };
#pragma pack(pop)
int f_cmpA20(const union A20 *x, const union A20 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA20() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A20));
		AF('B',union A20,m0,1)
		AF('j',union A20,m1,1)
		AF('j',union A20,m2,1)
		AF('L',union A20,m3,1)
		AF('s',union A20,m4,13)
		AF('S',union A20,m5,1)
		AF('i',union A20,m6,1)
		AF('c',union A20,m7,1)
		AF('J',union A20,m8,1)
		AF('i',union A20,m9,1)
		AF('c',union A20,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flLJJJLLJiJs> */
#pragma pack(push,1)
union A21 { f m0; l m1; L m2; J m3; J m4; J m5; L m6; L m7; J m8; i m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA21(const union A21 *x, const union A21 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA21() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A21));
		AF('f',union A21,m0,1)
		AF('l',union A21,m1,1)
		AF('L',union A21,m2,1)
		AF('J',union A21,m3,1)
		AF('J',union A21,m4,1)
		AF('J',union A21,m5,1)
		AF('L',union A21,m6,1)
		AF('L',union A21,m7,1)
		AF('J',union A21,m8,1)
		AF('i',union A21,m9,1)
		AF('J',union A21,m10,1)
		AF('s',union A21,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>> */
#pragma pack(push,4)
union A22 { i m0; union A18 m1; S m2; l m3; S m4; s m5; union A19 m6; j m7; union A20 m8; I m9; d m10; union A21 m11; };
#pragma pack(pop)
int f_cmpA22(const union A22 *x, const union A22 *y) { return x->m0 == y->m0 && f_cmpA18(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA19(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA20(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA21(&x->m11, &y->m11); };
DCaggr* f_touchA22() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A22));
		AF('i',union A22,m0,1)
		AFa(union A22,m1,1,A18)
		AF('S',union A22,m2,1)
		AF('l',union A22,m3,1)
		AF('S',union A22,m4,1)
		AF('s',union A22,m5,1)
		AFa(union A22,m6,1,A19)
		AF('j',union A22,m7,1)
		AFa(union A22,m8,1,A20)
		AF('I',union A22,m9,1)
		AF('d',union A22,m10,1)
		AFa(union A22,m11,1,A21)
		dcCloseAggr(a);
	}
	return a;
};
/* {dLl} */
#pragma pack(push,4)
struct A23 { d m0; L m1; l m2; };
#pragma pack(pop)
int f_cmpA23(const struct A23 *x, const struct A23 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA23() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A23));
		AF('d',struct A23,m0,1)
		AF('L',struct A23,m1,1)
		AF('l',struct A23,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CSicIjs> */
#pragma pack(push,1)
union A24 { C m0; S m1; i m2; c m3; I m4; j m5; s m6; };
#pragma pack(pop)
int f_cmpA24(const union A24 *x, const union A24 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA24() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A24));
		AF('C',union A24,m0,1)
		AF('S',union A24,m1,1)
		AF('i',union A24,m2,1)
		AF('c',union A24,m3,1)
		AF('I',union A24,m4,1)
		AF('j',union A24,m5,1)
		AF('s',union A24,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i<CSicIjs>fLL[9]> */
#pragma pack(push,4)
union A25 { i m0; union A24 m1; f m2; L m3; L m4[9]; };
#pragma pack(pop)
int f_cmpA25(const union A25 *x, const union A25 *y) { return x->m0 == y->m0 && f_cmpA24(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8]; };
DCaggr* f_touchA25() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A25));
		AF('i',union A25,m0,1)
		AFa(union A25,m1,1,A24)
		AF('f',union A25,m2,1)
		AF('L',union A25,m3,1)
		AF('L',union A25,m4,9)
		dcCloseAggr(a);
	}
	return a;
};
/* <ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{dLl}c<i<CSicIjs>fLL[9]>Cli> */
#pragma pack(push,2)
union A26 { I m0; C m1; J m2; struct A17 m3; union A22 m4; J m5; struct A23 m6; c m7; union A25 m8; C m9; l m10; i m11; };
#pragma pack(pop)
int f_cmpA26(const union A26 *x, const union A26 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA17(&x->m3, &y->m3) && f_cmpA22(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA23(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA25(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA26() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A26));
		AF('I',union A26,m0,1)
		AF('C',union A26,m1,1)
		AF('J',union A26,m2,1)
		AFa(union A26,m3,1,A17)
		AFa(union A26,m4,1,A22)
		AF('J',union A26,m5,1)
		AFa(union A26,m6,1,A23)
		AF('c',union A26,m7,1)
		AFa(union A26,m8,1,A25)
		AF('C',union A26,m9,1)
		AF('l',union A26,m10,1)
		AF('i',union A26,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sdiljLsCcBl[10]j} */
#pragma pack(push,8)
struct A27 { s m0; d m1; i m2; l m3; j m4; L m5; s m6; C m7; c m8; B m9; l m10[10]; j m11; };
#pragma pack(pop)
int f_cmpA27(const struct A27 *x, const struct A27 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m11 == y->m11; };
DCaggr* f_touchA27() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A27));
		AF('s',struct A27,m0,1)
		AF('d',struct A27,m1,1)
		AF('i',struct A27,m2,1)
		AF('l',struct A27,m3,1)
		AF('j',struct A27,m4,1)
		AF('L',struct A27,m5,1)
		AF('s',struct A27,m6,1)
		AF('C',struct A27,m7,1)
		AF('c',struct A27,m8,1)
		AF('B',struct A27,m9,1)
		AF('l',struct A27,m10,10)
		AF('j',struct A27,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jiJp} */
#pragma pack(push,2)
struct A28 { j m0; i m1; J m2; p m3; };
#pragma pack(pop)
int f_cmpA28(const struct A28 *x, const struct A28 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA28() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A28));
		AF('j',struct A28,m0,1)
		AF('i',struct A28,m1,1)
		AF('J',struct A28,m2,1)
		AF('p',struct A28,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IBLpijIIpJIB> */
#pragma pack(push,8)
union A29 { I m0; B m1; L m2; p m3; i m4; j m5; I m6; I m7; p m8; J m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA29(const union A29 *x, const union A29 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA29() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A29));
		AF('I',union A29,m0,1)
		AF('B',union A29,m1,1)
		AF('L',union A29,m2,1)
		AF('p',union A29,m3,1)
		AF('i',union A29,m4,1)
		AF('j',union A29,m5,1)
		AF('I',union A29,m6,1)
		AF('I',union A29,m7,1)
		AF('p',union A29,m8,1)
		AF('J',union A29,m9,1)
		AF('I',union A29,m10,1)
		AF('B',union A29,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ClLpBsSIBBLB> */
#pragma pack(push,4)
union A30 { C m0; l m1; L m2; p m3; B m4; s m5; S m6; I m7; B m8; B m9; L m10; B m11; };
#pragma pack(pop)
int f_cmpA30(const union A30 *x, const union A30 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA30() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A30));
		AF('C',union A30,m0,1)
		AF('l',union A30,m1,1)
		AF('L',union A30,m2,1)
		AF('p',union A30,m3,1)
		AF('B',union A30,m4,1)
		AF('s',union A30,m5,1)
		AF('S',union A30,m6,1)
		AF('I',union A30,m7,1)
		AF('B',union A30,m8,1)
		AF('B',union A30,m9,1)
		AF('L',union A30,m10,1)
		AF('B',union A30,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sfCs{jiJp}c<IBLpijIIpJIB>JL<ClLpBsSIBBLB>CL} */
#pragma pack(push,2)
struct A31 { s m0; f m1; C m2; s m3; struct A28 m4; c m5; union A29 m6; J m7; L m8; union A30 m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA31(const struct A31 *x, const struct A31 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA28(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA29(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA30(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA31() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A31));
		AF('s',struct A31,m0,1)
		AF('f',struct A31,m1,1)
		AF('C',struct A31,m2,1)
		AF('s',struct A31,m3,1)
		AFa(struct A31,m4,1,A28)
		AF('c',struct A31,m5,1)
		AFa(struct A31,m6,1,A29)
		AF('J',struct A31,m7,1)
		AF('L',struct A31,m8,1)
		AFa(struct A31,m9,1,A30)
		AF('C',struct A31,m10,1)
		AF('L',struct A31,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{sdiljLsCcBl[10]j}sid{sfCs{jiJp}c<IBLpijIIpJIB>JL<ClLpBsSIBBLB>CL}[7]p> */
#pragma pack(push,2)
union A32 { struct A27 m0; s m1; i m2; d m3; struct A31 m4[7]; p m5; };
#pragma pack(pop)
int f_cmpA32(const union A32 *x, const union A32 *y) { return f_cmpA27(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA31(&x->m4[0], &y->m4[0]) && f_cmpA31(&x->m4[1], &y->m4[1]) && f_cmpA31(&x->m4[2], &y->m4[2]) && f_cmpA31(&x->m4[3], &y->m4[3]) && f_cmpA31(&x->m4[4], &y->m4[4]) && f_cmpA31(&x->m4[5], &y->m4[5]) && f_cmpA31(&x->m4[6], &y->m4[6]) && x->m5 == y->m5; };
DCaggr* f_touchA32() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A32));
		AFa(union A32,m0,1,A27)
		AF('s',union A32,m1,1)
		AF('i',union A32,m2,1)
		AF('d',union A32,m3,1)
		AFa(union A32,m4,7,A31)
		AF('p',union A32,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ilj> */
#pragma pack(push,4)
union A33 { i m0; l m1; j m2; };
#pragma pack(pop)
int f_cmpA33(const union A33 *x, const union A33 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA33() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A33));
		AF('i',union A33,m0,1)
		AF('l',union A33,m1,1)
		AF('j',union A33,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LispcdpldB> */
#pragma pack(push,4)
union A34 { L m0; i m1; s m2; p m3; c m4; d m5; p m6; l m7; d m8; B m9; };
#pragma pack(pop)
int f_cmpA34(const union A34 *x, const union A34 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA34() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A34));
		AF('L',union A34,m0,1)
		AF('i',union A34,m1,1)
		AF('s',union A34,m2,1)
		AF('p',union A34,m3,1)
		AF('c',union A34,m4,1)
		AF('d',union A34,m5,1)
		AF('p',union A34,m6,1)
		AF('l',union A34,m7,1)
		AF('d',union A34,m8,1)
		AF('B',union A34,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J> */
#pragma pack(push,4)
union A35 { J m0; };
#pragma pack(pop)
int f_cmpA35(const union A35 *x, const union A35 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA35() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A35));
		AF('J',union A35,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLss> */
#pragma pack(push,4)
union A36 { L m0; L m1; s m2; s m3; };
#pragma pack(pop)
int f_cmpA36(const union A36 *x, const union A36 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA36() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A36));
		AF('L',union A36,m0,1)
		AF('L',union A36,m1,1)
		AF('s',union A36,m2,1)
		AF('s',union A36,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfBdBscSlCdJ> */
#pragma pack(push,4)
union A37 { s m0; f m1; B m2; d m3; B m4; s m5; c m6; S m7; l m8; C m9; d m10; J m11; };
#pragma pack(pop)
int f_cmpA37(const union A37 *x, const union A37 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA37() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A37));
		AF('s',union A37,m0,1)
		AF('f',union A37,m1,1)
		AF('B',union A37,m2,1)
		AF('d',union A37,m3,1)
		AF('B',union A37,m4,1)
		AF('s',union A37,m5,1)
		AF('c',union A37,m6,1)
		AF('S',union A37,m7,1)
		AF('l',union A37,m8,1)
		AF('C',union A37,m9,1)
		AF('d',union A37,m10,1)
		AF('J',union A37,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j[7]ji<sfBdBscSlCdJ>J} */
#pragma pack(push,4)
struct A38 { j m0[7]; j m1; i m2; union A37 m3; J m4; };
#pragma pack(pop)
int f_cmpA38(const struct A38 *x, const struct A38 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA37(&x->m3, &y->m3) && x->m4 == y->m4; };
DCaggr* f_touchA38() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A38));
		AF('j',struct A38,m0,7)
		AF('j',struct A38,m1,1)
		AF('i',struct A38,m2,1)
		AFa(struct A38,m3,1,A37)
		AF('J',struct A38,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BiCcdfCpLCCC} */
#pragma pack(push,8)
struct A39 { B m0; i m1; C m2; c m3; d m4; f m5; C m6; p m7; L m8; C m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA39(const struct A39 *x, const struct A39 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA39() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A39));
		AF('B',struct A39,m0,1)
		AF('i',struct A39,m1,1)
		AF('C',struct A39,m2,1)
		AF('c',struct A39,m3,1)
		AF('d',struct A39,m4,1)
		AF('f',struct A39,m5,1)
		AF('C',struct A39,m6,1)
		AF('p',struct A39,m7,1)
		AF('L',struct A39,m8,1)
		AF('C',struct A39,m9,1)
		AF('C',struct A39,m10,1)
		AF('C',struct A39,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d{BiCcdfCpLCCC}Lc} */
#pragma pack(push,4)
struct A40 { d m0; struct A39 m1; L m2; c m3; };
#pragma pack(pop)
int f_cmpA40(const struct A40 *x, const struct A40 *y) { return x->m0 == y->m0 && f_cmpA39(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA40() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A40));
		AF('d',struct A40,m0,1)
		AFa(struct A40,m1,1,A39)
		AF('L',struct A40,m2,1)
		AF('c',struct A40,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pl{j[7]ji<sfBdBscSlCdJ>J}{d{BiCcdfCpLCCC}Lc}Spp[10]LSCcI> */
#pragma pack(push,4)
union A41 { p m0; l m1; struct A38 m2; struct A40 m3; S m4; p m5; p m6[10]; L m7; S m8; C m9; c m10; I m11; };
#pragma pack(pop)
int f_cmpA41(const union A41 *x, const union A41 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA38(&x->m2, &y->m2) && f_cmpA40(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA41() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A41));
		AF('p',union A41,m0,1)
		AF('l',union A41,m1,1)
		AFa(union A41,m2,1,A38)
		AFa(union A41,m3,1,A40)
		AF('S',union A41,m4,1)
		AF('p',union A41,m5,1)
		AF('p',union A41,m6,10)
		AF('L',union A41,m7,1)
		AF('S',union A41,m8,1)
		AF('C',union A41,m9,1)
		AF('c',union A41,m10,1)
		AF('I',union A41,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLciSBjljpIl> */
#pragma pack(push,1)
union A42 { s m0; L m1; c m2; i m3; S m4; B m5; j m6; l m7; j m8; p m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA42(const union A42 *x, const union A42 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA42() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A42));
		AF('s',union A42,m0,1)
		AF('L',union A42,m1,1)
		AF('c',union A42,m2,1)
		AF('i',union A42,m3,1)
		AF('S',union A42,m4,1)
		AF('B',union A42,m5,1)
		AF('j',union A42,m6,1)
		AF('l',union A42,m7,1)
		AF('j',union A42,m8,1)
		AF('p',union A42,m9,1)
		AF('I',union A42,m10,1)
		AF('l',union A42,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SC[5]IJjpLcjfdf> */
#pragma pack(push,4)
union A43 { S m0; C m1[5]; I m2; J m3; j m4; p m5; L m6; c m7; j m8; f m9; d m10; f m11; };
#pragma pack(pop)
int f_cmpA43(const union A43 *x, const union A43 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA43() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A43));
		AF('S',union A43,m0,1)
		AF('C',union A43,m1,5)
		AF('I',union A43,m2,1)
		AF('J',union A43,m3,1)
		AF('j',union A43,m4,1)
		AF('p',union A43,m5,1)
		AF('L',union A43,m6,1)
		AF('c',union A43,m7,1)
		AF('j',union A43,m8,1)
		AF('f',union A43,m9,1)
		AF('d',union A43,m10,1)
		AF('f',union A43,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dd<sLciSBjljpIl><SC[5]IJjpLcjfdf>diILLlSf> */
#pragma pack(push,1)
union A44 { d m0; d m1; union A42 m2; union A43 m3; d m4; i m5; I m6; L m7; L m8; l m9; S m10; f m11; };
#pragma pack(pop)
int f_cmpA44(const union A44 *x, const union A44 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA42(&x->m2, &y->m2) && f_cmpA43(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA44() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A44));
		AF('d',union A44,m0,1)
		AF('d',union A44,m1,1)
		AFa(union A44,m2,1,A42)
		AFa(union A44,m3,1,A43)
		AF('d',union A44,m4,1)
		AF('i',union A44,m5,1)
		AF('I',union A44,m6,1)
		AF('L',union A44,m7,1)
		AF('L',union A44,m8,1)
		AF('l',union A44,m9,1)
		AF('S',union A44,m10,1)
		AF('f',union A44,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dcIpijfCCjlI> */
#pragma pack(push,2)
union A45 { d m0; c m1; I m2; p m3; i m4; j m5; f m6; C m7; C m8; j m9; l m10; I m11; };
#pragma pack(pop)
int f_cmpA45(const union A45 *x, const union A45 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA45() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A45));
		AF('d',union A45,m0,1)
		AF('c',union A45,m1,1)
		AF('I',union A45,m2,1)
		AF('p',union A45,m3,1)
		AF('i',union A45,m4,1)
		AF('j',union A45,m5,1)
		AF('f',union A45,m6,1)
		AF('C',union A45,m7,1)
		AF('C',union A45,m8,1)
		AF('j',union A45,m9,1)
		AF('l',union A45,m10,1)
		AF('I',union A45,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldd> */
#pragma pack(push,2)
union A46 { l m0; d m1; d m2; };
#pragma pack(pop)
int f_cmpA46(const union A46 *x, const union A46 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA46() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A46));
		AF('l',union A46,m0,1)
		AF('d',union A46,m1,1)
		AF('d',union A46,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCI[5]JpdBIcpCs> */
#pragma pack(push,1)
union A47 { p m0; C m1; I m2[5]; J m3; p m4; d m5; B m6; I m7; c m8; p m9; C m10; s m11; };
#pragma pack(pop)
int f_cmpA47(const union A47 *x, const union A47 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA47() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A47));
		AF('p',union A47,m0,1)
		AF('C',union A47,m1,1)
		AF('I',union A47,m2,5)
		AF('J',union A47,m3,1)
		AF('p',union A47,m4,1)
		AF('d',union A47,m5,1)
		AF('B',union A47,m6,1)
		AF('I',union A47,m7,1)
		AF('c',union A47,m8,1)
		AF('p',union A47,m9,1)
		AF('C',union A47,m10,1)
		AF('s',union A47,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CcdJjILIIJpL[15]> */
#pragma pack(push,4)
union A48 { C m0; c m1; d m2; J m3; j m4; I m5; L m6; I m7; I m8; J m9; p m10; L m11[15]; };
#pragma pack(pop)
int f_cmpA48(const union A48 *x, const union A48 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14]; };
DCaggr* f_touchA48() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A48));
		AF('C',union A48,m0,1)
		AF('c',union A48,m1,1)
		AF('d',union A48,m2,1)
		AF('J',union A48,m3,1)
		AF('j',union A48,m4,1)
		AF('I',union A48,m5,1)
		AF('L',union A48,m6,1)
		AF('I',union A48,m7,1)
		AF('I',union A48,m8,1)
		AF('J',union A48,m9,1)
		AF('p',union A48,m10,1)
		AF('L',union A48,m11,15)
		dcCloseAggr(a);
	}
	return a;
};
/* <p<CcdJjILIIJpL[15]>IiSsBpjBBJ> */
#pragma pack(push,2)
union A49 { p m0; union A48 m1; I m2; i m3; S m4; s m5; B m6; p m7; j m8; B m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA49(const union A49 *x, const union A49 *y) { return x->m0 == y->m0 && f_cmpA48(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA49() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A49));
		AF('p',union A49,m0,1)
		AFa(union A49,m1,1,A48)
		AF('I',union A49,m2,1)
		AF('i',union A49,m3,1)
		AF('S',union A49,m4,1)
		AF('s',union A49,m5,1)
		AF('B',union A49,m6,1)
		AF('p',union A49,m7,1)
		AF('j',union A49,m8,1)
		AF('B',union A49,m9,1)
		AF('B',union A49,m10,1)
		AF('J',union A49,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c> */
#pragma pack(push,2)
union A50 { B m0; l m1[2]; union A49 m2; c m3; };
#pragma pack(pop)
int f_cmpA50(const union A50 *x, const union A50 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && f_cmpA49(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA50() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A50));
		AF('B',union A50,m0,1)
		AF('l',union A50,m1,2)
		AFa(union A50,m2,1,A49)
		AF('c',union A50,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ILi[15]ljj> */
#pragma pack(push,2)
union A51 { I m0; L m1; i m2[15]; l m3; j m4; j m5; };
#pragma pack(pop)
int f_cmpA51(const union A51 *x, const union A51 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA51() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A51));
		AF('I',union A51,m0,1)
		AF('L',union A51,m1,1)
		AF('i',union A51,m2,15)
		AF('l',union A51,m3,1)
		AF('j',union A51,m4,1)
		AF('j',union A51,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JflcfdjdjBSJ} */
#pragma pack(push,2)
struct A52 { J m0; f m1; l m2; c m3; f m4; d m5; j m6; d m7; j m8; B m9; S m10; J m11; };
#pragma pack(pop)
int f_cmpA52(const struct A52 *x, const struct A52 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA52() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A52));
		AF('J',struct A52,m0,1)
		AF('f',struct A52,m1,1)
		AF('l',struct A52,m2,1)
		AF('c',struct A52,m3,1)
		AF('f',struct A52,m4,1)
		AF('d',struct A52,m5,1)
		AF('j',struct A52,m6,1)
		AF('d',struct A52,m7,1)
		AF('j',struct A52,m8,1)
		AF('B',struct A52,m9,1)
		AF('S',struct A52,m10,1)
		AF('J',struct A52,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flpl{JflcfdjdjBSJ}B[4]JpSids> */
#pragma pack(push,4)
union A53 { f m0; l m1; p m2; l m3; struct A52 m4; B m5[4]; J m6; p m7; S m8; i m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA53(const union A53 *x, const union A53 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA52(&x->m4, &y->m4) && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA53() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A53));
		AF('f',union A53,m0,1)
		AF('l',union A53,m1,1)
		AF('p',union A53,m2,1)
		AF('l',union A53,m3,1)
		AFa(union A53,m4,1,A52)
		AF('B',union A53,m5,4)
		AF('J',union A53,m6,1)
		AF('p',union A53,m7,1)
		AF('S',union A53,m8,1)
		AF('i',union A53,m9,1)
		AF('d',union A53,m10,1)
		AF('s',union A53,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <clCipl> */
#pragma pack(push,4)
union A54 { c m0; l m1; C m2; i m3; p m4; l m5; };
#pragma pack(pop)
int f_cmpA54(const union A54 *x, const union A54 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA54() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A54));
		AF('c',union A54,m0,1)
		AF('l',union A54,m1,1)
		AF('C',union A54,m2,1)
		AF('i',union A54,m3,1)
		AF('p',union A54,m4,1)
		AF('l',union A54,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fBILiCJLsCL} */
#pragma pack(push,2)
struct A55 { f m0; B m1; I m2; L m3; i m4; C m5; J m6; L m7; s m8; C m9; L m10; };
#pragma pack(pop)
int f_cmpA55(const struct A55 *x, const struct A55 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA55() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A55));
		AF('f',struct A55,m0,1)
		AF('B',struct A55,m1,1)
		AF('I',struct A55,m2,1)
		AF('L',struct A55,m3,1)
		AF('i',struct A55,m4,1)
		AF('C',struct A55,m5,1)
		AF('J',struct A55,m6,1)
		AF('L',struct A55,m7,1)
		AF('s',struct A55,m8,1)
		AF('C',struct A55,m9,1)
		AF('L',struct A55,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p> */
#pragma pack(push,2)
union A56 { p m0; };
#pragma pack(pop)
int f_cmpA56(const union A56 *x, const union A56 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA56() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A56));
		AF('p',union A56,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JpIdlcipIIJc} */
#pragma pack(push,4)
struct A57 { J m0; p m1; I m2; d m3; l m4; c m5; i m6; p m7; I m8; I m9; J m10; c m11; };
#pragma pack(pop)
int f_cmpA57(const struct A57 *x, const struct A57 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA57() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A57));
		AF('J',struct A57,m0,1)
		AF('p',struct A57,m1,1)
		AF('I',struct A57,m2,1)
		AF('d',struct A57,m3,1)
		AF('l',struct A57,m4,1)
		AF('c',struct A57,m5,1)
		AF('i',struct A57,m6,1)
		AF('p',struct A57,m7,1)
		AF('I',struct A57,m8,1)
		AF('I',struct A57,m9,1)
		AF('J',struct A57,m10,1)
		AF('c',struct A57,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ciIpCSJI{JpIdlcipIIJc}J> */
#pragma pack(push,2)
union A58 { c m0; i m1; I m2; p m3; C m4; S m5; J m6; I m7; struct A57 m8; J m9; };
#pragma pack(pop)
int f_cmpA58(const union A58 *x, const union A58 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA57(&x->m8, &y->m8) && x->m9 == y->m9; };
DCaggr* f_touchA58() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A58));
		AF('c',union A58,m0,1)
		AF('i',union A58,m1,1)
		AF('I',union A58,m2,1)
		AF('p',union A58,m3,1)
		AF('C',union A58,m4,1)
		AF('S',union A58,m5,1)
		AF('J',union A58,m6,1)
		AF('I',union A58,m7,1)
		AFa(union A58,m8,1,A57)
		AF('J',union A58,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iljL} */
#pragma pack(push,2)
struct A59 { i m0; l m1; j m2; L m3; };
#pragma pack(pop)
int f_cmpA59(const struct A59 *x, const struct A59 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA59() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A59));
		AF('i',struct A59,m0,1)
		AF('l',struct A59,m1,1)
		AF('j',struct A59,m2,1)
		AF('L',struct A59,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljIfBiS[3]cCpCp> */
#pragma pack(push,4)
union A60 { l m0; j m1; I m2; f m3; B m4; i m5; S m6[3]; c m7; C m8; p m9; C m10; p m11; };
#pragma pack(pop)
int f_cmpA60(const union A60 *x, const union A60 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA60() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A60));
		AF('l',union A60,m0,1)
		AF('j',union A60,m1,1)
		AF('I',union A60,m2,1)
		AF('f',union A60,m3,1)
		AF('B',union A60,m4,1)
		AF('i',union A60,m5,1)
		AF('S',union A60,m6,3)
		AF('c',union A60,m7,1)
		AF('C',union A60,m8,1)
		AF('p',union A60,m9,1)
		AF('C',union A60,m10,1)
		AF('p',union A60,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ljsi{iljL}flcJ<ljIfBiS[3]cCpCp>pl} */
#pragma pack(push,8)
struct A61 { L m0; j m1; s m2; i m3; struct A59 m4; f m5; l m6; c m7; J m8; union A60 m9; p m10; l m11; };
#pragma pack(pop)
int f_cmpA61(const struct A61 *x, const struct A61 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA59(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA60(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA61() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A61));
		AF('L',struct A61,m0,1)
		AF('j',struct A61,m1,1)
		AF('s',struct A61,m2,1)
		AF('i',struct A61,m3,1)
		AFa(struct A61,m4,1,A59)
		AF('f',struct A61,m5,1)
		AF('l',struct A61,m6,1)
		AF('c',struct A61,m7,1)
		AF('J',struct A61,m8,1)
		AFa(struct A61,m9,1,A60)
		AF('p',struct A61,m10,1)
		AF('l',struct A61,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S> */
#pragma pack(push,4)
union A62 { S m0; };
#pragma pack(pop)
int f_cmpA62(const union A62 *x, const union A62 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA62() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A62));
		AF('S',union A62,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljC> */
#pragma pack(push,1)
union A63 { l m0; j m1; C m2; };
#pragma pack(pop)
int f_cmpA63(const union A63 *x, const union A63 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA63() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A63));
		AF('l',union A63,m0,1)
		AF('j',union A63,m1,1)
		AF('C',union A63,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cil<S>JLBiS<ljC>CI> */
#pragma pack(push,4)
union A64 { c m0; i m1; l m2; union A62 m3; J m4; L m5; B m6; i m7; S m8; union A63 m9; C m10; I m11; };
#pragma pack(pop)
int f_cmpA64(const union A64 *x, const union A64 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA62(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA63(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA64() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A64));
		AF('c',union A64,m0,1)
		AF('i',union A64,m1,1)
		AF('l',union A64,m2,1)
		AFa(union A64,m3,1,A62)
		AF('J',union A64,m4,1)
		AF('L',union A64,m5,1)
		AF('B',union A64,m6,1)
		AF('i',union A64,m7,1)
		AF('S',union A64,m8,1)
		AFa(union A64,m9,1,A63)
		AF('C',union A64,m10,1)
		AF('I',union A64,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fllBJLiILjcl> */
#pragma pack(push,1)
union A65 { f m0; l m1; l m2; B m3; J m4; L m5; i m6; I m7; L m8; j m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA65(const union A65 *x, const union A65 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA65() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A65));
		AF('f',union A65,m0,1)
		AF('l',union A65,m1,1)
		AF('l',union A65,m2,1)
		AF('B',union A65,m3,1)
		AF('J',union A65,m4,1)
		AF('L',union A65,m5,1)
		AF('i',union A65,m6,1)
		AF('I',union A65,m7,1)
		AF('L',union A65,m8,1)
		AF('j',union A65,m9,1)
		AF('c',union A65,m10,1)
		AF('l',union A65,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ifdIij> */
#pragma pack(push,4)
union A66 { i m0; f m1; d m2; I m3; i m4; j m5; };
#pragma pack(pop)
int f_cmpA66(const union A66 *x, const union A66 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA66() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A66));
		AF('i',union A66,m0,1)
		AF('f',union A66,m1,1)
		AF('d',union A66,m2,1)
		AF('I',union A66,m3,1)
		AF('i',union A66,m4,1)
		AF('j',union A66,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLBljdfljCd> */
#pragma pack(push,8)
union A67 { L m0; L m1; B m2; l m3; j m4; d m5; f m6; l m7; j m8; C m9; d m10; };
#pragma pack(pop)
int f_cmpA67(const union A67 *x, const union A67 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA67() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A67));
		AF('L',union A67,m0,1)
		AF('L',union A67,m1,1)
		AF('B',union A67,m2,1)
		AF('l',union A67,m3,1)
		AF('j',union A67,m4,1)
		AF('d',union A67,m5,1)
		AF('f',union A67,m6,1)
		AF('l',union A67,m7,1)
		AF('j',union A67,m8,1)
		AF('C',union A67,m9,1)
		AF('d',union A67,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LlSd<ifdIij>CscISS<LLBljdfljCd>} */
#pragma pack(push,4)
struct A68 { L m0; l m1; S m2; d m3; union A66 m4; C m5; s m6; c m7; I m8; S m9; S m10; union A67 m11; };
#pragma pack(pop)
int f_cmpA68(const struct A68 *x, const struct A68 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA66(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA67(&x->m11, &y->m11); };
DCaggr* f_touchA68() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A68));
		AF('L',struct A68,m0,1)
		AF('l',struct A68,m1,1)
		AF('S',struct A68,m2,1)
		AF('d',struct A68,m3,1)
		AFa(struct A68,m4,1,A66)
		AF('C',struct A68,m5,1)
		AF('s',struct A68,m6,1)
		AF('c',struct A68,m7,1)
		AF('I',struct A68,m8,1)
		AF('S',struct A68,m9,1)
		AF('S',struct A68,m10,1)
		AFa(struct A68,m11,1,A67)
		dcCloseAggr(a);
	}
	return a;
};
/* <lJ{LlSd<ifdIij>CscISS<LLBljdfljCd>}LCsijIlIL> */
#pragma pack(push,1)
union A69 { l m0; J m1; struct A68 m2; L m3; C m4; s m5; i m6; j m7; I m8; l m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA69(const union A69 *x, const union A69 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA68(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA69() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A69));
		AF('l',union A69,m0,1)
		AF('J',union A69,m1,1)
		AFa(union A69,m2,1,A68)
		AF('L',union A69,m3,1)
		AF('C',union A69,m4,1)
		AF('s',union A69,m5,1)
		AF('i',union A69,m6,1)
		AF('j',union A69,m7,1)
		AF('I',union A69,m8,1)
		AF('l',union A69,m9,1)
		AF('I',union A69,m10,1)
		AF('L',union A69,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfSilfLs> */
#pragma pack(push,4)
union A70 { s m0; f m1; S m2; i m3; l m4; f m5; L m6; s m7; };
#pragma pack(pop)
int f_cmpA70(const union A70 *x, const union A70 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA70() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A70));
		AF('s',union A70,m0,1)
		AF('f',union A70,m1,1)
		AF('S',union A70,m2,1)
		AF('i',union A70,m3,1)
		AF('l',union A70,m4,1)
		AF('f',union A70,m5,1)
		AF('L',union A70,m6,1)
		AF('s',union A70,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSS[16]Cj[2]piJf[10]Bsf} */
#pragma pack(push,4)
struct A71 { d m0; S m1; S m2[16]; C m3; j m4[2]; p m5; i m6; J m7; f m8[10]; B m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA71(const struct A71 *x, const struct A71 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m2[15] == y->m2[15] && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA71() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A71));
		AF('d',struct A71,m0,1)
		AF('S',struct A71,m1,1)
		AF('S',struct A71,m2,16)
		AF('C',struct A71,m3,1)
		AF('j',struct A71,m4,2)
		AF('p',struct A71,m5,1)
		AF('i',struct A71,m6,1)
		AF('J',struct A71,m7,1)
		AF('f',struct A71,m8,10)
		AF('B',struct A71,m9,1)
		AF('s',struct A71,m10,1)
		AF('f',struct A71,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {psflfjLIdppd} */
#pragma pack(push,8)
struct A72 { p m0; s m1; f m2; l m3; f m4; j m5; L m6; I m7; d m8; p m9; p m10; d m11; };
#pragma pack(pop)
int f_cmpA72(const struct A72 *x, const struct A72 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA72() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A72));
		AF('p',struct A72,m0,1)
		AF('s',struct A72,m1,1)
		AF('f',struct A72,m2,1)
		AF('l',struct A72,m3,1)
		AF('f',struct A72,m4,1)
		AF('j',struct A72,m5,1)
		AF('L',struct A72,m6,1)
		AF('I',struct A72,m7,1)
		AF('d',struct A72,m8,1)
		AF('p',struct A72,m9,1)
		AF('p',struct A72,m10,1)
		AF('d',struct A72,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJcJJ{psflfjLIdppd}ClJLiL> */
#pragma pack(push,8)
union A73 { c m0; J m1; c m2; J m3; J m4; struct A72 m5; C m6; l m7; J m8; L m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA73(const union A73 *x, const union A73 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA72(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA73() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A73));
		AF('c',union A73,m0,1)
		AF('J',union A73,m1,1)
		AF('c',union A73,m2,1)
		AF('J',union A73,m3,1)
		AF('J',union A73,m4,1)
		AFa(union A73,m5,1,A72)
		AF('C',union A73,m6,1)
		AF('l',union A73,m7,1)
		AF('J',union A73,m8,1)
		AF('L',union A73,m9,1)
		AF('i',union A73,m10,1)
		AF('L',union A73,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fc> */
#pragma pack(push,2)
union A74 { f m0; c m1; };
#pragma pack(pop)
int f_cmpA74(const union A74 *x, const union A74 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA74() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A74));
		AF('f',union A74,m0,1)
		AF('c',union A74,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lc} */
#pragma pack(push,1)
struct A75 { l m0; c m1; };
#pragma pack(pop)
int f_cmpA75(const struct A75 *x, const struct A75 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA75() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A75));
		AF('l',struct A75,m0,1)
		AF('c',struct A75,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L} */
#pragma pack(push,2)
struct A76 { L m0; };
#pragma pack(pop)
int f_cmpA76(const struct A76 *x, const struct A76 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA76() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A76));
		AF('L',struct A76,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBfddsiIJBsI> */
#pragma pack(push,4)
union A77 { p m0; B m1; f m2; d m3; d m4; s m5; i m6; I m7; J m8; B m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA77(const union A77 *x, const union A77 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA77() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A77));
		AF('p',union A77,m0,1)
		AF('B',union A77,m1,1)
		AF('f',union A77,m2,1)
		AF('d',union A77,m3,1)
		AF('d',union A77,m4,1)
		AF('s',union A77,m5,1)
		AF('i',union A77,m6,1)
		AF('I',union A77,m7,1)
		AF('J',union A77,m8,1)
		AF('B',union A77,m9,1)
		AF('s',union A77,m10,1)
		AF('I',union A77,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jsSil<pBfddsiIJBsI>Bld> */
#pragma pack(push,2)
union A78 { j m0; s m1; S m2; i m3; l m4; union A77 m5; B m6; l m7; d m8; };
#pragma pack(pop)
int f_cmpA78(const union A78 *x, const union A78 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA77(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA78() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A78));
		AF('j',union A78,m0,1)
		AF('s',union A78,m1,1)
		AF('S',union A78,m2,1)
		AF('i',union A78,m3,1)
		AF('l',union A78,m4,1)
		AFa(union A78,m5,1,A77)
		AF('B',union A78,m6,1)
		AF('l',union A78,m7,1)
		AF('d',union A78,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djcBpBClfjJS> */
#pragma pack(push,8)
union A79 { d m0; j m1; c m2; B m3; p m4; B m5; C m6; l m7; f m8; j m9; J m10; S m11; };
#pragma pack(pop)
int f_cmpA79(const union A79 *x, const union A79 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA79() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A79));
		AF('d',union A79,m0,1)
		AF('j',union A79,m1,1)
		AF('c',union A79,m2,1)
		AF('B',union A79,m3,1)
		AF('p',union A79,m4,1)
		AF('B',union A79,m5,1)
		AF('C',union A79,m6,1)
		AF('l',union A79,m7,1)
		AF('f',union A79,m8,1)
		AF('j',union A79,m9,1)
		AF('J',union A79,m10,1)
		AF('S',union A79,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cLJCSCjspliB> */
#pragma pack(push,4)
union A80 { c m0; L m1; J m2; C m3; S m4; C m5; j m6; s m7; p m8; l m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA80(const union A80 *x, const union A80 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA80() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A80));
		AF('c',union A80,m0,1)
		AF('L',union A80,m1,1)
		AF('J',union A80,m2,1)
		AF('C',union A80,m3,1)
		AF('S',union A80,m4,1)
		AF('C',union A80,m5,1)
		AF('j',union A80,m6,1)
		AF('s',union A80,m7,1)
		AF('p',union A80,m8,1)
		AF('l',union A80,m9,1)
		AF('i',union A80,m10,1)
		AF('B',union A80,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]> */
#pragma pack(push,2)
union A81 { j m0; l m1; J m2; L m3; j m4; J m5; union A79 m6; p m7; union A80 m8; I m9; c m10; l m11[4]; };
#pragma pack(pop)
int f_cmpA81(const union A81 *x, const union A81 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA79(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA80(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3]; };
DCaggr* f_touchA81() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A81));
		AF('j',union A81,m0,1)
		AF('l',union A81,m1,1)
		AF('J',union A81,m2,1)
		AF('L',union A81,m3,1)
		AF('j',union A81,m4,1)
		AF('J',union A81,m5,1)
		AFa(union A81,m6,1,A79)
		AF('p',union A81,m7,1)
		AFa(union A81,m8,1,A80)
		AF('I',union A81,m9,1)
		AF('c',union A81,m10,1)
		AF('l',union A81,m11,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL> */
#pragma pack(push,2)
union A82 { struct A76 m0; s m1; union A78 m2; i m3; l m4; J m5; f m6; union A81 m7; L m8; L m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA82(const union A82 *x, const union A82 *y) { return f_cmpA76(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA78(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA81(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA82() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A82));
		AFa(union A82,m0,1,A76)
		AF('s',union A82,m1,1)
		AFa(union A82,m2,1,A78)
		AF('i',union A82,m3,1)
		AF('l',union A82,m4,1)
		AF('J',union A82,m5,1)
		AF('f',union A82,m6,1)
		AFa(union A82,m7,1,A81)
		AF('L',union A82,m8,1)
		AF('L',union A82,m9,1)
		AF('C',union A82,m10,1)
		AF('L',union A82,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j} */
#pragma pack(push,4)
struct A83 { j m0; };
#pragma pack(pop)
int f_cmpA83(const struct A83 *x, const struct A83 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA83() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A83));
		AF('j',struct A83,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jsjssdIfBlpl> */
#pragma pack(push,8)
union A84 { j m0; s m1; j m2; s m3; s m4; d m5; I m6; f m7; B m8; l m9; p m10; l m11; };
#pragma pack(pop)
int f_cmpA84(const union A84 *x, const union A84 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA84() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A84));
		AF('j',union A84,m0,1)
		AF('s',union A84,m1,1)
		AF('j',union A84,m2,1)
		AF('s',union A84,m3,1)
		AF('s',union A84,m4,1)
		AF('d',union A84,m5,1)
		AF('I',union A84,m6,1)
		AF('f',union A84,m7,1)
		AF('B',union A84,m8,1)
		AF('l',union A84,m9,1)
		AF('p',union A84,m10,1)
		AF('l',union A84,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LiLISc> */
#pragma pack(push,4)
union A85 { L m0; i m1; L m2; I m3; S m4; c m5; };
#pragma pack(pop)
int f_cmpA85(const union A85 *x, const union A85 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA85() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A85));
		AF('L',union A85,m0,1)
		AF('i',union A85,m1,1)
		AF('L',union A85,m2,1)
		AF('I',union A85,m3,1)
		AF('S',union A85,m4,1)
		AF('c',union A85,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BfcjcLClBIId} */
#pragma pack(push,1)
struct A86 { B m0; f m1; c m2; j m3; c m4; L m5; C m6; l m7; B m8; I m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA86(const struct A86 *x, const struct A86 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA86() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A86));
		AF('B',struct A86,m0,1)
		AF('f',struct A86,m1,1)
		AF('c',struct A86,m2,1)
		AF('j',struct A86,m3,1)
		AF('c',struct A86,m4,1)
		AF('L',struct A86,m5,1)
		AF('C',struct A86,m6,1)
		AF('l',struct A86,m7,1)
		AF('B',struct A86,m8,1)
		AF('I',struct A86,m9,1)
		AF('I',struct A86,m10,1)
		AF('d',struct A86,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ScCciffp} */
#pragma pack(push,1)
struct A87 { S m0; c m1; C m2; c m3; i m4; f m5; f m6; p m7; };
#pragma pack(pop)
int f_cmpA87(const struct A87 *x, const struct A87 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA87() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A87));
		AF('S',struct A87,m0,1)
		AF('c',struct A87,m1,1)
		AF('C',struct A87,m2,1)
		AF('c',struct A87,m3,1)
		AF('i',struct A87,m4,1)
		AF('f',struct A87,m5,1)
		AF('f',struct A87,m6,1)
		AF('p',struct A87,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fLiBd{ScCciffp}} */
#pragma pack(push,4)
struct A88 { f m0; L m1; i m2; B m3; d m4; struct A87 m5; };
#pragma pack(pop)
int f_cmpA88(const struct A88 *x, const struct A88 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA87(&x->m5, &y->m5); };
DCaggr* f_touchA88() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A88));
		AF('f',struct A88,m0,1)
		AF('L',struct A88,m1,1)
		AF('i',struct A88,m2,1)
		AF('B',struct A88,m3,1)
		AF('d',struct A88,m4,1)
		AFa(struct A88,m5,1,A87)
		dcCloseAggr(a);
	}
	return a;
};
/* {ssISpjLSjCic} */
#pragma pack(push,2)
struct A89 { s m0; s m1; I m2; S m3; p m4; j m5; L m6; S m7; j m8; C m9; i m10; c m11; };
#pragma pack(pop)
int f_cmpA89(const struct A89 *x, const struct A89 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA89() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A89));
		AF('s',struct A89,m0,1)
		AF('s',struct A89,m1,1)
		AF('I',struct A89,m2,1)
		AF('S',struct A89,m3,1)
		AF('p',struct A89,m4,1)
		AF('j',struct A89,m5,1)
		AF('L',struct A89,m6,1)
		AF('S',struct A89,m7,1)
		AF('j',struct A89,m8,1)
		AF('C',struct A89,m9,1)
		AF('i',struct A89,m10,1)
		AF('c',struct A89,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LplcfJSSjpJl} */
#pragma pack(push,4)
struct A90 { L m0; p m1; l m2; c m3; f m4; J m5; S m6; S m7; j m8; p m9; J m10; l m11; };
#pragma pack(pop)
int f_cmpA90(const struct A90 *x, const struct A90 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA90() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A90));
		AF('L',struct A90,m0,1)
		AF('p',struct A90,m1,1)
		AF('l',struct A90,m2,1)
		AF('c',struct A90,m3,1)
		AF('f',struct A90,m4,1)
		AF('J',struct A90,m5,1)
		AF('S',struct A90,m6,1)
		AF('S',struct A90,m7,1)
		AF('j',struct A90,m8,1)
		AF('p',struct A90,m9,1)
		AF('J',struct A90,m10,1)
		AF('l',struct A90,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lpS{ssISpjLSjCic}ICp{LplcfJSSjpJl}BSJI> */
#pragma pack(push,4)
union A91 { l m0; p m1; S m2; struct A89 m3; I m4; C m5; p m6; struct A90 m7; B m8; S m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA91(const union A91 *x, const union A91 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA89(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA90(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA91() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A91));
		AF('l',union A91,m0,1)
		AF('p',union A91,m1,1)
		AF('S',union A91,m2,1)
		AFa(union A91,m3,1,A89)
		AF('I',union A91,m4,1)
		AF('C',union A91,m5,1)
		AF('p',union A91,m6,1)
		AFa(union A91,m7,1,A90)
		AF('B',union A91,m8,1)
		AF('S',union A91,m9,1)
		AF('J',union A91,m10,1)
		AF('I',union A91,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jSBISfdidCsB> */
#pragma pack(push,1)
union A92 { j m0; S m1; B m2; I m3; S m4; f m5; d m6; i m7; d m8; C m9; s m10; B m11; };
#pragma pack(pop)
int f_cmpA92(const union A92 *x, const union A92 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA92() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A92));
		AF('j',union A92,m0,1)
		AF('S',union A92,m1,1)
		AF('B',union A92,m2,1)
		AF('I',union A92,m3,1)
		AF('S',union A92,m4,1)
		AF('f',union A92,m5,1)
		AF('d',union A92,m6,1)
		AF('i',union A92,m7,1)
		AF('d',union A92,m8,1)
		AF('C',union A92,m9,1)
		AF('s',union A92,m10,1)
		AF('B',union A92,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCldCSfpdfJi} */
#pragma pack(push,8)
struct A93 { d m0; C m1; l m2; d m3; C m4; S m5; f m6; p m7; d m8; f m9; J m10; i m11; };
#pragma pack(pop)
int f_cmpA93(const struct A93 *x, const struct A93 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA93() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A93));
		AF('d',struct A93,m0,1)
		AF('C',struct A93,m1,1)
		AF('l',struct A93,m2,1)
		AF('d',struct A93,m3,1)
		AF('C',struct A93,m4,1)
		AF('S',struct A93,m5,1)
		AF('f',struct A93,m6,1)
		AF('p',struct A93,m7,1)
		AF('d',struct A93,m8,1)
		AF('f',struct A93,m9,1)
		AF('J',struct A93,m10,1)
		AF('i',struct A93,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dl<jSBISfdidCsB>{dCldCSfpdfJi}jjJS> */
#pragma pack(push,4)
union A94 { d m0; l m1; union A92 m2; struct A93 m3; j m4; j m5; J m6; S m7; };
#pragma pack(pop)
int f_cmpA94(const union A94 *x, const union A94 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA92(&x->m2, &y->m2) && f_cmpA93(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA94() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A94));
		AF('d',union A94,m0,1)
		AF('l',union A94,m1,1)
		AFa(union A94,m2,1,A92)
		AFa(union A94,m3,1,A93)
		AF('j',union A94,m4,1)
		AF('j',union A94,m5,1)
		AF('J',union A94,m6,1)
		AF('S',union A94,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fjcI{fLiBd{ScCciffp}}pJ<lpS{ssISpjLSjCic}ICp{LplcfJSSjpJl}BSJI>Il<dl<jSBISfdidCsB>{dCldCSfpdfJi}jjJS>s} */
#pragma pack(push,4)
struct A95 { f m0; j m1; c m2; I m3; struct A88 m4; p m5; J m6; union A91 m7; I m8; l m9; union A94 m10; s m11; };
#pragma pack(pop)
int f_cmpA95(const struct A95 *x, const struct A95 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA88(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA91(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA94(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA95() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A95));
		AF('f',struct A95,m0,1)
		AF('j',struct A95,m1,1)
		AF('c',struct A95,m2,1)
		AF('I',struct A95,m3,1)
		AFa(struct A95,m4,1,A88)
		AF('p',struct A95,m5,1)
		AF('J',struct A95,m6,1)
		AFa(struct A95,m7,1,A91)
		AF('I',struct A95,m8,1)
		AF('l',struct A95,m9,1)
		AFa(struct A95,m10,1,A94)
		AF('s',struct A95,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cJfLSscIIBif} */
#pragma pack(push,1)
struct A96 { c m0; J m1; f m2; L m3; S m4; s m5; c m6; I m7; I m8; B m9; i m10; f m11; };
#pragma pack(pop)
int f_cmpA96(const struct A96 *x, const struct A96 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA96() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A96));
		AF('c',struct A96,m0,1)
		AF('J',struct A96,m1,1)
		AF('f',struct A96,m2,1)
		AF('L',struct A96,m3,1)
		AF('S',struct A96,m4,1)
		AF('s',struct A96,m5,1)
		AF('c',struct A96,m6,1)
		AF('I',struct A96,m7,1)
		AF('I',struct A96,m8,1)
		AF('B',struct A96,m9,1)
		AF('i',struct A96,m10,1)
		AF('f',struct A96,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dBLf} */
#pragma pack(push,2)
struct A97 { d m0; B m1; L m2; f m3; };
#pragma pack(pop)
int f_cmpA97(const struct A97 *x, const struct A97 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA97() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A97));
		AF('d',struct A97,m0,1)
		AF('B',struct A97,m1,1)
		AF('L',struct A97,m2,1)
		AF('f',struct A97,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jLpjBiICcsBs} */
#pragma pack(push,4)
struct A98 { j m0; L m1; p m2; j m3; B m4; i m5; I m6; C m7; c m8; s m9; B m10; s m11; };
#pragma pack(pop)
int f_cmpA98(const struct A98 *x, const struct A98 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA98() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A98));
		AF('j',struct A98,m0,1)
		AF('L',struct A98,m1,1)
		AF('p',struct A98,m2,1)
		AF('j',struct A98,m3,1)
		AF('B',struct A98,m4,1)
		AF('i',struct A98,m5,1)
		AF('I',struct A98,m6,1)
		AF('C',struct A98,m7,1)
		AF('c',struct A98,m8,1)
		AF('s',struct A98,m9,1)
		AF('B',struct A98,m10,1)
		AF('s',struct A98,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Is{jLpjBiICcsBs}> */
#pragma pack(push,8)
union A99 { I m0; s m1; struct A98 m2; };
#pragma pack(pop)
int f_cmpA99(const union A99 *x, const union A99 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA98(&x->m2, &y->m2); };
DCaggr* f_touchA99() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A99));
		AF('I',union A99,m0,1)
		AF('s',union A99,m1,1)
		AFa(union A99,m2,1,A98)
		dcCloseAggr(a);
	}
	return a;
};
/* <lsdSfsCjCdci[16]> */
#pragma pack(push,2)
union A100 { l m0; s m1; d m2; S m3; f m4; s m5; C m6; j m7; C m8; d m9; c m10; i m11[16]; };
#pragma pack(pop)
int f_cmpA100(const union A100 *x, const union A100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14] && x->m11[15] == y->m11[15]; };
DCaggr* f_touchA100() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A100));
		AF('l',union A100,m0,1)
		AF('s',union A100,m1,1)
		AF('d',union A100,m2,1)
		AF('S',union A100,m3,1)
		AF('f',union A100,m4,1)
		AF('s',union A100,m5,1)
		AF('C',union A100,m6,1)
		AF('j',union A100,m7,1)
		AF('C',union A100,m8,1)
		AF('d',union A100,m9,1)
		AF('c',union A100,m10,1)
		AF('i',union A100,m11,16)
		dcCloseAggr(a);
	}
	return a;
};
/* <BC> */
#pragma pack(push,2)
union A101 { B m0; C m1; };
#pragma pack(pop)
int f_cmpA101(const union A101 *x, const union A101 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA101() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A101));
		AF('B',union A101,m0,1)
		AF('C',union A101,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BSfslBcjLdCJ} */
#pragma pack(push,4)
struct A102 { B m0; S m1; f m2; s m3; l m4; B m5; c m6; j m7; L m8; d m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA102(const struct A102 *x, const struct A102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA102() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A102));
		AF('B',struct A102,m0,1)
		AF('S',struct A102,m1,1)
		AF('f',struct A102,m2,1)
		AF('s',struct A102,m3,1)
		AF('l',struct A102,m4,1)
		AF('B',struct A102,m5,1)
		AF('c',struct A102,m6,1)
		AF('j',struct A102,m7,1)
		AF('L',struct A102,m8,1)
		AF('d',struct A102,m9,1)
		AF('C',struct A102,m10,1)
		AF('J',struct A102,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <l> */
#pragma pack(push,2)
union A103 { l m0; };
#pragma pack(pop)
int f_cmpA103(const union A103 *x, const union A103 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA103() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A103));
		AF('l',union A103,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djCflIdcCjsI} */
#pragma pack(push,2)
struct A104 { d m0; j m1; C m2; f m3; l m4; I m5; d m6; c m7; C m8; j m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA104(const struct A104 *x, const struct A104 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA104() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A104));
		AF('d',struct A104,m0,1)
		AF('j',struct A104,m1,1)
		AF('C',struct A104,m2,1)
		AF('f',struct A104,m3,1)
		AF('l',struct A104,m4,1)
		AF('I',struct A104,m5,1)
		AF('d',struct A104,m6,1)
		AF('c',struct A104,m7,1)
		AF('C',struct A104,m8,1)
		AF('j',struct A104,m9,1)
		AF('s',struct A104,m10,1)
		AF('I',struct A104,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LdIIJJ[10]Jf> */
#pragma pack(push,4)
union A105 { L m0; d m1; I m2; I m3; J m4; J m5[10]; J m6; f m7; };
#pragma pack(pop)
int f_cmpA105(const union A105 *x, const union A105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA105() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A105));
		AF('L',union A105,m0,1)
		AF('d',union A105,m1,1)
		AF('I',union A105,m2,1)
		AF('I',union A105,m3,1)
		AF('J',union A105,m4,1)
		AF('J',union A105,m5,10)
		AF('J',union A105,m6,1)
		AF('f',union A105,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I<l>cpBdl{djCflIdcCjsI}j<LdIIJJ[10]Jf>lp} */
#pragma pack(push,2)
struct A106 { I m0; union A103 m1; c m2; p m3; B m4; d m5; l m6; struct A104 m7; j m8; union A105 m9; l m10; p m11; };
#pragma pack(pop)
int f_cmpA106(const struct A106 *x, const struct A106 *y) { return x->m0 == y->m0 && f_cmpA103(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA104(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA105(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA106() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A106));
		AF('I',struct A106,m0,1)
		AFa(struct A106,m1,1,A103)
		AF('c',struct A106,m2,1)
		AF('p',struct A106,m3,1)
		AF('B',struct A106,m4,1)
		AF('d',struct A106,m5,1)
		AF('l',struct A106,m6,1)
		AFa(struct A106,m7,1,A104)
		AF('j',struct A106,m8,1)
		AFa(struct A106,m9,1,A105)
		AF('l',struct A106,m10,1)
		AF('p',struct A106,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pjlj[11]dCiScs[4]iC[5]} */
#pragma pack(push,2)
struct A107 { p m0; j m1; l m2; j m3[11]; d m4; C m5; i m6; S m7; c m8; s m9[4]; i m10; C m11[5]; };
#pragma pack(pop)
int f_cmpA107(const struct A107 *x, const struct A107 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4]; };
DCaggr* f_touchA107() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A107));
		AF('p',struct A107,m0,1)
		AF('j',struct A107,m1,1)
		AF('l',struct A107,m2,1)
		AF('j',struct A107,m3,11)
		AF('d',struct A107,m4,1)
		AF('C',struct A107,m5,1)
		AF('i',struct A107,m6,1)
		AF('S',struct A107,m7,1)
		AF('c',struct A107,m8,1)
		AF('s',struct A107,m9,4)
		AF('i',struct A107,m10,1)
		AF('C',struct A107,m11,5)
		dcCloseAggr(a);
	}
	return a;
};
/* {LcIi} */
#pragma pack(push,2)
struct A108 { L m0; c m1; I m2; i m3; };
#pragma pack(pop)
int f_cmpA108(const struct A108 *x, const struct A108 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA108() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A108));
		AF('L',struct A108,m0,1)
		AF('c',struct A108,m1,1)
		AF('I',struct A108,m2,1)
		AF('i',struct A108,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <isJpBiijJ[1]> */
#pragma pack(push,2)
union A109 { i m0; s m1; J m2; p m3; B m4; i m5; i m6; j m7; J m8[1]; };
#pragma pack(pop)
int f_cmpA109(const union A109 *x, const union A109 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0]; };
DCaggr* f_touchA109() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A109));
		AF('i',union A109,m0,1)
		AF('s',union A109,m1,1)
		AF('J',union A109,m2,1)
		AF('p',union A109,m3,1)
		AF('B',union A109,m4,1)
		AF('i',union A109,m5,1)
		AF('i',union A109,m6,1)
		AF('j',union A109,m7,1)
		AF('J',union A109,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dI{pjlj[11]dCiScs[4]iC[5]}{LcIi}<isJpBiijJ[1]>> */
#pragma pack(push,2)
union A110 { d m0; I m1; struct A107 m2; struct A108 m3; union A109 m4; };
#pragma pack(pop)
int f_cmpA110(const union A110 *x, const union A110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA107(&x->m2, &y->m2) && f_cmpA108(&x->m3, &y->m3) && f_cmpA109(&x->m4, &y->m4); };
DCaggr* f_touchA110() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A110));
		AF('d',union A110,m0,1)
		AF('I',union A110,m1,1)
		AFa(union A110,m2,1,A107)
		AFa(union A110,m3,1,A108)
		AFa(union A110,m4,1,A109)
		dcCloseAggr(a);
	}
	return a;
};
/* {lJLsSfB} */
#pragma pack(push,8)
struct A111 { l m0; J m1; L m2; s m3; S m4; f m5; B m6; };
#pragma pack(pop)
int f_cmpA111(const struct A111 *x, const struct A111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA111() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A111));
		AF('l',struct A111,m0,1)
		AF('J',struct A111,m1,1)
		AF('L',struct A111,m2,1)
		AF('s',struct A111,m3,1)
		AF('S',struct A111,m4,1)
		AF('f',struct A111,m5,1)
		AF('B',struct A111,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IifCIfSSdCId} */
#pragma pack(push,4)
struct A112 { I m0; i m1; f m2; C m3; I m4; f m5; S m6; S m7; d m8; C m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA112(const struct A112 *x, const struct A112 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA112() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A112));
		AF('I',struct A112,m0,1)
		AF('i',struct A112,m1,1)
		AF('f',struct A112,m2,1)
		AF('C',struct A112,m3,1)
		AF('I',struct A112,m4,1)
		AF('f',struct A112,m5,1)
		AF('S',struct A112,m6,1)
		AF('S',struct A112,m7,1)
		AF('d',struct A112,m8,1)
		AF('C',struct A112,m9,1)
		AF('I',struct A112,m10,1)
		AF('d',struct A112,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CIS} */
#pragma pack(push,4)
struct A113 { C m0; I m1; S m2; };
#pragma pack(pop)
int f_cmpA113(const struct A113 *x, const struct A113 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA113() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A113));
		AF('C',struct A113,m0,1)
		AF('I',struct A113,m1,1)
		AF('S',struct A113,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <c{lJLsSfB}{IifCIfSSdCId}JCiIJ{CIS}SCB> */
#pragma pack(push,4)
union A114 { c m0; struct A111 m1; struct A112 m2; J m3; C m4; i m5; I m6; J m7; struct A113 m8; S m9; C m10; B m11; };
#pragma pack(pop)
int f_cmpA114(const union A114 *x, const union A114 *y) { return x->m0 == y->m0 && f_cmpA111(&x->m1, &y->m1) && f_cmpA112(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA113(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA114() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A114));
		AF('c',union A114,m0,1)
		AFa(union A114,m1,1,A111)
		AFa(union A114,m2,1,A112)
		AF('J',union A114,m3,1)
		AF('C',union A114,m4,1)
		AF('i',union A114,m5,1)
		AF('I',union A114,m6,1)
		AF('J',union A114,m7,1)
		AFa(union A114,m8,1,A113)
		AF('S',union A114,m9,1)
		AF('C',union A114,m10,1)
		AF('B',union A114,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{I<l>cpBdl{djCflIdcCjsI}j<LdIIJJ[10]Jf>lp}<dI{pjlj[11]dCiScs[4]iC[5]}{LcIi}<isJpBiijJ[1]>>j<c{lJLsSfB}{IifCIfSSdCId}JCiIJ{CIS}SCB>JCcssdjB} */
#pragma pack(push,4)
struct A115 { struct A106 m0; union A110 m1; j m2; union A114 m3; J m4; C m5; c m6; s m7; s m8; d m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA115(const struct A115 *x, const struct A115 *y) { return f_cmpA106(&x->m0, &y->m0) && f_cmpA110(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA114(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA115() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A115));
		AFa(struct A115,m0,1,A106)
		AFa(struct A115,m1,1,A110)
		AF('j',struct A115,m2,1)
		AFa(struct A115,m3,1,A114)
		AF('J',struct A115,m4,1)
		AF('C',struct A115,m5,1)
		AF('c',struct A115,m6,1)
		AF('s',struct A115,m7,1)
		AF('s',struct A115,m8,1)
		AF('d',struct A115,m9,1)
		AF('j',struct A115,m10,1)
		AF('B',struct A115,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dICcIll[10]BfcLI} */
#pragma pack(push,2)
struct A116 { d m0; I m1; C m2; c m3; I m4; l m5; l m6[10]; B m7; f m8; c m9; L m10; I m11; };
#pragma pack(pop)
int f_cmpA116(const struct A116 *x, const struct A116 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA116() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A116));
		AF('d',struct A116,m0,1)
		AF('I',struct A116,m1,1)
		AF('C',struct A116,m2,1)
		AF('c',struct A116,m3,1)
		AF('I',struct A116,m4,1)
		AF('l',struct A116,m5,1)
		AF('l',struct A116,m6,10)
		AF('B',struct A116,m7,1)
		AF('f',struct A116,m8,1)
		AF('c',struct A116,m9,1)
		AF('L',struct A116,m10,1)
		AF('I',struct A116,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iI{dICcIll[10]BfcLI}Bs} */
#pragma pack(push,8)
struct A117 { i m0; I m1; struct A116 m2; B m3; s m4; };
#pragma pack(pop)
int f_cmpA117(const struct A117 *x, const struct A117 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA116(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA117() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A117));
		AF('i',struct A117,m0,1)
		AF('I',struct A117,m1,1)
		AFa(struct A117,m2,1,A116)
		AF('B',struct A117,m3,1)
		AF('s',struct A117,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BBj} */
#pragma pack(push,4)
struct A118 { B m0; B m1; j m2; };
#pragma pack(pop)
int f_cmpA118(const struct A118 *x, const struct A118 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA118() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A118));
		AF('B',struct A118,m0,1)
		AF('B',struct A118,m1,1)
		AF('j',struct A118,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{BBj}JlJssp> */
#pragma pack(push,1)
union A119 { struct A118 m0; J m1; l m2; J m3; s m4; s m5; p m6; };
#pragma pack(pop)
int f_cmpA119(const union A119 *x, const union A119 *y) { return f_cmpA118(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA119() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A119));
		AFa(union A119,m0,1,A118)
		AF('J',union A119,m1,1)
		AF('l',union A119,m2,1)
		AF('J',union A119,m3,1)
		AF('s',union A119,m4,1)
		AF('s',union A119,m5,1)
		AF('p',union A119,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SspdS[11]BJsSiIJ> */
#pragma pack(push,1)
union A120 { S m0; s m1; p m2; d m3; S m4[11]; B m5; J m6; s m7; S m8; i m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA120(const union A120 *x, const union A120 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA120() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A120));
		AF('S',union A120,m0,1)
		AF('s',union A120,m1,1)
		AF('p',union A120,m2,1)
		AF('d',union A120,m3,1)
		AF('S',union A120,m4,11)
		AF('B',union A120,m5,1)
		AF('J',union A120,m6,1)
		AF('s',union A120,m7,1)
		AF('S',union A120,m8,1)
		AF('i',union A120,m9,1)
		AF('I',union A120,m10,1)
		AF('J',union A120,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SdjI[4]flBdS<SspdS[11]BJsSiIJ>fC> */
#pragma pack(push,1)
union A121 { S m0; d m1; j m2; I m3[4]; f m4; l m5; B m6; d m7; S m8; union A120 m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA121(const union A121 *x, const union A121 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA120(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA121() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A121));
		AF('S',union A121,m0,1)
		AF('d',union A121,m1,1)
		AF('j',union A121,m2,1)
		AF('I',union A121,m3,4)
		AF('f',union A121,m4,1)
		AF('l',union A121,m5,1)
		AF('B',union A121,m6,1)
		AF('d',union A121,m7,1)
		AF('S',union A121,m8,1)
		AFa(union A121,m9,1,A120)
		AF('f',union A121,m10,1)
		AF('C',union A121,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lCcL> */
#pragma pack(push,4)
union A122 { l m0; C m1; c m2; L m3; };
#pragma pack(pop)
int f_cmpA122(const union A122 *x, const union A122 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA122() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A122));
		AF('l',union A122,m0,1)
		AF('C',union A122,m1,1)
		AF('c',union A122,m2,1)
		AF('L',union A122,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <c> */
#pragma pack(push,2)
union A123 { c m0; };
#pragma pack(pop)
int f_cmpA123(const union A123 *x, const union A123 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA123() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A123));
		AF('c',union A123,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdJlfJsJd[16]pLc> */
#pragma pack(push,1)
union A124 { C m0; d m1; J m2; l m3; f m4; J m5; s m6; J m7; d m8[16]; p m9; L m10; c m11; };
#pragma pack(pop)
int f_cmpA124(const union A124 *x, const union A124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m8[15] == y->m8[15] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA124() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A124));
		AF('C',union A124,m0,1)
		AF('d',union A124,m1,1)
		AF('J',union A124,m2,1)
		AF('l',union A124,m3,1)
		AF('f',union A124,m4,1)
		AF('J',union A124,m5,1)
		AF('s',union A124,m6,1)
		AF('J',union A124,m7,1)
		AF('d',union A124,m8,16)
		AF('p',union A124,m9,1)
		AF('L',union A124,m10,1)
		AF('c',union A124,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSJJj[13]} */
#pragma pack(push,1)
struct A125 { c m0; S m1; J m2; J m3; j m4[13]; };
#pragma pack(pop)
int f_cmpA125(const struct A125 *x, const struct A125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12]; };
DCaggr* f_touchA125() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A125));
		AF('c',struct A125,m0,1)
		AF('S',struct A125,m1,1)
		AF('J',struct A125,m2,1)
		AF('J',struct A125,m3,1)
		AF('j',struct A125,m4,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcLCBjB{cSJJj[13]}SSdS} */
#pragma pack(push,4)
struct A126 { I m0; c m1; L m2; C m3; B m4; j m5; B m6; struct A125 m7; S m8; S m9; d m10; S m11; };
#pragma pack(pop)
int f_cmpA126(const struct A126 *x, const struct A126 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA125(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA126() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A126));
		AF('I',struct A126,m0,1)
		AF('c',struct A126,m1,1)
		AF('L',struct A126,m2,1)
		AF('C',struct A126,m3,1)
		AF('B',struct A126,m4,1)
		AF('j',struct A126,m5,1)
		AF('B',struct A126,m6,1)
		AFa(struct A126,m7,1,A125)
		AF('S',struct A126,m8,1)
		AF('S',struct A126,m9,1)
		AF('d',struct A126,m10,1)
		AF('S',struct A126,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dJLdCd} */
#pragma pack(push,1)
struct A127 { d m0; J m1; L m2; d m3; C m4; d m5; };
#pragma pack(pop)
int f_cmpA127(const struct A127 *x, const struct A127 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA127() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A127));
		AF('d',struct A127,m0,1)
		AF('J',struct A127,m1,1)
		AF('L',struct A127,m2,1)
		AF('d',struct A127,m3,1)
		AF('C',struct A127,m4,1)
		AF('d',struct A127,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjjfLJIdLISJ} */
#pragma pack(push,2)
struct A128 { s m0; j m1; j m2; f m3; L m4; J m5; I m6; d m7; L m8; I m9; S m10; J m11; };
#pragma pack(pop)
int f_cmpA128(const struct A128 *x, const struct A128 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA128() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A128));
		AF('s',struct A128,m0,1)
		AF('j',struct A128,m1,1)
		AF('j',struct A128,m2,1)
		AF('f',struct A128,m3,1)
		AF('L',struct A128,m4,1)
		AF('J',struct A128,m5,1)
		AF('I',struct A128,m6,1)
		AF('d',struct A128,m7,1)
		AF('L',struct A128,m8,1)
		AF('I',struct A128,m9,1)
		AF('S',struct A128,m10,1)
		AF('J',struct A128,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IL} */
#pragma pack(push,2)
struct A129 { I m0; L m1; };
#pragma pack(pop)
int f_cmpA129(const struct A129 *x, const struct A129 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA129() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A129));
		AF('I',struct A129,m0,1)
		AF('L',struct A129,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lslSlj} */
#pragma pack(push,8)
struct A130 { l m0; s m1; l m2; S m3; l m4; j m5; };
#pragma pack(pop)
int f_cmpA130(const struct A130 *x, const struct A130 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA130() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A130));
		AF('l',struct A130,m0,1)
		AF('s',struct A130,m1,1)
		AF('l',struct A130,m2,1)
		AF('S',struct A130,m3,1)
		AF('l',struct A130,m4,1)
		AF('j',struct A130,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LBJp[6]ilIc} */
#pragma pack(push,4)
struct A131 { L m0; B m1; J m2; p m3[6]; i m4; l m5; I m6; c m7; };
#pragma pack(pop)
int f_cmpA131(const struct A131 *x, const struct A131 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA131() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A131));
		AF('L',struct A131,m0,1)
		AF('B',struct A131,m1,1)
		AF('J',struct A131,m2,1)
		AF('p',struct A131,m3,6)
		AF('i',struct A131,m4,1)
		AF('l',struct A131,m5,1)
		AF('I',struct A131,m6,1)
		AF('c',struct A131,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j{LBJp[6]ilIc}} */
#pragma pack(push,4)
struct A132 { j m0; struct A131 m1; };
#pragma pack(pop)
int f_cmpA132(const struct A132 *x, const struct A132 *y) { return x->m0 == y->m0 && f_cmpA131(&x->m1, &y->m1); };
DCaggr* f_touchA132() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A132));
		AF('j',struct A132,m0,1)
		AFa(struct A132,m1,1,A131)
		dcCloseAggr(a);
	}
	return a;
};
/* {spIli} */
#pragma pack(push,4)
struct A133 { s m0; p m1; I m2; l m3; i m4; };
#pragma pack(pop)
int f_cmpA133(const struct A133 *x, const struct A133 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA133() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A133));
		AF('s',struct A133,m0,1)
		AF('p',struct A133,m1,1)
		AF('I',struct A133,m2,1)
		AF('l',struct A133,m3,1)
		AF('i',struct A133,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cicCiIJjj} */
#pragma pack(push,4)
struct A134 { c m0; i m1; c m2; C m3; i m4; I m5; J m6; j m7; j m8; };
#pragma pack(pop)
int f_cmpA134(const struct A134 *x, const struct A134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA134() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A134));
		AF('c',struct A134,m0,1)
		AF('i',struct A134,m1,1)
		AF('c',struct A134,m2,1)
		AF('C',struct A134,m3,1)
		AF('i',struct A134,m4,1)
		AF('I',struct A134,m5,1)
		AF('J',struct A134,m6,1)
		AF('j',struct A134,m7,1)
		AF('j',struct A134,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{cicCiIJjj}pclslCiJjpf> */
#pragma pack(push,4)
union A135 { struct A134 m0; p m1; c m2; l m3; s m4; l m5; C m6; i m7; J m8; j m9; p m10; f m11; };
#pragma pack(pop)
int f_cmpA135(const union A135 *x, const union A135 *y) { return f_cmpA134(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA135() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A135));
		AFa(union A135,m0,1,A134)
		AF('p',union A135,m1,1)
		AF('c',union A135,m2,1)
		AF('l',union A135,m3,1)
		AF('s',union A135,m4,1)
		AF('l',union A135,m5,1)
		AF('C',union A135,m6,1)
		AF('i',union A135,m7,1)
		AF('J',union A135,m8,1)
		AF('j',union A135,m9,1)
		AF('p',union A135,m10,1)
		AF('f',union A135,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLJj[16]Jil> */
#pragma pack(push,2)
union A136 { l m0; L m1; J m2; j m3[16]; J m4; i m5; l m6; };
#pragma pack(pop)
int f_cmpA136(const union A136 *x, const union A136 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m3[15] == y->m3[15] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA136() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A136));
		AF('l',union A136,m0,1)
		AF('L',union A136,m1,1)
		AF('J',union A136,m2,1)
		AF('j',union A136,m3,16)
		AF('J',union A136,m4,1)
		AF('i',union A136,m5,1)
		AF('l',union A136,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sSlj> */
#pragma pack(push,4)
union A137 { s m0; S m1; l m2; j m3; };
#pragma pack(pop)
int f_cmpA137(const union A137 *x, const union A137 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA137() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A137));
		AF('s',union A137,m0,1)
		AF('S',union A137,m1,1)
		AF('l',union A137,m2,1)
		AF('j',union A137,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JBBBBLClI} */
#pragma pack(push,4)
struct A138 { J m0; B m1; B m2; B m3; B m4; L m5; C m6; l m7; I m8; };
#pragma pack(pop)
int f_cmpA138(const struct A138 *x, const struct A138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA138() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A138));
		AF('J',struct A138,m0,1)
		AF('B',struct A138,m1,1)
		AF('B',struct A138,m2,1)
		AF('B',struct A138,m3,1)
		AF('B',struct A138,m4,1)
		AF('L',struct A138,m5,1)
		AF('C',struct A138,m6,1)
		AF('l',struct A138,m7,1)
		AF('I',struct A138,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iS<lLJj[16]Jil>cjf[12]<sSlj>cScj{JBBBBLClI}> */
#pragma pack(push,4)
union A139 { i m0; S m1; union A136 m2; c m3; j m4; f m5[12]; union A137 m6; c m7; S m8; c m9; j m10; struct A138 m11; };
#pragma pack(pop)
int f_cmpA139(const union A139 *x, const union A139 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA136(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && f_cmpA137(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA138(&x->m11, &y->m11); };
DCaggr* f_touchA139() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A139));
		AF('i',union A139,m0,1)
		AF('S',union A139,m1,1)
		AFa(union A139,m2,1,A136)
		AF('c',union A139,m3,1)
		AF('j',union A139,m4,1)
		AF('f',union A139,m5,12)
		AFa(union A139,m6,1,A137)
		AF('c',union A139,m7,1)
		AF('S',union A139,m8,1)
		AF('c',union A139,m9,1)
		AF('j',union A139,m10,1)
		AFa(union A139,m11,1,A138)
		dcCloseAggr(a);
	}
	return a;
};
/* {fJ{j{LBJp[6]ilIc}}{spIli}Cdff<{cicCiIJjj}pclslCiJjpf><iS<lLJj[16]Jil>cjf[12]<sSlj>cScj{JBBBBLClI}>lp} */
#pragma pack(push,1)
struct A140 { f m0; J m1; struct A132 m2; struct A133 m3; C m4; d m5; f m6; f m7; union A135 m8; union A139 m9; l m10; p m11; };
#pragma pack(pop)
int f_cmpA140(const struct A140 *x, const struct A140 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA132(&x->m2, &y->m2) && f_cmpA133(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA135(&x->m8, &y->m8) && f_cmpA139(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA140() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A140));
		AF('f',struct A140,m0,1)
		AF('J',struct A140,m1,1)
		AFa(struct A140,m2,1,A132)
		AFa(struct A140,m3,1,A133)
		AF('C',struct A140,m4,1)
		AF('d',struct A140,m5,1)
		AF('f',struct A140,m6,1)
		AF('f',struct A140,m7,1)
		AFa(struct A140,m8,1,A135)
		AFa(struct A140,m9,1,A139)
		AF('l',struct A140,m10,1)
		AF('p',struct A140,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pLBpdj> */
#pragma pack(push,2)
union A141 { p m0; L m1; B m2; p m3; d m4; j m5; };
#pragma pack(pop)
int f_cmpA141(const union A141 *x, const union A141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA141() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A141));
		AF('p',union A141,m0,1)
		AF('L',union A141,m1,1)
		AF('B',union A141,m2,1)
		AF('p',union A141,m3,1)
		AF('d',union A141,m4,1)
		AF('j',union A141,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pLlBpsd<pLBpdj>> */
#pragma pack(push,4)
union A142 { p m0; L m1; l m2; B m3; p m4; s m5; d m6; union A141 m7; };
#pragma pack(pop)
int f_cmpA142(const union A142 *x, const union A142 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA141(&x->m7, &y->m7); };
DCaggr* f_touchA142() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A142));
		AF('p',union A142,m0,1)
		AF('L',union A142,m1,1)
		AF('l',union A142,m2,1)
		AF('B',union A142,m3,1)
		AF('p',union A142,m4,1)
		AF('s',union A142,m5,1)
		AF('d',union A142,m6,1)
		AFa(union A142,m7,1,A141)
		dcCloseAggr(a);
	}
	return a;
};
/* <LpsdjLl> */
#pragma pack(push,4)
union A143 { L m0; p m1; s m2; d m3; j m4; L m5; l m6; };
#pragma pack(pop)
int f_cmpA143(const union A143 *x, const union A143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA143() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A143));
		AF('L',union A143,m0,1)
		AF('p',union A143,m1,1)
		AF('s',union A143,m2,1)
		AF('d',union A143,m3,1)
		AF('j',union A143,m4,1)
		AF('L',union A143,m5,1)
		AF('l',union A143,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lscf[10]jisijpij} */
#pragma pack(push,4)
struct A144 { l m0; s m1; c m2; f m3[10]; j m4; i m5; s m6; i m7; j m8; p m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA144(const struct A144 *x, const struct A144 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA144() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A144));
		AF('l',struct A144,m0,1)
		AF('s',struct A144,m1,1)
		AF('c',struct A144,m2,1)
		AF('f',struct A144,m3,10)
		AF('j',struct A144,m4,1)
		AF('i',struct A144,m5,1)
		AF('s',struct A144,m6,1)
		AF('i',struct A144,m7,1)
		AF('j',struct A144,m8,1)
		AF('p',struct A144,m9,1)
		AF('i',struct A144,m10,1)
		AF('j',struct A144,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJ} */
#pragma pack(push,2)
struct A145 { p m0; J m1; };
#pragma pack(pop)
int f_cmpA145(const struct A145 *x, const struct A145 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA145() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A145));
		AF('p',struct A145,m0,1)
		AF('J',struct A145,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dcdiILcdCdLS} */
#pragma pack(push,2)
struct A146 { d m0; c m1; d m2; i m3; I m4; L m5; c m6; d m7; C m8; d m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA146(const struct A146 *x, const struct A146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA146() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A146));
		AF('d',struct A146,m0,1)
		AF('c',struct A146,m1,1)
		AF('d',struct A146,m2,1)
		AF('i',struct A146,m3,1)
		AF('I',struct A146,m4,1)
		AF('L',struct A146,m5,1)
		AF('c',struct A146,m6,1)
		AF('d',struct A146,m7,1)
		AF('C',struct A146,m8,1)
		AF('d',struct A146,m9,1)
		AF('L',struct A146,m10,1)
		AF('S',struct A146,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sl[12]IIBpIi} */
#pragma pack(push,1)
struct A147 { s m0; l m1[12]; I m2; I m3; B m4; p m5; I m6; i m7; };
#pragma pack(pop)
int f_cmpA147(const struct A147 *x, const struct A147 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA147() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A147));
		AF('s',struct A147,m0,1)
		AF('l',struct A147,m1,12)
		AF('I',struct A147,m2,1)
		AF('I',struct A147,m3,1)
		AF('B',struct A147,m4,1)
		AF('p',struct A147,m5,1)
		AF('I',struct A147,m6,1)
		AF('i',struct A147,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jciLpfidcdCC} */
#pragma pack(push,2)
struct A148 { j m0; c m1; i m2; L m3; p m4; f m5; i m6; d m7; c m8; d m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA148(const struct A148 *x, const struct A148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA148() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A148));
		AF('j',struct A148,m0,1)
		AF('c',struct A148,m1,1)
		AF('i',struct A148,m2,1)
		AF('L',struct A148,m3,1)
		AF('p',struct A148,m4,1)
		AF('f',struct A148,m5,1)
		AF('i',struct A148,m6,1)
		AF('d',struct A148,m7,1)
		AF('c',struct A148,m8,1)
		AF('d',struct A148,m9,1)
		AF('C',struct A148,m10,1)
		AF('C',struct A148,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pdCIfC[3]dISpdl} */
#pragma pack(push,8)
struct A149 { p m0; d m1; C m2; I m3; f m4; C m5[3]; d m6; I m7; S m8; p m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA149(const struct A149 *x, const struct A149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA149() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A149));
		AF('p',struct A149,m0,1)
		AF('d',struct A149,m1,1)
		AF('C',struct A149,m2,1)
		AF('I',struct A149,m3,1)
		AF('f',struct A149,m4,1)
		AF('C',struct A149,m5,3)
		AF('d',struct A149,m6,1)
		AF('I',struct A149,m7,1)
		AF('S',struct A149,m8,1)
		AF('p',struct A149,m9,1)
		AF('d',struct A149,m10,1)
		AF('l',struct A149,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L[14]sI{pdCIfC[3]dISpdl}IIfsJlpj} */
#pragma pack(push,1)
struct A150 { L m0[14]; s m1; I m2; struct A149 m3; I m4; I m5; f m6; s m7; J m8; l m9; p m10; j m11; };
#pragma pack(pop)
int f_cmpA150(const struct A150 *x, const struct A150 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA149(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA150() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A150));
		AF('L',struct A150,m0,14)
		AF('s',struct A150,m1,1)
		AF('I',struct A150,m2,1)
		AFa(struct A150,m3,1,A149)
		AF('I',struct A150,m4,1)
		AF('I',struct A150,m5,1)
		AF('f',struct A150,m6,1)
		AF('s',struct A150,m7,1)
		AF('J',struct A150,m8,1)
		AF('l',struct A150,m9,1)
		AF('p',struct A150,m10,1)
		AF('j',struct A150,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {diIClc} */
#pragma pack(push,2)
struct A151 { d m0; i m1; I m2; C m3; l m4; c m5; };
#pragma pack(pop)
int f_cmpA151(const struct A151 *x, const struct A151 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA151() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A151));
		AF('d',struct A151,m0,1)
		AF('i',struct A151,m1,1)
		AF('I',struct A151,m2,1)
		AF('C',struct A151,m3,1)
		AF('l',struct A151,m4,1)
		AF('c',struct A151,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBCdjsIBfJfd> */
#pragma pack(push,8)
union A152 { B m0; B m1; C m2; d m3; j m4; s m5; I m6; B m7; f m8; J m9; f m10; d m11; };
#pragma pack(pop)
int f_cmpA152(const union A152 *x, const union A152 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA152() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A152));
		AF('B',union A152,m0,1)
		AF('B',union A152,m1,1)
		AF('C',union A152,m2,1)
		AF('d',union A152,m3,1)
		AF('j',union A152,m4,1)
		AF('s',union A152,m5,1)
		AF('I',union A152,m6,1)
		AF('B',union A152,m7,1)
		AF('f',union A152,m8,1)
		AF('J',union A152,m9,1)
		AF('f',union A152,m10,1)
		AF('d',union A152,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdBsipScLfjd} */
#pragma pack(push,4)
struct A153 { j m0; d m1; B m2; s m3; i m4; p m5; S m6; c m7; L m8; f m9; j m10; d m11; };
#pragma pack(pop)
int f_cmpA153(const struct A153 *x, const struct A153 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA153() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A153));
		AF('j',struct A153,m0,1)
		AF('d',struct A153,m1,1)
		AF('B',struct A153,m2,1)
		AF('s',struct A153,m3,1)
		AF('i',struct A153,m4,1)
		AF('p',struct A153,m5,1)
		AF('S',struct A153,m6,1)
		AF('c',struct A153,m7,1)
		AF('L',struct A153,m8,1)
		AF('f',struct A153,m9,1)
		AF('j',struct A153,m10,1)
		AF('d',struct A153,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <psLijl<BBCdjsIBfJfd>{jdBsipScLfjd}JcBi> */
#pragma pack(push,4)
union A154 { p m0; s m1; L m2; i m3; j m4; l m5; union A152 m6; struct A153 m7; J m8; c m9; B m10; i m11; };
#pragma pack(pop)
int f_cmpA154(const union A154 *x, const union A154 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA152(&x->m6, &y->m6) && f_cmpA153(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA154() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A154));
		AF('p',union A154,m0,1)
		AF('s',union A154,m1,1)
		AF('L',union A154,m2,1)
		AF('i',union A154,m3,1)
		AF('j',union A154,m4,1)
		AF('l',union A154,m5,1)
		AFa(union A154,m6,1,A152)
		AFa(union A154,m7,1,A153)
		AF('J',union A154,m8,1)
		AF('c',union A154,m9,1)
		AF('B',union A154,m10,1)
		AF('i',union A154,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<psLijl<BBCdjsIBfJfd>{jdBsipScLfjd}JcBi>s[16]dSddJfsLf> */
#pragma pack(push,8)
union A155 { union A154 m0; s m1[16]; d m2; S m3; d m4; d m5; J m6; f m7; s m8; L m9; f m10; };
#pragma pack(pop)
int f_cmpA155(const union A155 *x, const union A155 *y) { return f_cmpA154(&x->m0, &y->m0) && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m1[15] == y->m1[15] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA155() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A155));
		AFa(union A155,m0,1,A154)
		AF('s',union A155,m1,16)
		AF('d',union A155,m2,1)
		AF('S',union A155,m3,1)
		AF('d',union A155,m4,1)
		AF('d',union A155,m5,1)
		AF('J',union A155,m6,1)
		AF('f',union A155,m7,1)
		AF('s',union A155,m8,1)
		AF('L',union A155,m9,1)
		AF('f',union A155,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJlpfLpdpjJd> */
#pragma pack(push,4)
union A156 { s m0; J m1; l m2; p m3; f m4; L m5; p m6; d m7; p m8; j m9; J m10; d m11; };
#pragma pack(pop)
int f_cmpA156(const union A156 *x, const union A156 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA156() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A156));
		AF('s',union A156,m0,1)
		AF('J',union A156,m1,1)
		AF('l',union A156,m2,1)
		AF('p',union A156,m3,1)
		AF('f',union A156,m4,1)
		AF('L',union A156,m5,1)
		AF('p',union A156,m6,1)
		AF('d',union A156,m7,1)
		AF('p',union A156,m8,1)
		AF('j',union A156,m9,1)
		AF('J',union A156,m10,1)
		AF('d',union A156,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jL<sJlpfLpdpjJd>[5]Sjl> */
#pragma pack(push,2)
union A157 { j m0; L m1; union A156 m2[5]; S m3; j m4; l m5; };
#pragma pack(pop)
int f_cmpA157(const union A157 *x, const union A157 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA156(&x->m2[0], &y->m2[0]) && f_cmpA156(&x->m2[1], &y->m2[1]) && f_cmpA156(&x->m2[2], &y->m2[2]) && f_cmpA156(&x->m2[3], &y->m2[3]) && f_cmpA156(&x->m2[4], &y->m2[4]) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA157() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A157));
		AF('j',union A157,m0,1)
		AF('L',union A157,m1,1)
		AFa(union A157,m2,5,A156)
		AF('S',union A157,m3,1)
		AF('j',union A157,m4,1)
		AF('l',union A157,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jIC> */
#pragma pack(push,1)
union A158 { j m0; I m1; C m2; };
#pragma pack(pop)
int f_cmpA158(const union A158 *x, const union A158 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA158() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A158));
		AF('j',union A158,m0,1)
		AF('I',union A158,m1,1)
		AF('C',union A158,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fCdfLflddLfp> */
#pragma pack(push,4)
union A159 { f m0; C m1; d m2; f m3; L m4; f m5; l m6; d m7; d m8; L m9; f m10; p m11; };
#pragma pack(pop)
int f_cmpA159(const union A159 *x, const union A159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA159() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A159));
		AF('f',union A159,m0,1)
		AF('C',union A159,m1,1)
		AF('d',union A159,m2,1)
		AF('f',union A159,m3,1)
		AF('L',union A159,m4,1)
		AF('f',union A159,m5,1)
		AF('l',union A159,m6,1)
		AF('d',union A159,m7,1)
		AF('d',union A159,m8,1)
		AF('L',union A159,m9,1)
		AF('f',union A159,m10,1)
		AF('p',union A159,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iLpcpBIspSid} */
#pragma pack(push,2)
struct A160 { i m0; L m1; p m2; c m3; p m4; B m5; I m6; s m7; p m8; S m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA160(const struct A160 *x, const struct A160 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA160() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A160));
		AF('i',struct A160,m0,1)
		AF('L',struct A160,m1,1)
		AF('p',struct A160,m2,1)
		AF('c',struct A160,m3,1)
		AF('p',struct A160,m4,1)
		AF('B',struct A160,m5,1)
		AF('I',struct A160,m6,1)
		AF('s',struct A160,m7,1)
		AF('p',struct A160,m8,1)
		AF('S',struct A160,m9,1)
		AF('i',struct A160,m10,1)
		AF('d',struct A160,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<fCdfLflddLfp>liiC{iLpcpBIspSid}LJp} */
#pragma pack(push,8)
struct A161 { union A159 m0; l m1; i m2; i m3; C m4; struct A160 m5; L m6; J m7; p m8; };
#pragma pack(pop)
int f_cmpA161(const struct A161 *x, const struct A161 *y) { return f_cmpA159(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA160(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA161() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A161));
		AFa(struct A161,m0,1,A159)
		AF('l',struct A161,m1,1)
		AF('i',struct A161,m2,1)
		AF('i',struct A161,m3,1)
		AF('C',struct A161,m4,1)
		AFa(struct A161,m5,1,A160)
		AF('L',struct A161,m6,1)
		AF('J',struct A161,m7,1)
		AF('p',struct A161,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lISs> */
#pragma pack(push,1)
union A162 { l m0; I m1; S m2; s m3; };
#pragma pack(pop)
int f_cmpA162(const union A162 *x, const union A162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA162() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A162));
		AF('l',union A162,m0,1)
		AF('I',union A162,m1,1)
		AF('S',union A162,m2,1)
		AF('s',union A162,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iifJIilIsBBl> */
#pragma pack(push,4)
union A163 { i m0; i m1; f m2; J m3; I m4; i m5; l m6; I m7; s m8; B m9; B m10; l m11; };
#pragma pack(pop)
int f_cmpA163(const union A163 *x, const union A163 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA163() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A163));
		AF('i',union A163,m0,1)
		AF('i',union A163,m1,1)
		AF('f',union A163,m2,1)
		AF('J',union A163,m3,1)
		AF('I',union A163,m4,1)
		AF('i',union A163,m5,1)
		AF('l',union A163,m6,1)
		AF('I',union A163,m7,1)
		AF('s',union A163,m8,1)
		AF('B',union A163,m9,1)
		AF('B',union A163,m10,1)
		AF('l',union A163,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<iifJIilIsBBl>I} */
#pragma pack(push,4)
struct A164 { union A163 m0; I m1; };
#pragma pack(pop)
int f_cmpA164(const struct A164 *x, const struct A164 *y) { return f_cmpA163(&x->m0, &y->m0) && x->m1 == y->m1; };
DCaggr* f_touchA164() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A164));
		AFa(struct A164,m0,1,A163)
		AF('I',struct A164,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l{<fCdfLflddLfp>liiC{iLpcpBIspSid}LJp}ILfjjif<lISs>{<iifJIilIsBBl>I}I} */
#pragma pack(push,4)
struct A165 { l m0; struct A161 m1; I m2; L m3; f m4; j m5; j m6; i m7; f m8; union A162 m9; struct A164 m10; I m11; };
#pragma pack(pop)
int f_cmpA165(const struct A165 *x, const struct A165 *y) { return x->m0 == y->m0 && f_cmpA161(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA162(&x->m9, &y->m9) && f_cmpA164(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA165() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A165));
		AF('l',struct A165,m0,1)
		AFa(struct A165,m1,1,A161)
		AF('I',struct A165,m2,1)
		AF('L',struct A165,m3,1)
		AF('f',struct A165,m4,1)
		AF('j',struct A165,m5,1)
		AF('j',struct A165,m6,1)
		AF('i',struct A165,m7,1)
		AF('f',struct A165,m8,1)
		AFa(struct A165,m9,1,A162)
		AFa(struct A165,m10,1,A164)
		AF('I',struct A165,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCdSlssjpJcc[15]> */
#pragma pack(push,2)
union A166 { d m0; C m1; d m2; S m3; l m4; s m5; s m6; j m7; p m8; J m9; c m10; c m11[15]; };
#pragma pack(pop)
int f_cmpA166(const union A166 *x, const union A166 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14]; };
DCaggr* f_touchA166() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A166));
		AF('d',union A166,m0,1)
		AF('C',union A166,m1,1)
		AF('d',union A166,m2,1)
		AF('S',union A166,m3,1)
		AF('l',union A166,m4,1)
		AF('s',union A166,m5,1)
		AF('s',union A166,m6,1)
		AF('j',union A166,m7,1)
		AF('p',union A166,m8,1)
		AF('J',union A166,m9,1)
		AF('c',union A166,m10,1)
		AF('c',union A166,m11,15)
		dcCloseAggr(a);
	}
	return a;
};
/* <BSjSfJfI> */
#pragma pack(push,4)
union A167 { B m0; S m1; j m2; S m3; f m4; J m5; f m6; I m7; };
#pragma pack(pop)
int f_cmpA167(const union A167 *x, const union A167 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA167() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A167));
		AF('B',union A167,m0,1)
		AF('S',union A167,m1,1)
		AF('j',union A167,m2,1)
		AF('S',union A167,m3,1)
		AF('f',union A167,m4,1)
		AF('J',union A167,m5,1)
		AF('f',union A167,m6,1)
		AF('I',union A167,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JlfBLld[9]IL> */
#pragma pack(push,2)
union A168 { J m0; l m1; f m2; B m3; L m4; l m5; d m6[9]; I m7; L m8; };
#pragma pack(pop)
int f_cmpA168(const union A168 *x, const union A168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA168() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A168));
		AF('J',union A168,m0,1)
		AF('l',union A168,m1,1)
		AF('f',union A168,m2,1)
		AF('B',union A168,m3,1)
		AF('L',union A168,m4,1)
		AF('l',union A168,m5,1)
		AF('d',union A168,m6,9)
		AF('I',union A168,m7,1)
		AF('L',union A168,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ifSsIslpSpij} */
#pragma pack(push,2)
struct A169 { i m0; f m1; S m2; s m3; I m4; s m5; l m6; p m7; S m8; p m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA169(const struct A169 *x, const struct A169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA169() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A169));
		AF('i',struct A169,m0,1)
		AF('f',struct A169,m1,1)
		AF('S',struct A169,m2,1)
		AF('s',struct A169,m3,1)
		AF('I',struct A169,m4,1)
		AF('s',struct A169,m5,1)
		AF('l',struct A169,m6,1)
		AF('p',struct A169,m7,1)
		AF('S',struct A169,m8,1)
		AF('p',struct A169,m9,1)
		AF('i',struct A169,m10,1)
		AF('j',struct A169,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JI<BSjSfJfI>Sd<JlfBLld[9]IL>[13]ffc[5]{ifSsIslpSpij}jc} */
#pragma pack(push,1)
struct A170 { J m0; I m1; union A167 m2; S m3; d m4; union A168 m5[13]; f m6; f m7; c m8[5]; struct A169 m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA170(const struct A170 *x, const struct A170 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA167(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA168(&x->m5[0], &y->m5[0]) && f_cmpA168(&x->m5[1], &y->m5[1]) && f_cmpA168(&x->m5[2], &y->m5[2]) && f_cmpA168(&x->m5[3], &y->m5[3]) && f_cmpA168(&x->m5[4], &y->m5[4]) && f_cmpA168(&x->m5[5], &y->m5[5]) && f_cmpA168(&x->m5[6], &y->m5[6]) && f_cmpA168(&x->m5[7], &y->m5[7]) && f_cmpA168(&x->m5[8], &y->m5[8]) && f_cmpA168(&x->m5[9], &y->m5[9]) && f_cmpA168(&x->m5[10], &y->m5[10]) && f_cmpA168(&x->m5[11], &y->m5[11]) && f_cmpA168(&x->m5[12], &y->m5[12]) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && f_cmpA169(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA170() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A170));
		AF('J',struct A170,m0,1)
		AF('I',struct A170,m1,1)
		AFa(struct A170,m2,1,A167)
		AF('S',struct A170,m3,1)
		AF('d',struct A170,m4,1)
		AFa(struct A170,m5,13,A168)
		AF('f',struct A170,m6,1)
		AF('f',struct A170,m7,1)
		AF('c',struct A170,m8,5)
		AFa(struct A170,m9,1,A169)
		AF('j',struct A170,m10,1)
		AF('c',struct A170,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCLC[2]dBcdBjfc> */
#pragma pack(push,4)
union A171 { C m0; C m1; L m2; C m3[2]; d m4; B m5; c m6; d m7; B m8; j m9; f m10; c m11; };
#pragma pack(pop)
int f_cmpA171(const union A171 *x, const union A171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA171() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A171));
		AF('C',union A171,m0,1)
		AF('C',union A171,m1,1)
		AF('L',union A171,m2,1)
		AF('C',union A171,m3,2)
		AF('d',union A171,m4,1)
		AF('B',union A171,m5,1)
		AF('c',union A171,m6,1)
		AF('d',union A171,m7,1)
		AF('B',union A171,m8,1)
		AF('j',union A171,m9,1)
		AF('f',union A171,m10,1)
		AF('c',union A171,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iddd> */
#pragma pack(push,2)
union A172 { i m0; d m1; d m2; d m3; };
#pragma pack(pop)
int f_cmpA172(const union A172 *x, const union A172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA172() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A172));
		AF('i',union A172,m0,1)
		AF('d',union A172,m1,1)
		AF('d',union A172,m2,1)
		AF('d',union A172,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sSf<CCLC[2]dBcdBjfc>Ccs<iddd>cp} */
#pragma pack(push,4)
struct A173 { s m0; S m1; f m2; union A171 m3; C m4; c m5; s m6; union A172 m7; c m8; p m9; };
#pragma pack(pop)
int f_cmpA173(const struct A173 *x, const struct A173 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA171(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA172(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA173() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A173));
		AF('s',struct A173,m0,1)
		AF('S',struct A173,m1,1)
		AF('f',struct A173,m2,1)
		AFa(struct A173,m3,1,A171)
		AF('C',struct A173,m4,1)
		AF('c',struct A173,m5,1)
		AF('s',struct A173,m6,1)
		AFa(struct A173,m7,1,A172)
		AF('c',struct A173,m8,1)
		AF('p',struct A173,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LJCS} */
#pragma pack(push,2)
struct A174 { L m0; J m1; C m2; S m3; };
#pragma pack(pop)
int f_cmpA174(const struct A174 *x, const struct A174 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA174() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A174));
		AF('L',struct A174,m0,1)
		AF('J',struct A174,m1,1)
		AF('C',struct A174,m2,1)
		AF('S',struct A174,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjijcLCcpiCJ} */
#pragma pack(push,1)
struct A175 { L m0; j m1; i m2; j m3; c m4; L m5; C m6; c m7; p m8; i m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA175(const struct A175 *x, const struct A175 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA175() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A175));
		AF('L',struct A175,m0,1)
		AF('j',struct A175,m1,1)
		AF('i',struct A175,m2,1)
		AF('j',struct A175,m3,1)
		AF('c',struct A175,m4,1)
		AF('L',struct A175,m5,1)
		AF('C',struct A175,m6,1)
		AF('c',struct A175,m7,1)
		AF('p',struct A175,m8,1)
		AF('i',struct A175,m9,1)
		AF('C',struct A175,m10,1)
		AF('J',struct A175,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p{LJCS}Ji[4]cBSf{LjijcLCcpiCJ}cjl> */
#pragma pack(push,8)
union A176 { p m0; struct A174 m1; J m2; i m3[4]; c m4; B m5; S m6; f m7; struct A175 m8; c m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA176(const union A176 *x, const union A176 *y) { return x->m0 == y->m0 && f_cmpA174(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA175(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA176() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A176));
		AF('p',union A176,m0,1)
		AFa(union A176,m1,1,A174)
		AF('J',union A176,m2,1)
		AF('i',union A176,m3,4)
		AF('c',union A176,m4,1)
		AF('B',union A176,m5,1)
		AF('S',union A176,m6,1)
		AF('f',union A176,m7,1)
		AFa(union A176,m8,1,A175)
		AF('c',union A176,m9,1)
		AF('j',union A176,m10,1)
		AF('l',union A176,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCCBSd} */
#pragma pack(push,4)
struct A177 { L m0; C m1; C m2; B m3; S m4; d m5; };
#pragma pack(pop)
int f_cmpA177(const struct A177 *x, const struct A177 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA177() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A177));
		AF('L',struct A177,m0,1)
		AF('C',struct A177,m1,1)
		AF('C',struct A177,m2,1)
		AF('B',struct A177,m3,1)
		AF('S',struct A177,m4,1)
		AF('d',struct A177,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ijl{LCCBSd}j[11]JdSLjpj> */
#pragma pack(push,1)
union A178 { I m0; j m1; l m2; struct A177 m3; j m4[11]; J m5; d m6; S m7; L m8; j m9; p m10; j m11; };
#pragma pack(pop)
int f_cmpA178(const union A178 *x, const union A178 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA177(&x->m3, &y->m3) && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA178() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A178));
		AF('I',union A178,m0,1)
		AF('j',union A178,m1,1)
		AF('l',union A178,m2,1)
		AFa(union A178,m3,1,A177)
		AF('j',union A178,m4,11)
		AF('J',union A178,m5,1)
		AF('d',union A178,m6,1)
		AF('S',union A178,m7,1)
		AF('L',union A178,m8,1)
		AF('j',union A178,m9,1)
		AF('p',union A178,m10,1)
		AF('j',union A178,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JifCfBidlLpC> */
#pragma pack(push,2)
union A179 { J m0; i m1; f m2; C m3; f m4; B m5; i m6; d m7; l m8; L m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA179(const union A179 *x, const union A179 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA179() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A179));
		AF('J',union A179,m0,1)
		AF('i',union A179,m1,1)
		AF('f',union A179,m2,1)
		AF('C',union A179,m3,1)
		AF('f',union A179,m4,1)
		AF('B',union A179,m5,1)
		AF('i',union A179,m6,1)
		AF('d',union A179,m7,1)
		AF('l',union A179,m8,1)
		AF('L',union A179,m9,1)
		AF('p',union A179,m10,1)
		AF('C',union A179,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBILBJfJ[10]Bcli> */
#pragma pack(push,4)
union A180 { i m0; B m1; I m2; L m3; B m4; J m5; f m6; J m7[10]; B m8; c m9; l m10; i m11; };
#pragma pack(pop)
int f_cmpA180(const union A180 *x, const union A180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA180() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A180));
		AF('i',union A180,m0,1)
		AF('B',union A180,m1,1)
		AF('I',union A180,m2,1)
		AF('L',union A180,m3,1)
		AF('B',union A180,m4,1)
		AF('J',union A180,m5,1)
		AF('f',union A180,m6,1)
		AF('J',union A180,m7,10)
		AF('B',union A180,m8,1)
		AF('c',union A180,m9,1)
		AF('l',union A180,m10,1)
		AF('i',union A180,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BisSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB} */
#pragma pack(push,1)
struct A181 { B m0; i m1; s m2; S m3; p m4; union A179 m5; union A180 m6; j m7; B m8; l m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA181(const struct A181 *x, const struct A181 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA179(&x->m5, &y->m5) && f_cmpA180(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA181() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A181));
		AF('B',struct A181,m0,1)
		AF('i',struct A181,m1,1)
		AF('s',struct A181,m2,1)
		AF('S',struct A181,m3,1)
		AF('p',struct A181,m4,1)
		AFa(struct A181,m5,1,A179)
		AFa(struct A181,m6,1,A180)
		AF('j',struct A181,m7,1)
		AF('B',struct A181,m8,1)
		AF('l',struct A181,m9,1)
		AF('j',struct A181,m10,1)
		AF('B',struct A181,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SCLspcCissIl> */
#pragma pack(push,4)
union A182 { S m0; C m1; L m2; s m3; p m4; c m5; C m6; i m7; s m8; s m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA182(const union A182 *x, const union A182 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA182() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A182));
		AF('S',union A182,m0,1)
		AF('C',union A182,m1,1)
		AF('L',union A182,m2,1)
		AF('s',union A182,m3,1)
		AF('p',union A182,m4,1)
		AF('c',union A182,m5,1)
		AF('C',union A182,m6,1)
		AF('i',union A182,m7,1)
		AF('s',union A182,m8,1)
		AF('s',union A182,m9,1)
		AF('I',union A182,m10,1)
		AF('l',union A182,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdJBSdIf[16]ijss> */
#pragma pack(push,2)
union A183 { C m0; d m1; J m2; B m3; S m4; d m5; I m6; f m7[16]; i m8; j m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA183(const union A183 *x, const union A183 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m7[14] == y->m7[14] && x->m7[15] == y->m7[15] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA183() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A183));
		AF('C',union A183,m0,1)
		AF('d',union A183,m1,1)
		AF('J',union A183,m2,1)
		AF('B',union A183,m3,1)
		AF('S',union A183,m4,1)
		AF('d',union A183,m5,1)
		AF('I',union A183,m6,1)
		AF('f',union A183,m7,16)
		AF('i',union A183,m8,1)
		AF('j',union A183,m9,1)
		AF('s',union A183,m10,1)
		AF('s',union A183,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jJdCspdffpfl} */
#pragma pack(push,4)
struct A184 { j m0; J m1; d m2; C m3; s m4; p m5; d m6; f m7; f m8; p m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA184(const struct A184 *x, const struct A184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA184() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A184));
		AF('j',struct A184,m0,1)
		AF('J',struct A184,m1,1)
		AF('d',struct A184,m2,1)
		AF('C',struct A184,m3,1)
		AF('s',struct A184,m4,1)
		AF('p',struct A184,m5,1)
		AF('d',struct A184,m6,1)
		AF('f',struct A184,m7,1)
		AF('f',struct A184,m8,1)
		AF('p',struct A184,m9,1)
		AF('f',struct A184,m10,1)
		AF('l',struct A184,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldSSdpLJsdld> */
#pragma pack(push,1)
union A185 { l m0; d m1; S m2; S m3; d m4; p m5; L m6; J m7; s m8; d m9; l m10; d m11; };
#pragma pack(pop)
int f_cmpA185(const union A185 *x, const union A185 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA185() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A185));
		AF('l',union A185,m0,1)
		AF('d',union A185,m1,1)
		AF('S',union A185,m2,1)
		AF('S',union A185,m3,1)
		AF('d',union A185,m4,1)
		AF('p',union A185,m5,1)
		AF('L',union A185,m6,1)
		AF('J',union A185,m7,1)
		AF('s',union A185,m8,1)
		AF('d',union A185,m9,1)
		AF('l',union A185,m10,1)
		AF('d',union A185,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<SCLspcCissIl>[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJspC<ldSSdpLJsdld>I> */
#pragma pack(push,2)
union A186 { union A182 m0[4]; S m1; C m2; union A183 m3; struct A184 m4; s m5; J m6; s m7; p m8; C m9; union A185 m10; I m11; };
#pragma pack(pop)
int f_cmpA186(const union A186 *x, const union A186 *y) { return f_cmpA182(&x->m0[0], &y->m0[0]) && f_cmpA182(&x->m0[1], &y->m0[1]) && f_cmpA182(&x->m0[2], &y->m0[2]) && f_cmpA182(&x->m0[3], &y->m0[3]) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA183(&x->m3, &y->m3) && f_cmpA184(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA185(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA186() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A186));
		AFa(union A186,m0,4,A182)
		AF('S',union A186,m1,1)
		AF('C',union A186,m2,1)
		AFa(union A186,m3,1,A183)
		AFa(union A186,m4,1,A184)
		AF('s',union A186,m5,1)
		AF('J',union A186,m6,1)
		AF('s',union A186,m7,1)
		AF('p',union A186,m8,1)
		AF('C',union A186,m9,1)
		AFa(union A186,m10,1,A185)
		AF('I',union A186,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CSJ> */
#pragma pack(push,1)
union A187 { C m0; S m1; J m2; };
#pragma pack(pop)
int f_cmpA187(const union A187 *x, const union A187 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA187() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A187));
		AF('C',union A187,m0,1)
		AF('S',union A187,m1,1)
		AF('J',union A187,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dBiSlISjfdci} */
#pragma pack(push,2)
struct A188 { d m0; B m1; i m2; S m3; l m4; I m5; S m6; j m7; f m8; d m9; c m10; i m11; };
#pragma pack(pop)
int f_cmpA188(const struct A188 *x, const struct A188 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA188() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A188));
		AF('d',struct A188,m0,1)
		AF('B',struct A188,m1,1)
		AF('i',struct A188,m2,1)
		AF('S',struct A188,m3,1)
		AF('l',struct A188,m4,1)
		AF('I',struct A188,m5,1)
		AF('S',struct A188,m6,1)
		AF('j',struct A188,m7,1)
		AF('f',struct A188,m8,1)
		AF('d',struct A188,m9,1)
		AF('c',struct A188,m10,1)
		AF('i',struct A188,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f[15]<<SCLspcCissIl>[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJspC<ldSSdpLJsdld>I>i<CSJ>j[12]fBl[6]S{dBiSlISjfdci}IC} */
#pragma pack(push,2)
struct A189 { f m0[15]; union A186 m1; i m2; union A187 m3; j m4[12]; f m5; B m6; l m7[6]; S m8; struct A188 m9; I m10; C m11; };
#pragma pack(pop)
int f_cmpA189(const struct A189 *x, const struct A189 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && f_cmpA186(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA187(&x->m3, &y->m3) && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m8 == y->m8 && f_cmpA188(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA189() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A189));
		AF('f',struct A189,m0,15)
		AFa(struct A189,m1,1,A186)
		AF('i',struct A189,m2,1)
		AFa(struct A189,m3,1,A187)
		AF('j',struct A189,m4,12)
		AF('f',struct A189,m5,1)
		AF('B',struct A189,m6,1)
		AF('l',struct A189,m7,6)
		AF('S',struct A189,m8,1)
		AFa(struct A189,m9,1,A188)
		AF('I',struct A189,m10,1)
		AF('C',struct A189,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BICcC[2]dLCsBjl> */
#pragma pack(push,4)
union A190 { B m0; I m1; C m2; c m3; C m4[2]; d m5; L m6; C m7; s m8; B m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA190(const union A190 *x, const union A190 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA190() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A190));
		AF('B',union A190,m0,1)
		AF('I',union A190,m1,1)
		AF('C',union A190,m2,1)
		AF('c',union A190,m3,1)
		AF('C',union A190,m4,2)
		AF('d',union A190,m5,1)
		AF('L',union A190,m6,1)
		AF('C',union A190,m7,1)
		AF('s',union A190,m8,1)
		AF('B',union A190,m9,1)
		AF('j',union A190,m10,1)
		AF('l',union A190,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JcljLpilj<BICcC[2]dLCsBjl>CC> */
#pragma pack(push,4)
union A191 { J m0; c m1; l m2; j m3; L m4; p m5; i m6; l m7; j m8; union A190 m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA191(const union A191 *x, const union A191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA190(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA191() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A191));
		AF('J',union A191,m0,1)
		AF('c',union A191,m1,1)
		AF('l',union A191,m2,1)
		AF('j',union A191,m3,1)
		AF('L',union A191,m4,1)
		AF('p',union A191,m5,1)
		AF('i',union A191,m6,1)
		AF('l',union A191,m7,1)
		AF('j',union A191,m8,1)
		AFa(union A191,m9,1,A190)
		AF('C',union A191,m10,1)
		AF('C',union A191,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i> */
#pragma pack(push,2)
union A192 { i m0; };
#pragma pack(pop)
int f_cmpA192(const union A192 *x, const union A192 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA192() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A192));
		AF('i',union A192,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CLs> */
#pragma pack(push,4)
union A193 { C m0; L m1; s m2; };
#pragma pack(pop)
int f_cmpA193(const union A193 *x, const union A193 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA193() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A193));
		AF('C',union A193,m0,1)
		AF('L',union A193,m1,1)
		AF('s',union A193,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JspLpIp> */
#pragma pack(push,2)
union A194 { J m0; s m1; p m2; L m3; p m4; I m5; p m6; };
#pragma pack(pop)
int f_cmpA194(const union A194 *x, const union A194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA194() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A194));
		AF('J',union A194,m0,1)
		AF('s',union A194,m1,1)
		AF('p',union A194,m2,1)
		AF('L',union A194,m3,1)
		AF('p',union A194,m4,1)
		AF('I',union A194,m5,1)
		AF('p',union A194,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jf<CLs>iBB<JspLpIp>JIB> */
#pragma pack(push,4)
union A195 { j m0; f m1; union A193 m2; i m3; B m4; B m5; union A194 m6; J m7; I m8; B m9; };
#pragma pack(pop)
int f_cmpA195(const union A195 *x, const union A195 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA193(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA194(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA195() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A195));
		AF('j',union A195,m0,1)
		AF('f',union A195,m1,1)
		AFa(union A195,m2,1,A193)
		AF('i',union A195,m3,1)
		AF('B',union A195,m4,1)
		AF('B',union A195,m5,1)
		AFa(union A195,m6,1,A194)
		AF('J',union A195,m7,1)
		AF('I',union A195,m8,1)
		AF('B',union A195,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BpSisiiBscfI> */
#pragma pack(push,2)
union A196 { B m0; p m1; S m2; i m3; s m4; i m5; i m6; B m7; s m8; c m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA196(const union A196 *x, const union A196 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA196() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A196));
		AF('B',union A196,m0,1)
		AF('p',union A196,m1,1)
		AF('S',union A196,m2,1)
		AF('i',union A196,m3,1)
		AF('s',union A196,m4,1)
		AF('i',union A196,m5,1)
		AF('i',union A196,m6,1)
		AF('B',union A196,m7,1)
		AF('s',union A196,m8,1)
		AF('c',union A196,m9,1)
		AF('f',union A196,m10,1)
		AF('I',union A196,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iS<BpSisiiBscfI>JSIBIJSjB> */
#pragma pack(push,4)
union A197 { i m0; S m1; union A196 m2; J m3; S m4; I m5; B m6; I m7; J m8; S m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA197(const union A197 *x, const union A197 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA196(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA197() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A197));
		AF('i',union A197,m0,1)
		AF('S',union A197,m1,1)
		AFa(union A197,m2,1,A196)
		AF('J',union A197,m3,1)
		AF('S',union A197,m4,1)
		AF('I',union A197,m5,1)
		AF('B',union A197,m6,1)
		AF('I',union A197,m7,1)
		AF('J',union A197,m8,1)
		AF('S',union A197,m9,1)
		AF('j',union A197,m10,1)
		AF('B',union A197,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf> */
#pragma pack(push,2)
union A198 { c m0; s m1; B m2; union A192 m3; union A195 m4; I m5; union A197 m6; j m7; S m8; l m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA198(const union A198 *x, const union A198 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA192(&x->m3, &y->m3) && f_cmpA195(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA197(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA198() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A198));
		AF('c',union A198,m0,1)
		AF('s',union A198,m1,1)
		AF('B',union A198,m2,1)
		AFa(union A198,m3,1,A192)
		AFa(union A198,m4,1,A195)
		AF('I',union A198,m5,1)
		AFa(union A198,m6,1,A197)
		AF('j',union A198,m7,1)
		AF('S',union A198,m8,1)
		AF('l',union A198,m9,1)
		AF('s',union A198,m10,1)
		AF('f',union A198,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pfifSilBCsBi> */
#pragma pack(push,4)
union A199 { p m0; f m1; i m2; f m3; S m4; i m5; l m6; B m7; C m8; s m9; B m10; i m11; };
#pragma pack(pop)
int f_cmpA199(const union A199 *x, const union A199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA199() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A199));
		AF('p',union A199,m0,1)
		AF('f',union A199,m1,1)
		AF('i',union A199,m2,1)
		AF('f',union A199,m3,1)
		AF('S',union A199,m4,1)
		AF('i',union A199,m5,1)
		AF('l',union A199,m6,1)
		AF('B',union A199,m7,1)
		AF('C',union A199,m8,1)
		AF('s',union A199,m9,1)
		AF('B',union A199,m10,1)
		AF('i',union A199,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pjc[7]pii> */
#pragma pack(push,4)
union A200 { p m0; j m1; c m2[7]; p m3; i m4; i m5; };
#pragma pack(pop)
int f_cmpA200(const union A200 *x, const union A200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA200() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A200));
		AF('p',union A200,m0,1)
		AF('j',union A200,m1,1)
		AF('c',union A200,m2,7)
		AF('p',union A200,m3,1)
		AF('i',union A200,m4,1)
		AF('i',union A200,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCCdLBCsJSip> */
#pragma pack(push,2)
union A201 { J m0; C m1; C m2; d m3; L m4; B m5; C m6; s m7; J m8; S m9; i m10; p m11; };
#pragma pack(pop)
int f_cmpA201(const union A201 *x, const union A201 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA201() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A201));
		AF('J',union A201,m0,1)
		AF('C',union A201,m1,1)
		AF('C',union A201,m2,1)
		AF('d',union A201,m3,1)
		AF('L',union A201,m4,1)
		AF('B',union A201,m5,1)
		AF('C',union A201,m6,1)
		AF('s',union A201,m7,1)
		AF('J',union A201,m8,1)
		AF('S',union A201,m9,1)
		AF('i',union A201,m10,1)
		AF('p',union A201,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfsCcpjdd} */
#pragma pack(push,2)
struct A202 { I m0; f m1; s m2; C m3; c m4; p m5; j m6; d m7; d m8; };
#pragma pack(pop)
int f_cmpA202(const struct A202 *x, const struct A202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA202() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A202));
		AF('I',struct A202,m0,1)
		AF('f',struct A202,m1,1)
		AF('s',struct A202,m2,1)
		AF('C',struct A202,m3,1)
		AF('c',struct A202,m4,1)
		AF('p',struct A202,m5,1)
		AF('j',struct A202,m6,1)
		AF('d',struct A202,m7,1)
		AF('d',struct A202,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LLCfJ<JCCdLBCsJSip>cClI{IfsCcpjdd}p} */
#pragma pack(push,2)
struct A203 { L m0; L m1; C m2; f m3; J m4; union A201 m5; c m6; C m7; l m8; I m9; struct A202 m10; p m11; };
#pragma pack(pop)
int f_cmpA203(const struct A203 *x, const struct A203 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA201(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA202(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA203() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A203));
		AF('L',struct A203,m0,1)
		AF('L',struct A203,m1,1)
		AF('C',struct A203,m2,1)
		AF('f',struct A203,m3,1)
		AF('J',struct A203,m4,1)
		AFa(struct A203,m5,1,A201)
		AF('c',struct A203,m6,1)
		AF('C',struct A203,m7,1)
		AF('l',struct A203,m8,1)
		AF('I',struct A203,m9,1)
		AFa(struct A203,m10,1,A202)
		AF('p',struct A203,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lldfS> */
#pragma pack(push,8)
union A204 { l m0; l m1; d m2; f m3; S m4; };
#pragma pack(pop)
int f_cmpA204(const union A204 *x, const union A204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA204() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A204));
		AF('l',union A204,m0,1)
		AF('l',union A204,m1,1)
		AF('d',union A204,m2,1)
		AF('f',union A204,m3,1)
		AF('S',union A204,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {siJjBLiSIIj<lldfS>} */
#pragma pack(push,2)
struct A205 { s m0; i m1; J m2; j m3; B m4; L m5; i m6; S m7; I m8; I m9; j m10; union A204 m11; };
#pragma pack(pop)
int f_cmpA205(const struct A205 *x, const struct A205 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA204(&x->m11, &y->m11); };
DCaggr* f_touchA205() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A205));
		AF('s',struct A205,m0,1)
		AF('i',struct A205,m1,1)
		AF('J',struct A205,m2,1)
		AF('j',struct A205,m3,1)
		AF('B',struct A205,m4,1)
		AF('L',struct A205,m5,1)
		AF('i',struct A205,m6,1)
		AF('S',struct A205,m7,1)
		AF('I',struct A205,m8,1)
		AF('I',struct A205,m9,1)
		AF('j',struct A205,m10,1)
		AFa(struct A205,m11,1,A204)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBJLCIlBCJlI> */
#pragma pack(push,2)
union A206 { i m0; B m1; J m2; L m3; C m4; I m5; l m6; B m7; C m8; J m9; l m10; I m11; };
#pragma pack(pop)
int f_cmpA206(const union A206 *x, const union A206 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA206() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A206));
		AF('i',union A206,m0,1)
		AF('B',union A206,m1,1)
		AF('J',union A206,m2,1)
		AF('L',union A206,m3,1)
		AF('C',union A206,m4,1)
		AF('I',union A206,m5,1)
		AF('l',union A206,m6,1)
		AF('B',union A206,m7,1)
		AF('C',union A206,m8,1)
		AF('J',union A206,m9,1)
		AF('l',union A206,m10,1)
		AF('I',union A206,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILJffLfpIifl[16]} */
#pragma pack(push,8)
struct A207 { I m0; L m1; J m2; f m3; f m4; L m5; f m6; p m7; I m8; i m9; f m10; l m11[16]; };
#pragma pack(pop)
int f_cmpA207(const struct A207 *x, const struct A207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14] && x->m11[15] == y->m11[15]; };
DCaggr* f_touchA207() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A207));
		AF('I',struct A207,m0,1)
		AF('L',struct A207,m1,1)
		AF('J',struct A207,m2,1)
		AF('f',struct A207,m3,1)
		AF('f',struct A207,m4,1)
		AF('L',struct A207,m5,1)
		AF('f',struct A207,m6,1)
		AF('p',struct A207,m7,1)
		AF('I',struct A207,m8,1)
		AF('i',struct A207,m9,1)
		AF('f',struct A207,m10,1)
		AF('l',struct A207,m11,16)
		dcCloseAggr(a);
	}
	return a;
};
/* {dIJpCsSJ} */
#pragma pack(push,4)
struct A208 { d m0; I m1; J m2; p m3; C m4; s m5; S m6; J m7; };
#pragma pack(pop)
int f_cmpA208(const struct A208 *x, const struct A208 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA208() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A208));
		AF('d',struct A208,m0,1)
		AF('I',struct A208,m1,1)
		AF('J',struct A208,m2,1)
		AF('p',struct A208,m3,1)
		AF('C',struct A208,m4,1)
		AF('s',struct A208,m5,1)
		AF('S',struct A208,m6,1)
		AF('J',struct A208,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l[5]l{ILJffLfpIifl[16]}lSjI{dIJpCsSJ}C} */
#pragma pack(push,2)
struct A209 { l m0[5]; l m1; struct A207 m2; l m3; S m4; j m5; I m6; struct A208 m7; C m8; };
#pragma pack(pop)
int f_cmpA209(const struct A209 *x, const struct A209 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && f_cmpA207(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA208(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA209() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A209));
		AF('l',struct A209,m0,5)
		AF('l',struct A209,m1,1)
		AFa(struct A209,m2,1,A207)
		AF('l',struct A209,m3,1)
		AF('S',struct A209,m4,1)
		AF('j',struct A209,m5,1)
		AF('I',struct A209,m6,1)
		AFa(struct A209,m7,1,A208)
		AF('C',struct A209,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfsdBJdBliLf> */
#pragma pack(push,1)
union A210 { s m0; f m1; s m2; d m3; B m4; J m5; d m6; B m7; l m8; i m9; L m10; f m11; };
#pragma pack(pop)
int f_cmpA210(const union A210 *x, const union A210 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA210() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A210));
		AF('s',union A210,m0,1)
		AF('f',union A210,m1,1)
		AF('s',union A210,m2,1)
		AF('d',union A210,m3,1)
		AF('B',union A210,m4,1)
		AF('J',union A210,m5,1)
		AF('d',union A210,m6,1)
		AF('B',union A210,m7,1)
		AF('l',union A210,m8,1)
		AF('i',union A210,m9,1)
		AF('L',union A210,m10,1)
		AF('f',union A210,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jjjCljidi<sfsdBJdBliLf>} */
#pragma pack(push,2)
struct A211 { j m0; j m1; j m2; C m3; l m4; j m5; i m6; d m7; i m8; union A210 m9; };
#pragma pack(pop)
int f_cmpA211(const struct A211 *x, const struct A211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA210(&x->m9, &y->m9); };
DCaggr* f_touchA211() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A211));
		AF('j',struct A211,m0,1)
		AF('j',struct A211,m1,1)
		AF('j',struct A211,m2,1)
		AF('C',struct A211,m3,1)
		AF('l',struct A211,m4,1)
		AF('j',struct A211,m5,1)
		AF('i',struct A211,m6,1)
		AF('d',struct A211,m7,1)
		AF('i',struct A211,m8,1)
		AFa(struct A211,m9,1,A210)
		dcCloseAggr(a);
	}
	return a;
};
/* {dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI} */
#pragma pack(push,2)
struct A212 { d m0; l m1; l m2; L m3; s m4; struct A211 m5; S m6; L m7; L m8[15]; f m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA212(const struct A212 *x, const struct A212 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA211(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA212() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A212));
		AF('d',struct A212,m0,1)
		AF('l',struct A212,m1,1)
		AF('l',struct A212,m2,1)
		AF('L',struct A212,m3,1)
		AF('s',struct A212,m4,1)
		AFa(struct A212,m5,1,A211)
		AF('S',struct A212,m6,1)
		AF('L',struct A212,m7,1)
		AF('L',struct A212,m8,15)
		AF('f',struct A212,m9,1)
		AF('i',struct A212,m10,1)
		AF('I',struct A212,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IffIppICjJiC> */
#pragma pack(push,4)
union A213 { I m0; f m1; f m2; I m3; p m4; p m5; I m6; C m7; j m8; J m9; i m10; C m11; };
#pragma pack(pop)
int f_cmpA213(const union A213 *x, const union A213 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA213() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A213));
		AF('I',union A213,m0,1)
		AF('f',union A213,m1,1)
		AF('f',union A213,m2,1)
		AF('I',union A213,m3,1)
		AF('p',union A213,m4,1)
		AF('p',union A213,m5,1)
		AF('I',union A213,m6,1)
		AF('C',union A213,m7,1)
		AF('j',union A213,m8,1)
		AF('J',union A213,m9,1)
		AF('i',union A213,m10,1)
		AF('C',union A213,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bls} */
#pragma pack(push,4)
struct A214 { B m0; l m1; s m2; };
#pragma pack(pop)
int f_cmpA214(const struct A214 *x, const struct A214 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA214() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A214));
		AF('B',struct A214,m0,1)
		AF('l',struct A214,m1,1)
		AF('s',struct A214,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LJLdd{Bls}BdiJsi> */
#pragma pack(push,4)
union A215 { L m0; J m1; L m2; d m3; d m4; struct A214 m5; B m6; d m7; i m8; J m9; s m10; i m11; };
#pragma pack(pop)
int f_cmpA215(const union A215 *x, const union A215 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA214(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA215() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A215));
		AF('L',union A215,m0,1)
		AF('J',union A215,m1,1)
		AF('L',union A215,m2,1)
		AF('d',union A215,m3,1)
		AF('d',union A215,m4,1)
		AFa(union A215,m5,1,A214)
		AF('B',union A215,m6,1)
		AF('d',union A215,m7,1)
		AF('i',union A215,m8,1)
		AF('J',union A215,m9,1)
		AF('s',union A215,m10,1)
		AF('i',union A215,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {idfCfSSCILjC} */
#pragma pack(push,4)
struct A216 { i m0; d m1; f m2; C m3; f m4; S m5; S m6; C m7; I m8; L m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA216(const struct A216 *x, const struct A216 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA216() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A216));
		AF('i',struct A216,m0,1)
		AF('d',struct A216,m1,1)
		AF('f',struct A216,m2,1)
		AF('C',struct A216,m3,1)
		AF('f',struct A216,m4,1)
		AF('S',struct A216,m5,1)
		AF('S',struct A216,m6,1)
		AF('C',struct A216,m7,1)
		AF('I',struct A216,m8,1)
		AF('L',struct A216,m9,1)
		AF('j',struct A216,m10,1)
		AF('C',struct A216,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sf} */
#pragma pack(push,8)
struct A217 { s m0; f m1; };
#pragma pack(pop)
int f_cmpA217(const struct A217 *x, const struct A217 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA217() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A217));
		AF('s',struct A217,m0,1)
		AF('f',struct A217,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SdIIpBSlIISB} */
#pragma pack(push,4)
struct A218 { S m0; d m1; I m2; I m3; p m4; B m5; S m6; l m7; I m8; I m9; S m10; B m11; };
#pragma pack(pop)
int f_cmpA218(const struct A218 *x, const struct A218 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA218() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A218));
		AF('S',struct A218,m0,1)
		AF('d',struct A218,m1,1)
		AF('I',struct A218,m2,1)
		AF('I',struct A218,m3,1)
		AF('p',struct A218,m4,1)
		AF('B',struct A218,m5,1)
		AF('S',struct A218,m6,1)
		AF('l',struct A218,m7,1)
		AF('I',struct A218,m8,1)
		AF('I',struct A218,m9,1)
		AF('S',struct A218,m10,1)
		AF('B',struct A218,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLsJLSfJ[14]lj} */
#pragma pack(push,4)
struct A219 { J m0; L m1; s m2; J m3; L m4; S m5; f m6; J m7[14]; l m8; j m9; };
#pragma pack(pop)
int f_cmpA219(const struct A219 *x, const struct A219 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA219() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A219));
		AF('J',struct A219,m0,1)
		AF('L',struct A219,m1,1)
		AF('s',struct A219,m2,1)
		AF('J',struct A219,m3,1)
		AF('L',struct A219,m4,1)
		AF('S',struct A219,m5,1)
		AF('f',struct A219,m6,1)
		AF('J',struct A219,m7,14)
		AF('l',struct A219,m8,1)
		AF('j',struct A219,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl} */
#pragma pack(push,2)
struct A220 { struct A218 m0; struct A219 m1; L m2; J m3; l m4; };
#pragma pack(pop)
int f_cmpA220(const struct A220 *x, const struct A220 *y) { return f_cmpA218(&x->m0, &y->m0) && f_cmpA219(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA220() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A220));
		AFa(struct A220,m0,1,A218)
		AFa(struct A220,m1,1,A219)
		AF('L',struct A220,m2,1)
		AF('J',struct A220,m3,1)
		AF('l',struct A220,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CBLlfScjLpLJ> */
#pragma pack(push,4)
union A221 { C m0; B m1; L m2; l m3; f m4; S m5; c m6; j m7; L m8; p m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA221(const union A221 *x, const union A221 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA221() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A221));
		AF('C',union A221,m0,1)
		AF('B',union A221,m1,1)
		AF('L',union A221,m2,1)
		AF('l',union A221,m3,1)
		AF('f',union A221,m4,1)
		AF('S',union A221,m5,1)
		AF('c',union A221,m6,1)
		AF('j',union A221,m7,1)
		AF('L',union A221,m8,1)
		AF('p',union A221,m9,1)
		AF('L',union A221,m10,1)
		AF('J',union A221,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCsciCp} */
#pragma pack(push,4)
struct A222 { S m0; C m1; s m2; c m3; i m4; C m5; p m6; };
#pragma pack(pop)
int f_cmpA222(const struct A222 *x, const struct A222 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA222() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A222));
		AF('S',struct A222,m0,1)
		AF('C',struct A222,m1,1)
		AF('s',struct A222,m2,1)
		AF('c',struct A222,m3,1)
		AF('i',struct A222,m4,1)
		AF('C',struct A222,m5,1)
		AF('p',struct A222,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S<CBLlfScjLpLJ>I{SCsciCp}Cf> */
#pragma pack(push,4)
union A223 { S m0; union A221 m1; I m2; struct A222 m3; C m4; f m5; };
#pragma pack(pop)
int f_cmpA223(const union A223 *x, const union A223 *y) { return x->m0 == y->m0 && f_cmpA221(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA222(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA223() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A223));
		AF('S',union A223,m0,1)
		AFa(union A223,m1,1,A221)
		AF('I',union A223,m2,1)
		AFa(union A223,m3,1,A222)
		AF('C',union A223,m4,1)
		AF('f',union A223,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <slIlpIppcCfc> */
#pragma pack(push,2)
union A224 { s m0; l m1; I m2; l m3; p m4; I m5; p m6; p m7; c m8; C m9; f m10; c m11; };
#pragma pack(pop)
int f_cmpA224(const union A224 *x, const union A224 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA224() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A224));
		AF('s',union A224,m0,1)
		AF('l',union A224,m1,1)
		AF('I',union A224,m2,1)
		AF('l',union A224,m3,1)
		AF('p',union A224,m4,1)
		AF('I',union A224,m5,1)
		AF('p',union A224,m6,1)
		AF('p',union A224,m7,1)
		AF('c',union A224,m8,1)
		AF('C',union A224,m9,1)
		AF('f',union A224,m10,1)
		AF('c',union A224,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {S<slIlpIppcCfc>C} */
#pragma pack(push,4)
struct A225 { S m0; union A224 m1; C m2; };
#pragma pack(pop)
int f_cmpA225(const struct A225 *x, const struct A225 *y) { return x->m0 == y->m0 && f_cmpA224(&x->m1, &y->m1) && x->m2 == y->m2; };
DCaggr* f_touchA225() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A225));
		AF('S',struct A225,m0,1)
		AFa(struct A225,m1,1,A224)
		AF('C',struct A225,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cS> */
#pragma pack(push,2)
union A226 { c m0; S m1; };
#pragma pack(pop)
int f_cmpA226(const union A226 *x, const union A226 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA226() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A226));
		AF('c',union A226,m0,1)
		AF('S',union A226,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>} */
#pragma pack(push,4)
struct A227 { struct A220 m0; union A223 m1; c m2; j m3; c m4; s m5; L m6; j m7; struct A225 m8; J m9; union A226 m10; };
#pragma pack(pop)
int f_cmpA227(const struct A227 *x, const struct A227 *y) { return f_cmpA220(&x->m0, &y->m0) && f_cmpA223(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA225(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA226(&x->m10, &y->m10); };
DCaggr* f_touchA227() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A227));
		AFa(struct A227,m0,1,A220)
		AFa(struct A227,m1,1,A223)
		AF('c',struct A227,m2,1)
		AF('j',struct A227,m3,1)
		AF('c',struct A227,m4,1)
		AF('s',struct A227,m5,1)
		AF('L',struct A227,m6,1)
		AF('j',struct A227,m7,1)
		AFa(struct A227,m8,1,A225)
		AF('J',struct A227,m9,1)
		AFa(struct A227,m10,1,A226)
		dcCloseAggr(a);
	}
	return a;
};
/* <BIpcssdfJSc> */
#pragma pack(push,4)
union A228 { B m0; I m1; p m2; c m3; s m4; s m5; d m6; f m7; J m8; S m9; c m10; };
#pragma pack(pop)
int f_cmpA228(const union A228 *x, const union A228 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA228() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A228));
		AF('B',union A228,m0,1)
		AF('I',union A228,m1,1)
		AF('p',union A228,m2,1)
		AF('c',union A228,m3,1)
		AF('s',union A228,m4,1)
		AF('s',union A228,m5,1)
		AF('d',union A228,m6,1)
		AF('f',union A228,m7,1)
		AF('J',union A228,m8,1)
		AF('S',union A228,m9,1)
		AF('c',union A228,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdSffIssSpCL> */
#pragma pack(push,4)
union A229 { s m0; d m1; S m2; f m3; f m4; I m5; s m6; s m7; S m8; p m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA229(const union A229 *x, const union A229 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA229() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A229));
		AF('s',union A229,m0,1)
		AF('d',union A229,m1,1)
		AF('S',union A229,m2,1)
		AF('f',union A229,m3,1)
		AF('f',union A229,m4,1)
		AF('I',union A229,m5,1)
		AF('s',union A229,m6,1)
		AF('s',union A229,m7,1)
		AF('S',union A229,m8,1)
		AF('p',union A229,m9,1)
		AF('C',union A229,m10,1)
		AF('L',union A229,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B} */
#pragma pack(push,2)
struct A230 { B m0; };
#pragma pack(pop)
int f_cmpA230(const struct A230 *x, const struct A230 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA230() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A230));
		AF('B',struct A230,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p} */
#pragma pack(push,2)
struct A231 { p m0; };
#pragma pack(pop)
int f_cmpA231(const struct A231 *x, const struct A231 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA231() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A231));
		AF('p',struct A231,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdsSssfBd> */
#pragma pack(push,8)
union A232 { s m0; d m1; s m2; S m3; s m4; s m5; f m6; B m7; d m8; };
#pragma pack(pop)
int f_cmpA232(const union A232 *x, const union A232 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA232() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A232));
		AF('s',union A232,m0,1)
		AF('d',union A232,m1,1)
		AF('s',union A232,m2,1)
		AF('S',union A232,m3,1)
		AF('s',union A232,m4,1)
		AF('s',union A232,m5,1)
		AF('f',union A232,m6,1)
		AF('B',union A232,m7,1)
		AF('d',union A232,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSid{p}<sdsSssfBd>[13]} */
#pragma pack(push,4)
struct A233 { c m0; S m1; i m2; d m3; struct A231 m4; union A232 m5[13]; };
#pragma pack(pop)
int f_cmpA233(const struct A233 *x, const struct A233 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA231(&x->m4, &y->m4) && f_cmpA232(&x->m5[0], &y->m5[0]) && f_cmpA232(&x->m5[1], &y->m5[1]) && f_cmpA232(&x->m5[2], &y->m5[2]) && f_cmpA232(&x->m5[3], &y->m5[3]) && f_cmpA232(&x->m5[4], &y->m5[4]) && f_cmpA232(&x->m5[5], &y->m5[5]) && f_cmpA232(&x->m5[6], &y->m5[6]) && f_cmpA232(&x->m5[7], &y->m5[7]) && f_cmpA232(&x->m5[8], &y->m5[8]) && f_cmpA232(&x->m5[9], &y->m5[9]) && f_cmpA232(&x->m5[10], &y->m5[10]) && f_cmpA232(&x->m5[11], &y->m5[11]) && f_cmpA232(&x->m5[12], &y->m5[12]); };
DCaggr* f_touchA233() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A233));
		AF('c',struct A233,m0,1)
		AF('S',struct A233,m1,1)
		AF('i',struct A233,m2,1)
		AF('d',struct A233,m3,1)
		AFa(struct A233,m4,1,A231)
		AFa(struct A233,m5,13,A232)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ifd{cSid{p}<sdsSssfBd>[13]}LI} */
#pragma pack(push,4)
struct A234 { I m0; f m1; d m2; struct A233 m3; L m4; I m5; };
#pragma pack(pop)
int f_cmpA234(const struct A234 *x, const struct A234 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA233(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA234() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A234));
		AF('I',struct A234,m0,1)
		AF('f',struct A234,m1,1)
		AF('d',struct A234,m2,1)
		AFa(struct A234,m3,1,A233)
		AF('L',struct A234,m4,1)
		AF('I',struct A234,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBBfLBd} */
#pragma pack(push,4)
struct A235 { s m0; B m1; B m2; f m3; L m4; B m5; d m6; };
#pragma pack(pop)
int f_cmpA235(const struct A235 *x, const struct A235 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA235() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A235));
		AF('s',struct A235,m0,1)
		AF('B',struct A235,m1,1)
		AF('B',struct A235,m2,1)
		AF('f',struct A235,m3,1)
		AF('L',struct A235,m4,1)
		AF('B',struct A235,m5,1)
		AF('d',struct A235,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {csfCLcsjplSi} */
#pragma pack(push,4)
struct A236 { c m0; s m1; f m2; C m3; L m4; c m5; s m6; j m7; p m8; l m9; S m10; i m11; };
#pragma pack(pop)
int f_cmpA236(const struct A236 *x, const struct A236 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA236() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A236));
		AF('c',struct A236,m0,1)
		AF('s',struct A236,m1,1)
		AF('f',struct A236,m2,1)
		AF('C',struct A236,m3,1)
		AF('L',struct A236,m4,1)
		AF('c',struct A236,m5,1)
		AF('s',struct A236,m6,1)
		AF('j',struct A236,m7,1)
		AF('p',struct A236,m8,1)
		AF('l',struct A236,m9,1)
		AF('S',struct A236,m10,1)
		AF('i',struct A236,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSsL[8]ji{csfCLcsjplSi}j> */
#pragma pack(push,4)
union A237 { l m0; S m1; s m2; L m3[8]; j m4; i m5; struct A236 m6; j m7; };
#pragma pack(pop)
int f_cmpA237(const union A237 *x, const union A237 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA236(&x->m6, &y->m6) && x->m7 == y->m7; };
DCaggr* f_touchA237() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A237));
		AF('l',union A237,m0,1)
		AF('S',union A237,m1,1)
		AF('s',union A237,m2,1)
		AF('L',union A237,m3,8)
		AF('j',union A237,m4,1)
		AF('i',union A237,m5,1)
		AFa(union A237,m6,1,A236)
		AF('j',union A237,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dLsfidCfIBJ> */
#pragma pack(push,4)
union A238 { d m0; L m1; s m2; f m3; i m4; d m5; C m6; f m7; I m8; B m9; J m10; };
#pragma pack(pop)
int f_cmpA238(const union A238 *x, const union A238 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA238() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A238));
		AF('d',union A238,m0,1)
		AF('L',union A238,m1,1)
		AF('s',union A238,m2,1)
		AF('f',union A238,m3,1)
		AF('i',union A238,m4,1)
		AF('d',union A238,m5,1)
		AF('C',union A238,m6,1)
		AF('f',union A238,m7,1)
		AF('I',union A238,m8,1)
		AF('B',union A238,m9,1)
		AF('J',union A238,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i<lSsL[8]ji{csfCLcsjplSi}j><dLsfidCfIBJ>CCSiBj} */
#pragma pack(push,4)
struct A239 { i m0; union A237 m1; union A238 m2; C m3; C m4; S m5; i m6; B m7; j m8; };
#pragma pack(pop)
int f_cmpA239(const struct A239 *x, const struct A239 *y) { return x->m0 == y->m0 && f_cmpA237(&x->m1, &y->m1) && f_cmpA238(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA239() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A239));
		AF('i',struct A239,m0,1)
		AFa(struct A239,m1,1,A237)
		AFa(struct A239,m2,1,A238)
		AF('C',struct A239,m3,1)
		AF('C',struct A239,m4,1)
		AF('S',struct A239,m5,1)
		AF('i',struct A239,m6,1)
		AF('B',struct A239,m7,1)
		AF('j',struct A239,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sSBpLSIcLfiL} */
#pragma pack(push,4)
struct A240 { s m0; S m1; B m2; p m3; L m4; S m5; I m6; c m7; L m8; f m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA240(const struct A240 *x, const struct A240 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA240() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A240));
		AF('s',struct A240,m0,1)
		AF('S',struct A240,m1,1)
		AF('B',struct A240,m2,1)
		AF('p',struct A240,m3,1)
		AF('L',struct A240,m4,1)
		AF('S',struct A240,m5,1)
		AF('I',struct A240,m6,1)
		AF('c',struct A240,m7,1)
		AF('L',struct A240,m8,1)
		AF('f',struct A240,m9,1)
		AF('i',struct A240,m10,1)
		AF('L',struct A240,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lf> */
#pragma pack(push,4)
union A241 { l m0; f m1; };
#pragma pack(pop)
int f_cmpA241(const union A241 *x, const union A241 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA241() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A241));
		AF('l',union A241,m0,1)
		AF('f',union A241,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SSlBdLfcBfJs> */
#pragma pack(push,4)
union A242 { S m0; S m1; l m2; B m3; d m4; L m5; f m6; c m7; B m8; f m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA242(const union A242 *x, const union A242 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA242() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A242));
		AF('S',union A242,m0,1)
		AF('S',union A242,m1,1)
		AF('l',union A242,m2,1)
		AF('B',union A242,m3,1)
		AF('d',union A242,m4,1)
		AF('L',union A242,m5,1)
		AF('f',union A242,m6,1)
		AF('c',union A242,m7,1)
		AF('B',union A242,m8,1)
		AF('f',union A242,m9,1)
		AF('J',union A242,m10,1)
		AF('s',union A242,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SliccIjifBl[7]s} */
#pragma pack(push,1)
struct A243 { S m0; l m1; i m2; c m3; c m4; I m5; j m6; i m7; f m8; B m9; l m10[7]; s m11; };
#pragma pack(pop)
int f_cmpA243(const struct A243 *x, const struct A243 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m11 == y->m11; };
DCaggr* f_touchA243() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A243));
		AF('S',struct A243,m0,1)
		AF('l',struct A243,m1,1)
		AF('i',struct A243,m2,1)
		AF('c',struct A243,m3,1)
		AF('c',struct A243,m4,1)
		AF('I',struct A243,m5,1)
		AF('j',struct A243,m6,1)
		AF('i',struct A243,m7,1)
		AF('f',struct A243,m8,1)
		AF('B',struct A243,m9,1)
		AF('l',struct A243,m10,7)
		AF('s',struct A243,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdisdi> */
#pragma pack(push,2)
union A244 { p m0; d m1; i m2; s m3; d m4; i m5; };
#pragma pack(pop)
int f_cmpA244(const union A244 *x, const union A244 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA244() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A244));
		AF('p',union A244,m0,1)
		AF('d',union A244,m1,1)
		AF('i',union A244,m2,1)
		AF('s',union A244,m3,1)
		AF('d',union A244,m4,1)
		AF('i',union A244,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ppI<pdisdi>S} */
#pragma pack(push,2)
struct A245 { p m0; p m1; I m2; union A244 m3; S m4; };
#pragma pack(pop)
int f_cmpA245(const struct A245 *x, const struct A245 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA244(&x->m3, &y->m3) && x->m4 == y->m4; };
DCaggr* f_touchA245() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A245));
		AF('p',struct A245,m0,1)
		AF('p',struct A245,m1,1)
		AF('I',struct A245,m2,1)
		AFa(struct A245,m3,1,A244)
		AF('S',struct A245,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLpCdj[7]> */
#pragma pack(push,4)
union A246 { J m0; L m1; p m2; C m3; d m4; j m5[7]; };
#pragma pack(pop)
int f_cmpA246(const union A246 *x, const union A246 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6]; };
DCaggr* f_touchA246() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A246));
		AF('J',union A246,m0,1)
		AF('L',union A246,m1,1)
		AF('p',union A246,m2,1)
		AF('C',union A246,m3,1)
		AF('d',union A246,m4,1)
		AF('j',union A246,m5,7)
		dcCloseAggr(a);
	}
	return a;
};
/* <<JLpCdj[7]>JdBSCBdjIjc> */
#pragma pack(push,8)
union A247 { union A246 m0; J m1; d m2; B m3; S m4; C m5; B m6; d m7; j m8; I m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA247(const union A247 *x, const union A247 *y) { return f_cmpA246(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA247() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A247));
		AFa(union A247,m0,1,A246)
		AF('J',union A247,m1,1)
		AF('d',union A247,m2,1)
		AF('B',union A247,m3,1)
		AF('S',union A247,m4,1)
		AF('C',union A247,m5,1)
		AF('B',union A247,m6,1)
		AF('d',union A247,m7,1)
		AF('j',union A247,m8,1)
		AF('I',union A247,m9,1)
		AF('j',union A247,m10,1)
		AF('c',union A247,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jJifB[13]BLiILfL} */
#pragma pack(push,2)
struct A248 { j m0; J m1; i m2; f m3; B m4[13]; B m5; L m6; i m7; I m8; L m9; f m10; L m11; };
#pragma pack(pop)
int f_cmpA248(const struct A248 *x, const struct A248 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA248() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A248));
		AF('j',struct A248,m0,1)
		AF('J',struct A248,m1,1)
		AF('i',struct A248,m2,1)
		AF('f',struct A248,m3,1)
		AF('B',struct A248,m4,13)
		AF('B',struct A248,m5,1)
		AF('L',struct A248,m6,1)
		AF('i',struct A248,m7,1)
		AF('I',struct A248,m8,1)
		AF('L',struct A248,m9,1)
		AF('f',struct A248,m10,1)
		AF('L',struct A248,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lCJ<c>> */
#pragma pack(push,4)
union A249 { l m0; C m1; J m2; union A123 m3; };
#pragma pack(pop)
int f_cmpA249(const union A249 *x, const union A249 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA123(&x->m3, &y->m3); };
DCaggr* f_touchA249() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A249));
		AF('l',union A249,m0,1)
		AF('C',union A249,m1,1)
		AF('J',union A249,m2,1)
		AFa(union A249,m3,1,A123)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdspdCCCpCLp> */
#pragma pack(push,4)
union A250 { s m0; d m1; s m2; p m3; d m4; C m5; C m6; C m7; p m8; C m9; L m10; p m11; };
#pragma pack(pop)
int f_cmpA250(const union A250 *x, const union A250 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA250() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A250));
		AF('s',union A250,m0,1)
		AF('d',union A250,m1,1)
		AF('s',union A250,m2,1)
		AF('p',union A250,m3,1)
		AF('d',union A250,m4,1)
		AF('C',union A250,m5,1)
		AF('C',union A250,m6,1)
		AF('C',union A250,m7,1)
		AF('p',union A250,m8,1)
		AF('C',union A250,m9,1)
		AF('L',union A250,m10,1)
		AF('p',union A250,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CBidJp[13]Lsp[4]sBi} */
#pragma pack(push,4)
struct A251 { C m0; B m1; i m2; d m3; J m4; p m5[13]; L m6; s m7; p m8[4]; s m9; B m10; i m11; };
#pragma pack(pop)
int f_cmpA251(const struct A251 *x, const struct A251 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA251() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A251));
		AF('C',struct A251,m0,1)
		AF('B',struct A251,m1,1)
		AF('i',struct A251,m2,1)
		AF('d',struct A251,m3,1)
		AF('J',struct A251,m4,1)
		AF('p',struct A251,m5,13)
		AF('L',struct A251,m6,1)
		AF('s',struct A251,m7,1)
		AF('p',struct A251,m8,4)
		AF('s',struct A251,m9,1)
		AF('B',struct A251,m10,1)
		AF('i',struct A251,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cSlCCiflJ<sdspdCCCpCLp>{CBidJp[13]Lsp[4]sBi}S> */
#pragma pack(push,1)
union A252 { c m0; S m1; l m2; C m3; C m4; i m5; f m6; l m7; J m8; union A250 m9; struct A251 m10; S m11; };
#pragma pack(pop)
int f_cmpA252(const union A252 *x, const union A252 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA250(&x->m9, &y->m9) && f_cmpA251(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA252() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A252));
		AF('c',union A252,m0,1)
		AF('S',union A252,m1,1)
		AF('l',union A252,m2,1)
		AF('C',union A252,m3,1)
		AF('C',union A252,m4,1)
		AF('i',union A252,m5,1)
		AF('f',union A252,m6,1)
		AF('l',union A252,m7,1)
		AF('J',union A252,m8,1)
		AFa(union A252,m9,1,A250)
		AFa(union A252,m10,1,A251)
		AF('S',union A252,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcSJp} */
#pragma pack(push,2)
struct A253 { l m0; c m1; S m2; J m3; p m4; };
#pragma pack(pop)
int f_cmpA253(const struct A253 *x, const struct A253 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA253() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A253));
		AF('l',struct A253,m0,1)
		AF('c',struct A253,m1,1)
		AF('S',struct A253,m2,1)
		AF('J',struct A253,m3,1)
		AF('p',struct A253,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I[2]iLc{lcSJp}iJpLllj} */
#pragma pack(push,1)
struct A254 { I m0[2]; i m1; L m2; c m3; struct A253 m4; i m5; J m6; p m7; L m8; l m9; l m10; j m11; };
#pragma pack(pop)
int f_cmpA254(const struct A254 *x, const struct A254 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA253(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA254() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A254));
		AF('I',struct A254,m0,2)
		AF('i',struct A254,m1,1)
		AF('L',struct A254,m2,1)
		AF('c',struct A254,m3,1)
		AFa(struct A254,m4,1,A253)
		AF('i',struct A254,m5,1)
		AF('J',struct A254,m6,1)
		AF('p',struct A254,m7,1)
		AF('L',struct A254,m8,1)
		AF('l',struct A254,m9,1)
		AF('l',struct A254,m10,1)
		AF('j',struct A254,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IBSpCB> */
#pragma pack(push,2)
union A255 { I m0; B m1; S m2; p m3; C m4; B m5; };
#pragma pack(pop)
int f_cmpA255(const union A255 *x, const union A255 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA255() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A255));
		AF('I',union A255,m0,1)
		AF('B',union A255,m1,1)
		AF('S',union A255,m2,1)
		AF('p',union A255,m3,1)
		AF('C',union A255,m4,1)
		AF('B',union A255,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LIISCCd} */
#pragma pack(push,1)
struct A256 { L m0; I m1; I m2; S m3; C m4; C m5; d m6; };
#pragma pack(pop)
int f_cmpA256(const struct A256 *x, const struct A256 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA256() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A256));
		AF('L',struct A256,m0,1)
		AF('I',struct A256,m1,1)
		AF('I',struct A256,m2,1)
		AF('S',struct A256,m3,1)
		AF('C',struct A256,m4,1)
		AF('C',struct A256,m5,1)
		AF('d',struct A256,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdic<IBSpCB>{LIISCCd}pLSjsj> */
#pragma pack(push,2)
union A257 { s m0; d m1; i m2; c m3; union A255 m4; struct A256 m5; p m6; L m7; S m8; j m9; s m10; j m11; };
#pragma pack(pop)
int f_cmpA257(const union A257 *x, const union A257 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA255(&x->m4, &y->m4) && f_cmpA256(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA257() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A257));
		AF('s',union A257,m0,1)
		AF('d',union A257,m1,1)
		AF('i',union A257,m2,1)
		AF('c',union A257,m3,1)
		AFa(union A257,m4,1,A255)
		AFa(union A257,m5,1,A256)
		AF('p',union A257,m6,1)
		AF('L',union A257,m7,1)
		AF('S',union A257,m8,1)
		AF('j',union A257,m9,1)
		AF('s',union A257,m10,1)
		AF('j',union A257,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L[3]pp} */
#pragma pack(push,8)
struct A258 { L m0[3]; p m1; p m2; };
#pragma pack(pop)
int f_cmpA258(const struct A258 *x, const struct A258 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA258() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A258));
		AF('L',struct A258,m0,3)
		AF('p',struct A258,m1,1)
		AF('p',struct A258,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LJSsfficlCB} */
#pragma pack(push,4)
struct A259 { L m0; J m1; S m2; s m3; f m4; f m5; i m6; c m7; l m8; C m9; B m10; };
#pragma pack(pop)
int f_cmpA259(const struct A259 *x, const struct A259 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA259() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A259));
		AF('L',struct A259,m0,1)
		AF('J',struct A259,m1,1)
		AF('S',struct A259,m2,1)
		AF('s',struct A259,m3,1)
		AF('f',struct A259,m4,1)
		AF('f',struct A259,m5,1)
		AF('i',struct A259,m6,1)
		AF('c',struct A259,m7,1)
		AF('l',struct A259,m8,1)
		AF('C',struct A259,m9,1)
		AF('B',struct A259,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIcjjpsSsssL> */
#pragma pack(push,8)
union A260 { p m0; I m1; c m2; j m3; j m4; p m5; s m6; S m7; s m8; s m9; s m10; L m11; };
#pragma pack(pop)
int f_cmpA260(const union A260 *x, const union A260 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA260() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A260));
		AF('p',union A260,m0,1)
		AF('I',union A260,m1,1)
		AF('c',union A260,m2,1)
		AF('j',union A260,m3,1)
		AF('j',union A260,m4,1)
		AF('p',union A260,m5,1)
		AF('s',union A260,m6,1)
		AF('S',union A260,m7,1)
		AF('s',union A260,m8,1)
		AF('s',union A260,m9,1)
		AF('s',union A260,m10,1)
		AF('L',union A260,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i[1]Ci> */
#pragma pack(push,2)
union A261 { i m0[1]; C m1; i m2; };
#pragma pack(pop)
int f_cmpA261(const union A261 *x, const union A261 *y) { return x->m0[0] == y->m0[0] && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA261() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A261));
		AF('i',union A261,m0,1)
		AF('C',union A261,m1,1)
		AF('i',union A261,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bsljii<i[1]Ci>LJlfc> */
#pragma pack(push,8)
union A262 { B m0; s m1; l m2; j m3; i m4; i m5; union A261 m6; L m7; J m8; l m9; f m10; c m11; };
#pragma pack(pop)
int f_cmpA262(const union A262 *x, const union A262 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA261(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA262() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A262));
		AF('B',union A262,m0,1)
		AF('s',union A262,m1,1)
		AF('l',union A262,m2,1)
		AF('j',union A262,m3,1)
		AF('i',union A262,m4,1)
		AF('i',union A262,m5,1)
		AFa(union A262,m6,1,A261)
		AF('L',union A262,m7,1)
		AF('J',union A262,m8,1)
		AF('l',union A262,m9,1)
		AF('f',union A262,m10,1)
		AF('c',union A262,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LCIfJSBlcSCJ> */
#pragma pack(push,4)
union A263 { L m0; C m1; I m2; f m3; J m4; S m5; B m6; l m7; c m8; S m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA263(const union A263 *x, const union A263 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA263() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A263));
		AF('L',union A263,m0,1)
		AF('C',union A263,m1,1)
		AF('I',union A263,m2,1)
		AF('f',union A263,m3,1)
		AF('J',union A263,m4,1)
		AF('S',union A263,m5,1)
		AF('B',union A263,m6,1)
		AF('l',union A263,m7,1)
		AF('c',union A263,m8,1)
		AF('S',union A263,m9,1)
		AF('C',union A263,m10,1)
		AF('J',union A263,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lBijCBdIlfs[13]I> */
#pragma pack(push,4)
union A264 { l m0; B m1; i m2; j m3; C m4; B m5; d m6; I m7; l m8; f m9; s m10[13]; I m11; };
#pragma pack(pop)
int f_cmpA264(const union A264 *x, const union A264 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m10[11] == y->m10[11] && x->m10[12] == y->m10[12] && x->m11 == y->m11; };
DCaggr* f_touchA264() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A264));
		AF('l',union A264,m0,1)
		AF('B',union A264,m1,1)
		AF('i',union A264,m2,1)
		AF('j',union A264,m3,1)
		AF('C',union A264,m4,1)
		AF('B',union A264,m5,1)
		AF('d',union A264,m6,1)
		AF('I',union A264,m7,1)
		AF('l',union A264,m8,1)
		AF('f',union A264,m9,1)
		AF('s',union A264,m10,13)
		AF('I',union A264,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCBliBLpl<LCIfJSBlcSCJ><lBijCBdIlfs[13]I>j} */
#pragma pack(push,4)
struct A265 { d m0; C m1; B m2; l m3; i m4; B m5; L m6; p m7; l m8; union A263 m9; union A264 m10; j m11; };
#pragma pack(pop)
int f_cmpA265(const struct A265 *x, const struct A265 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA263(&x->m9, &y->m9) && f_cmpA264(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA265() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A265));
		AF('d',struct A265,m0,1)
		AF('C',struct A265,m1,1)
		AF('B',struct A265,m2,1)
		AF('l',struct A265,m3,1)
		AF('i',struct A265,m4,1)
		AF('B',struct A265,m5,1)
		AF('L',struct A265,m6,1)
		AF('p',struct A265,m7,1)
		AF('l',struct A265,m8,1)
		AFa(struct A265,m9,1,A263)
		AFa(struct A265,m10,1,A264)
		AF('j',struct A265,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<Bsljii<i[1]Ci>LJlfc>jISc{dCBliBLpl<LCIfJSBlcSCJ><lBijCBdIlfs[13]I>j}ISpSpJ> */
#pragma pack(push,4)
union A266 { union A262 m0; j m1; I m2; S m3; c m4; struct A265 m5; I m6; S m7; p m8; S m9; p m10; J m11; };
#pragma pack(pop)
int f_cmpA266(const union A266 *x, const union A266 *y) { return f_cmpA262(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA265(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA266() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A266));
		AFa(union A266,m0,1,A262)
		AF('j',union A266,m1,1)
		AF('I',union A266,m2,1)
		AF('S',union A266,m3,1)
		AF('c',union A266,m4,1)
		AFa(union A266,m5,1,A265)
		AF('I',union A266,m6,1)
		AF('S',union A266,m7,1)
		AF('p',union A266,m8,1)
		AF('S',union A266,m9,1)
		AF('p',union A266,m10,1)
		AF('J',union A266,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jCd[3]CL[14]jJCCBBJ} */
#pragma pack(push,4)
struct A267 { j m0; C m1; d m2[3]; C m3; L m4[14]; j m5; J m6; C m7; C m8; B m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA267(const struct A267 *x, const struct A267 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA267() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A267));
		AF('j',struct A267,m0,1)
		AF('C',struct A267,m1,1)
		AF('d',struct A267,m2,3)
		AF('C',struct A267,m3,1)
		AF('L',struct A267,m4,14)
		AF('j',struct A267,m5,1)
		AF('J',struct A267,m6,1)
		AF('C',struct A267,m7,1)
		AF('C',struct A267,m8,1)
		AF('B',struct A267,m9,1)
		AF('B',struct A267,m10,1)
		AF('J',struct A267,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IS{jCd[3]CL[14]jJCCBBJ}fsSLJj> */
#pragma pack(push,1)
union A268 { I m0; S m1; struct A267 m2; f m3; s m4; S m5; L m6; J m7; j m8; };
#pragma pack(pop)
int f_cmpA268(const union A268 *x, const union A268 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA267(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA268() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A268));
		AF('I',union A268,m0,1)
		AF('S',union A268,m1,1)
		AFa(union A268,m2,1,A267)
		AF('f',union A268,m3,1)
		AF('s',union A268,m4,1)
		AF('S',union A268,m5,1)
		AF('L',union A268,m6,1)
		AF('J',union A268,m7,1)
		AF('j',union A268,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cdlpjfLIjdcL} */
#pragma pack(push,4)
struct A269 { c m0; d m1; l m2; p m3; j m4; f m5; L m6; I m7; j m8; d m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA269(const struct A269 *x, const struct A269 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA269() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A269));
		AF('c',struct A269,m0,1)
		AF('d',struct A269,m1,1)
		AF('l',struct A269,m2,1)
		AF('p',struct A269,m3,1)
		AF('j',struct A269,m4,1)
		AF('f',struct A269,m5,1)
		AF('L',struct A269,m6,1)
		AF('I',struct A269,m7,1)
		AF('j',struct A269,m8,1)
		AF('d',struct A269,m9,1)
		AF('c',struct A269,m10,1)
		AF('L',struct A269,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cSpB{cdlpjfLIjdcL}cLlplSp> */
#pragma pack(push,8)
union A270 { c m0; S m1; p m2; B m3; struct A269 m4; c m5; L m6; l m7; p m8; l m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA270(const union A270 *x, const union A270 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA269(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA270() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A270));
		AF('c',union A270,m0,1)
		AF('S',union A270,m1,1)
		AF('p',union A270,m2,1)
		AF('B',union A270,m3,1)
		AFa(union A270,m4,1,A269)
		AF('c',union A270,m5,1)
		AF('L',union A270,m6,1)
		AF('l',union A270,m7,1)
		AF('p',union A270,m8,1)
		AF('l',union A270,m9,1)
		AF('S',union A270,m10,1)
		AF('p',union A270,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sSJcfJ<cSpB{cdlpjfLIjdcL}cLlplSp>cpfBc> */
#pragma pack(push,4)
union A271 { s m0; S m1; J m2; c m3; f m4; J m5; union A270 m6; c m7; p m8; f m9; B m10; c m11; };
#pragma pack(pop)
int f_cmpA271(const union A271 *x, const union A271 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA270(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA271() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A271));
		AF('s',union A271,m0,1)
		AF('S',union A271,m1,1)
		AF('J',union A271,m2,1)
		AF('c',union A271,m3,1)
		AF('f',union A271,m4,1)
		AF('J',union A271,m5,1)
		AFa(union A271,m6,1,A270)
		AF('c',union A271,m7,1)
		AF('p',union A271,m8,1)
		AF('f',union A271,m9,1)
		AF('B',union A271,m10,1)
		AF('c',union A271,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jIdfds> */
#pragma pack(push,2)
union A272 { j m0; I m1; d m2; f m3; d m4; s m5; };
#pragma pack(pop)
int f_cmpA272(const union A272 *x, const union A272 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA272() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A272));
		AF('j',union A272,m0,1)
		AF('I',union A272,m1,1)
		AF('d',union A272,m2,1)
		AF('f',union A272,m3,1)
		AF('d',union A272,m4,1)
		AF('s',union A272,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JciljBd[9]<jIdfds>pdIS} */
#pragma pack(push,4)
struct A273 { J m0; c m1; i m2; l m3; j m4; B m5; d m6[9]; union A272 m7; p m8; d m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA273(const struct A273 *x, const struct A273 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && f_cmpA272(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA273() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A273));
		AF('J',struct A273,m0,1)
		AF('c',struct A273,m1,1)
		AF('i',struct A273,m2,1)
		AF('l',struct A273,m3,1)
		AF('j',struct A273,m4,1)
		AF('B',struct A273,m5,1)
		AF('d',struct A273,m6,9)
		AFa(struct A273,m7,1,A272)
		AF('p',struct A273,m8,1)
		AF('d',struct A273,m9,1)
		AF('I',struct A273,m10,1)
		AF('S',struct A273,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ljLJsslJL} */
#pragma pack(push,4)
struct A274 { l m0; j m1; L m2; J m3; s m4; s m5; l m6; J m7; L m8; };
#pragma pack(pop)
int f_cmpA274(const struct A274 *x, const struct A274 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA274() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A274));
		AF('l',struct A274,m0,1)
		AF('j',struct A274,m1,1)
		AF('L',struct A274,m2,1)
		AF('J',struct A274,m3,1)
		AF('s',struct A274,m4,1)
		AF('s',struct A274,m5,1)
		AF('l',struct A274,m6,1)
		AF('J',struct A274,m7,1)
		AF('L',struct A274,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <c{ljLJsslJL}pS> */
#pragma pack(push,4)
union A275 { c m0; struct A274 m1; p m2; S m3; };
#pragma pack(pop)
int f_cmpA275(const union A275 *x, const union A275 *y) { return x->m0 == y->m0 && f_cmpA274(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA275() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A275));
		AF('c',union A275,m0,1)
		AFa(union A275,m1,1,A274)
		AF('p',union A275,m2,1)
		AF('S',union A275,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <clpfd{JciljBd[9]<jIdfds>pdIS}iJ<c{ljLJsslJL}pS>jid> */
#pragma pack(push,8)
union A276 { c m0; l m1; p m2; f m3; d m4; struct A273 m5; i m6; J m7; union A275 m8; j m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA276(const union A276 *x, const union A276 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA273(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA275(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA276() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A276));
		AF('c',union A276,m0,1)
		AF('l',union A276,m1,1)
		AF('p',union A276,m2,1)
		AF('f',union A276,m3,1)
		AF('d',union A276,m4,1)
		AFa(union A276,m5,1,A273)
		AF('i',union A276,m6,1)
		AF('J',union A276,m7,1)
		AFa(union A276,m8,1,A275)
		AF('j',union A276,m9,1)
		AF('i',union A276,m10,1)
		AF('d',union A276,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dLjIJjBlIsps> */
#pragma pack(push,4)
union A277 { d m0; L m1; j m2; I m3; J m4; j m5; B m6; l m7; I m8; s m9; p m10; s m11; };
#pragma pack(pop)
int f_cmpA277(const union A277 *x, const union A277 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA277() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A277));
		AF('d',union A277,m0,1)
		AF('L',union A277,m1,1)
		AF('j',union A277,m2,1)
		AF('I',union A277,m3,1)
		AF('J',union A277,m4,1)
		AF('j',union A277,m5,1)
		AF('B',union A277,m6,1)
		AF('l',union A277,m7,1)
		AF('I',union A277,m8,1)
		AF('s',union A277,m9,1)
		AF('p',union A277,m10,1)
		AF('s',union A277,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcijsLISLlSI} */
#pragma pack(push,4)
struct A278 { f m0; c m1; i m2; j m3; s m4; L m5; I m6; S m7; L m8; l m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA278(const struct A278 *x, const struct A278 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA278() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A278));
		AF('f',struct A278,m0,1)
		AF('c',struct A278,m1,1)
		AF('i',struct A278,m2,1)
		AF('j',struct A278,m3,1)
		AF('s',struct A278,m4,1)
		AF('L',struct A278,m5,1)
		AF('I',struct A278,m6,1)
		AF('S',struct A278,m7,1)
		AF('L',struct A278,m8,1)
		AF('l',struct A278,m9,1)
		AF('S',struct A278,m10,1)
		AF('I',struct A278,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I<dLjIJjBlIsps>Ss{fcijsLISLlSI}ipcifiL> */
#pragma pack(push,2)
union A279 { I m0; union A277 m1; S m2; s m3; struct A278 m4; i m5; p m6; c m7; i m8; f m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA279(const union A279 *x, const union A279 *y) { return x->m0 == y->m0 && f_cmpA277(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA278(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA279() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A279));
		AF('I',union A279,m0,1)
		AFa(union A279,m1,1,A277)
		AF('S',union A279,m2,1)
		AF('s',union A279,m3,1)
		AFa(union A279,m4,1,A278)
		AF('i',union A279,m5,1)
		AF('p',union A279,m6,1)
		AF('c',union A279,m7,1)
		AF('i',union A279,m8,1)
		AF('f',union A279,m9,1)
		AF('i',union A279,m10,1)
		AF('L',union A279,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l<I<dLjIJjBlIsps>Ss{fcijsLISLlSI}ipcifiL>iLJsIJfss} */
#pragma pack(push,2)
struct A280 { l m0; union A279 m1; i m2; L m3; J m4; s m5; I m6; J m7; f m8; s m9; s m10; };
#pragma pack(pop)
int f_cmpA280(const struct A280 *x, const struct A280 *y) { return x->m0 == y->m0 && f_cmpA279(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA280() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A280));
		AF('l',struct A280,m0,1)
		AFa(struct A280,m1,1,A279)
		AF('i',struct A280,m2,1)
		AF('L',struct A280,m3,1)
		AF('J',struct A280,m4,1)
		AF('s',struct A280,m5,1)
		AF('I',struct A280,m6,1)
		AF('J',struct A280,m7,1)
		AF('f',struct A280,m8,1)
		AF('s',struct A280,m9,1)
		AF('s',struct A280,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SlsfcLj> */
#pragma pack(push,2)
union A281 { S m0; l m1; s m2; f m3; c m4; L m5; j m6; };
#pragma pack(pop)
int f_cmpA281(const union A281 *x, const union A281 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA281() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A281));
		AF('S',union A281,m0,1)
		AF('l',union A281,m1,1)
		AF('s',union A281,m2,1)
		AF('f',union A281,m3,1)
		AF('c',union A281,m4,1)
		AF('L',union A281,m5,1)
		AF('j',union A281,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdpSpp} */
#pragma pack(push,4)
struct A282 { C m0; d m1; p m2; S m3; p m4; p m5; };
#pragma pack(pop)
int f_cmpA282(const struct A282 *x, const struct A282 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA282() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A282));
		AF('C',struct A282,m0,1)
		AF('d',struct A282,m1,1)
		AF('p',struct A282,m2,1)
		AF('S',struct A282,m3,1)
		AF('p',struct A282,m4,1)
		AF('p',struct A282,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dLIds<SlsfcLj>{CdpSpp}ipsjc> */
#pragma pack(push,2)
union A283 { d m0; L m1; I m2; d m3; s m4; union A281 m5; struct A282 m6; i m7; p m8; s m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA283(const union A283 *x, const union A283 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA281(&x->m5, &y->m5) && f_cmpA282(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA283() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A283));
		AF('d',union A283,m0,1)
		AF('L',union A283,m1,1)
		AF('I',union A283,m2,1)
		AF('d',union A283,m3,1)
		AF('s',union A283,m4,1)
		AFa(union A283,m5,1,A281)
		AFa(union A283,m6,1,A282)
		AF('i',union A283,m7,1)
		AF('p',union A283,m8,1)
		AF('s',union A283,m9,1)
		AF('j',union A283,m10,1)
		AF('c',union A283,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JC<dLIds<SlsfcLj>{CdpSpp}ipsjc>Il} */
#pragma pack(push,4)
struct A284 { J m0; C m1; union A283 m2; I m3; l m4; };
#pragma pack(pop)
int f_cmpA284(const struct A284 *x, const struct A284 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA283(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA284() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A284));
		AF('J',struct A284,m0,1)
		AF('C',struct A284,m1,1)
		AFa(struct A284,m2,1,A283)
		AF('I',struct A284,m3,1)
		AF('l',struct A284,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SsjJdpiLpSSI} */
#pragma pack(push,4)
struct A285 { S m0; s m1; j m2; J m3; d m4; p m5; i m6; L m7; p m8; S m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA285(const struct A285 *x, const struct A285 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA285() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A285));
		AF('S',struct A285,m0,1)
		AF('s',struct A285,m1,1)
		AF('j',struct A285,m2,1)
		AF('J',struct A285,m3,1)
		AF('d',struct A285,m4,1)
		AF('p',struct A285,m5,1)
		AF('i',struct A285,m6,1)
		AF('L',struct A285,m7,1)
		AF('p',struct A285,m8,1)
		AF('S',struct A285,m9,1)
		AF('S',struct A285,m10,1)
		AF('I',struct A285,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lij<l>lsISiIfj} */
#pragma pack(push,4)
struct A286 { L m0; i m1; j m2; union A103 m3; l m4; s m5; I m6; S m7; i m8; I m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA286(const struct A286 *x, const struct A286 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA103(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA286() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A286));
		AF('L',struct A286,m0,1)
		AF('i',struct A286,m1,1)
		AF('j',struct A286,m2,1)
		AFa(struct A286,m3,1,A103)
		AF('l',struct A286,m4,1)
		AF('s',struct A286,m5,1)
		AF('I',struct A286,m6,1)
		AF('S',struct A286,m7,1)
		AF('i',struct A286,m8,1)
		AF('I',struct A286,m9,1)
		AF('f',struct A286,m10,1)
		AF('j',struct A286,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsfBcfcSlpcc> */
#pragma pack(push,4)
union A287 { S m0; s m1; f m2; B m3; c m4; f m5; c m6; S m7; l m8; p m9; c m10; c m11; };
#pragma pack(pop)
int f_cmpA287(const union A287 *x, const union A287 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA287() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A287));
		AF('S',union A287,m0,1)
		AF('s',union A287,m1,1)
		AF('f',union A287,m2,1)
		AF('B',union A287,m3,1)
		AF('c',union A287,m4,1)
		AF('f',union A287,m5,1)
		AF('c',union A287,m6,1)
		AF('S',union A287,m7,1)
		AF('l',union A287,m8,1)
		AF('p',union A287,m9,1)
		AF('c',union A287,m10,1)
		AF('c',union A287,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B<SsfBcfcSlpcc>SsCI} */
#pragma pack(push,1)
struct A288 { B m0; union A287 m1; S m2; s m3; C m4; I m5; };
#pragma pack(pop)
int f_cmpA288(const struct A288 *x, const struct A288 *y) { return x->m0 == y->m0 && f_cmpA287(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA288() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A288));
		AF('B',struct A288,m0,1)
		AFa(struct A288,m1,1,A287)
		AF('S',struct A288,m2,1)
		AF('s',struct A288,m3,1)
		AF('C',struct A288,m4,1)
		AF('I',struct A288,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C} */
#pragma pack(push,4)
struct A289 { C m0; };
#pragma pack(pop)
int f_cmpA289(const struct A289 *x, const struct A289 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA289() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A289));
		AF('C',struct A289,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LpSliS} */
#pragma pack(push,2)
struct A290 { L m0; p m1; S m2; l m3; i m4; S m5; };
#pragma pack(pop)
int f_cmpA290(const struct A290 *x, const struct A290 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA290() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A290));
		AF('L',struct A290,m0,1)
		AF('p',struct A290,m1,1)
		AF('S',struct A290,m2,1)
		AF('l',struct A290,m3,1)
		AF('i',struct A290,m4,1)
		AF('S',struct A290,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljcS> */
#pragma pack(push,8)
union A291 { l m0; j m1; c m2; S m3; };
#pragma pack(pop)
int f_cmpA291(const union A291 *x, const union A291 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA291() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A291));
		AF('l',union A291,m0,1)
		AF('j',union A291,m1,1)
		AF('c',union A291,m2,1)
		AF('S',union A291,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCBlf{C}J{LpSliS}J<ljcS>jj> */
#pragma pack(push,4)
union A292 { p m0; C m1; B m2; l m3; f m4; struct A289 m5; J m6; struct A290 m7; J m8; union A291 m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA292(const union A292 *x, const union A292 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA289(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA290(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA291(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA292() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A292));
		AF('p',union A292,m0,1)
		AF('C',union A292,m1,1)
		AF('B',union A292,m2,1)
		AF('l',union A292,m3,1)
		AF('f',union A292,m4,1)
		AFa(union A292,m5,1,A289)
		AF('J',union A292,m6,1)
		AFa(union A292,m7,1,A290)
		AF('J',union A292,m8,1)
		AFa(union A292,m9,1,A291)
		AF('j',union A292,m10,1)
		AF('j',union A292,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sILcs[11]cppBjlp> */
#pragma pack(push,2)
union A293 { s m0; I m1; L m2; c m3; s m4[11]; c m5; p m6; p m7; B m8; j m9; l m10; p m11; };
#pragma pack(pop)
int f_cmpA293(const union A293 *x, const union A293 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA293() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A293));
		AF('s',union A293,m0,1)
		AF('I',union A293,m1,1)
		AF('L',union A293,m2,1)
		AF('c',union A293,m3,1)
		AF('s',union A293,m4,11)
		AF('c',union A293,m5,1)
		AF('p',union A293,m6,1)
		AF('p',union A293,m7,1)
		AF('B',union A293,m8,1)
		AF('j',union A293,m9,1)
		AF('l',union A293,m10,1)
		AF('p',union A293,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SfScSiJSCBCJ} */
#pragma pack(push,4)
struct A294 { S m0; f m1; S m2; c m3; S m4; i m5; J m6; S m7; C m8; B m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA294(const struct A294 *x, const struct A294 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA294() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A294));
		AF('S',struct A294,m0,1)
		AF('f',struct A294,m1,1)
		AF('S',struct A294,m2,1)
		AF('c',struct A294,m3,1)
		AF('S',struct A294,m4,1)
		AF('i',struct A294,m5,1)
		AF('J',struct A294,m6,1)
		AF('S',struct A294,m7,1)
		AF('C',struct A294,m8,1)
		AF('B',struct A294,m9,1)
		AF('C',struct A294,m10,1)
		AF('J',struct A294,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lsd<sILcs[11]cppBjlp>fis{SfScSiJSCBCJ}ClLi} */
#pragma pack(push,4)
struct A295 { L m0; s m1; d m2; union A293 m3; f m4; i m5; s m6; struct A294 m7; C m8; l m9; L m10; i m11; };
#pragma pack(pop)
int f_cmpA295(const struct A295 *x, const struct A295 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA293(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA294(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA295() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A295));
		AF('L',struct A295,m0,1)
		AF('s',struct A295,m1,1)
		AF('d',struct A295,m2,1)
		AFa(struct A295,m3,1,A293)
		AF('f',struct A295,m4,1)
		AF('i',struct A295,m5,1)
		AF('s',struct A295,m6,1)
		AFa(struct A295,m7,1,A294)
		AF('C',struct A295,m8,1)
		AF('l',struct A295,m9,1)
		AF('L',struct A295,m10,1)
		AF('i',struct A295,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dLIJslc{B<SsfBcfcSlpcc>SsCI}<pCBlf{C}J{LpSliS}J<ljcS>jj>{Lsd<sILcs[11]cppBjlp>fis{SfScSiJSCBCJ}ClLi}fL} */
#pragma pack(push,4)
struct A296 { d m0; L m1; I m2; J m3; s m4; l m5; c m6; struct A288 m7; union A292 m8; struct A295 m9; f m10; L m11; };
#pragma pack(pop)
int f_cmpA296(const struct A296 *x, const struct A296 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA288(&x->m7, &y->m7) && f_cmpA292(&x->m8, &y->m8) && f_cmpA295(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA296() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A296));
		AF('d',struct A296,m0,1)
		AF('L',struct A296,m1,1)
		AF('I',struct A296,m2,1)
		AF('J',struct A296,m3,1)
		AF('s',struct A296,m4,1)
		AF('l',struct A296,m5,1)
		AF('c',struct A296,m6,1)
		AFa(struct A296,m7,1,A288)
		AFa(struct A296,m8,1,A292)
		AFa(struct A296,m9,1,A295)
		AF('f',struct A296,m10,1)
		AF('L',struct A296,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJsLIdiliCSC} */
#pragma pack(push,4)
struct A297 { I m0; J m1; s m2; L m3; I m4; d m5; i m6; l m7; i m8; C m9; S m10; C m11; };
#pragma pack(pop)
int f_cmpA297(const struct A297 *x, const struct A297 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA297() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A297));
		AF('I',struct A297,m0,1)
		AF('J',struct A297,m1,1)
		AF('s',struct A297,m2,1)
		AF('L',struct A297,m3,1)
		AF('I',struct A297,m4,1)
		AF('d',struct A297,m5,1)
		AF('i',struct A297,m6,1)
		AF('l',struct A297,m7,1)
		AF('i',struct A297,m8,1)
		AF('C',struct A297,m9,1)
		AF('S',struct A297,m10,1)
		AF('C',struct A297,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cIBBcflcpLss> */
#pragma pack(push,8)
union A298 { c m0; I m1; B m2; B m3; c m4; f m5; l m6; c m7; p m8; L m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA298(const union A298 *x, const union A298 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA298() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A298));
		AF('c',union A298,m0,1)
		AF('I',union A298,m1,1)
		AF('B',union A298,m2,1)
		AF('B',union A298,m3,1)
		AF('c',union A298,m4,1)
		AF('f',union A298,m5,1)
		AF('l',union A298,m6,1)
		AF('c',union A298,m7,1)
		AF('p',union A298,m8,1)
		AF('L',union A298,m9,1)
		AF('s',union A298,m10,1)
		AF('s',union A298,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cf} */
#pragma pack(push,4)
struct A299 { C m0; f m1; };
#pragma pack(pop)
int f_cmpA299(const struct A299 *x, const struct A299 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA299() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A299));
		AF('C',struct A299,m0,1)
		AF('f',struct A299,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bfci> */
#pragma pack(push,4)
union A300 { B m0; f m1; c m2; i m3; };
#pragma pack(pop)
int f_cmpA300(const union A300 *x, const union A300 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA300() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A300));
		AF('B',union A300,m0,1)
		AF('f',union A300,m1,1)
		AF('c',union A300,m2,1)
		AF('i',union A300,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dJ{Cf}Ss[12]p<Bfci>} */
#pragma pack(push,8)
struct A301 { d m0; J m1; struct A299 m2; S m3; s m4[12]; p m5; union A300 m6; };
#pragma pack(pop)
int f_cmpA301(const struct A301 *x, const struct A301 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA299(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m5 == y->m5 && f_cmpA300(&x->m6, &y->m6); };
DCaggr* f_touchA301() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A301));
		AF('d',struct A301,m0,1)
		AF('J',struct A301,m1,1)
		AFa(struct A301,m2,1,A299)
		AF('S',struct A301,m3,1)
		AF('s',struct A301,m4,12)
		AF('p',struct A301,m5,1)
		AFa(struct A301,m6,1,A300)
		dcCloseAggr(a);
	}
	return a;
};
/* {jcf} */
#pragma pack(push,4)
struct A302 { j m0; c m1; f m2; };
#pragma pack(pop)
int f_cmpA302(const struct A302 *x, const struct A302 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA302() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A302));
		AF('j',struct A302,m0,1)
		AF('c',struct A302,m1,1)
		AF('f',struct A302,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBiSJBJjcCjd} */
#pragma pack(push,1)
struct A303 { s m0; B m1; i m2; S m3; J m4; B m5; J m6; j m7; c m8; C m9; j m10; d m11; };
#pragma pack(pop)
int f_cmpA303(const struct A303 *x, const struct A303 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA303() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A303));
		AF('s',struct A303,m0,1)
		AF('B',struct A303,m1,1)
		AF('i',struct A303,m2,1)
		AF('S',struct A303,m3,1)
		AF('J',struct A303,m4,1)
		AF('B',struct A303,m5,1)
		AF('J',struct A303,m6,1)
		AF('j',struct A303,m7,1)
		AF('c',struct A303,m8,1)
		AF('C',struct A303,m9,1)
		AF('j',struct A303,m10,1)
		AF('d',struct A303,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fLlflcCfJISI> */
#pragma pack(push,4)
union A304 { f m0; L m1; l m2; f m3; l m4; c m5; C m6; f m7; J m8; I m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA304(const union A304 *x, const union A304 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA304() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A304));
		AF('f',union A304,m0,1)
		AF('L',union A304,m1,1)
		AF('l',union A304,m2,1)
		AF('f',union A304,m3,1)
		AF('l',union A304,m4,1)
		AF('c',union A304,m5,1)
		AF('C',union A304,m6,1)
		AF('f',union A304,m7,1)
		AF('J',union A304,m8,1)
		AF('I',union A304,m9,1)
		AF('S',union A304,m10,1)
		AF('I',union A304,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLfCcS[2]JIB> */
#pragma pack(push,2)
union A305 { l m0; L m1; f m2; C m3; c m4; S m5[2]; J m6; I m7; B m8; };
#pragma pack(pop)
int f_cmpA305(const union A305 *x, const union A305 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA305() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A305));
		AF('l',union A305,m0,1)
		AF('L',union A305,m1,1)
		AF('f',union A305,m2,1)
		AF('C',union A305,m3,1)
		AF('c',union A305,m4,1)
		AF('S',union A305,m5,2)
		AF('J',union A305,m6,1)
		AF('I',union A305,m7,1)
		AF('B',union A305,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BfSpffpSijB[5]B} */
#pragma pack(push,4)
struct A306 { B m0; f m1; S m2; p m3; f m4; f m5; p m6; S m7; i m8; j m9; B m10[5]; B m11; };
#pragma pack(pop)
int f_cmpA306(const struct A306 *x, const struct A306 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m11 == y->m11; };
DCaggr* f_touchA306() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A306));
		AF('B',struct A306,m0,1)
		AF('f',struct A306,m1,1)
		AF('S',struct A306,m2,1)
		AF('p',struct A306,m3,1)
		AF('f',struct A306,m4,1)
		AF('f',struct A306,m5,1)
		AF('p',struct A306,m6,1)
		AF('S',struct A306,m7,1)
		AF('i',struct A306,m8,1)
		AF('j',struct A306,m9,1)
		AF('B',struct A306,m10,5)
		AF('B',struct A306,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl} */
#pragma pack(push,4)
struct A307 { C m0; union A305 m1; p m2; struct A306 m3; C m4; i m5; S m6; J m7; J m8; j m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA307(const struct A307 *x, const struct A307 *y) { return x->m0 == y->m0 && f_cmpA305(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA306(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA307() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A307));
		AF('C',struct A307,m0,1)
		AFa(struct A307,m1,1,A305)
		AF('p',struct A307,m2,1)
		AFa(struct A307,m3,1,A306)
		AF('C',struct A307,m4,1)
		AF('i',struct A307,m5,1)
		AF('S',struct A307,m6,1)
		AF('J',struct A307,m7,1)
		AF('J',struct A307,m8,1)
		AF('j',struct A307,m9,1)
		AF('j',struct A307,m10,1)
		AF('l',struct A307,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IiC> */
#pragma pack(push,4)
union A308 { I m0; i m1; C m2; };
#pragma pack(pop)
int f_cmpA308(const union A308 *x, const union A308 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA308() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A308));
		AF('I',union A308,m0,1)
		AF('i',union A308,m1,1)
		AF('C',union A308,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<IiC>[14]iJCSfcdSiJL} */
#pragma pack(push,1)
struct A309 { union A308 m0[14]; i m1; J m2; C m3; S m4; f m5; c m6; d m7; S m8; i m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA309(const struct A309 *x, const struct A309 *y) { return f_cmpA308(&x->m0[0], &y->m0[0]) && f_cmpA308(&x->m0[1], &y->m0[1]) && f_cmpA308(&x->m0[2], &y->m0[2]) && f_cmpA308(&x->m0[3], &y->m0[3]) && f_cmpA308(&x->m0[4], &y->m0[4]) && f_cmpA308(&x->m0[5], &y->m0[5]) && f_cmpA308(&x->m0[6], &y->m0[6]) && f_cmpA308(&x->m0[7], &y->m0[7]) && f_cmpA308(&x->m0[8], &y->m0[8]) && f_cmpA308(&x->m0[9], &y->m0[9]) && f_cmpA308(&x->m0[10], &y->m0[10]) && f_cmpA308(&x->m0[11], &y->m0[11]) && f_cmpA308(&x->m0[12], &y->m0[12]) && f_cmpA308(&x->m0[13], &y->m0[13]) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA309() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A309));
		AFa(struct A309,m0,14,A308)
		AF('i',struct A309,m1,1)
		AF('J',struct A309,m2,1)
		AF('C',struct A309,m3,1)
		AF('S',struct A309,m4,1)
		AF('f',struct A309,m5,1)
		AF('c',struct A309,m6,1)
		AF('d',struct A309,m7,1)
		AF('S',struct A309,m8,1)
		AF('i',struct A309,m9,1)
		AF('J',struct A309,m10,1)
		AF('L',struct A309,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ} */
#pragma pack(push,4)
struct A310 { struct A309 m0; j m1; i m2; c m3; S m4; p m5; J m6; I m7; d m8; C m9; j m10; J m11; };
#pragma pack(pop)
int f_cmpA310(const struct A310 *x, const struct A310 *y) { return f_cmpA309(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA310() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A310));
		AFa(struct A310,m0,1,A309)
		AF('j',struct A310,m1,1)
		AF('i',struct A310,m2,1)
		AF('c',struct A310,m3,1)
		AF('S',struct A310,m4,1)
		AF('p',struct A310,m5,1)
		AF('J',struct A310,m6,1)
		AF('I',struct A310,m7,1)
		AF('d',struct A310,m8,1)
		AF('C',struct A310,m9,1)
		AF('j',struct A310,m10,1)
		AF('J',struct A310,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsJfJjpBCI} */
#pragma pack(push,8)
struct A311 { l m0; s m1; J m2; f m3; J m4; j m5; p m6; B m7; C m8; I m9; };
#pragma pack(pop)
int f_cmpA311(const struct A311 *x, const struct A311 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA311() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A311));
		AF('l',struct A311,m0,1)
		AF('s',struct A311,m1,1)
		AF('J',struct A311,m2,1)
		AF('f',struct A311,m3,1)
		AF('J',struct A311,m4,1)
		AF('j',struct A311,m5,1)
		AF('p',struct A311,m6,1)
		AF('B',struct A311,m7,1)
		AF('C',struct A311,m8,1)
		AF('I',struct A311,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsS} */
#pragma pack(push,2)
struct A312 { f m0; s m1; S m2; };
#pragma pack(pop)
int f_cmpA312(const struct A312 *x, const struct A312 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA312() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A312));
		AF('f',struct A312,m0,1)
		AF('s',struct A312,m1,1)
		AF('S',struct A312,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LsspJC> */
#pragma pack(push,4)
union A313 { L m0; s m1; s m2; p m3; J m4; C m5; };
#pragma pack(pop)
int f_cmpA313(const union A313 *x, const union A313 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA313() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A313));
		AF('L',union A313,m0,1)
		AF('s',union A313,m1,1)
		AF('s',union A313,m2,1)
		AF('p',union A313,m3,1)
		AF('J',union A313,m4,1)
		AF('C',union A313,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SpBdSpCJISll> */
#pragma pack(push,2)
union A314 { S m0; p m1; B m2; d m3; S m4; p m5; C m6; J m7; I m8; S m9; l m10; l m11; };
#pragma pack(pop)
int f_cmpA314(const union A314 *x, const union A314 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA314() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A314));
		AF('S',union A314,m0,1)
		AF('p',union A314,m1,1)
		AF('B',union A314,m2,1)
		AF('d',union A314,m3,1)
		AF('S',union A314,m4,1)
		AF('p',union A314,m5,1)
		AF('C',union A314,m6,1)
		AF('J',union A314,m7,1)
		AF('I',union A314,m8,1)
		AF('S',union A314,m9,1)
		AF('l',union A314,m10,1)
		AF('l',union A314,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f{fsS}dCl<LsspJC>Ip<SpBdSpCJISll>dLi} */
#pragma pack(push,4)
struct A315 { f m0; struct A312 m1; d m2; C m3; l m4; union A313 m5; I m6; p m7; union A314 m8; d m9; L m10; i m11; };
#pragma pack(pop)
int f_cmpA315(const struct A315 *x, const struct A315 *y) { return x->m0 == y->m0 && f_cmpA312(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA313(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA314(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA315() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A315));
		AF('f',struct A315,m0,1)
		AFa(struct A315,m1,1,A312)
		AF('d',struct A315,m2,1)
		AF('C',struct A315,m3,1)
		AF('l',struct A315,m4,1)
		AFa(struct A315,m5,1,A313)
		AF('I',struct A315,m6,1)
		AF('p',struct A315,m7,1)
		AFa(struct A315,m8,1,A314)
		AF('d',struct A315,m9,1)
		AF('L',struct A315,m10,1)
		AF('i',struct A315,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBCB} */
#pragma pack(push,1)
struct A316 { I m0; B m1; C m2; B m3; };
#pragma pack(pop)
int f_cmpA316(const struct A316 *x, const struct A316 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA316() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A316));
		AF('I',struct A316,m0,1)
		AF('B',struct A316,m1,1)
		AF('C',struct A316,m2,1)
		AF('B',struct A316,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLJ> */
#pragma pack(push,4)
union A317 { J m0; L m1; J m2; };
#pragma pack(pop)
int f_cmpA317(const union A317 *x, const union A317 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA317() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A317));
		AF('J',union A317,m0,1)
		AF('L',union A317,m1,1)
		AF('J',union A317,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f> */
#pragma pack(push,4)
union A318 { f m0; };
#pragma pack(pop)
int f_cmpA318(const union A318 *x, const union A318 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA318() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A318));
		AF('f',union A318,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pjC[3]jBj[9]} */
#pragma pack(push,2)
struct A319 { p m0; j m1; C m2[3]; j m3; B m4; j m5[9]; };
#pragma pack(pop)
int f_cmpA319(const struct A319 *x, const struct A319 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8]; };
DCaggr* f_touchA319() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A319));
		AF('p',struct A319,m0,1)
		AF('j',struct A319,m1,1)
		AF('C',struct A319,m2,3)
		AF('j',struct A319,m3,1)
		AF('B',struct A319,m4,1)
		AF('j',struct A319,m5,9)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsfBdlfpp[4]fpj} */
#pragma pack(push,4)
struct A320 { B m0; s m1; f m2; B m3; d m4; l m5; f m6; p m7; p m8[4]; f m9; p m10; j m11; };
#pragma pack(pop)
int f_cmpA320(const struct A320 *x, const struct A320 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA320() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A320));
		AF('B',struct A320,m0,1)
		AF('s',struct A320,m1,1)
		AF('f',struct A320,m2,1)
		AF('B',struct A320,m3,1)
		AF('d',struct A320,m4,1)
		AF('l',struct A320,m5,1)
		AF('f',struct A320,m6,1)
		AF('p',struct A320,m7,1)
		AF('p',struct A320,m8,4)
		AF('f',struct A320,m9,1)
		AF('p',struct A320,m10,1)
		AF('j',struct A320,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djcjiCi> */
#pragma pack(push,4)
union A321 { d m0; j m1; c m2; j m3; i m4; C m5; i m6; };
#pragma pack(pop)
int f_cmpA321(const union A321 *x, const union A321 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA321() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A321));
		AF('d',union A321,m0,1)
		AF('j',union A321,m1,1)
		AF('c',union A321,m2,1)
		AF('j',union A321,m3,1)
		AF('i',union A321,m4,1)
		AF('C',union A321,m5,1)
		AF('i',union A321,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj} */
#pragma pack(push,2)
struct A322 { d m0; struct A320 m1; c m2; L m3[1]; j m4; B m5; union A321 m6; S m7; B m8; B m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA322(const struct A322 *x, const struct A322 *y) { return x->m0 == y->m0 && f_cmpA320(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA321(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA322() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A322));
		AF('d',struct A322,m0,1)
		AFa(struct A322,m1,1,A320)
		AF('c',struct A322,m2,1)
		AF('L',struct A322,m3,1)
		AF('j',struct A322,m4,1)
		AF('B',struct A322,m5,1)
		AFa(struct A322,m6,1,A321)
		AF('S',struct A322,m7,1)
		AF('B',struct A322,m8,1)
		AF('B',struct A322,m9,1)
		AF('S',struct A322,m10,1)
		AF('j',struct A322,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dJBs} */
#pragma pack(push,2)
struct A323 { d m0; J m1; B m2; s m3; };
#pragma pack(pop)
int f_cmpA323(const struct A323 *x, const struct A323 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA323() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A323));
		AF('d',struct A323,m0,1)
		AF('J',struct A323,m1,1)
		AF('B',struct A323,m2,1)
		AF('s',struct A323,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Llfp[13]CpLjcpiL} */
#pragma pack(push,4)
struct A324 { L m0; l m1; f m2; p m3[13]; C m4; p m5; L m6; j m7; c m8; p m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA324(const struct A324 *x, const struct A324 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA324() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A324));
		AF('L',struct A324,m0,1)
		AF('l',struct A324,m1,1)
		AF('f',struct A324,m2,1)
		AF('p',struct A324,m3,13)
		AF('C',struct A324,m4,1)
		AF('p',struct A324,m5,1)
		AF('L',struct A324,m6,1)
		AF('j',struct A324,m7,1)
		AF('c',struct A324,m8,1)
		AF('p',struct A324,m9,1)
		AF('i',struct A324,m10,1)
		AF('L',struct A324,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<S>} */
#pragma pack(push,8)
struct A325 { union A62 m0; };
#pragma pack(pop)
int f_cmpA325(const struct A325 *x, const struct A325 *y) { return f_cmpA62(&x->m0, &y->m0); };
DCaggr* f_touchA325() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A325));
		AFa(struct A325,m0,1,A62)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJCcJjdLLfsf> */
#pragma pack(push,4)
union A326 { S m0; J m1; C m2; c m3; J m4; j m5; d m6; L m7; L m8; f m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA326(const union A326 *x, const union A326 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA326() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A326));
		AF('S',union A326,m0,1)
		AF('J',union A326,m1,1)
		AF('C',union A326,m2,1)
		AF('c',union A326,m3,1)
		AF('J',union A326,m4,1)
		AF('j',union A326,m5,1)
		AF('d',union A326,m6,1)
		AF('L',union A326,m7,1)
		AF('L',union A326,m8,1)
		AF('f',union A326,m9,1)
		AF('s',union A326,m10,1)
		AF('f',union A326,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LSLjSJj> */
#pragma pack(push,2)
union A327 { L m0; S m1; L m2; j m3; S m4; J m5; j m6; };
#pragma pack(pop)
int f_cmpA327(const union A327 *x, const union A327 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA327() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A327));
		AF('L',union A327,m0,1)
		AF('S',union A327,m1,1)
		AF('L',union A327,m2,1)
		AF('j',union A327,m3,1)
		AF('S',union A327,m4,1)
		AF('J',union A327,m5,1)
		AF('j',union A327,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LslB<SJCcJjdLLfsf>llfLC<LSLjSJj>L} */
#pragma pack(push,4)
struct A328 { L m0; s m1; l m2; B m3; union A326 m4; l m5; l m6; f m7; L m8; C m9; union A327 m10; L m11; };
#pragma pack(pop)
int f_cmpA328(const struct A328 *x, const struct A328 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA326(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA327(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA328() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A328));
		AF('L',struct A328,m0,1)
		AF('s',struct A328,m1,1)
		AF('l',struct A328,m2,1)
		AF('B',struct A328,m3,1)
		AFa(struct A328,m4,1,A326)
		AF('l',struct A328,m5,1)
		AF('l',struct A328,m6,1)
		AF('f',struct A328,m7,1)
		AF('L',struct A328,m8,1)
		AF('C',struct A328,m9,1)
		AFa(struct A328,m10,1,A327)
		AF('L',struct A328,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L> */
#pragma pack(push,4)
union A329 { L m0; };
#pragma pack(pop)
int f_cmpA329(const union A329 *x, const union A329 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA329() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A329));
		AF('L',union A329,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jI<L>CjcfppppC> */
#pragma pack(push,8)
union A330 { j m0; I m1; union A329 m2; C m3; j m4; c m5; f m6; p m7; p m8; p m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA330(const union A330 *x, const union A330 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA329(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA330() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A330));
		AF('j',union A330,m0,1)
		AF('I',union A330,m1,1)
		AFa(union A330,m2,1,A329)
		AF('C',union A330,m3,1)
		AF('j',union A330,m4,1)
		AF('c',union A330,m5,1)
		AF('f',union A330,m6,1)
		AF('p',union A330,m7,1)
		AF('p',union A330,m8,1)
		AF('p',union A330,m9,1)
		AF('p',union A330,m10,1)
		AF('C',union A330,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pc{p}sB[4]dI} */
#pragma pack(push,2)
struct A331 { p m0; c m1; struct A231 m2; s m3; B m4[4]; d m5; I m6; };
#pragma pack(pop)
int f_cmpA331(const struct A331 *x, const struct A331 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA231(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA331() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A331));
		AF('p',struct A331,m0,1)
		AF('c',struct A331,m1,1)
		AFa(struct A331,m2,1,A231)
		AF('s',struct A331,m3,1)
		AF('B',struct A331,m4,4)
		AF('d',struct A331,m5,1)
		AF('I',struct A331,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jpLpBBBcCjlI> */
#pragma pack(push,4)
union A332 { j m0; p m1; L m2; p m3; B m4; B m5; B m6; c m7; C m8; j m9; l m10; I m11; };
#pragma pack(pop)
int f_cmpA332(const union A332 *x, const union A332 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA332() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A332));
		AF('j',union A332,m0,1)
		AF('p',union A332,m1,1)
		AF('L',union A332,m2,1)
		AF('p',union A332,m3,1)
		AF('B',union A332,m4,1)
		AF('B',union A332,m5,1)
		AF('B',union A332,m6,1)
		AF('c',union A332,m7,1)
		AF('C',union A332,m8,1)
		AF('j',union A332,m9,1)
		AF('l',union A332,m10,1)
		AF('I',union A332,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<jpLpBBBcCjlI>dScpdsjlfl} */
#pragma pack(push,2)
struct A333 { union A332 m0; d m1; S m2; c m3; p m4; d m5; s m6; j m7; l m8; f m9; l m10; };
#pragma pack(pop)
int f_cmpA333(const struct A333 *x, const struct A333 *y) { return f_cmpA332(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA333() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A333));
		AFa(struct A333,m0,1,A332)
		AF('d',struct A333,m1,1)
		AF('S',struct A333,m2,1)
		AF('c',struct A333,m3,1)
		AF('p',struct A333,m4,1)
		AF('d',struct A333,m5,1)
		AF('s',struct A333,m6,1)
		AF('j',struct A333,m7,1)
		AF('l',struct A333,m8,1)
		AF('f',struct A333,m9,1)
		AF('l',struct A333,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sILJsJJLiBCI> */
#pragma pack(push,2)
union A334 { s m0; I m1; L m2; J m3; s m4; J m5; J m6; L m7; i m8; B m9; C m10; I m11; };
#pragma pack(pop)
int f_cmpA334(const union A334 *x, const union A334 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA334() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A334));
		AF('s',union A334,m0,1)
		AF('I',union A334,m1,1)
		AF('L',union A334,m2,1)
		AF('J',union A334,m3,1)
		AF('s',union A334,m4,1)
		AF('J',union A334,m5,1)
		AF('J',union A334,m6,1)
		AF('L',union A334,m7,1)
		AF('i',union A334,m8,1)
		AF('B',union A334,m9,1)
		AF('C',union A334,m10,1)
		AF('I',union A334,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JIp} */
#pragma pack(push,2)
struct A335 { J m0; I m1; p m2; };
#pragma pack(pop)
int f_cmpA335(const struct A335 *x, const struct A335 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA335() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A335));
		AF('J',struct A335,m0,1)
		AF('I',struct A335,m1,1)
		AF('p',struct A335,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cISSdIC[5]plljc> */
#pragma pack(push,4)
union A336 { c m0; I m1; S m2; S m3; d m4; I m5; C m6[5]; p m7; l m8; l m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA336(const union A336 *x, const union A336 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA336() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A336));
		AF('c',union A336,m0,1)
		AF('I',union A336,m1,1)
		AF('S',union A336,m2,1)
		AF('S',union A336,m3,1)
		AF('d',union A336,m4,1)
		AF('I',union A336,m5,1)
		AF('C',union A336,m6,5)
		AF('p',union A336,m7,1)
		AF('l',union A336,m8,1)
		AF('l',union A336,m9,1)
		AF('j',union A336,m10,1)
		AF('c',union A336,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<cISSdIC[5]plljc>slll[4]pLI} */
#pragma pack(push,8)
struct A337 { union A336 m0; s m1; l m2; l m3; l m4[4]; p m5; L m6; I m7; };
#pragma pack(pop)
int f_cmpA337(const struct A337 *x, const struct A337 *y) { return f_cmpA336(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA337() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A337));
		AFa(struct A337,m0,1,A336)
		AF('s',struct A337,m1,1)
		AF('l',struct A337,m2,1)
		AF('l',struct A337,m3,1)
		AF('l',struct A337,m4,4)
		AF('p',struct A337,m5,1)
		AF('L',struct A337,m6,1)
		AF('I',struct A337,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLJCjlJ{<cISSdIC[5]plljc>slll[4]pLI}I> */
#pragma pack(push,4)
union A338 { L m0; L m1; J m2; C m3; j m4; l m5; J m6; struct A337 m7; I m8; };
#pragma pack(pop)
int f_cmpA338(const union A338 *x, const union A338 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA337(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA338() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A338));
		AF('L',union A338,m0,1)
		AF('L',union A338,m1,1)
		AF('J',union A338,m2,1)
		AF('C',union A338,m3,1)
		AF('j',union A338,m4,1)
		AF('l',union A338,m5,1)
		AF('J',union A338,m6,1)
		AFa(union A338,m7,1,A337)
		AF('I',union A338,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJ[6]jLdsscddsc> */
#pragma pack(push,2)
union A339 { f m0; J m1[6]; j m2; L m3; d m4; s m5; s m6; c m7; d m8; d m9; s m10; c m11; };
#pragma pack(pop)
int f_cmpA339(const union A339 *x, const union A339 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA339() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A339));
		AF('f',union A339,m0,1)
		AF('J',union A339,m1,6)
		AF('j',union A339,m2,1)
		AF('L',union A339,m3,1)
		AF('d',union A339,m4,1)
		AF('s',union A339,m5,1)
		AF('s',union A339,m6,1)
		AF('c',union A339,m7,1)
		AF('d',union A339,m8,1)
		AF('d',union A339,m9,1)
		AF('s',union A339,m10,1)
		AF('c',union A339,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i[13]} */
#pragma pack(push,8)
struct A340 { i m0[13]; };
#pragma pack(pop)
int f_cmpA340(const struct A340 *x, const struct A340 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12]; };
DCaggr* f_touchA340() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A340));
		AF('i',struct A340,m0,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {llBIp} */
#pragma pack(push,4)
struct A341 { l m0; l m1; B m2; I m3; p m4; };
#pragma pack(pop)
int f_cmpA341(const struct A341 *x, const struct A341 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA341() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A341));
		AF('l',struct A341,m0,1)
		AF('l',struct A341,m1,1)
		AF('B',struct A341,m2,1)
		AF('I',struct A341,m3,1)
		AF('p',struct A341,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jCslIIlIssIi} */
#pragma pack(push,2)
struct A342 { j m0; C m1; s m2; l m3; I m4; I m5; l m6; I m7; s m8; s m9; I m10; i m11; };
#pragma pack(pop)
int f_cmpA342(const struct A342 *x, const struct A342 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA342() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A342));
		AF('j',struct A342,m0,1)
		AF('C',struct A342,m1,1)
		AF('s',struct A342,m2,1)
		AF('l',struct A342,m3,1)
		AF('I',struct A342,m4,1)
		AF('I',struct A342,m5,1)
		AF('l',struct A342,m6,1)
		AF('I',struct A342,m7,1)
		AF('s',struct A342,m8,1)
		AF('s',struct A342,m9,1)
		AF('I',struct A342,m10,1)
		AF('i',struct A342,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfiipfpfCBlc> */
#pragma pack(push,2)
union A343 { s m0; f m1; i m2; i m3; p m4; f m5; p m6; f m7; C m8; B m9; l m10; c m11; };
#pragma pack(pop)
int f_cmpA343(const union A343 *x, const union A343 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA343() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A343));
		AF('s',union A343,m0,1)
		AF('f',union A343,m1,1)
		AF('i',union A343,m2,1)
		AF('i',union A343,m3,1)
		AF('p',union A343,m4,1)
		AF('f',union A343,m5,1)
		AF('p',union A343,m6,1)
		AF('f',union A343,m7,1)
		AF('C',union A343,m8,1)
		AF('B',union A343,m9,1)
		AF('l',union A343,m10,1)
		AF('c',union A343,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ipffi> */
#pragma pack(push,1)
union A344 { I m0; p m1; f m2; f m3; i m4; };
#pragma pack(pop)
int f_cmpA344(const union A344 *x, const union A344 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA344() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A344));
		AF('I',union A344,m0,1)
		AF('p',union A344,m1,1)
		AF('f',union A344,m2,1)
		AF('f',union A344,m3,1)
		AF('i',union A344,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bpp<Ipffi>LBLs[2]fsLd> */
#pragma pack(push,4)
union A345 { B m0; p m1; p m2; union A344 m3; L m4; B m5; L m6; s m7[2]; f m8; s m9; L m10; d m11; };
#pragma pack(pop)
int f_cmpA345(const union A345 *x, const union A345 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA344(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA345() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A345));
		AF('B',union A345,m0,1)
		AF('p',union A345,m1,1)
		AF('p',union A345,m2,1)
		AFa(union A345,m3,1,A344)
		AF('L',union A345,m4,1)
		AF('B',union A345,m5,1)
		AF('L',union A345,m6,1)
		AF('s',union A345,m7,2)
		AF('f',union A345,m8,1)
		AF('s',union A345,m9,1)
		AF('L',union A345,m10,1)
		AF('d',union A345,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLpIfdldSJdj> */
#pragma pack(push,2)
union A346 { S m0; L m1; p m2; I m3; f m4; d m5; l m6; d m7; S m8; J m9; d m10; j m11; };
#pragma pack(pop)
int f_cmpA346(const union A346 *x, const union A346 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA346() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A346));
		AF('S',union A346,m0,1)
		AF('L',union A346,m1,1)
		AF('p',union A346,m2,1)
		AF('I',union A346,m3,1)
		AF('f',union A346,m4,1)
		AF('d',union A346,m5,1)
		AF('l',union A346,m6,1)
		AF('d',union A346,m7,1)
		AF('S',union A346,m8,1)
		AF('J',union A346,m9,1)
		AF('d',union A346,m10,1)
		AF('j',union A346,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SISsCI} */
#pragma pack(push,2)
struct A347 { S m0; I m1; S m2; s m3; C m4; I m5; };
#pragma pack(pop)
int f_cmpA347(const struct A347 *x, const struct A347 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA347() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A347));
		AF('S',struct A347,m0,1)
		AF('I',struct A347,m1,1)
		AF('S',struct A347,m2,1)
		AF('s',struct A347,m3,1)
		AF('C',struct A347,m4,1)
		AF('I',struct A347,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LIJL> */
#pragma pack(push,4)
union A348 { L m0; I m1; J m2; L m3; };
#pragma pack(pop)
int f_cmpA348(const union A348 *x, const union A348 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA348() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A348));
		AF('L',union A348,m0,1)
		AF('I',union A348,m1,1)
		AF('J',union A348,m2,1)
		AF('L',union A348,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SplLfBs<LIJL>sBcl> */
#pragma pack(push,4)
union A349 { S m0; p m1; l m2; L m3; f m4; B m5; s m6; union A348 m7; s m8; B m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA349(const union A349 *x, const union A349 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA348(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA349() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A349));
		AF('S',union A349,m0,1)
		AF('p',union A349,m1,1)
		AF('l',union A349,m2,1)
		AF('L',union A349,m3,1)
		AF('f',union A349,m4,1)
		AF('B',union A349,m5,1)
		AF('s',union A349,m6,1)
		AFa(union A349,m7,1,A348)
		AF('s',union A349,m8,1)
		AF('B',union A349,m9,1)
		AF('c',union A349,m10,1)
		AF('l',union A349,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p[8]dc> */
#pragma pack(push,2)
union A350 { p m0[8]; d m1; c m2; };
#pragma pack(pop)
int f_cmpA350(const union A350 *x, const union A350 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA350() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A350));
		AF('p',union A350,m0,8)
		AF('d',union A350,m1,1)
		AF('c',union A350,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fcfjSijCSLd> */
#pragma pack(push,4)
union A351 { f m0; c m1; f m2; j m3; S m4; i m5; j m6; C m7; S m8; L m9; d m10; };
#pragma pack(pop)
int f_cmpA351(const union A351 *x, const union A351 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA351() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A351));
		AF('f',union A351,m0,1)
		AF('c',union A351,m1,1)
		AF('f',union A351,m2,1)
		AF('j',union A351,m3,1)
		AF('S',union A351,m4,1)
		AF('i',union A351,m5,1)
		AF('j',union A351,m6,1)
		AF('C',union A351,m7,1)
		AF('S',union A351,m8,1)
		AF('L',union A351,m9,1)
		AF('d',union A351,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ff<p[8]dc>IiiJ<fcfjSijCSLd>i> */
#pragma pack(push,2)
union A352 { f m0; f m1; union A350 m2; I m3; i m4; i m5; J m6; union A351 m7; i m8; };
#pragma pack(pop)
int f_cmpA352(const union A352 *x, const union A352 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA350(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA351(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA352() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A352));
		AF('f',union A352,m0,1)
		AF('f',union A352,m1,1)
		AFa(union A352,m2,1,A350)
		AF('I',union A352,m3,1)
		AF('i',union A352,m4,1)
		AF('i',union A352,m5,1)
		AF('J',union A352,m6,1)
		AFa(union A352,m7,1,A351)
		AF('i',union A352,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<LIJL>sBcl><ff<p[8]dc>IiiJ<fcfjSijCSLd>i>IdB} */
#pragma pack(push,4)
struct A353 { union A346 m0; B m1; C m2; p m3; s m4; struct A347 m5; union A349 m6; union A352 m7; I m8; d m9; B m10; };
#pragma pack(pop)
int f_cmpA353(const struct A353 *x, const struct A353 *y) { return f_cmpA346(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA347(&x->m5, &y->m5) && f_cmpA349(&x->m6, &y->m6) && f_cmpA352(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA353() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A353));
		AFa(struct A353,m0,1,A346)
		AF('B',struct A353,m1,1)
		AF('C',struct A353,m2,1)
		AF('p',struct A353,m3,1)
		AF('s',struct A353,m4,1)
		AFa(struct A353,m5,1,A347)
		AFa(struct A353,m6,1,A349)
		AFa(struct A353,m7,1,A352)
		AF('I',struct A353,m8,1)
		AF('d',struct A353,m9,1)
		AF('B',struct A353,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iIpp> */
#pragma pack(push,1)
union A354 { i m0; I m1; p m2; p m3; };
#pragma pack(pop)
int f_cmpA354(const union A354 *x, const union A354 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA354() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A354));
		AF('i',union A354,m0,1)
		AF('I',union A354,m1,1)
		AF('p',union A354,m2,1)
		AF('p',union A354,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sdc[12]fsdjfiCLJ} */
#pragma pack(push,1)
struct A355 { S m0; d m1; c m2[12]; f m3; s m4; d m5; j m6; f m7; i m8; C m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA355(const struct A355 *x, const struct A355 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA355() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A355));
		AF('S',struct A355,m0,1)
		AF('d',struct A355,m1,1)
		AF('c',struct A355,m2,12)
		AF('f',struct A355,m3,1)
		AF('s',struct A355,m4,1)
		AF('d',struct A355,m5,1)
		AF('j',struct A355,m6,1)
		AF('f',struct A355,m7,1)
		AF('i',struct A355,m8,1)
		AF('C',struct A355,m9,1)
		AF('L',struct A355,m10,1)
		AF('J',struct A355,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L{Sdc[12]fsdjfiCLJ}[6]LccBI> */
#pragma pack(push,4)
union A356 { L m0; struct A355 m1[6]; L m2; c m3; c m4; B m5; I m6; };
#pragma pack(pop)
int f_cmpA356(const union A356 *x, const union A356 *y) { return x->m0 == y->m0 && f_cmpA355(&x->m1[0], &y->m1[0]) && f_cmpA355(&x->m1[1], &y->m1[1]) && f_cmpA355(&x->m1[2], &y->m1[2]) && f_cmpA355(&x->m1[3], &y->m1[3]) && f_cmpA355(&x->m1[4], &y->m1[4]) && f_cmpA355(&x->m1[5], &y->m1[5]) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA356() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A356));
		AF('L',union A356,m0,1)
		AFa(union A356,m1,6,A355)
		AF('L',union A356,m2,1)
		AF('c',union A356,m3,1)
		AF('c',union A356,m4,1)
		AF('B',union A356,m5,1)
		AF('I',union A356,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pScCjls[5]d> */
#pragma pack(push,4)
union A357 { p m0; S m1; c m2; C m3; j m4; l m5; s m6[5]; d m7; };
#pragma pack(pop)
int f_cmpA357(const union A357 *x, const union A357 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m7 == y->m7; };
DCaggr* f_touchA357() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A357));
		AF('p',union A357,m0,1)
		AF('S',union A357,m1,1)
		AF('c',union A357,m2,1)
		AF('C',union A357,m3,1)
		AF('j',union A357,m4,1)
		AF('l',union A357,m5,1)
		AF('s',union A357,m6,5)
		AF('d',union A357,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <liBCSjBlBipL> */
#pragma pack(push,2)
union A358 { l m0; i m1; B m2; C m3; S m4; j m5; B m6; l m7; B m8; i m9; p m10; L m11; };
#pragma pack(pop)
int f_cmpA358(const union A358 *x, const union A358 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA358() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A358));
		AF('l',union A358,m0,1)
		AF('i',union A358,m1,1)
		AF('B',union A358,m2,1)
		AF('C',union A358,m3,1)
		AF('S',union A358,m4,1)
		AF('j',union A358,m5,1)
		AF('B',union A358,m6,1)
		AF('l',union A358,m7,1)
		AF('B',union A358,m8,1)
		AF('i',union A358,m9,1)
		AF('p',union A358,m10,1)
		AF('L',union A358,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L[1]<liBCSjBlBipL>Jf<l>s> */
#pragma pack(push,8)
union A359 { L m0[1]; union A358 m1; J m2; f m3; union A103 m4; s m5; };
#pragma pack(pop)
int f_cmpA359(const union A359 *x, const union A359 *y) { return x->m0[0] == y->m0[0] && f_cmpA358(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA103(&x->m4, &y->m4) && x->m5 == y->m5; };
DCaggr* f_touchA359() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A359));
		AF('L',union A359,m0,1)
		AFa(union A359,m1,1,A358)
		AF('J',union A359,m2,1)
		AF('f',union A359,m3,1)
		AFa(union A359,m4,1,A103)
		AF('s',union A359,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bl<L{Sdc[12]fsdjfiCLJ}[6]LccBI>pclB<pScCjls[5]d><L[1]<liBCSjBlBipL>Jf<l>s>fIB} */
#pragma pack(push,4)
struct A360 { B m0; l m1; union A356 m2; p m3; c m4; l m5; B m6; union A357 m7; union A359 m8; f m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA360(const struct A360 *x, const struct A360 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA356(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA357(&x->m7, &y->m7) && f_cmpA359(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA360() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A360));
		AF('B',struct A360,m0,1)
		AF('l',struct A360,m1,1)
		AFa(struct A360,m2,1,A356)
		AF('p',struct A360,m3,1)
		AF('c',struct A360,m4,1)
		AF('l',struct A360,m5,1)
		AF('B',struct A360,m6,1)
		AFa(struct A360,m7,1,A357)
		AFa(struct A360,m8,1,A359)
		AF('f',struct A360,m9,1)
		AF('I',struct A360,m10,1)
		AF('B',struct A360,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CIdCss[6]} */
#pragma pack(push,2)
struct A361 { C m0; I m1; d m2; C m3; s m4; s m5[6]; };
#pragma pack(pop)
int f_cmpA361(const struct A361 *x, const struct A361 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5]; };
DCaggr* f_touchA361() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A361));
		AF('C',struct A361,m0,1)
		AF('I',struct A361,m1,1)
		AF('d',struct A361,m2,1)
		AF('C',struct A361,m3,1)
		AF('s',struct A361,m4,1)
		AF('s',struct A361,m5,6)
		dcCloseAggr(a);
	}
	return a;
};
/* <pJcBJjB[6]BJCcB> */
#pragma pack(push,2)
union A362 { p m0; J m1; c m2; B m3; J m4; j m5; B m6[6]; B m7; J m8; C m9; c m10; B m11; };
#pragma pack(pop)
int f_cmpA362(const union A362 *x, const union A362 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA362() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A362));
		AF('p',union A362,m0,1)
		AF('J',union A362,m1,1)
		AF('c',union A362,m2,1)
		AF('B',union A362,m3,1)
		AF('J',union A362,m4,1)
		AF('j',union A362,m5,1)
		AF('B',union A362,m6,6)
		AF('B',union A362,m7,1)
		AF('J',union A362,m8,1)
		AF('C',union A362,m9,1)
		AF('c',union A362,m10,1)
		AF('B',union A362,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL> */
#pragma pack(push,1)
union A363 { struct A361 m0; S m1; j m2; c m3; i m4; i m5; p m6; B m7; I m8; union A362 m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA363(const union A363 *x, const union A363 *y) { return f_cmpA361(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA362(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA363() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A363));
		AFa(union A363,m0,1,A361)
		AF('S',union A363,m1,1)
		AF('j',union A363,m2,1)
		AF('c',union A363,m3,1)
		AF('i',union A363,m4,1)
		AF('i',union A363,m5,1)
		AF('p',union A363,m6,1)
		AF('B',union A363,m7,1)
		AF('I',union A363,m8,1)
		AFa(union A363,m9,1,A362)
		AF('c',union A363,m10,1)
		AF('L',union A363,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BfpdfB} */
#pragma pack(push,4)
struct A364 { B m0; f m1; p m2; d m3; f m4; B m5; };
#pragma pack(pop)
int f_cmpA364(const struct A364 *x, const struct A364 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA364() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A364));
		AF('B',struct A364,m0,1)
		AF('f',struct A364,m1,1)
		AF('p',struct A364,m2,1)
		AF('d',struct A364,m3,1)
		AF('f',struct A364,m4,1)
		AF('B',struct A364,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d{BfpdfB}ISf} */
#pragma pack(push,4)
struct A365 { d m0; struct A364 m1; I m2; S m3; f m4; };
#pragma pack(pop)
int f_cmpA365(const struct A365 *x, const struct A365 *y) { return x->m0 == y->m0 && f_cmpA364(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA365() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A365));
		AF('d',struct A365,m0,1)
		AFa(struct A365,m1,1,A364)
		AF('I',struct A365,m2,1)
		AF('S',struct A365,m3,1)
		AF('f',struct A365,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {spd<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>iflLid{d{BfpdfB}ISf}d} */
#pragma pack(push,2)
struct A366 { s m0; p m1; d m2; union A363 m3; i m4; f m5; l m6; L m7; i m8; d m9; struct A365 m10; d m11; };
#pragma pack(pop)
int f_cmpA366(const struct A366 *x, const struct A366 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA363(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA365(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA366() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A366));
		AF('s',struct A366,m0,1)
		AF('p',struct A366,m1,1)
		AF('d',struct A366,m2,1)
		AFa(struct A366,m3,1,A363)
		AF('i',struct A366,m4,1)
		AF('f',struct A366,m5,1)
		AF('l',struct A366,m6,1)
		AF('L',struct A366,m7,1)
		AF('i',struct A366,m8,1)
		AF('d',struct A366,m9,1)
		AFa(struct A366,m10,1,A365)
		AF('d',struct A366,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p[1]pfpLdJpls} */
#pragma pack(push,1)
struct A367 { p m0[1]; p m1; f m2; p m3; L m4; d m5; J m6; p m7; l m8; s m9; };
#pragma pack(pop)
int f_cmpA367(const struct A367 *x, const struct A367 *y) { return x->m0[0] == y->m0[0] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA367() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A367));
		AF('p',struct A367,m0,1)
		AF('p',struct A367,m1,1)
		AF('f',struct A367,m2,1)
		AF('p',struct A367,m3,1)
		AF('L',struct A367,m4,1)
		AF('d',struct A367,m5,1)
		AF('J',struct A367,m6,1)
		AF('p',struct A367,m7,1)
		AF('l',struct A367,m8,1)
		AF('s',struct A367,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ji[1]IsijJsclSf} */
#pragma pack(push,4)
struct A368 { J m0; i m1[1]; I m2; s m3; i m4; j m5; J m6; s m7; c m8; l m9; S m10; f m11; };
#pragma pack(pop)
int f_cmpA368(const struct A368 *x, const struct A368 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA368() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A368));
		AF('J',struct A368,m0,1)
		AF('i',struct A368,m1,1)
		AF('I',struct A368,m2,1)
		AF('s',struct A368,m3,1)
		AF('i',struct A368,m4,1)
		AF('j',struct A368,m5,1)
		AF('J',struct A368,m6,1)
		AF('s',struct A368,m7,1)
		AF('c',struct A368,m8,1)
		AF('l',struct A368,m9,1)
		AF('S',struct A368,m10,1)
		AF('f',struct A368,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldiiJBCIB{Ji[1]IsijJsclSf}Ld> */
#pragma pack(push,2)
union A369 { l m0; d m1; i m2; i m3; J m4; B m5; C m6; I m7; B m8; struct A368 m9; L m10; d m11; };
#pragma pack(pop)
int f_cmpA369(const union A369 *x, const union A369 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA368(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA369() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A369));
		AF('l',union A369,m0,1)
		AF('d',union A369,m1,1)
		AF('i',union A369,m2,1)
		AF('i',union A369,m3,1)
		AF('J',union A369,m4,1)
		AF('B',union A369,m5,1)
		AF('C',union A369,m6,1)
		AF('I',union A369,m7,1)
		AF('B',union A369,m8,1)
		AFa(union A369,m9,1,A368)
		AF('L',union A369,m10,1)
		AF('d',union A369,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLfllIiIj} */
#pragma pack(push,4)
struct A370 { J m0; L m1; f m2; l m3; l m4; I m5; i m6; I m7; j m8; };
#pragma pack(pop)
int f_cmpA370(const struct A370 *x, const struct A370 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA370() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A370));
		AF('J',struct A370,m0,1)
		AF('L',struct A370,m1,1)
		AF('f',struct A370,m2,1)
		AF('l',struct A370,m3,1)
		AF('l',struct A370,m4,1)
		AF('I',struct A370,m5,1)
		AF('i',struct A370,m6,1)
		AF('I',struct A370,m7,1)
		AF('j',struct A370,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdLfs[6]C> */
#pragma pack(push,4)
union A371 { s m0; d m1; L m2; f m3; s m4[6]; C m5; };
#pragma pack(pop)
int f_cmpA371(const union A371 *x, const union A371 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m5 == y->m5; };
DCaggr* f_touchA371() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A371));
		AF('s',union A371,m0,1)
		AF('d',union A371,m1,1)
		AF('L',union A371,m2,1)
		AF('f',union A371,m3,1)
		AF('s',union A371,m4,6)
		AF('C',union A371,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {plLLC[1]J} */
#pragma pack(push,8)
struct A372 { p m0; l m1; L m2; L m3; C m4[1]; J m5; };
#pragma pack(pop)
int f_cmpA372(const struct A372 *x, const struct A372 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m5 == y->m5; };
DCaggr* f_touchA372() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A372));
		AF('p',struct A372,m0,1)
		AF('l',struct A372,m1,1)
		AF('L',struct A372,m2,1)
		AF('L',struct A372,m3,1)
		AF('C',struct A372,m4,1)
		AF('J',struct A372,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BCLf} */
#pragma pack(push,4)
struct A373 { B m0; C m1; L m2; f m3; };
#pragma pack(pop)
int f_cmpA373(const struct A373 *x, const struct A373 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA373() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A373));
		AF('B',struct A373,m0,1)
		AF('C',struct A373,m1,1)
		AF('L',struct A373,m2,1)
		AF('f',struct A373,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCsplIBIJCfC> */
#pragma pack(push,4)
union A374 { J m0; C m1; s m2; p m3; l m4; I m5; B m6; I m7; J m8; C m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA374(const union A374 *x, const union A374 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA374() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A374));
		AF('J',union A374,m0,1)
		AF('C',union A374,m1,1)
		AF('s',union A374,m2,1)
		AF('p',union A374,m3,1)
		AF('l',union A374,m4,1)
		AF('I',union A374,m5,1)
		AF('B',union A374,m6,1)
		AF('I',union A374,m7,1)
		AF('J',union A374,m8,1)
		AF('C',union A374,m9,1)
		AF('f',union A374,m10,1)
		AF('C',union A374,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{p[1]pfpLdJpls}<ldiiJBCIB{Ji[1]IsijJsclSf}Ld>pl{JLfllIiIj}S<sdLfs[6]C>S{plLLC[1]J}{BCLf}<JCsplIBIJCfC>l> */
#pragma pack(push,8)
union A375 { struct A367 m0; union A369 m1; p m2; l m3; struct A370 m4; S m5; union A371 m6; S m7; struct A372 m8; struct A373 m9; union A374 m10; l m11; };
#pragma pack(pop)
int f_cmpA375(const union A375 *x, const union A375 *y) { return f_cmpA367(&x->m0, &y->m0) && f_cmpA369(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA370(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA371(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA372(&x->m8, &y->m8) && f_cmpA373(&x->m9, &y->m9) && f_cmpA374(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA375() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A375));
		AFa(union A375,m0,1,A367)
		AFa(union A375,m1,1,A369)
		AF('p',union A375,m2,1)
		AF('l',union A375,m3,1)
		AFa(union A375,m4,1,A370)
		AF('S',union A375,m5,1)
		AFa(union A375,m6,1,A371)
		AF('S',union A375,m7,1)
		AFa(union A375,m8,1,A372)
		AFa(union A375,m9,1,A373)
		AFa(union A375,m10,1,A374)
		AF('l',union A375,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pLSfLdCSddcd} */
#pragma pack(push,2)
struct A376 { p m0; L m1; S m2; f m3; L m4; d m5; C m6; S m7; d m8; d m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA376(const struct A376 *x, const struct A376 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA376() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A376));
		AF('p',struct A376,m0,1)
		AF('L',struct A376,m1,1)
		AF('S',struct A376,m2,1)
		AF('f',struct A376,m3,1)
		AF('L',struct A376,m4,1)
		AF('d',struct A376,m5,1)
		AF('C',struct A376,m6,1)
		AF('S',struct A376,m7,1)
		AF('d',struct A376,m8,1)
		AF('d',struct A376,m9,1)
		AF('c',struct A376,m10,1)
		AF('d',struct A376,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdLBjdLfslId> */
#pragma pack(push,8)
union A377 { p m0; d m1; L m2; B m3; j m4; d m5; L m6; f m7; s m8; l m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA377(const union A377 *x, const union A377 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA377() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A377));
		AF('p',union A377,m0,1)
		AF('d',union A377,m1,1)
		AF('L',union A377,m2,1)
		AF('B',union A377,m3,1)
		AF('j',union A377,m4,1)
		AF('d',union A377,m5,1)
		AF('L',union A377,m6,1)
		AF('f',union A377,m7,1)
		AF('s',union A377,m8,1)
		AF('l',union A377,m9,1)
		AF('I',union A377,m10,1)
		AF('d',union A377,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<pdLBjdLfslId>IspSsJljciL> */
#pragma pack(push,1)
union A378 { union A377 m0; I m1; s m2; p m3; S m4; s m5; J m6; l m7; j m8; c m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA378(const union A378 *x, const union A378 *y) { return f_cmpA377(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA378() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A378));
		AFa(union A378,m0,1,A377)
		AF('I',union A378,m1,1)
		AF('s',union A378,m2,1)
		AF('p',union A378,m3,1)
		AF('S',union A378,m4,1)
		AF('s',union A378,m5,1)
		AF('J',union A378,m6,1)
		AF('l',union A378,m7,1)
		AF('j',union A378,m8,1)
		AF('c',union A378,m9,1)
		AF('i',union A378,m10,1)
		AF('L',union A378,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JdcLSl} */
#pragma pack(push,4)
struct A379 { J m0; d m1; c m2; L m3; S m4; l m5; };
#pragma pack(pop)
int f_cmpA379(const struct A379 *x, const struct A379 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA379() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A379));
		AF('J',struct A379,m0,1)
		AF('d',struct A379,m1,1)
		AF('c',struct A379,m2,1)
		AF('L',struct A379,m3,1)
		AF('S',struct A379,m4,1)
		AF('l',struct A379,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLI[14]ddjLSfjs> */
#pragma pack(push,4)
union A380 { L m0; L m1; I m2[14]; d m3; d m4; j m5; L m6; S m7; f m8; j m9; s m10; };
#pragma pack(pop)
int f_cmpA380(const union A380 *x, const union A380 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA380() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A380));
		AF('L',union A380,m0,1)
		AF('L',union A380,m1,1)
		AF('I',union A380,m2,14)
		AF('d',union A380,m3,1)
		AF('d',union A380,m4,1)
		AF('j',union A380,m5,1)
		AF('L',union A380,m6,1)
		AF('S',union A380,m7,1)
		AF('f',union A380,m8,1)
		AF('j',union A380,m9,1)
		AF('s',union A380,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SijsL<LLI[14]ddjLSfjs>icpC[10]dL> */
#pragma pack(push,4)
union A381 { S m0; i m1; j m2; s m3; L m4; union A380 m5; i m6; c m7; p m8; C m9[10]; d m10; L m11; };
#pragma pack(pop)
int f_cmpA381(const union A381 *x, const union A381 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA380(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA381() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A381));
		AF('S',union A381,m0,1)
		AF('i',union A381,m1,1)
		AF('j',union A381,m2,1)
		AF('s',union A381,m3,1)
		AF('L',union A381,m4,1)
		AFa(union A381,m5,1,A380)
		AF('i',union A381,m6,1)
		AF('c',union A381,m7,1)
		AF('p',union A381,m8,1)
		AF('C',union A381,m9,10)
		AF('d',union A381,m10,1)
		AF('L',union A381,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jj> */
#pragma pack(push,4)
union A382 { j m0; j m1; };
#pragma pack(pop)
int f_cmpA382(const union A382 *x, const union A382 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA382() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A382));
		AF('j',union A382,m0,1)
		AF('j',union A382,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dcpl} */
#pragma pack(push,4)
struct A383 { d m0; c m1; p m2; l m3; };
#pragma pack(pop)
int f_cmpA383(const struct A383 *x, const struct A383 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA383() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A383));
		AF('d',struct A383,m0,1)
		AF('c',struct A383,m1,1)
		AF('p',struct A383,m2,1)
		AF('l',struct A383,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i[9]JLCf> */
#pragma pack(push,1)
union A384 { i m0[9]; J m1; L m2; C m3; f m4; };
#pragma pack(pop)
int f_cmpA384(const union A384 *x, const union A384 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA384() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A384));
		AF('i',union A384,m0,9)
		AF('J',union A384,m1,1)
		AF('L',union A384,m2,1)
		AF('C',union A384,m3,1)
		AF('f',union A384,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cJSjCBIIj} */
#pragma pack(push,4)
struct A385 { c m0; J m1; S m2; j m3; C m4; B m5; I m6; I m7; j m8; };
#pragma pack(pop)
int f_cmpA385(const struct A385 *x, const struct A385 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA385() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A385));
		AF('c',struct A385,m0,1)
		AF('J',struct A385,m1,1)
		AF('S',struct A385,m2,1)
		AF('j',struct A385,m3,1)
		AF('C',struct A385,m4,1)
		AF('B',struct A385,m5,1)
		AF('I',struct A385,m6,1)
		AF('I',struct A385,m7,1)
		AF('j',struct A385,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ilcjC{cJSjCBIIj}[14]lfBCdS> */
#pragma pack(push,4)
union A386 { i m0; l m1; c m2; j m3; C m4; struct A385 m5[14]; l m6; f m7; B m8; C m9; d m10; S m11; };
#pragma pack(pop)
int f_cmpA386(const union A386 *x, const union A386 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA385(&x->m5[0], &y->m5[0]) && f_cmpA385(&x->m5[1], &y->m5[1]) && f_cmpA385(&x->m5[2], &y->m5[2]) && f_cmpA385(&x->m5[3], &y->m5[3]) && f_cmpA385(&x->m5[4], &y->m5[4]) && f_cmpA385(&x->m5[5], &y->m5[5]) && f_cmpA385(&x->m5[6], &y->m5[6]) && f_cmpA385(&x->m5[7], &y->m5[7]) && f_cmpA385(&x->m5[8], &y->m5[8]) && f_cmpA385(&x->m5[9], &y->m5[9]) && f_cmpA385(&x->m5[10], &y->m5[10]) && f_cmpA385(&x->m5[11], &y->m5[11]) && f_cmpA385(&x->m5[12], &y->m5[12]) && f_cmpA385(&x->m5[13], &y->m5[13]) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA386() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A386));
		AF('i',union A386,m0,1)
		AF('l',union A386,m1,1)
		AF('c',union A386,m2,1)
		AF('j',union A386,m3,1)
		AF('C',union A386,m4,1)
		AFa(union A386,m5,14,A385)
		AF('l',union A386,m6,1)
		AF('f',union A386,m7,1)
		AF('B',union A386,m8,1)
		AF('C',union A386,m9,1)
		AF('d',union A386,m10,1)
		AF('S',union A386,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lJIpi[4]ldjJl> */
#pragma pack(push,4)
union A387 { l m0; J m1; I m2; p m3; i m4[4]; l m5; d m6; j m7; J m8; l m9; };
#pragma pack(pop)
int f_cmpA387(const union A387 *x, const union A387 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA387() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A387));
		AF('l',union A387,m0,1)
		AF('J',union A387,m1,1)
		AF('I',union A387,m2,1)
		AF('p',union A387,m3,1)
		AF('i',union A387,m4,4)
		AF('l',union A387,m5,1)
		AF('d',union A387,m6,1)
		AF('j',union A387,m7,1)
		AF('J',union A387,m8,1)
		AF('l',union A387,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpC} */
#pragma pack(push,4)
struct A388 { j m0; p m1; C m2; };
#pragma pack(pop)
int f_cmpA388(const struct A388 *x, const struct A388 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA388() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A388));
		AF('j',struct A388,m0,1)
		AF('p',struct A388,m1,1)
		AF('C',struct A388,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cl> */
#pragma pack(push,1)
union A389 { C m0; l m1; };
#pragma pack(pop)
int f_cmpA389(const union A389 *x, const union A389 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA389() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A389));
		AF('C',union A389,m0,1)
		AF('l',union A389,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdJ> */
#pragma pack(push,4)
union A390 { p m0; d m1; J m2; };
#pragma pack(pop)
int f_cmpA390(const union A390 *x, const union A390 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA390() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A390));
		AF('p',union A390,m0,1)
		AF('d',union A390,m1,1)
		AF('J',union A390,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpiisIfilBfS} */
#pragma pack(push,8)
struct A391 { j m0; p m1; i m2; i m3; s m4; I m5; f m6; i m7; l m8; B m9; f m10; S m11; };
#pragma pack(pop)
int f_cmpA391(const struct A391 *x, const struct A391 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA391() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A391));
		AF('j',struct A391,m0,1)
		AF('p',struct A391,m1,1)
		AF('i',struct A391,m2,1)
		AF('i',struct A391,m3,1)
		AF('s',struct A391,m4,1)
		AF('I',struct A391,m5,1)
		AF('f',struct A391,m6,1)
		AF('i',struct A391,m7,1)
		AF('l',struct A391,m8,1)
		AF('B',struct A391,m9,1)
		AF('f',struct A391,m10,1)
		AF('S',struct A391,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JC} */
#pragma pack(push,2)
struct A392 { J m0; C m1; };
#pragma pack(pop)
int f_cmpA392(const struct A392 *x, const struct A392 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA392() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A392));
		AF('J',struct A392,m0,1)
		AF('C',struct A392,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <di[13]> */
#pragma pack(push,4)
union A393 { d m0; i m1[13]; };
#pragma pack(pop)
int f_cmpA393(const union A393 *x, const union A393 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12]; };
DCaggr* f_touchA393() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A393));
		AF('d',union A393,m0,1)
		AF('i',union A393,m1,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {BLS} */
#pragma pack(push,1)
struct A394 { B m0; L m1; S m2; };
#pragma pack(pop)
int f_cmpA394(const struct A394 *x, const struct A394 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA394() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A394));
		AF('B',struct A394,m0,1)
		AF('L',struct A394,m1,1)
		AF('S',struct A394,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcIdcdjJCsJC} */
#pragma pack(push,8)
struct A395 { I m0; c m1; I m2; d m3; c m4; d m5; j m6; J m7; C m8; s m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA395(const struct A395 *x, const struct A395 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA395() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A395));
		AF('I',struct A395,m0,1)
		AF('c',struct A395,m1,1)
		AF('I',struct A395,m2,1)
		AF('d',struct A395,m3,1)
		AF('c',struct A395,m4,1)
		AF('d',struct A395,m5,1)
		AF('j',struct A395,m6,1)
		AF('J',struct A395,m7,1)
		AF('C',struct A395,m8,1)
		AF('s',struct A395,m9,1)
		AF('J',struct A395,m10,1)
		AF('C',struct A395,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCcs[7]dBL[6]iiiJC} */
#pragma pack(push,2)
struct A396 { L m0; C m1; c m2; s m3[7]; d m4; B m5; L m6[6]; i m7; i m8; i m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA396(const struct A396 *x, const struct A396 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA396() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A396));
		AF('L',struct A396,m0,1)
		AF('C',struct A396,m1,1)
		AF('c',struct A396,m2,1)
		AF('s',struct A396,m3,7)
		AF('d',struct A396,m4,1)
		AF('B',struct A396,m5,1)
		AF('L',struct A396,m6,6)
		AF('i',struct A396,m7,1)
		AF('i',struct A396,m8,1)
		AF('i',struct A396,m9,1)
		AF('J',struct A396,m10,1)
		AF('C',struct A396,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[3]dC[9]f} */
#pragma pack(push,4)
struct A397 { d m0[3]; d m1; C m2[9]; f m3; };
#pragma pack(pop)
int f_cmpA397(const struct A397 *x, const struct A397 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m3 == y->m3; };
DCaggr* f_touchA397() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A397));
		AF('d',struct A397,m0,3)
		AF('d',struct A397,m1,1)
		AF('C',struct A397,m2,9)
		AF('f',struct A397,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CISl[16]lfJjSlIJ> */
#pragma pack(push,8)
union A398 { C m0; I m1; S m2; l m3[16]; l m4; f m5; J m6; j m7; S m8; l m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA398(const union A398 *x, const union A398 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m3[15] == y->m3[15] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA398() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A398));
		AF('C',union A398,m0,1)
		AF('I',union A398,m1,1)
		AF('S',union A398,m2,1)
		AF('l',union A398,m3,16)
		AF('l',union A398,m4,1)
		AF('f',union A398,m5,1)
		AF('J',union A398,m6,1)
		AF('j',union A398,m7,1)
		AF('S',union A398,m8,1)
		AF('l',union A398,m9,1)
		AF('I',union A398,m10,1)
		AF('J',union A398,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ll[1]pLSsJs} */
#pragma pack(push,4)
struct A399 { L m0; l m1[1]; p m2; L m3; S m4; s m5; J m6; s m7; };
#pragma pack(pop)
int f_cmpA399(const struct A399 *x, const struct A399 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA399() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A399));
		AF('L',struct A399,m0,1)
		AF('l',struct A399,m1,1)
		AF('p',struct A399,m2,1)
		AF('L',struct A399,m3,1)
		AF('S',struct A399,m4,1)
		AF('s',struct A399,m5,1)
		AF('J',struct A399,m6,1)
		AF('s',struct A399,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ILIcpCj> */
#pragma pack(push,4)
union A400 { I m0; L m1; I m2; c m3; p m4; C m5; j m6; };
#pragma pack(pop)
int f_cmpA400(const union A400 *x, const union A400 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA400() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A400));
		AF('I',union A400,m0,1)
		AF('L',union A400,m1,1)
		AF('I',union A400,m2,1)
		AF('c',union A400,m3,1)
		AF('p',union A400,m4,1)
		AF('C',union A400,m5,1)
		AF('j',union A400,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sBldCiBisi> */
#pragma pack(push,4)
union A401 { s m0; B m1; l m2; d m3; C m4; i m5; B m6; i m7; s m8; i m9; };
#pragma pack(pop)
int f_cmpA401(const union A401 *x, const union A401 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA401() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A401));
		AF('s',union A401,m0,1)
		AF('B',union A401,m1,1)
		AF('l',union A401,m2,1)
		AF('d',union A401,m3,1)
		AF('C',union A401,m4,1)
		AF('i',union A401,m5,1)
		AF('B',union A401,m6,1)
		AF('i',union A401,m7,1)
		AF('s',union A401,m8,1)
		AF('i',union A401,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcBJSJ> */
#pragma pack(push,1)
union A402 { B m0; c m1; B m2; J m3; S m4; J m5; };
#pragma pack(pop)
int f_cmpA402(const union A402 *x, const union A402 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA402() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A402));
		AF('B',union A402,m0,1)
		AF('c',union A402,m1,1)
		AF('B',union A402,m2,1)
		AF('J',union A402,m3,1)
		AF('S',union A402,m4,1)
		AF('J',union A402,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JpBdpCiLCflJ} */
#pragma pack(push,4)
struct A403 { J m0; p m1; B m2; d m3; p m4; C m5; i m6; L m7; C m8; f m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA403(const struct A403 *x, const struct A403 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA403() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A403));
		AF('J',struct A403,m0,1)
		AF('p',struct A403,m1,1)
		AF('B',struct A403,m2,1)
		AF('d',struct A403,m3,1)
		AF('p',struct A403,m4,1)
		AF('C',struct A403,m5,1)
		AF('i',struct A403,m6,1)
		AF('L',struct A403,m7,1)
		AF('C',struct A403,m8,1)
		AF('f',struct A403,m9,1)
		AF('l',struct A403,m10,1)
		AF('J',struct A403,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pS[6]LC[5]IjSfiBIp> */
#pragma pack(push,2)
union A404 { p m0; S m1[6]; L m2; C m3[5]; I m4; j m5; S m6; f m7; i m8; B m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA404(const union A404 *x, const union A404 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA404() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A404));
		AF('p',union A404,m0,1)
		AF('S',union A404,m1,6)
		AF('L',union A404,m2,1)
		AF('C',union A404,m3,5)
		AF('I',union A404,m4,1)
		AF('j',union A404,m5,1)
		AF('S',union A404,m6,1)
		AF('f',union A404,m7,1)
		AF('i',union A404,m8,1)
		AF('B',union A404,m9,1)
		AF('I',union A404,m10,1)
		AF('p',union A404,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs> */
#pragma pack(push,4)
union A405 { J m0; struct A403 m1; l m2; l m3; union A404 m4; j m5; J m6; s m7; };
#pragma pack(pop)
int f_cmpA405(const union A405 *x, const union A405 *y) { return x->m0 == y->m0 && f_cmpA403(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA404(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA405() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A405));
		AF('J',union A405,m0,1)
		AFa(union A405,m1,1,A403)
		AF('l',union A405,m2,1)
		AF('l',union A405,m3,1)
		AFa(union A405,m4,1,A404)
		AF('j',union A405,m5,1)
		AF('J',union A405,m6,1)
		AF('s',union A405,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JjIfJljIIIjL} */
#pragma pack(push,4)
struct A406 { J m0; j m1; I m2; f m3; J m4; l m5; j m6; I m7; I m8; I m9; j m10; L m11; };
#pragma pack(pop)
int f_cmpA406(const struct A406 *x, const struct A406 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA406() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A406));
		AF('J',struct A406,m0,1)
		AF('j',struct A406,m1,1)
		AF('I',struct A406,m2,1)
		AF('f',struct A406,m3,1)
		AF('J',struct A406,m4,1)
		AF('l',struct A406,m5,1)
		AF('j',struct A406,m6,1)
		AF('I',struct A406,m7,1)
		AF('I',struct A406,m8,1)
		AF('I',struct A406,m9,1)
		AF('j',struct A406,m10,1)
		AF('L',struct A406,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSBiIjIdI> */
#pragma pack(push,4)
union A407 { l m0; S m1; B m2; i m3; I m4; j m5; I m6; d m7; I m8; };
#pragma pack(pop)
int f_cmpA407(const union A407 *x, const union A407 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA407() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A407));
		AF('l',union A407,m0,1)
		AF('S',union A407,m1,1)
		AF('B',union A407,m2,1)
		AF('i',union A407,m3,1)
		AF('I',union A407,m4,1)
		AF('j',union A407,m5,1)
		AF('I',union A407,m6,1)
		AF('d',union A407,m7,1)
		AF('I',union A407,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I> */
#pragma pack(push,4)
union A408 { I m0; };
#pragma pack(pop)
int f_cmpA408(const union A408 *x, const union A408 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA408() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A408));
		AF('I',union A408,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <siBB[5]i<lSBiIjIdI>scl<I>sd> */
#pragma pack(push,4)
union A409 { s m0; i m1; B m2; B m3[5]; i m4; union A407 m5; s m6; c m7; l m8; union A408 m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA409(const union A409 *x, const union A409 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m4 == y->m4 && f_cmpA407(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA408(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA409() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A409));
		AF('s',union A409,m0,1)
		AF('i',union A409,m1,1)
		AF('B',union A409,m2,1)
		AF('B',union A409,m3,5)
		AF('i',union A409,m4,1)
		AFa(union A409,m5,1,A407)
		AF('s',union A409,m6,1)
		AF('c',union A409,m7,1)
		AF('l',union A409,m8,1)
		AFa(union A409,m9,1,A408)
		AF('s',union A409,m10,1)
		AF('d',union A409,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjiiBLdiJSd[9]J} */
#pragma pack(push,2)
struct A410 { B m0; j m1; i m2; i m3; B m4; L m5; d m6; i m7; J m8; S m9; d m10[9]; J m11; };
#pragma pack(pop)
int f_cmpA410(const struct A410 *x, const struct A410 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m11 == y->m11; };
DCaggr* f_touchA410() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A410));
		AF('B',struct A410,m0,1)
		AF('j',struct A410,m1,1)
		AF('i',struct A410,m2,1)
		AF('i',struct A410,m3,1)
		AF('B',struct A410,m4,1)
		AF('L',struct A410,m5,1)
		AF('d',struct A410,m6,1)
		AF('i',struct A410,m7,1)
		AF('J',struct A410,m8,1)
		AF('S',struct A410,m9,1)
		AF('d',struct A410,m10,9)
		AF('J',struct A410,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CBCIIpdfJiSS> */
#pragma pack(push,2)
union A411 { C m0; B m1; C m2; I m3; I m4; p m5; d m6; f m7; J m8; i m9; S m10; S m11; };
#pragma pack(pop)
int f_cmpA411(const union A411 *x, const union A411 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA411() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A411));
		AF('C',union A411,m0,1)
		AF('B',union A411,m1,1)
		AF('C',union A411,m2,1)
		AF('I',union A411,m3,1)
		AF('I',union A411,m4,1)
		AF('p',union A411,m5,1)
		AF('d',union A411,m6,1)
		AF('f',union A411,m7,1)
		AF('J',union A411,m8,1)
		AF('i',union A411,m9,1)
		AF('S',union A411,m10,1)
		AF('S',union A411,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI> */
#pragma pack(push,1)
union A412 { d m0; p m1; f m2; B m3; J m4; struct A410 m5; s m6; union A411 m7; s m8; l m9; I m10; };
#pragma pack(pop)
int f_cmpA412(const union A412 *x, const union A412 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA410(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA411(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA412() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A412));
		AF('d',union A412,m0,1)
		AF('p',union A412,m1,1)
		AF('f',union A412,m2,1)
		AF('B',union A412,m3,1)
		AF('J',union A412,m4,1)
		AFa(union A412,m5,1,A410)
		AF('s',union A412,m6,1)
		AFa(union A412,m7,1,A411)
		AF('s',union A412,m8,1)
		AF('l',union A412,m9,1)
		AF('I',union A412,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJJpJlCI> */
#pragma pack(push,8)
union A413 { S m0; J m1; J m2; p m3; J m4; l m5; C m6; I m7; };
#pragma pack(pop)
int f_cmpA413(const union A413 *x, const union A413 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA413() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A413));
		AF('S',union A413,m0,1)
		AF('J',union A413,m1,1)
		AF('J',union A413,m2,1)
		AF('p',union A413,m3,1)
		AF('J',union A413,m4,1)
		AF('l',union A413,m5,1)
		AF('C',union A413,m6,1)
		AF('I',union A413,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LScCJJLdsBJj} */
#pragma pack(push,8)
struct A414 { L m0; S m1; c m2; C m3; J m4; J m5; L m6; d m7; s m8; B m9; J m10; j m11; };
#pragma pack(pop)
int f_cmpA414(const struct A414 *x, const struct A414 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA414() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A414));
		AF('L',struct A414,m0,1)
		AF('S',struct A414,m1,1)
		AF('c',struct A414,m2,1)
		AF('C',struct A414,m3,1)
		AF('J',struct A414,m4,1)
		AF('J',struct A414,m5,1)
		AF('L',struct A414,m6,1)
		AF('d',struct A414,m7,1)
		AF('s',struct A414,m8,1)
		AF('B',struct A414,m9,1)
		AF('J',struct A414,m10,1)
		AF('j',struct A414,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCLjLLfilpsS> */
#pragma pack(push,1)
union A415 { d m0; C m1; L m2; j m3; L m4; L m5; f m6; i m7; l m8; p m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA415(const union A415 *x, const union A415 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA415() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A415));
		AF('d',union A415,m0,1)
		AF('C',union A415,m1,1)
		AF('L',union A415,m2,1)
		AF('j',union A415,m3,1)
		AF('L',union A415,m4,1)
		AF('L',union A415,m5,1)
		AF('f',union A415,m6,1)
		AF('i',union A415,m7,1)
		AF('l',union A415,m8,1)
		AF('p',union A415,m9,1)
		AF('s',union A415,m10,1)
		AF('S',union A415,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <is<dCLjLLfilpsS>SCSfSLlBl> */
#pragma pack(push,4)
union A416 { i m0; s m1; union A415 m2; S m3; C m4; S m5; f m6; S m7; L m8; l m9; B m10; l m11; };
#pragma pack(pop)
int f_cmpA416(const union A416 *x, const union A416 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA415(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA416() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A416));
		AF('i',union A416,m0,1)
		AF('s',union A416,m1,1)
		AFa(union A416,m2,1,A415)
		AF('S',union A416,m3,1)
		AF('C',union A416,m4,1)
		AF('S',union A416,m5,1)
		AF('f',union A416,m6,1)
		AF('S',union A416,m7,1)
		AF('L',union A416,m8,1)
		AF('l',union A416,m9,1)
		AF('B',union A416,m10,1)
		AF('l',union A416,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BjpJ[11]> */
#pragma pack(push,4)
union A417 { B m0; j m1; p m2; J m3[11]; };
#pragma pack(pop)
int f_cmpA417(const union A417 *x, const union A417 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10]; };
DCaggr* f_touchA417() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A417));
		AF('B',union A417,m0,1)
		AF('j',union A417,m1,1)
		AF('p',union A417,m2,1)
		AF('J',union A417,m3,11)
		dcCloseAggr(a);
	}
	return a;
};
/* {psCpSjcI} */
#pragma pack(push,4)
struct A418 { p m0; s m1; C m2; p m3; S m4; j m5; c m6; I m7; };
#pragma pack(pop)
int f_cmpA418(const struct A418 *x, const struct A418 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA418() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A418));
		AF('p',struct A418,m0,1)
		AF('s',struct A418,m1,1)
		AF('C',struct A418,m2,1)
		AF('p',struct A418,m3,1)
		AF('S',struct A418,m4,1)
		AF('j',struct A418,m5,1)
		AF('c',struct A418,m6,1)
		AF('I',struct A418,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cslc[8]SBifsjIJ} */
#pragma pack(push,2)
struct A419 { C m0; s m1; l m2; c m3[8]; S m4; B m5; i m6; f m7; s m8; j m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA419(const struct A419 *x, const struct A419 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA419() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A419));
		AF('C',struct A419,m0,1)
		AF('s',struct A419,m1,1)
		AF('l',struct A419,m2,1)
		AF('c',struct A419,m3,8)
		AF('S',struct A419,m4,1)
		AF('B',struct A419,m5,1)
		AF('i',struct A419,m6,1)
		AF('f',struct A419,m7,1)
		AF('s',struct A419,m8,1)
		AF('j',struct A419,m9,1)
		AF('I',struct A419,m10,1)
		AF('J',struct A419,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pILSIplCLLcL> */
#pragma pack(push,4)
union A420 { p m0; I m1; L m2; S m3; I m4; p m5; l m6; C m7; L m8; L m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA420(const union A420 *x, const union A420 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA420() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A420));
		AF('p',union A420,m0,1)
		AF('I',union A420,m1,1)
		AF('L',union A420,m2,1)
		AF('S',union A420,m3,1)
		AF('I',union A420,m4,1)
		AF('p',union A420,m5,1)
		AF('l',union A420,m6,1)
		AF('C',union A420,m7,1)
		AF('L',union A420,m8,1)
		AF('L',union A420,m9,1)
		AF('c',union A420,m10,1)
		AF('L',union A420,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBldliiL<pILSIplCLLcL>jii> */
#pragma pack(push,8)
union A421 { i m0; B m1; l m2; d m3; l m4; i m5; i m6; L m7; union A420 m8; j m9; i m10; i m11; };
#pragma pack(pop)
int f_cmpA421(const union A421 *x, const union A421 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA420(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA421() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A421));
		AF('i',union A421,m0,1)
		AF('B',union A421,m1,1)
		AF('l',union A421,m2,1)
		AF('d',union A421,m3,1)
		AF('l',union A421,m4,1)
		AF('i',union A421,m5,1)
		AF('i',union A421,m6,1)
		AF('L',union A421,m7,1)
		AFa(union A421,m8,1,A420)
		AF('j',union A421,m9,1)
		AF('i',union A421,m10,1)
		AF('i',union A421,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ> */
#pragma pack(push,2)
union A422 { B m0; s m1; f m2; J m3; union A421 m4; I m5; c m6; I m7; B m8; d m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA422(const union A422 *x, const union A422 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA421(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA422() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A422));
		AF('B',union A422,m0,1)
		AF('s',union A422,m1,1)
		AF('f',union A422,m2,1)
		AF('J',union A422,m3,1)
		AFa(union A422,m4,1,A421)
		AF('I',union A422,m5,1)
		AF('c',union A422,m6,1)
		AF('I',union A422,m7,1)
		AF('B',union A422,m8,1)
		AF('d',union A422,m9,1)
		AF('B',union A422,m10,1)
		AF('J',union A422,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IC[15]pSCCCJjdId> */
#pragma pack(push,2)
union A423 { I m0; C m1[15]; p m2; S m3; C m4; C m5; C m6; J m7; j m8; d m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA423(const union A423 *x, const union A423 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA423() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A423));
		AF('I',union A423,m0,1)
		AF('C',union A423,m1,15)
		AF('p',union A423,m2,1)
		AF('S',union A423,m3,1)
		AF('C',union A423,m4,1)
		AF('C',union A423,m5,1)
		AF('C',union A423,m6,1)
		AF('J',union A423,m7,1)
		AF('j',union A423,m8,1)
		AF('d',union A423,m9,1)
		AF('I',union A423,m10,1)
		AF('d',union A423,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<IC[15]pSCCCJjdId>> */
#pragma pack(push,4)
union A424 { union A423 m0; };
#pragma pack(pop)
int f_cmpA424(const union A424 *x, const union A424 *y) { return f_cmpA423(&x->m0, &y->m0); };
DCaggr* f_touchA424() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A424));
		AFa(union A424,m0,1,A423)
		dcCloseAggr(a);
	}
	return a;
};
/* <jclpJppSILds> */
#pragma pack(push,2)
union A425 { j m0; c m1; l m2; p m3; J m4; p m5; p m6; S m7; I m8; L m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA425(const union A425 *x, const union A425 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA425() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A425));
		AF('j',union A425,m0,1)
		AF('c',union A425,m1,1)
		AF('l',union A425,m2,1)
		AF('p',union A425,m3,1)
		AF('J',union A425,m4,1)
		AF('p',union A425,m5,1)
		AF('p',union A425,m6,1)
		AF('S',union A425,m7,1)
		AF('I',union A425,m8,1)
		AF('L',union A425,m9,1)
		AF('d',union A425,m10,1)
		AF('s',union A425,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iBpdpJdcliBL} */
#pragma pack(push,1)
struct A426 { i m0; B m1; p m2; d m3; p m4; J m5; d m6; c m7; l m8; i m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA426(const struct A426 *x, const struct A426 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA426() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A426));
		AF('i',struct A426,m0,1)
		AF('B',struct A426,m1,1)
		AF('p',struct A426,m2,1)
		AF('d',struct A426,m3,1)
		AF('p',struct A426,m4,1)
		AF('J',struct A426,m5,1)
		AF('d',struct A426,m6,1)
		AF('c',struct A426,m7,1)
		AF('l',struct A426,m8,1)
		AF('i',struct A426,m9,1)
		AF('B',struct A426,m10,1)
		AF('L',struct A426,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C> */
#pragma pack(push,4)
union A427 { l m0; B m1; j m2; B m3; S m4; S m5; J m6; union A425 m7; I m8; B m9; struct A426 m10; C m11; };
#pragma pack(pop)
int f_cmpA427(const union A427 *x, const union A427 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA425(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA426(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA427() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A427));
		AF('l',union A427,m0,1)
		AF('B',union A427,m1,1)
		AF('j',union A427,m2,1)
		AF('B',union A427,m3,1)
		AF('S',union A427,m4,1)
		AF('S',union A427,m5,1)
		AF('J',union A427,m6,1)
		AFa(union A427,m7,1,A425)
		AF('I',union A427,m8,1)
		AF('B',union A427,m9,1)
		AFa(union A427,m10,1,A426)
		AF('C',union A427,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCCf> */
#pragma pack(push,4)
union A428 { d m0; C m1; C m2; f m3; };
#pragma pack(pop)
int f_cmpA428(const union A428 *x, const union A428 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA428() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A428));
		AF('d',union A428,m0,1)
		AF('C',union A428,m1,1)
		AF('C',union A428,m2,1)
		AF('f',union A428,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CLSBIisfJI> */
#pragma pack(push,1)
union A429 { C m0; L m1; S m2; B m3; I m4; i m5; s m6; f m7; J m8; I m9; };
#pragma pack(pop)
int f_cmpA429(const union A429 *x, const union A429 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA429() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A429));
		AF('C',union A429,m0,1)
		AF('L',union A429,m1,1)
		AF('S',union A429,m2,1)
		AF('B',union A429,m3,1)
		AF('I',union A429,m4,1)
		AF('i',union A429,m5,1)
		AF('s',union A429,m6,1)
		AF('f',union A429,m7,1)
		AF('J',union A429,m8,1)
		AF('I',union A429,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LpdsdJcp<dCCf>l<CLSBIisfJI>s> */
#pragma pack(push,2)
union A430 { L m0; p m1; d m2; s m3; d m4; J m5; c m6; p m7; union A428 m8; l m9; union A429 m10; s m11; };
#pragma pack(pop)
int f_cmpA430(const union A430 *x, const union A430 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA428(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA429(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA430() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A430));
		AF('L',union A430,m0,1)
		AF('p',union A430,m1,1)
		AF('d',union A430,m2,1)
		AF('s',union A430,m3,1)
		AF('d',union A430,m4,1)
		AF('J',union A430,m5,1)
		AF('c',union A430,m6,1)
		AF('p',union A430,m7,1)
		AFa(union A430,m8,1,A428)
		AF('l',union A430,m9,1)
		AFa(union A430,m10,1,A429)
		AF('s',union A430,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p} */
#pragma pack(push,2)
struct A431 { J m0; S m1; union A424 m2; c m3; i m4; I m5; c m6; J m7; union A427 m8; p m9; union A430 m10; p m11; };
#pragma pack(pop)
int f_cmpA431(const struct A431 *x, const struct A431 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA424(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA427(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA430(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA431() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A431));
		AF('J',struct A431,m0,1)
		AF('S',struct A431,m1,1)
		AFa(struct A431,m2,1,A424)
		AF('c',struct A431,m3,1)
		AF('i',struct A431,m4,1)
		AF('I',struct A431,m5,1)
		AF('c',struct A431,m6,1)
		AF('J',struct A431,m7,1)
		AFa(struct A431,m8,1,A427)
		AF('p',struct A431,m9,1)
		AFa(struct A431,m10,1,A430)
		AF('p',struct A431,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLlSlcpc> */
#pragma pack(push,4)
union A432 { S m0; L m1; l m2; S m3; l m4; c m5; p m6; c m7; };
#pragma pack(pop)
int f_cmpA432(const union A432 *x, const union A432 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA432() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A432));
		AF('S',union A432,m0,1)
		AF('L',union A432,m1,1)
		AF('l',union A432,m2,1)
		AF('S',union A432,m3,1)
		AF('l',union A432,m4,1)
		AF('c',union A432,m5,1)
		AF('p',union A432,m6,1)
		AF('c',union A432,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SSLpIdfjL} */
#pragma pack(push,4)
struct A433 { S m0; S m1; L m2; p m3; I m4; d m5; f m6; j m7; L m8; };
#pragma pack(pop)
int f_cmpA433(const struct A433 *x, const struct A433 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA433() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A433));
		AF('S',struct A433,m0,1)
		AF('S',struct A433,m1,1)
		AF('L',struct A433,m2,1)
		AF('p',struct A433,m3,1)
		AF('I',struct A433,m4,1)
		AF('d',struct A433,m5,1)
		AF('f',struct A433,m6,1)
		AF('j',struct A433,m7,1)
		AF('L',struct A433,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJB} */
#pragma pack(push,8)
struct A434 { S m0; J m1; B m2; };
#pragma pack(pop)
int f_cmpA434(const struct A434 *x, const struct A434 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA434() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A434));
		AF('S',struct A434,m0,1)
		AF('J',struct A434,m1,1)
		AF('B',struct A434,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IS{SJB}ccsiiJJfJ> */
#pragma pack(push,4)
union A435 { I m0; S m1; struct A434 m2; c m3; c m4; s m5; i m6; i m7; J m8; J m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA435(const union A435 *x, const union A435 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA434(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA435() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A435));
		AF('I',union A435,m0,1)
		AF('S',union A435,m1,1)
		AFa(union A435,m2,1,A434)
		AF('c',union A435,m3,1)
		AF('c',union A435,m4,1)
		AF('s',union A435,m5,1)
		AF('i',union A435,m6,1)
		AF('i',union A435,m7,1)
		AF('J',union A435,m8,1)
		AF('J',union A435,m9,1)
		AF('f',union A435,m10,1)
		AF('J',union A435,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I} */
#pragma pack(push,2)
struct A436 { I m0; };
#pragma pack(pop)
int f_cmpA436(const struct A436 *x, const struct A436 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA436() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A436));
		AF('I',struct A436,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fpflL> */
#pragma pack(push,4)
union A437 { f m0; p m1; f m2; l m3; L m4; };
#pragma pack(pop)
int f_cmpA437(const union A437 *x, const union A437 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA437() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A437));
		AF('f',union A437,m0,1)
		AF('p',union A437,m1,1)
		AF('f',union A437,m2,1)
		AF('l',union A437,m3,1)
		AF('L',union A437,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BCffldlBBdL[5]j} */
#pragma pack(push,2)
struct A438 { B m0; C m1; f m2; f m3; l m4; d m5; l m6; B m7; B m8; d m9; L m10[5]; j m11; };
#pragma pack(pop)
int f_cmpA438(const struct A438 *x, const struct A438 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m11 == y->m11; };
DCaggr* f_touchA438() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A438));
		AF('B',struct A438,m0,1)
		AF('C',struct A438,m1,1)
		AF('f',struct A438,m2,1)
		AF('f',struct A438,m3,1)
		AF('l',struct A438,m4,1)
		AF('d',struct A438,m5,1)
		AF('l',struct A438,m6,1)
		AF('B',struct A438,m7,1)
		AF('B',struct A438,m8,1)
		AF('d',struct A438,m9,1)
		AF('L',struct A438,m10,5)
		AF('j',struct A438,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lIljBspBC} */
#pragma pack(push,1)
struct A439 { l m0; I m1; l m2; j m3; B m4; s m5; p m6; B m7; C m8; };
#pragma pack(pop)
int f_cmpA439(const struct A439 *x, const struct A439 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA439() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A439));
		AF('l',struct A439,m0,1)
		AF('I',struct A439,m1,1)
		AF('l',struct A439,m2,1)
		AF('j',struct A439,m3,1)
		AF('B',struct A439,m4,1)
		AF('s',struct A439,m5,1)
		AF('p',struct A439,m6,1)
		AF('B',struct A439,m7,1)
		AF('C',struct A439,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJJ{lIljBspBC}pCifp[5]cLj} */
#pragma pack(push,8)
struct A440 { p m0; J m1; J m2; struct A439 m3; p m4; C m5; i m6; f m7; p m8[5]; c m9; L m10; j m11; };
#pragma pack(pop)
int f_cmpA440(const struct A440 *x, const struct A440 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA439(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA440() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A440));
		AF('p',struct A440,m0,1)
		AF('J',struct A440,m1,1)
		AF('J',struct A440,m2,1)
		AFa(struct A440,m3,1,A439)
		AF('p',struct A440,m4,1)
		AF('C',struct A440,m5,1)
		AF('i',struct A440,m6,1)
		AF('f',struct A440,m7,1)
		AF('p',struct A440,m8,5)
		AF('c',struct A440,m9,1)
		AF('L',struct A440,m10,1)
		AF('j',struct A440,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSdiSJjlCpCp} */
#pragma pack(push,4)
struct A441 { d m0; S m1; d m2; i m3; S m4; J m5; j m6; l m7; C m8; p m9; C m10; p m11; };
#pragma pack(pop)
int f_cmpA441(const struct A441 *x, const struct A441 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA441() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A441));
		AF('d',struct A441,m0,1)
		AF('S',struct A441,m1,1)
		AF('d',struct A441,m2,1)
		AF('i',struct A441,m3,1)
		AF('S',struct A441,m4,1)
		AF('J',struct A441,m5,1)
		AF('j',struct A441,m6,1)
		AF('l',struct A441,m7,1)
		AF('C',struct A441,m8,1)
		AF('p',struct A441,m9,1)
		AF('C',struct A441,m10,1)
		AF('p',struct A441,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SfCcdcpC> */
#pragma pack(push,2)
union A442 { S m0; f m1; C m2; c m3; d m4; c m5; p m6; C m7; };
#pragma pack(pop)
int f_cmpA442(const union A442 *x, const union A442 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA442() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A442));
		AF('S',union A442,m0,1)
		AF('f',union A442,m1,1)
		AF('C',union A442,m2,1)
		AF('c',union A442,m3,1)
		AF('d',union A442,m4,1)
		AF('c',union A442,m5,1)
		AF('p',union A442,m6,1)
		AF('C',union A442,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p[4]jplLpIBLlfl} */
#pragma pack(push,1)
struct A443 { p m0[4]; j m1; p m2; l m3; L m4; p m5; I m6; B m7; L m8; l m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA443(const struct A443 *x, const struct A443 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA443() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A443));
		AF('p',struct A443,m0,4)
		AF('j',struct A443,m1,1)
		AF('p',struct A443,m2,1)
		AF('l',struct A443,m3,1)
		AF('L',struct A443,m4,1)
		AF('p',struct A443,m5,1)
		AF('I',struct A443,m6,1)
		AF('B',struct A443,m7,1)
		AF('L',struct A443,m8,1)
		AF('l',struct A443,m9,1)
		AF('f',struct A443,m10,1)
		AF('l',struct A443,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I<SfCcdcpC>cd[16]LCLBpip{p[4]jplLpIBLlfl}> */
#pragma pack(push,4)
union A444 { I m0; union A442 m1; c m2; d m3[16]; L m4; C m5; L m6; B m7; p m8; i m9; p m10; struct A443 m11; };
#pragma pack(pop)
int f_cmpA444(const union A444 *x, const union A444 *y) { return x->m0 == y->m0 && f_cmpA442(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m3[15] == y->m3[15] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA443(&x->m11, &y->m11); };
DCaggr* f_touchA444() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A444));
		AF('I',union A444,m0,1)
		AFa(union A444,m1,1,A442)
		AF('c',union A444,m2,1)
		AF('d',union A444,m3,16)
		AF('L',union A444,m4,1)
		AF('C',union A444,m5,1)
		AF('L',union A444,m6,1)
		AF('B',union A444,m7,1)
		AF('p',union A444,m8,1)
		AF('i',union A444,m9,1)
		AF('p',union A444,m10,1)
		AFa(union A444,m11,1,A443)
		dcCloseAggr(a);
	}
	return a;
};
/* <flBd<fpflL>{BCffldlBBdL[5]j}{pJJ{lIljBspBC}pCifp[5]cLj}{dSdiSJjlCpCp}J<I<SfCcdcpC>cd[16]LCLBpip{p[4]jplLpIBLlfl}>II> */
#pragma pack(push,2)
union A445 { f m0; l m1; B m2; d m3; union A437 m4; struct A438 m5; struct A440 m6; struct A441 m7; J m8; union A444 m9; I m10; I m11; };
#pragma pack(pop)
int f_cmpA445(const union A445 *x, const union A445 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA437(&x->m4, &y->m4) && f_cmpA438(&x->m5, &y->m5) && f_cmpA440(&x->m6, &y->m6) && f_cmpA441(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA444(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA445() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A445));
		AF('f',union A445,m0,1)
		AF('l',union A445,m1,1)
		AF('B',union A445,m2,1)
		AF('d',union A445,m3,1)
		AFa(union A445,m4,1,A437)
		AFa(union A445,m5,1,A438)
		AFa(union A445,m6,1,A440)
		AFa(union A445,m7,1,A441)
		AF('J',union A445,m8,1)
		AFa(union A445,m9,1,A444)
		AF('I',union A445,m10,1)
		AF('I',union A445,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pdpfjBfipLB[9]} */
#pragma pack(push,2)
struct A446 { p m0; d m1; p m2; f m3; j m4; B m5; f m6; i m7; p m8; L m9; B m10[9]; };
#pragma pack(pop)
int f_cmpA446(const struct A446 *x, const struct A446 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8]; };
DCaggr* f_touchA446() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A446));
		AF('p',struct A446,m0,1)
		AF('d',struct A446,m1,1)
		AF('p',struct A446,m2,1)
		AF('f',struct A446,m3,1)
		AF('j',struct A446,m4,1)
		AF('B',struct A446,m5,1)
		AF('f',struct A446,m6,1)
		AF('i',struct A446,m7,1)
		AF('p',struct A446,m8,1)
		AF('L',struct A446,m9,1)
		AF('B',struct A446,m10,9)
		dcCloseAggr(a);
	}
	return a;
};
/* <idiJ> */
#pragma pack(push,1)
union A447 { i m0; d m1; i m2; J m3; };
#pragma pack(pop)
int f_cmpA447(const union A447 *x, const union A447 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA447() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A447));
		AF('i',union A447,m0,1)
		AF('d',union A447,m1,1)
		AF('i',union A447,m2,1)
		AF('J',union A447,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SpjBIll} */
#pragma pack(push,1)
struct A448 { S m0; p m1; j m2; B m3; I m4; l m5; l m6; };
#pragma pack(pop)
int f_cmpA448(const struct A448 *x, const struct A448 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA448() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A448));
		AF('S',struct A448,m0,1)
		AF('p',struct A448,m1,1)
		AF('j',struct A448,m2,1)
		AF('B',struct A448,m3,1)
		AF('I',struct A448,m4,1)
		AF('l',struct A448,m5,1)
		AF('l',struct A448,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dSSpiJjjSIjs> */
#pragma pack(push,4)
union A449 { d m0; S m1; S m2; p m3; i m4; J m5; j m6; j m7; S m8; I m9; j m10; s m11; };
#pragma pack(pop)
int f_cmpA449(const union A449 *x, const union A449 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA449() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A449));
		AF('d',union A449,m0,1)
		AF('S',union A449,m1,1)
		AF('S',union A449,m2,1)
		AF('p',union A449,m3,1)
		AF('i',union A449,m4,1)
		AF('J',union A449,m5,1)
		AF('j',union A449,m6,1)
		AF('j',union A449,m7,1)
		AF('S',union A449,m8,1)
		AF('I',union A449,m9,1)
		AF('j',union A449,m10,1)
		AF('s',union A449,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpsI<dSSpiJjjSIjs>cSdsB[2]jJ} */
#pragma pack(push,2)
struct A450 { f m0; p m1; s m2; I m3; union A449 m4; c m5; S m6; d m7; s m8; B m9[2]; j m10; J m11; };
#pragma pack(pop)
int f_cmpA450(const struct A450 *x, const struct A450 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA449(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA450() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A450));
		AF('f',struct A450,m0,1)
		AF('p',struct A450,m1,1)
		AF('s',struct A450,m2,1)
		AF('I',struct A450,m3,1)
		AFa(struct A450,m4,1,A449)
		AF('c',struct A450,m5,1)
		AF('S',struct A450,m6,1)
		AF('d',struct A450,m7,1)
		AF('s',struct A450,m8,1)
		AF('B',struct A450,m9,2)
		AF('j',struct A450,m10,1)
		AF('J',struct A450,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdlJdC{j}{SpjBIll}ijl{fpsI<dSSpiJjjSIjs>cSdsB[2]jJ}} */
#pragma pack(push,4)
struct A451 { j m0; d m1; l m2; J m3; d m4; C m5; struct A83 m6; struct A448 m7; i m8; j m9; l m10; struct A450 m11; };
#pragma pack(pop)
int f_cmpA451(const struct A451 *x, const struct A451 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA83(&x->m6, &y->m6) && f_cmpA448(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA450(&x->m11, &y->m11); };
DCaggr* f_touchA451() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A451));
		AF('j',struct A451,m0,1)
		AF('d',struct A451,m1,1)
		AF('l',struct A451,m2,1)
		AF('J',struct A451,m3,1)
		AF('d',struct A451,m4,1)
		AF('C',struct A451,m5,1)
		AFa(struct A451,m6,1,A83)
		AFa(struct A451,m7,1,A448)
		AF('i',struct A451,m8,1)
		AF('j',struct A451,m9,1)
		AF('l',struct A451,m10,1)
		AFa(struct A451,m11,1,A450)
		dcCloseAggr(a);
	}
	return a;
};
/* {JJcCfcdjCSJB} */
#pragma pack(push,4)
struct A452 { J m0; J m1; c m2; C m3; f m4; c m5; d m6; j m7; C m8; S m9; J m10; B m11; };
#pragma pack(pop)
int f_cmpA452(const struct A452 *x, const struct A452 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA452() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A452));
		AF('J',struct A452,m0,1)
		AF('J',struct A452,m1,1)
		AF('c',struct A452,m2,1)
		AF('C',struct A452,m3,1)
		AF('f',struct A452,m4,1)
		AF('c',struct A452,m5,1)
		AF('d',struct A452,m6,1)
		AF('j',struct A452,m7,1)
		AF('C',struct A452,m8,1)
		AF('S',struct A452,m9,1)
		AF('J',struct A452,m10,1)
		AF('B',struct A452,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csjj> */
#pragma pack(push,4)
union A453 { c m0; s m1; j m2; j m3; };
#pragma pack(pop)
int f_cmpA453(const union A453 *x, const union A453 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA453() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A453));
		AF('c',union A453,m0,1)
		AF('s',union A453,m1,1)
		AF('j',union A453,m2,1)
		AF('j',union A453,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fc[12]} */
#pragma pack(push,8)
struct A454 { f m0; c m1[12]; };
#pragma pack(pop)
int f_cmpA454(const struct A454 *x, const struct A454 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11]; };
DCaggr* f_touchA454() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A454));
		AF('f',struct A454,m0,1)
		AF('c',struct A454,m1,12)
		dcCloseAggr(a);
	}
	return a;
};
/* {jisdiipfSCpC} */
#pragma pack(push,2)
struct A455 { j m0; i m1; s m2; d m3; i m4; i m5; p m6; f m7; S m8; C m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA455(const struct A455 *x, const struct A455 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA455() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A455));
		AF('j',struct A455,m0,1)
		AF('i',struct A455,m1,1)
		AF('s',struct A455,m2,1)
		AF('d',struct A455,m3,1)
		AF('i',struct A455,m4,1)
		AF('i',struct A455,m5,1)
		AF('p',struct A455,m6,1)
		AF('f',struct A455,m7,1)
		AF('S',struct A455,m8,1)
		AF('C',struct A455,m9,1)
		AF('p',struct A455,m10,1)
		AF('C',struct A455,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lpi{JJcCfcdjCSJB}C<csjj>{fc[12]}iCj{jisdiipfSCpC}> */
#pragma pack(push,4)
union A456 { L m0; p m1; i m2; struct A452 m3; C m4; union A453 m5; struct A454 m6; i m7; C m8; j m9; struct A455 m10; };
#pragma pack(pop)
int f_cmpA456(const union A456 *x, const union A456 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA452(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA453(&x->m5, &y->m5) && f_cmpA454(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA455(&x->m10, &y->m10); };
DCaggr* f_touchA456() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A456));
		AF('L',union A456,m0,1)
		AF('p',union A456,m1,1)
		AF('i',union A456,m2,1)
		AFa(union A456,m3,1,A452)
		AF('C',union A456,m4,1)
		AFa(union A456,m5,1,A453)
		AFa(union A456,m6,1,A454)
		AF('i',union A456,m7,1)
		AF('C',union A456,m8,1)
		AF('j',union A456,m9,1)
		AFa(union A456,m10,1,A455)
		dcCloseAggr(a);
	}
	return a;
};
/* {s} */
#pragma pack(push,1)
struct A457 { s m0; };
#pragma pack(pop)
int f_cmpA457(const struct A457 *x, const struct A457 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA457() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A457));
		AF('s',struct A457,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fdiIdfdL> */
#pragma pack(push,8)
union A458 { f m0; d m1; i m2; I m3; d m4; f m5; d m6; L m7; };
#pragma pack(pop)
int f_cmpA458(const union A458 *x, const union A458 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA458() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A458));
		AF('f',union A458,m0,1)
		AF('d',union A458,m1,1)
		AF('i',union A458,m2,1)
		AF('I',union A458,m3,1)
		AF('d',union A458,m4,1)
		AF('f',union A458,m5,1)
		AF('d',union A458,m6,1)
		AF('L',union A458,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pi} */
#pragma pack(push,2)
struct A459 { p m0; i m1; };
#pragma pack(pop)
int f_cmpA459(const struct A459 *x, const struct A459 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA459() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A459));
		AF('p',struct A459,m0,1)
		AF('i',struct A459,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJlsf[7]l[10]Blip} */
#pragma pack(push,1)
struct A460 { I m0; J m1; l m2; s m3; f m4[7]; l m5[10]; B m6; l m7; i m8; p m9; };
#pragma pack(pop)
int f_cmpA460(const struct A460 *x, const struct A460 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA460() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A460));
		AF('I',struct A460,m0,1)
		AF('J',struct A460,m1,1)
		AF('l',struct A460,m2,1)
		AF('s',struct A460,m3,1)
		AF('f',struct A460,m4,7)
		AF('l',struct A460,m5,10)
		AF('B',struct A460,m6,1)
		AF('l',struct A460,m7,1)
		AF('i',struct A460,m8,1)
		AF('p',struct A460,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdBfBppj{IJlsf[7]l[10]Blip}liI> */
#pragma pack(push,2)
union A461 { p m0; d m1; B m2; f m3; B m4; p m5; p m6; j m7; struct A460 m8; l m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA461(const union A461 *x, const union A461 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA460(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA461() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A461));
		AF('p',union A461,m0,1)
		AF('d',union A461,m1,1)
		AF('B',union A461,m2,1)
		AF('f',union A461,m3,1)
		AF('B',union A461,m4,1)
		AF('p',union A461,m5,1)
		AF('p',union A461,m6,1)
		AF('j',union A461,m7,1)
		AFa(union A461,m8,1,A460)
		AF('l',union A461,m9,1)
		AF('i',union A461,m10,1)
		AF('I',union A461,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JfiJLJs[11]clc> */
#pragma pack(push,4)
union A462 { J m0; f m1; i m2; J m3; L m4; J m5; s m6[11]; c m7; l m8; c m9; };
#pragma pack(pop)
int f_cmpA462(const union A462 *x, const union A462 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA462() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A462));
		AF('J',union A462,m0,1)
		AF('f',union A462,m1,1)
		AF('i',union A462,m2,1)
		AF('J',union A462,m3,1)
		AF('L',union A462,m4,1)
		AF('J',union A462,m5,1)
		AF('s',union A462,m6,11)
		AF('c',union A462,m7,1)
		AF('l',union A462,m8,1)
		AF('c',union A462,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csdIdjBcCBsS> */
#pragma pack(push,4)
union A463 { c m0; s m1; d m2; I m3; d m4; j m5; B m6; c m7; C m8; B m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA463(const union A463 *x, const union A463 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA463() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A463));
		AF('c',union A463,m0,1)
		AF('s',union A463,m1,1)
		AF('d',union A463,m2,1)
		AF('I',union A463,m3,1)
		AF('d',union A463,m4,1)
		AF('j',union A463,m5,1)
		AF('B',union A463,m6,1)
		AF('c',union A463,m7,1)
		AF('C',union A463,m8,1)
		AF('B',union A463,m9,1)
		AF('s',union A463,m10,1)
		AF('S',union A463,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iCBlJ> */
#pragma pack(push,4)
union A464 { i m0; C m1; B m2; l m3; J m4; };
#pragma pack(pop)
int f_cmpA464(const union A464 *x, const union A464 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA464() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A464));
		AF('i',union A464,m0,1)
		AF('C',union A464,m1,1)
		AF('B',union A464,m2,1)
		AF('l',union A464,m3,1)
		AF('J',union A464,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {idslfBfdpfcs} */
#pragma pack(push,4)
struct A465 { i m0; d m1; s m2; l m3; f m4; B m5; f m6; d m7; p m8; f m9; c m10; s m11; };
#pragma pack(pop)
int f_cmpA465(const struct A465 *x, const struct A465 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA465() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A465));
		AF('i',struct A465,m0,1)
		AF('d',struct A465,m1,1)
		AF('s',struct A465,m2,1)
		AF('l',struct A465,m3,1)
		AF('f',struct A465,m4,1)
		AF('B',struct A465,m5,1)
		AF('f',struct A465,m6,1)
		AF('d',struct A465,m7,1)
		AF('p',struct A465,m8,1)
		AF('f',struct A465,m9,1)
		AF('c',struct A465,m10,1)
		AF('s',struct A465,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {S{idslfBfdpfcs}cldCdfjdsC} */
#pragma pack(push,2)
struct A466 { S m0; struct A465 m1; c m2; l m3; d m4; C m5; d m6; f m7; j m8; d m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA466(const struct A466 *x, const struct A466 *y) { return x->m0 == y->m0 && f_cmpA465(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA466() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A466));
		AF('S',struct A466,m0,1)
		AFa(struct A466,m1,1,A465)
		AF('c',struct A466,m2,1)
		AF('l',struct A466,m3,1)
		AF('d',struct A466,m4,1)
		AF('C',struct A466,m5,1)
		AF('d',struct A466,m6,1)
		AF('f',struct A466,m7,1)
		AF('j',struct A466,m8,1)
		AF('d',struct A466,m9,1)
		AF('s',struct A466,m10,1)
		AF('C',struct A466,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fSifsIijdSIf} */
#pragma pack(push,8)
struct A467 { f m0; S m1; i m2; f m3; s m4; I m5; i m6; j m7; d m8; S m9; I m10; f m11; };
#pragma pack(pop)
int f_cmpA467(const struct A467 *x, const struct A467 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA467() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A467));
		AF('f',struct A467,m0,1)
		AF('S',struct A467,m1,1)
		AF('i',struct A467,m2,1)
		AF('f',struct A467,m3,1)
		AF('s',struct A467,m4,1)
		AF('I',struct A467,m5,1)
		AF('i',struct A467,m6,1)
		AF('j',struct A467,m7,1)
		AF('d',struct A467,m8,1)
		AF('S',struct A467,m9,1)
		AF('I',struct A467,m10,1)
		AF('f',struct A467,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LfSCCsC> */
#pragma pack(push,4)
union A468 { L m0; f m1; S m2; C m3; C m4; s m5; C m6; };
#pragma pack(pop)
int f_cmpA468(const union A468 *x, const union A468 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA468() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A468));
		AF('L',union A468,m0,1)
		AF('f',union A468,m1,1)
		AF('S',union A468,m2,1)
		AF('C',union A468,m3,1)
		AF('C',union A468,m4,1)
		AF('s',union A468,m5,1)
		AF('C',union A468,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flBppjCBlCsf> */
#pragma pack(push,2)
union A469 { f m0; l m1; B m2; p m3; p m4; j m5; C m6; B m7; l m8; C m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA469(const union A469 *x, const union A469 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA469() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A469));
		AF('f',union A469,m0,1)
		AF('l',union A469,m1,1)
		AF('B',union A469,m2,1)
		AF('p',union A469,m3,1)
		AF('p',union A469,m4,1)
		AF('j',union A469,m5,1)
		AF('C',union A469,m6,1)
		AF('B',union A469,m7,1)
		AF('l',union A469,m8,1)
		AF('C',union A469,m9,1)
		AF('s',union A469,m10,1)
		AF('f',union A469,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[9]<LfSCCsC>[10]jSl<c>B<flBppjCBlCsf>iBL} */
#pragma pack(push,8)
struct A470 { d m0[9]; union A468 m1[10]; j m2; S m3; l m4; union A123 m5; B m6; union A469 m7; i m8; B m9; L m10; };
#pragma pack(pop)
int f_cmpA470(const struct A470 *x, const struct A470 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && f_cmpA468(&x->m1[0], &y->m1[0]) && f_cmpA468(&x->m1[1], &y->m1[1]) && f_cmpA468(&x->m1[2], &y->m1[2]) && f_cmpA468(&x->m1[3], &y->m1[3]) && f_cmpA468(&x->m1[4], &y->m1[4]) && f_cmpA468(&x->m1[5], &y->m1[5]) && f_cmpA468(&x->m1[6], &y->m1[6]) && f_cmpA468(&x->m1[7], &y->m1[7]) && f_cmpA468(&x->m1[8], &y->m1[8]) && f_cmpA468(&x->m1[9], &y->m1[9]) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA123(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA469(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA470() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A470));
		AF('d',struct A470,m0,9)
		AFa(struct A470,m1,10,A468)
		AF('j',struct A470,m2,1)
		AF('S',struct A470,m3,1)
		AF('l',struct A470,m4,1)
		AFa(struct A470,m5,1,A123)
		AF('B',struct A470,m6,1)
		AFa(struct A470,m7,1,A469)
		AF('i',struct A470,m8,1)
		AF('B',struct A470,m9,1)
		AF('L',struct A470,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IIjcsl[14]j{d[9]<LfSCCsC>[10]jSl<c>B<flBppjCBlCsf>iBL}} */
#pragma pack(push,4)
struct A471 { I m0; I m1; j m2; c m3; s m4; l m5[14]; j m6; struct A470 m7; };
#pragma pack(pop)
int f_cmpA471(const struct A471 *x, const struct A471 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m6 == y->m6 && f_cmpA470(&x->m7, &y->m7); };
DCaggr* f_touchA471() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A471));
		AF('I',struct A471,m0,1)
		AF('I',struct A471,m1,1)
		AF('j',struct A471,m2,1)
		AF('c',struct A471,m3,1)
		AF('s',struct A471,m4,1)
		AF('l',struct A471,m5,14)
		AF('j',struct A471,m6,1)
		AFa(struct A471,m7,1,A470)
		dcCloseAggr(a);
	}
	return a;
};
/* {fccdspslJIji} */
#pragma pack(push,4)
struct A472 { f m0; c m1; c m2; d m3; s m4; p m5; s m6; l m7; J m8; I m9; j m10; i m11; };
#pragma pack(pop)
int f_cmpA472(const struct A472 *x, const struct A472 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA472() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A472));
		AF('f',struct A472,m0,1)
		AF('c',struct A472,m1,1)
		AF('c',struct A472,m2,1)
		AF('d',struct A472,m3,1)
		AF('s',struct A472,m4,1)
		AF('p',struct A472,m5,1)
		AF('s',struct A472,m6,1)
		AF('l',struct A472,m7,1)
		AF('J',struct A472,m8,1)
		AF('I',struct A472,m9,1)
		AF('j',struct A472,m10,1)
		AF('i',struct A472,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fffjfCCL> */
#pragma pack(push,2)
union A473 { f m0; f m1; f m2; j m3; f m4; C m5; C m6; L m7; };
#pragma pack(pop)
int f_cmpA473(const union A473 *x, const union A473 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA473() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A473));
		AF('f',union A473,m0,1)
		AF('f',union A473,m1,1)
		AF('f',union A473,m2,1)
		AF('j',union A473,m3,1)
		AF('f',union A473,m4,1)
		AF('C',union A473,m5,1)
		AF('C',union A473,m6,1)
		AF('L',union A473,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iICjIjIJsSdp> */
#pragma pack(push,8)
union A474 { i m0; I m1; C m2; j m3; I m4; j m5; I m6; J m7; s m8; S m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA474(const union A474 *x, const union A474 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA474() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A474));
		AF('i',union A474,m0,1)
		AF('I',union A474,m1,1)
		AF('C',union A474,m2,1)
		AF('j',union A474,m3,1)
		AF('I',union A474,m4,1)
		AF('j',union A474,m5,1)
		AF('I',union A474,m6,1)
		AF('J',union A474,m7,1)
		AF('s',union A474,m8,1)
		AF('S',union A474,m9,1)
		AF('d',union A474,m10,1)
		AF('p',union A474,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SllspICIcJIl} */
#pragma pack(push,2)
struct A475 { S m0; l m1; l m2; s m3; p m4; I m5; C m6; I m7; c m8; J m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA475(const struct A475 *x, const struct A475 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA475() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A475));
		AF('S',struct A475,m0,1)
		AF('l',struct A475,m1,1)
		AF('l',struct A475,m2,1)
		AF('s',struct A475,m3,1)
		AF('p',struct A475,m4,1)
		AF('I',struct A475,m5,1)
		AF('C',struct A475,m6,1)
		AF('I',struct A475,m7,1)
		AF('c',struct A475,m8,1)
		AF('J',struct A475,m9,1)
		AF('I',struct A475,m10,1)
		AF('l',struct A475,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lB> */
#pragma pack(push,4)
union A476 { l m0; B m1; };
#pragma pack(pop)
int f_cmpA476(const union A476 *x, const union A476 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA476() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A476));
		AF('l',union A476,m0,1)
		AF('B',union A476,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IILijS[15]{SllspICIcJIl}jCI<lB>c> */
#pragma pack(push,2)
union A477 { I m0; I m1; L m2; i m3; j m4; S m5[15]; struct A475 m6; j m7; C m8; I m9; union A476 m10; c m11; };
#pragma pack(pop)
int f_cmpA477(const union A477 *x, const union A477 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m5[14] == y->m5[14] && f_cmpA475(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA476(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA477() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A477));
		AF('I',union A477,m0,1)
		AF('I',union A477,m1,1)
		AF('L',union A477,m2,1)
		AF('i',union A477,m3,1)
		AF('j',union A477,m4,1)
		AF('S',union A477,m5,15)
		AFa(union A477,m6,1,A475)
		AF('j',union A477,m7,1)
		AF('C',union A477,m8,1)
		AF('I',union A477,m9,1)
		AFa(union A477,m10,1,A476)
		AF('c',union A477,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sS> */
#pragma pack(push,4)
union A478 { s m0; S m1; };
#pragma pack(pop)
int f_cmpA478(const union A478 *x, const union A478 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA478() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A478));
		AF('s',union A478,m0,1)
		AF('S',union A478,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcpB} */
#pragma pack(push,4)
struct A479 { l m0; c m1; p m2; B m3; };
#pragma pack(pop)
int f_cmpA479(const struct A479 *x, const struct A479 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA479() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A479));
		AF('l',struct A479,m0,1)
		AF('c',struct A479,m1,1)
		AF('p',struct A479,m2,1)
		AF('B',struct A479,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pSjcdjsLfs[1]Cf> */
#pragma pack(push,8)
union A480 { p m0; S m1; j m2; c m3; d m4; j m5; s m6; L m7; f m8; s m9[1]; C m10; f m11; };
#pragma pack(pop)
int f_cmpA480(const union A480 *x, const union A480 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA480() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A480));
		AF('p',union A480,m0,1)
		AF('S',union A480,m1,1)
		AF('j',union A480,m2,1)
		AF('c',union A480,m3,1)
		AF('d',union A480,m4,1)
		AF('j',union A480,m5,1)
		AF('s',union A480,m6,1)
		AF('L',union A480,m7,1)
		AF('f',union A480,m8,1)
		AF('s',union A480,m9,1)
		AF('C',union A480,m10,1)
		AF('f',union A480,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BI> */
#pragma pack(push,4)
union A481 { B m0; I m1; };
#pragma pack(pop)
int f_cmpA481(const union A481 *x, const union A481 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA481() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A481));
		AF('B',union A481,m0,1)
		AF('I',union A481,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJ<pSjcdjsLfs[1]Cf>CplIIId<BI>i> */
#pragma pack(push,4)
union A482 { s m0; J m1; union A480 m2; C m3; p m4; l m5; I m6; I m7; I m8; d m9; union A481 m10; i m11; };
#pragma pack(pop)
int f_cmpA482(const union A482 *x, const union A482 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA480(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA481(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA482() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A482));
		AF('s',union A482,m0,1)
		AF('J',union A482,m1,1)
		AFa(union A482,m2,1,A480)
		AF('C',union A482,m3,1)
		AF('p',union A482,m4,1)
		AF('l',union A482,m5,1)
		AF('I',union A482,m6,1)
		AF('I',union A482,m7,1)
		AF('I',union A482,m8,1)
		AF('d',union A482,m9,1)
		AFa(union A482,m10,1,A481)
		AF('i',union A482,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ssfd} */
#pragma pack(push,4)
struct A483 { S m0; s m1; f m2; d m3; };
#pragma pack(pop)
int f_cmpA483(const struct A483 *x, const struct A483 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA483() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A483));
		AF('S',struct A483,m0,1)
		AF('s',struct A483,m1,1)
		AF('f',struct A483,m2,1)
		AF('d',struct A483,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fd{Ssfd}Bc> */
#pragma pack(push,1)
union A484 { f m0; d m1; struct A483 m2; B m3; c m4; };
#pragma pack(pop)
int f_cmpA484(const union A484 *x, const union A484 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA483(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA484() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A484));
		AF('f',union A484,m0,1)
		AF('d',union A484,m1,1)
		AFa(union A484,m2,1,A483)
		AF('B',union A484,m3,1)
		AF('c',union A484,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sliljsCSSLIf} */
#pragma pack(push,4)
struct A485 { s m0; l m1; i m2; l m3; j m4; s m5; C m6; S m7; S m8; L m9; I m10; f m11; };
#pragma pack(pop)
int f_cmpA485(const struct A485 *x, const struct A485 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA485() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A485));
		AF('s',struct A485,m0,1)
		AF('l',struct A485,m1,1)
		AF('i',struct A485,m2,1)
		AF('l',struct A485,m3,1)
		AF('j',struct A485,m4,1)
		AF('s',struct A485,m5,1)
		AF('C',struct A485,m6,1)
		AF('S',struct A485,m7,1)
		AF('S',struct A485,m8,1)
		AF('L',struct A485,m9,1)
		AF('I',struct A485,m10,1)
		AF('f',struct A485,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<IILijS[15]{SllspICIcJIl}jCI<lB>c>CB<sS>{lcpB}<sJ<pSjcdjsLfs[1]Cf>CplIIId<BI>i>[9]<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}} */
#pragma pack(push,8)
struct A486 { union A477 m0; C m1; B m2; union A478 m3; struct A479 m4; union A482 m5[9]; union A484 m6; l m7; s m8; I m9; i m10; struct A485 m11; };
#pragma pack(pop)
int f_cmpA486(const struct A486 *x, const struct A486 *y) { return f_cmpA477(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA478(&x->m3, &y->m3) && f_cmpA479(&x->m4, &y->m4) && f_cmpA482(&x->m5[0], &y->m5[0]) && f_cmpA482(&x->m5[1], &y->m5[1]) && f_cmpA482(&x->m5[2], &y->m5[2]) && f_cmpA482(&x->m5[3], &y->m5[3]) && f_cmpA482(&x->m5[4], &y->m5[4]) && f_cmpA482(&x->m5[5], &y->m5[5]) && f_cmpA482(&x->m5[6], &y->m5[6]) && f_cmpA482(&x->m5[7], &y->m5[7]) && f_cmpA482(&x->m5[8], &y->m5[8]) && f_cmpA484(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA485(&x->m11, &y->m11); };
DCaggr* f_touchA486() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A486));
		AFa(struct A486,m0,1,A477)
		AF('C',struct A486,m1,1)
		AF('B',struct A486,m2,1)
		AFa(struct A486,m3,1,A478)
		AFa(struct A486,m4,1,A479)
		AFa(struct A486,m5,9,A482)
		AFa(struct A486,m6,1,A484)
		AF('l',struct A486,m7,1)
		AF('s',struct A486,m8,1)
		AF('I',struct A486,m9,1)
		AF('i',struct A486,m10,1)
		AFa(struct A486,m11,1,A485)
		dcCloseAggr(a);
	}
	return a;
};
/* <BlsjIISJf[8]ssS> */
#pragma pack(push,4)
union A487 { B m0; l m1; s m2; j m3; I m4; I m5; S m6; J m7; f m8[8]; s m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA487(const union A487 *x, const union A487 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA487() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A487));
		AF('B',union A487,m0,1)
		AF('l',union A487,m1,1)
		AF('s',union A487,m2,1)
		AF('j',union A487,m3,1)
		AF('I',union A487,m4,1)
		AF('I',union A487,m5,1)
		AF('S',union A487,m6,1)
		AF('J',union A487,m7,1)
		AF('f',union A487,m8,8)
		AF('s',union A487,m9,1)
		AF('s',union A487,m10,1)
		AF('S',union A487,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlII} */
#pragma pack(push,4)
struct A488 { S m0; l m1; I m2; I m3; };
#pragma pack(pop)
int f_cmpA488(const struct A488 *x, const struct A488 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA488() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A488));
		AF('S',struct A488,m0,1)
		AF('l',struct A488,m1,1)
		AF('I',struct A488,m2,1)
		AF('I',struct A488,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IJpjf[7]JCBj> */
#pragma pack(push,8)
union A489 { I m0; J m1; p m2; j m3; f m4[7]; J m5; C m6; B m7; j m8; };
#pragma pack(pop)
int f_cmpA489(const union A489 *x, const union A489 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA489() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A489));
		AF('I',union A489,m0,1)
		AF('J',union A489,m1,1)
		AF('p',union A489,m2,1)
		AF('j',union A489,m3,1)
		AF('f',union A489,m4,7)
		AF('J',union A489,m5,1)
		AF('C',union A489,m6,1)
		AF('B',union A489,m7,1)
		AF('j',union A489,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LJJdL} */
#pragma pack(push,4)
struct A490 { L m0; J m1; J m2; d m3; L m4; };
#pragma pack(pop)
int f_cmpA490(const struct A490 *x, const struct A490 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA490() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A490));
		AF('L',struct A490,m0,1)
		AF('J',struct A490,m1,1)
		AF('J',struct A490,m2,1)
		AF('d',struct A490,m3,1)
		AF('L',struct A490,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CsSLCSsLlfcI} */
#pragma pack(push,4)
struct A491 { C m0; s m1; S m2; L m3; C m4; S m5; s m6; L m7; l m8; f m9; c m10; I m11; };
#pragma pack(pop)
int f_cmpA491(const struct A491 *x, const struct A491 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA491() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A491));
		AF('C',struct A491,m0,1)
		AF('s',struct A491,m1,1)
		AF('S',struct A491,m2,1)
		AF('L',struct A491,m3,1)
		AF('C',struct A491,m4,1)
		AF('S',struct A491,m5,1)
		AF('s',struct A491,m6,1)
		AF('L',struct A491,m7,1)
		AF('l',struct A491,m8,1)
		AF('f',struct A491,m9,1)
		AF('c',struct A491,m10,1)
		AF('I',struct A491,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fjdJiJJspsJJ} */
#pragma pack(push,2)
struct A492 { f m0; j m1; d m2; J m3; i m4; J m5; J m6; s m7; p m8; s m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA492(const struct A492 *x, const struct A492 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA492() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A492));
		AF('f',struct A492,m0,1)
		AF('j',struct A492,m1,1)
		AF('d',struct A492,m2,1)
		AF('J',struct A492,m3,1)
		AF('i',struct A492,m4,1)
		AF('J',struct A492,m5,1)
		AF('J',struct A492,m6,1)
		AF('s',struct A492,m7,1)
		AF('p',struct A492,m8,1)
		AF('s',struct A492,m9,1)
		AF('J',struct A492,m10,1)
		AF('J',struct A492,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pB{SlII}ciLI<IJpjf[7]JCBj>i{LJJdL}{CsSLCSsLlfcI}{fjdJiJJspsJJ}> */
#pragma pack(push,4)
union A493 { p m0; B m1; struct A488 m2; c m3; i m4; L m5; I m6; union A489 m7; i m8; struct A490 m9; struct A491 m10; struct A492 m11; };
#pragma pack(pop)
int f_cmpA493(const union A493 *x, const union A493 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA488(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA489(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA490(&x->m9, &y->m9) && f_cmpA491(&x->m10, &y->m10) && f_cmpA492(&x->m11, &y->m11); };
DCaggr* f_touchA493() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A493));
		AF('p',union A493,m0,1)
		AF('B',union A493,m1,1)
		AFa(union A493,m2,1,A488)
		AF('c',union A493,m3,1)
		AF('i',union A493,m4,1)
		AF('L',union A493,m5,1)
		AF('I',union A493,m6,1)
		AFa(union A493,m7,1,A489)
		AF('i',union A493,m8,1)
		AFa(union A493,m9,1,A490)
		AFa(union A493,m10,1,A491)
		AFa(union A493,m11,1,A492)
		dcCloseAggr(a);
	}
	return a;
};
/* {fLLIji} */
#pragma pack(push,1)
struct A494 { f m0; L m1; L m2; I m3; j m4; i m5; };
#pragma pack(pop)
int f_cmpA494(const struct A494 *x, const struct A494 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA494() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A494));
		AF('f',struct A494,m0,1)
		AF('L',struct A494,m1,1)
		AF('L',struct A494,m2,1)
		AF('I',struct A494,m3,1)
		AF('j',struct A494,m4,1)
		AF('i',struct A494,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fCBBCBBCllLj} */
#pragma pack(push,4)
struct A495 { f m0; C m1; B m2; B m3; C m4; B m5; B m6; C m7; l m8; l m9; L m10; j m11; };
#pragma pack(pop)
int f_cmpA495(const struct A495 *x, const struct A495 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA495() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A495));
		AF('f',struct A495,m0,1)
		AF('C',struct A495,m1,1)
		AF('B',struct A495,m2,1)
		AF('B',struct A495,m3,1)
		AF('C',struct A495,m4,1)
		AF('B',struct A495,m5,1)
		AF('B',struct A495,m6,1)
		AF('C',struct A495,m7,1)
		AF('l',struct A495,m8,1)
		AF('l',struct A495,m9,1)
		AF('L',struct A495,m10,1)
		AF('j',struct A495,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{fCBBCBBCllLj}pl} */
#pragma pack(push,8)
struct A496 { struct A495 m0; p m1; l m2; };
#pragma pack(pop)
int f_cmpA496(const struct A496 *x, const struct A496 *y) { return f_cmpA495(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA496() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A496));
		AFa(struct A496,m0,1,A495)
		AF('p',struct A496,m1,1)
		AF('l',struct A496,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fj<pB{SlII}ciLI<IJpjf[7]JCBj>i{LJJdL}{CsSLCSsLlfcI}{fjdJiJJspsJJ}>jI{fLLIji}SC{{fCBBCBBCllLj}pl}LSJ} */
#pragma pack(push,2)
struct A497 { f m0; j m1; union A493 m2; j m3; I m4; struct A494 m5; S m6; C m7; struct A496 m8; L m9; S m10; J m11; };
#pragma pack(pop)
int f_cmpA497(const struct A497 *x, const struct A497 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA493(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA494(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA496(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA497() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A497));
		AF('f',struct A497,m0,1)
		AF('j',struct A497,m1,1)
		AFa(struct A497,m2,1,A493)
		AF('j',struct A497,m3,1)
		AF('I',struct A497,m4,1)
		AFa(struct A497,m5,1,A494)
		AF('S',struct A497,m6,1)
		AF('C',struct A497,m7,1)
		AFa(struct A497,m8,1,A496)
		AF('L',struct A497,m9,1)
		AF('S',struct A497,m10,1)
		AF('J',struct A497,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ficL> */
#pragma pack(push,4)
union A498 { f m0; i m1; c m2; L m3; };
#pragma pack(pop)
int f_cmpA498(const union A498 *x, const union A498 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA498() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A498));
		AF('f',union A498,m0,1)
		AF('i',union A498,m1,1)
		AF('c',union A498,m2,1)
		AF('L',union A498,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lJLcJLIsj> */
#pragma pack(push,4)
union A499 { l m0; J m1; L m2; c m3; J m4; L m5; I m6; s m7; j m8; };
#pragma pack(pop)
int f_cmpA499(const union A499 *x, const union A499 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA499() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A499));
		AF('l',union A499,m0,1)
		AF('J',union A499,m1,1)
		AF('L',union A499,m2,1)
		AF('c',union A499,m3,1)
		AF('J',union A499,m4,1)
		AF('L',union A499,m5,1)
		AF('I',union A499,m6,1)
		AF('s',union A499,m7,1)
		AF('j',union A499,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp} */
#pragma pack(push,4)
struct A500 { S m0; p m1; };
#pragma pack(pop)
int f_cmpA500(const struct A500 *x, const struct A500 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA500() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A500));
		AF('S',struct A500,m0,1)
		AF('p',struct A500,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L{Sp}lssCJdclCJ> */
#pragma pack(push,4)
union A501 { L m0; struct A500 m1; l m2; s m3; s m4; C m5; J m6; d m7; c m8; l m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA501(const union A501 *x, const union A501 *y) { return x->m0 == y->m0 && f_cmpA500(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA501() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A501));
		AF('L',union A501,m0,1)
		AFa(union A501,m1,1,A500)
		AF('l',union A501,m2,1)
		AF('s',union A501,m3,1)
		AF('s',union A501,m4,1)
		AF('C',union A501,m5,1)
		AF('J',union A501,m6,1)
		AF('d',union A501,m7,1)
		AF('c',union A501,m8,1)
		AF('l',union A501,m9,1)
		AF('C',union A501,m10,1)
		AF('J',union A501,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jcfcj} */
#pragma pack(push,4)
struct A502 { J m0; c m1; f m2; c m3; j m4; };
#pragma pack(pop)
int f_cmpA502(const struct A502 *x, const struct A502 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA502() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A502));
		AF('J',struct A502,m0,1)
		AF('c',struct A502,m1,1)
		AF('f',struct A502,m2,1)
		AF('c',struct A502,m3,1)
		AF('j',struct A502,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f{Jcfcj}jfjfdLIC[14]IL} */
#pragma pack(push,4)
struct A503 { f m0; struct A502 m1; j m2; f m3; j m4; f m5; d m6; L m7; I m8; C m9[14]; I m10; L m11; };
#pragma pack(pop)
int f_cmpA503(const struct A503 *x, const struct A503 *y) { return x->m0 == y->m0 && f_cmpA502(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m9[13] == y->m9[13] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA503() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A503));
		AF('f',struct A503,m0,1)
		AFa(struct A503,m1,1,A502)
		AF('j',struct A503,m2,1)
		AF('f',struct A503,m3,1)
		AF('j',struct A503,m4,1)
		AF('f',struct A503,m5,1)
		AF('d',struct A503,m6,1)
		AF('L',struct A503,m7,1)
		AF('I',struct A503,m8,1)
		AF('C',struct A503,m9,14)
		AF('I',struct A503,m10,1)
		AF('L',struct A503,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IICldsBSpBsJ} */
#pragma pack(push,1)
struct A504 { I m0; I m1; C m2; l m3; d m4; s m5; B m6; S m7; p m8; B m9; s m10; J m11; };
#pragma pack(pop)
int f_cmpA504(const struct A504 *x, const struct A504 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA504() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A504));
		AF('I',struct A504,m0,1)
		AF('I',struct A504,m1,1)
		AF('C',struct A504,m2,1)
		AF('l',struct A504,m3,1)
		AF('d',struct A504,m4,1)
		AF('s',struct A504,m5,1)
		AF('B',struct A504,m6,1)
		AF('S',struct A504,m7,1)
		AF('p',struct A504,m8,1)
		AF('B',struct A504,m9,1)
		AF('s',struct A504,m10,1)
		AF('J',struct A504,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCJ} */
#pragma pack(push,4)
struct A505 { d m0; C m1; J m2; };
#pragma pack(pop)
int f_cmpA505(const struct A505 *x, const struct A505 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA505() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A505));
		AF('d',struct A505,m0,1)
		AF('C',struct A505,m1,1)
		AF('J',struct A505,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fj{IICldsBSpBsJ}Cdicc{dCJ}pII} */
#pragma pack(push,4)
struct A506 { f m0; j m1; struct A504 m2; C m3; d m4; i m5; c m6; c m7; struct A505 m8; p m9; I m10; I m11; };
#pragma pack(pop)
int f_cmpA506(const struct A506 *x, const struct A506 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA504(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA505(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA506() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A506));
		AF('f',struct A506,m0,1)
		AF('j',struct A506,m1,1)
		AFa(struct A506,m2,1,A504)
		AF('C',struct A506,m3,1)
		AF('d',struct A506,m4,1)
		AF('i',struct A506,m5,1)
		AF('c',struct A506,m6,1)
		AF('c',struct A506,m7,1)
		AFa(struct A506,m8,1,A505)
		AF('p',struct A506,m9,1)
		AF('I',struct A506,m10,1)
		AF('I',struct A506,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ScpdisJpcddf> */
#pragma pack(push,4)
union A507 { S m0; c m1; p m2; d m3; i m4; s m5; J m6; p m7; c m8; d m9; d m10; f m11; };
#pragma pack(pop)
int f_cmpA507(const union A507 *x, const union A507 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA507() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A507));
		AF('S',union A507,m0,1)
		AF('c',union A507,m1,1)
		AF('p',union A507,m2,1)
		AF('d',union A507,m3,1)
		AF('i',union A507,m4,1)
		AF('s',union A507,m5,1)
		AF('J',union A507,m6,1)
		AF('p',union A507,m7,1)
		AF('c',union A507,m8,1)
		AF('d',union A507,m9,1)
		AF('d',union A507,m10,1)
		AF('f',union A507,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BdBcjssfcLJI> */
#pragma pack(push,4)
union A508 { B m0; d m1; B m2; c m3; j m4; s m5; s m6; f m7; c m8; L m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA508(const union A508 *x, const union A508 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA508() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A508));
		AF('B',union A508,m0,1)
		AF('d',union A508,m1,1)
		AF('B',union A508,m2,1)
		AF('c',union A508,m3,1)
		AF('j',union A508,m4,1)
		AF('s',union A508,m5,1)
		AF('s',union A508,m6,1)
		AF('f',union A508,m7,1)
		AF('c',union A508,m8,1)
		AF('L',union A508,m9,1)
		AF('J',union A508,m10,1)
		AF('I',union A508,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cic> */
#pragma pack(push,1)
union A509 { c m0; i m1; c m2; };
#pragma pack(pop)
int f_cmpA509(const union A509 *x, const union A509 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA509() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A509));
		AF('c',union A509,m0,1)
		AF('i',union A509,m1,1)
		AF('c',union A509,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CB<cic>ScfLBLBjJ} */
#pragma pack(push,2)
struct A510 { C m0; B m1; union A509 m2; S m3; c m4; f m5; L m6; B m7; L m8; B m9; j m10; J m11; };
#pragma pack(pop)
int f_cmpA510(const struct A510 *x, const struct A510 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA509(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA510() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A510));
		AF('C',struct A510,m0,1)
		AF('B',struct A510,m1,1)
		AFa(struct A510,m2,1,A509)
		AF('S',struct A510,m3,1)
		AF('c',struct A510,m4,1)
		AF('f',struct A510,m5,1)
		AF('L',struct A510,m6,1)
		AF('B',struct A510,m7,1)
		AF('L',struct A510,m8,1)
		AF('B',struct A510,m9,1)
		AF('j',struct A510,m10,1)
		AF('J',struct A510,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ClBsSI[15]cs[12]CJBc} */
#pragma pack(push,4)
struct A511 { C m0; l m1; B m2; s m3; S m4; I m5[15]; c m6; s m7[12]; C m8; J m9; B m10; c m11; };
#pragma pack(pop)
int f_cmpA511(const struct A511 *x, const struct A511 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m5[14] == y->m5[14] && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA511() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A511));
		AF('C',struct A511,m0,1)
		AF('l',struct A511,m1,1)
		AF('B',struct A511,m2,1)
		AF('s',struct A511,m3,1)
		AF('S',struct A511,m4,1)
		AF('I',struct A511,m5,15)
		AF('c',struct A511,m6,1)
		AF('s',struct A511,m7,12)
		AF('C',struct A511,m8,1)
		AF('J',struct A511,m9,1)
		AF('B',struct A511,m10,1)
		AF('c',struct A511,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{ClBsSI[15]cs[12]CJBc}JdJpLSIciss} */
#pragma pack(push,4)
struct A512 { struct A511 m0; J m1; d m2; J m3; p m4; L m5; S m6; I m7; c m8; i m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA512(const struct A512 *x, const struct A512 *y) { return f_cmpA511(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA512() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A512));
		AFa(struct A512,m0,1,A511)
		AF('J',struct A512,m1,1)
		AF('d',struct A512,m2,1)
		AF('J',struct A512,m3,1)
		AF('p',struct A512,m4,1)
		AF('L',struct A512,m5,1)
		AF('S',struct A512,m6,1)
		AF('I',struct A512,m7,1)
		AF('c',struct A512,m8,1)
		AF('i',struct A512,m9,1)
		AF('s',struct A512,m10,1)
		AF('s',struct A512,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsJiccif} */
#pragma pack(push,4)
struct A513 { f m0; s m1; J m2; i m3; c m4; c m5; i m6; f m7; };
#pragma pack(pop)
int f_cmpA513(const struct A513 *x, const struct A513 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA513() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A513));
		AF('f',struct A513,m0,1)
		AF('s',struct A513,m1,1)
		AF('J',struct A513,m2,1)
		AF('i',struct A513,m3,1)
		AF('c',struct A513,m4,1)
		AF('c',struct A513,m5,1)
		AF('i',struct A513,m6,1)
		AF('f',struct A513,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iBiBifJ[9]C{fsJiccif}CCl} */
#pragma pack(push,2)
struct A514 { i m0; B m1; i m2; B m3; i m4; f m5; J m6[9]; C m7; struct A513 m8; C m9; C m10; l m11; };
#pragma pack(pop)
int f_cmpA514(const struct A514 *x, const struct A514 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m7 == y->m7 && f_cmpA513(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA514() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A514));
		AF('i',struct A514,m0,1)
		AF('B',struct A514,m1,1)
		AF('i',struct A514,m2,1)
		AF('B',struct A514,m3,1)
		AF('i',struct A514,m4,1)
		AF('f',struct A514,m5,1)
		AF('J',struct A514,m6,9)
		AF('C',struct A514,m7,1)
		AFa(struct A514,m8,1,A513)
		AF('C',struct A514,m9,1)
		AF('C',struct A514,m10,1)
		AF('l',struct A514,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CiffBcCdIfj> */
#pragma pack(push,4)
union A515 { C m0; i m1; f m2; f m3; B m4; c m5; C m6; d m7; I m8; f m9; j m10; };
#pragma pack(pop)
int f_cmpA515(const union A515 *x, const union A515 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA515() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A515));
		AF('C',union A515,m0,1)
		AF('i',union A515,m1,1)
		AF('f',union A515,m2,1)
		AF('f',union A515,m3,1)
		AF('B',union A515,m4,1)
		AF('c',union A515,m5,1)
		AF('C',union A515,m6,1)
		AF('d',union A515,m7,1)
		AF('I',union A515,m8,1)
		AF('f',union A515,m9,1)
		AF('j',union A515,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJ> */
#pragma pack(push,2)
union A516 { c m0; J m1; };
#pragma pack(pop)
int f_cmpA516(const union A516 *x, const union A516 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA516() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A516));
		AF('c',union A516,m0,1)
		AF('J',union A516,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cjLCfpSJcfsp} */
#pragma pack(push,2)
struct A517 { c m0; j m1; L m2; C m3; f m4; p m5; S m6; J m7; c m8; f m9; s m10; p m11; };
#pragma pack(pop)
int f_cmpA517(const struct A517 *x, const struct A517 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA517() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A517));
		AF('c',struct A517,m0,1)
		AF('j',struct A517,m1,1)
		AF('L',struct A517,m2,1)
		AF('C',struct A517,m3,1)
		AF('f',struct A517,m4,1)
		AF('p',struct A517,m5,1)
		AF('S',struct A517,m6,1)
		AF('J',struct A517,m7,1)
		AF('c',struct A517,m8,1)
		AF('f',struct A517,m9,1)
		AF('s',struct A517,m10,1)
		AF('p',struct A517,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BJlLiLcCjIcS> */
#pragma pack(push,4)
union A518 { B m0; J m1; l m2; L m3; i m4; L m5; c m6; C m7; j m8; I m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA518(const union A518 *x, const union A518 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA518() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A518));
		AF('B',union A518,m0,1)
		AF('J',union A518,m1,1)
		AF('l',union A518,m2,1)
		AF('L',union A518,m3,1)
		AF('i',union A518,m4,1)
		AF('L',union A518,m5,1)
		AF('c',union A518,m6,1)
		AF('C',union A518,m7,1)
		AF('j',union A518,m8,1)
		AF('I',union A518,m9,1)
		AF('c',union A518,m10,1)
		AF('S',union A518,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSpJppd} */
#pragma pack(push,4)
struct A519 { c m0; S m1; p m2; J m3; p m4; p m5; d m6; };
#pragma pack(pop)
int f_cmpA519(const struct A519 *x, const struct A519 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA519() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A519));
		AF('c',struct A519,m0,1)
		AF('S',struct A519,m1,1)
		AF('p',struct A519,m2,1)
		AF('J',struct A519,m3,1)
		AF('p',struct A519,m4,1)
		AF('p',struct A519,m5,1)
		AF('d',struct A519,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {c} */
#pragma pack(push,2)
struct A520 { c m0; };
#pragma pack(pop)
int f_cmpA520(const struct A520 *x, const struct A520 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA520() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A520));
		AF('c',struct A520,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lclpSLfcIffC[14]} */
#pragma pack(push,2)
struct A521 { l m0; c m1; l m2; p m3; S m4; L m5; f m6; c m7; I m8; f m9; f m10; C m11[14]; };
#pragma pack(pop)
int f_cmpA521(const struct A521 *x, const struct A521 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13]; };
DCaggr* f_touchA521() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A521));
		AF('l',struct A521,m0,1)
		AF('c',struct A521,m1,1)
		AF('l',struct A521,m2,1)
		AF('p',struct A521,m3,1)
		AF('S',struct A521,m4,1)
		AF('L',struct A521,m5,1)
		AF('f',struct A521,m6,1)
		AF('c',struct A521,m7,1)
		AF('I',struct A521,m8,1)
		AF('f',struct A521,m9,1)
		AF('f',struct A521,m10,1)
		AF('C',struct A521,m11,14)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBIsJjBIJ} */
#pragma pack(push,2)
struct A522 { s m0; B m1; I m2; s m3; J m4; j m5; B m6; I m7; J m8; };
#pragma pack(pop)
int f_cmpA522(const struct A522 *x, const struct A522 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA522() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A522));
		AF('s',struct A522,m0,1)
		AF('B',struct A522,m1,1)
		AF('I',struct A522,m2,1)
		AF('s',struct A522,m3,1)
		AF('J',struct A522,m4,1)
		AF('j',struct A522,m5,1)
		AF('B',struct A522,m6,1)
		AF('I',struct A522,m7,1)
		AF('J',struct A522,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JipLS{lclpSLfcIffC[14]}{sBIsJjBIJ}IIplB} */
#pragma pack(push,4)
struct A523 { J m0; i m1; p m2; L m3; S m4; struct A521 m5; struct A522 m6; I m7; I m8; p m9; l m10; B m11; };
#pragma pack(pop)
int f_cmpA523(const struct A523 *x, const struct A523 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA521(&x->m5, &y->m5) && f_cmpA522(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA523() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A523));
		AF('J',struct A523,m0,1)
		AF('i',struct A523,m1,1)
		AF('p',struct A523,m2,1)
		AF('L',struct A523,m3,1)
		AF('S',struct A523,m4,1)
		AFa(struct A523,m5,1,A521)
		AFa(struct A523,m6,1,A522)
		AF('I',struct A523,m7,1)
		AF('I',struct A523,m8,1)
		AF('p',struct A523,m9,1)
		AF('l',struct A523,m10,1)
		AF('B',struct A523,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jfJICIscS} */
#pragma pack(push,4)
struct A524 { j m0; f m1; J m2; I m3; C m4; I m5; s m6; c m7; S m8; };
#pragma pack(pop)
int f_cmpA524(const struct A524 *x, const struct A524 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA524() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A524));
		AF('j',struct A524,m0,1)
		AF('f',struct A524,m1,1)
		AF('J',struct A524,m2,1)
		AF('I',struct A524,m3,1)
		AF('C',struct A524,m4,1)
		AF('I',struct A524,m5,1)
		AF('s',struct A524,m6,1)
		AF('c',struct A524,m7,1)
		AF('S',struct A524,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBcL} */
#pragma pack(push,2)
struct A525 { S m0; B m1; c m2; L m3; };
#pragma pack(pop)
int f_cmpA525(const struct A525 *x, const struct A525 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA525() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A525));
		AF('S',struct A525,m0,1)
		AF('B',struct A525,m1,1)
		AF('c',struct A525,m2,1)
		AF('L',struct A525,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcC} */
#pragma pack(push,2)
struct A526 { l m0; c m1; C m2; };
#pragma pack(pop)
int f_cmpA526(const struct A526 *x, const struct A526 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA526() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A526));
		AF('l',struct A526,m0,1)
		AF('c',struct A526,m1,1)
		AF('C',struct A526,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCdsjdIcj[4]lpI} */
#pragma pack(push,4)
struct A527 { p m0; C m1; d m2; s m3; j m4; d m5; I m6; c m7; j m8[4]; l m9; p m10; I m11; };
#pragma pack(pop)
int f_cmpA527(const struct A527 *x, const struct A527 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA527() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A527));
		AF('p',struct A527,m0,1)
		AF('C',struct A527,m1,1)
		AF('d',struct A527,m2,1)
		AF('s',struct A527,m3,1)
		AF('j',struct A527,m4,1)
		AF('d',struct A527,m5,1)
		AF('I',struct A527,m6,1)
		AF('c',struct A527,m7,1)
		AF('j',struct A527,m8,4)
		AF('l',struct A527,m9,1)
		AF('p',struct A527,m10,1)
		AF('I',struct A527,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jjCcSC{pCdsjdIcj[4]lpI}lLfIJ> */
#pragma pack(push,4)
union A528 { j m0; j m1; C m2; c m3; S m4; C m5; struct A527 m6; l m7; L m8; f m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA528(const union A528 *x, const union A528 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA527(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA528() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A528));
		AF('j',union A528,m0,1)
		AF('j',union A528,m1,1)
		AF('C',union A528,m2,1)
		AF('c',union A528,m3,1)
		AF('S',union A528,m4,1)
		AF('C',union A528,m5,1)
		AFa(union A528,m6,1,A527)
		AF('l',union A528,m7,1)
		AF('L',union A528,m8,1)
		AF('f',union A528,m9,1)
		AF('I',union A528,m10,1)
		AF('J',union A528,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Li> */
#pragma pack(push,1)
union A529 { L m0; i m1; };
#pragma pack(pop)
int f_cmpA529(const union A529 *x, const union A529 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA529() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A529));
		AF('L',union A529,m0,1)
		AF('i',union A529,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lsd[8]SppL> */
#pragma pack(push,4)
union A530 { L m0; s m1; d m2[8]; S m3; p m4; p m5; L m6; };
#pragma pack(pop)
int f_cmpA530(const union A530 *x, const union A530 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA530() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A530));
		AF('L',union A530,m0,1)
		AF('s',union A530,m1,1)
		AF('d',union A530,m2,8)
		AF('S',union A530,m3,1)
		AF('p',union A530,m4,1)
		AF('p',union A530,m5,1)
		AF('L',union A530,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JILl> */
#pragma pack(push,1)
union A531 { J m0; I m1; L m2; l m3; };
#pragma pack(pop)
int f_cmpA531(const union A531 *x, const union A531 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA531() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A531));
		AF('J',union A531,m0,1)
		AF('I',union A531,m1,1)
		AF('L',union A531,m2,1)
		AF('l',union A531,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d<Li><Lsd[8]SppL><JILl>lIcLLSfp> */
#pragma pack(push,4)
union A532 { d m0; union A529 m1; union A530 m2; union A531 m3; l m4; I m5; c m6; L m7; L m8; S m9; f m10; p m11; };
#pragma pack(pop)
int f_cmpA532(const union A532 *x, const union A532 *y) { return x->m0 == y->m0 && f_cmpA529(&x->m1, &y->m1) && f_cmpA530(&x->m2, &y->m2) && f_cmpA531(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA532() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A532));
		AF('d',union A532,m0,1)
		AFa(union A532,m1,1,A529)
		AFa(union A532,m2,1,A530)
		AFa(union A532,m3,1,A531)
		AF('l',union A532,m4,1)
		AF('I',union A532,m5,1)
		AF('c',union A532,m6,1)
		AF('L',union A532,m7,1)
		AF('L',union A532,m8,1)
		AF('S',union A532,m9,1)
		AF('f',union A532,m10,1)
		AF('p',union A532,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dsiISSpdL<jjCcSC{pCdsjdIcj[4]lpI}lLfIJ>j<d<Li><Lsd[8]SppL><JILl>lIcLLSfp>} */
#pragma pack(push,1)
struct A533 { d m0; s m1; i m2; I m3; S m4; S m5; p m6; d m7; L m8; union A528 m9; j m10; union A532 m11; };
#pragma pack(pop)
int f_cmpA533(const struct A533 *x, const struct A533 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA528(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA532(&x->m11, &y->m11); };
DCaggr* f_touchA533() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A533));
		AF('d',struct A533,m0,1)
		AF('s',struct A533,m1,1)
		AF('i',struct A533,m2,1)
		AF('I',struct A533,m3,1)
		AF('S',struct A533,m4,1)
		AF('S',struct A533,m5,1)
		AF('p',struct A533,m6,1)
		AF('d',struct A533,m7,1)
		AF('L',struct A533,m8,1)
		AFa(struct A533,m9,1,A528)
		AF('j',struct A533,m10,1)
		AFa(struct A533,m11,1,A532)
		dcCloseAggr(a);
	}
	return a;
};
/* {BdJdjssIJLpC} */
#pragma pack(push,4)
struct A534 { B m0; d m1; J m2; d m3; j m4; s m5; s m6; I m7; J m8; L m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA534(const struct A534 *x, const struct A534 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA534() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A534));
		AF('B',struct A534,m0,1)
		AF('d',struct A534,m1,1)
		AF('J',struct A534,m2,1)
		AF('d',struct A534,m3,1)
		AF('j',struct A534,m4,1)
		AF('s',struct A534,m5,1)
		AF('s',struct A534,m6,1)
		AF('I',struct A534,m7,1)
		AF('J',struct A534,m8,1)
		AF('L',struct A534,m9,1)
		AF('p',struct A534,m10,1)
		AF('C',struct A534,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cpllJljssS[13]f> */
#pragma pack(push,4)
union A535 { c m0; p m1; l m2; l m3; J m4; l m5; j m6; s m7; s m8; S m9[13]; f m10; };
#pragma pack(pop)
int f_cmpA535(const union A535 *x, const union A535 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m10 == y->m10; };
DCaggr* f_touchA535() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A535));
		AF('c',union A535,m0,1)
		AF('p',union A535,m1,1)
		AF('l',union A535,m2,1)
		AF('l',union A535,m3,1)
		AF('J',union A535,m4,1)
		AF('l',union A535,m5,1)
		AF('j',union A535,m6,1)
		AF('s',union A535,m7,1)
		AF('s',union A535,m8,1)
		AF('S',union A535,m9,13)
		AF('f',union A535,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i<cpllJljssS[13]f>jJBCsdpC[13]li> */
#pragma pack(push,4)
union A536 { i m0; union A535 m1; j m2; J m3; B m4; C m5; s m6; d m7; p m8; C m9[13]; l m10; i m11; };
#pragma pack(pop)
int f_cmpA536(const union A536 *x, const union A536 *y) { return x->m0 == y->m0 && f_cmpA535(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA536() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A536));
		AF('i',union A536,m0,1)
		AFa(union A536,m1,1,A535)
		AF('j',union A536,m2,1)
		AF('J',union A536,m3,1)
		AF('B',union A536,m4,1)
		AF('C',union A536,m5,1)
		AF('s',union A536,m6,1)
		AF('d',union A536,m7,1)
		AF('p',union A536,m8,1)
		AF('C',union A536,m9,13)
		AF('l',union A536,m10,1)
		AF('i',union A536,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sScSJdLL> */
#pragma pack(push,2)
union A537 { s m0; S m1; c m2; S m3; J m4; d m5; L m6; L m7; };
#pragma pack(pop)
int f_cmpA537(const union A537 *x, const union A537 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA537() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A537));
		AF('s',union A537,m0,1)
		AF('S',union A537,m1,1)
		AF('c',union A537,m2,1)
		AF('S',union A537,m3,1)
		AF('J',union A537,m4,1)
		AF('d',union A537,m5,1)
		AF('L',union A537,m6,1)
		AF('L',union A537,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ci<sScSJdLL>BjcCCcjpl> */
#pragma pack(push,4)
union A538 { c m0; i m1; union A537 m2; B m3; j m4; c m5; C m6; C m7; c m8; j m9; p m10; l m11; };
#pragma pack(pop)
int f_cmpA538(const union A538 *x, const union A538 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA537(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA538() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A538));
		AF('c',union A538,m0,1)
		AF('i',union A538,m1,1)
		AFa(union A538,m2,1,A537)
		AF('B',union A538,m3,1)
		AF('j',union A538,m4,1)
		AF('c',union A538,m5,1)
		AF('C',union A538,m6,1)
		AF('C',union A538,m7,1)
		AF('c',union A538,m8,1)
		AF('j',union A538,m9,1)
		AF('p',union A538,m10,1)
		AF('l',union A538,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsLC} */
#pragma pack(push,2)
struct A539 { l m0; s m1; L m2; C m3; };
#pragma pack(pop)
int f_cmpA539(const struct A539 *x, const struct A539 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA539() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A539));
		AF('l',struct A539,m0,1)
		AF('s',struct A539,m1,1)
		AF('L',struct A539,m2,1)
		AF('C',struct A539,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JCLBSi[13]LpILdJ} */
#pragma pack(push,2)
struct A540 { J m0; C m1; L m2; B m3; S m4; i m5[13]; L m6; p m7; I m8; L m9; d m10; J m11; };
#pragma pack(pop)
int f_cmpA540(const struct A540 *x, const struct A540 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA540() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A540));
		AF('J',struct A540,m0,1)
		AF('C',struct A540,m1,1)
		AF('L',struct A540,m2,1)
		AF('B',struct A540,m3,1)
		AF('S',struct A540,m4,1)
		AF('i',struct A540,m5,13)
		AF('L',struct A540,m6,1)
		AF('p',struct A540,m7,1)
		AF('I',struct A540,m8,1)
		AF('L',struct A540,m9,1)
		AF('d',struct A540,m10,1)
		AF('J',struct A540,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfJi{lsLC}JsjB[1]I{JCLBSi[13]LpILdJ}C} */
#pragma pack(push,8)
struct A541 { I m0; f m1; J m2; i m3; struct A539 m4; J m5; s m6; j m7; B m8[1]; I m9; struct A540 m10; C m11; };
#pragma pack(pop)
int f_cmpA541(const struct A541 *x, const struct A541 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA539(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m9 == y->m9 && f_cmpA540(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA541() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A541));
		AF('I',struct A541,m0,1)
		AF('f',struct A541,m1,1)
		AF('J',struct A541,m2,1)
		AF('i',struct A541,m3,1)
		AFa(struct A541,m4,1,A539)
		AF('J',struct A541,m5,1)
		AF('s',struct A541,m6,1)
		AF('j',struct A541,m7,1)
		AF('B',struct A541,m8,1)
		AF('I',struct A541,m9,1)
		AFa(struct A541,m10,1,A540)
		AF('C',struct A541,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JBL<i<cpllJljssS[13]f>jJBCsdpC[13]li>Bc<ci<sScSJdLL>BjcCCcjpl>fdI{IfJi{lsLC}JsjB[1]I{JCLBSi[13]LpILdJ}C}} */
#pragma pack(push,8)
struct A542 { J m0; B m1; L m2; union A536 m3; B m4; c m5; union A538 m6; f m7; d m8; I m9; struct A541 m10; };
#pragma pack(pop)
int f_cmpA542(const struct A542 *x, const struct A542 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA536(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA538(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA541(&x->m10, &y->m10); };
DCaggr* f_touchA542() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A542));
		AF('J',struct A542,m0,1)
		AF('B',struct A542,m1,1)
		AF('L',struct A542,m2,1)
		AFa(struct A542,m3,1,A536)
		AF('B',struct A542,m4,1)
		AF('c',struct A542,m5,1)
		AFa(struct A542,m6,1,A538)
		AF('f',struct A542,m7,1)
		AF('d',struct A542,m8,1)
		AF('I',struct A542,m9,1)
		AFa(struct A542,m10,1,A541)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJpCfcBICBfi> */
#pragma pack(push,1)
union A543 { f m0; J m1; p m2; C m3; f m4; c m5; B m6; I m7; C m8; B m9; f m10; i m11; };
#pragma pack(pop)
int f_cmpA543(const union A543 *x, const union A543 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA543() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A543));
		AF('f',union A543,m0,1)
		AF('J',union A543,m1,1)
		AF('p',union A543,m2,1)
		AF('C',union A543,m3,1)
		AF('f',union A543,m4,1)
		AF('c',union A543,m5,1)
		AF('B',union A543,m6,1)
		AF('I',union A543,m7,1)
		AF('C',union A543,m8,1)
		AF('B',union A543,m9,1)
		AF('f',union A543,m10,1)
		AF('i',union A543,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sSJlJC} */
#pragma pack(push,4)
struct A544 { s m0; S m1; J m2; l m3; J m4; C m5; };
#pragma pack(pop)
int f_cmpA544(const struct A544 *x, const struct A544 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA544() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A544));
		AF('s',struct A544,m0,1)
		AF('S',struct A544,m1,1)
		AF('J',struct A544,m2,1)
		AF('l',struct A544,m3,1)
		AF('J',struct A544,m4,1)
		AF('C',struct A544,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfpijijBJifi} */
#pragma pack(push,2)
struct A545 { c m0; f m1; p m2; i m3; j m4; i m5; j m6; B m7; J m8; i m9; f m10; i m11; };
#pragma pack(pop)
int f_cmpA545(const struct A545 *x, const struct A545 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA545() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A545));
		AF('c',struct A545,m0,1)
		AF('f',struct A545,m1,1)
		AF('p',struct A545,m2,1)
		AF('i',struct A545,m3,1)
		AF('j',struct A545,m4,1)
		AF('i',struct A545,m5,1)
		AF('j',struct A545,m6,1)
		AF('B',struct A545,m7,1)
		AF('J',struct A545,m8,1)
		AF('i',struct A545,m9,1)
		AF('f',struct A545,m10,1)
		AF('i',struct A545,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{cfpijijBJifi}} */
#pragma pack(push,4)
struct A546 { p m0; struct A545 m1; };
#pragma pack(pop)
int f_cmpA546(const struct A546 *x, const struct A546 *y) { return x->m0 == y->m0 && f_cmpA545(&x->m1, &y->m1); };
DCaggr* f_touchA546() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A546));
		AF('p',struct A546,m0,1)
		AFa(struct A546,m1,1,A545)
		dcCloseAggr(a);
	}
	return a;
};
/* <JL[9]dcfp> */
#pragma pack(push,2)
union A547 { J m0; L m1[9]; d m2; c m3; f m4; p m5; };
#pragma pack(pop)
int f_cmpA547(const union A547 *x, const union A547 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA547() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A547));
		AF('J',union A547,m0,1)
		AF('L',union A547,m1,9)
		AF('d',union A547,m2,1)
		AF('c',union A547,m3,1)
		AF('f',union A547,m4,1)
		AF('p',union A547,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<JL[9]dcfp>LJsff} */
#pragma pack(push,4)
struct A548 { union A547 m0; L m1; J m2; s m3; f m4; f m5; };
#pragma pack(pop)
int f_cmpA548(const struct A548 *x, const struct A548 *y) { return f_cmpA547(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA548() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A548));
		AFa(struct A548,m0,1,A547)
		AF('L',struct A548,m1,1)
		AF('J',struct A548,m2,1)
		AF('s',struct A548,m3,1)
		AF('f',struct A548,m4,1)
		AF('f',struct A548,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ip> */
#pragma pack(push,2)
union A549 { i m0; p m1; };
#pragma pack(pop)
int f_cmpA549(const union A549 *x, const union A549 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA549() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A549));
		AF('i',union A549,m0,1)
		AF('p',union A549,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdlclLiBjCjd} */
#pragma pack(push,8)
struct A550 { j m0; d m1; l m2; c m3; l m4; L m5; i m6; B m7; j m8; C m9; j m10; d m11; };
#pragma pack(pop)
int f_cmpA550(const struct A550 *x, const struct A550 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA550() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A550));
		AF('j',struct A550,m0,1)
		AF('d',struct A550,m1,1)
		AF('l',struct A550,m2,1)
		AF('c',struct A550,m3,1)
		AF('l',struct A550,m4,1)
		AF('L',struct A550,m5,1)
		AF('i',struct A550,m6,1)
		AF('B',struct A550,m7,1)
		AF('j',struct A550,m8,1)
		AF('C',struct A550,m9,1)
		AF('j',struct A550,m10,1)
		AF('d',struct A550,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jC> */
#pragma pack(push,8)
union A551 { j m0; C m1; };
#pragma pack(pop)
int f_cmpA551(const union A551 *x, const union A551 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA551() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A551));
		AF('j',union A551,m0,1)
		AF('C',union A551,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jc<jC>dCIjlIddd} */
#pragma pack(push,4)
struct A552 { J m0; c m1; union A551 m2; d m3; C m4; I m5; j m6; l m7; I m8; d m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA552(const struct A552 *x, const struct A552 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA551(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA552() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A552));
		AF('J',struct A552,m0,1)
		AF('c',struct A552,m1,1)
		AFa(struct A552,m2,1,A551)
		AF('d',struct A552,m3,1)
		AF('C',struct A552,m4,1)
		AF('I',struct A552,m5,1)
		AF('j',struct A552,m6,1)
		AF('l',struct A552,m7,1)
		AF('I',struct A552,m8,1)
		AF('d',struct A552,m9,1)
		AF('d',struct A552,m10,1)
		AF('d',struct A552,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i} */
#pragma pack(push,2)
struct A553 { i m0; };
#pragma pack(pop)
int f_cmpA553(const struct A553 *x, const struct A553 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA553() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A553));
		AF('i',struct A553,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BCfipdS> */
#pragma pack(push,4)
union A554 { B m0; C m1; f m2; i m3; p m4; d m5; S m6; };
#pragma pack(pop)
int f_cmpA554(const union A554 *x, const union A554 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA554() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A554));
		AF('B',union A554,m0,1)
		AF('C',union A554,m1,1)
		AF('f',union A554,m2,1)
		AF('i',union A554,m3,1)
		AF('p',union A554,m4,1)
		AF('d',union A554,m5,1)
		AF('S',union A554,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C> */
#pragma pack(push,2)
union A555 { C m0; };
#pragma pack(pop)
int f_cmpA555(const union A555 *x, const union A555 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA555() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A555));
		AF('C',union A555,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<l>SJCLjSJ<C>LCc} */
#pragma pack(push,4)
struct A556 { union A103 m0; S m1; J m2; C m3; L m4; j m5; S m6; J m7; union A555 m8; L m9; C m10; c m11; };
#pragma pack(pop)
int f_cmpA556(const struct A556 *x, const struct A556 *y) { return f_cmpA103(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA555(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA556() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A556));
		AFa(struct A556,m0,1,A103)
		AF('S',struct A556,m1,1)
		AF('J',struct A556,m2,1)
		AF('C',struct A556,m3,1)
		AF('L',struct A556,m4,1)
		AF('j',struct A556,m5,1)
		AF('S',struct A556,m6,1)
		AF('J',struct A556,m7,1)
		AFa(struct A556,m8,1,A555)
		AF('L',struct A556,m9,1)
		AF('C',struct A556,m10,1)
		AF('c',struct A556,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cIIdp} */
#pragma pack(push,4)
struct A557 { c m0; I m1; I m2; d m3; p m4; };
#pragma pack(pop)
int f_cmpA557(const struct A557 *x, const struct A557 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA557() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A557));
		AF('c',struct A557,m0,1)
		AF('I',struct A557,m1,1)
		AF('I',struct A557,m2,1)
		AF('d',struct A557,m3,1)
		AF('p',struct A557,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iIifcBsiiisp} */
#pragma pack(push,4)
struct A558 { i m0; I m1; i m2; f m3; c m4; B m5; s m6; i m7; i m8; i m9; s m10; p m11; };
#pragma pack(pop)
int f_cmpA558(const struct A558 *x, const struct A558 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA558() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A558));
		AF('i',struct A558,m0,1)
		AF('I',struct A558,m1,1)
		AF('i',struct A558,m2,1)
		AF('f',struct A558,m3,1)
		AF('c',struct A558,m4,1)
		AF('B',struct A558,m5,1)
		AF('s',struct A558,m6,1)
		AF('i',struct A558,m7,1)
		AF('i',struct A558,m8,1)
		AF('i',struct A558,m9,1)
		AF('s',struct A558,m10,1)
		AF('p',struct A558,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlIc} */
#pragma pack(push,1)
struct A559 { S m0; l m1; I m2; c m3; };
#pragma pack(pop)
int f_cmpA559(const struct A559 *x, const struct A559 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA559() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A559));
		AF('S',struct A559,m0,1)
		AF('l',struct A559,m1,1)
		AF('I',struct A559,m2,1)
		AF('c',struct A559,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cS{iIifcBsiiisp}lJJLlBf{SlIc}S} */
#pragma pack(push,4)
struct A560 { c m0; S m1; struct A558 m2; l m3; J m4; J m5; L m6; l m7; B m8; f m9; struct A559 m10; S m11; };
#pragma pack(pop)
int f_cmpA560(const struct A560 *x, const struct A560 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA558(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA559(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA560() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A560));
		AF('c',struct A560,m0,1)
		AF('S',struct A560,m1,1)
		AFa(struct A560,m2,1,A558)
		AF('l',struct A560,m3,1)
		AF('J',struct A560,m4,1)
		AF('J',struct A560,m5,1)
		AF('L',struct A560,m6,1)
		AF('l',struct A560,m7,1)
		AF('B',struct A560,m8,1)
		AF('f',struct A560,m9,1)
		AFa(struct A560,m10,1,A559)
		AF('S',struct A560,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jLIdJsLLScj[10]C> */
#pragma pack(push,2)
union A561 { j m0; L m1; I m2; d m3; J m4; s m5; L m6; L m7; S m8; c m9; j m10[10]; C m11; };
#pragma pack(pop)
int f_cmpA561(const union A561 *x, const union A561 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m11 == y->m11; };
DCaggr* f_touchA561() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A561));
		AF('j',union A561,m0,1)
		AF('L',union A561,m1,1)
		AF('I',union A561,m2,1)
		AF('d',union A561,m3,1)
		AF('J',union A561,m4,1)
		AF('s',union A561,m5,1)
		AF('L',union A561,m6,1)
		AF('L',union A561,m7,1)
		AF('S',union A561,m8,1)
		AF('c',union A561,m9,1)
		AF('j',union A561,m10,10)
		AF('C',union A561,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djci{cS{iIifcBsiiisp}lJJLlBf{SlIc}S}dSfI<jLIdJsLLScj[10]C>c[15]c} */
#pragma pack(push,1)
struct A562 { d m0; j m1; c m2; i m3; struct A560 m4; d m5; S m6; f m7; I m8; union A561 m9; c m10[15]; c m11; };
#pragma pack(pop)
int f_cmpA562(const struct A562 *x, const struct A562 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA560(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA561(&x->m9, &y->m9) && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m10[11] == y->m10[11] && x->m10[12] == y->m10[12] && x->m10[13] == y->m10[13] && x->m10[14] == y->m10[14] && x->m11 == y->m11; };
DCaggr* f_touchA562() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A562));
		AF('d',struct A562,m0,1)
		AF('j',struct A562,m1,1)
		AF('c',struct A562,m2,1)
		AF('i',struct A562,m3,1)
		AFa(struct A562,m4,1,A560)
		AF('d',struct A562,m5,1)
		AF('S',struct A562,m6,1)
		AF('f',struct A562,m7,1)
		AF('I',struct A562,m8,1)
		AFa(struct A562,m9,1,A561)
		AF('c',struct A562,m10,15)
		AF('c',struct A562,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCBJjjfllJil> */
#pragma pack(push,4)
union A563 { s m0; C m1; B m2; J m3; j m4; j m5; f m6; l m7; l m8; J m9; i m10; l m11; };
#pragma pack(pop)
int f_cmpA563(const union A563 *x, const union A563 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA563() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A563));
		AF('s',union A563,m0,1)
		AF('C',union A563,m1,1)
		AF('B',union A563,m2,1)
		AF('J',union A563,m3,1)
		AF('j',union A563,m4,1)
		AF('j',union A563,m5,1)
		AF('f',union A563,m6,1)
		AF('l',union A563,m7,1)
		AF('l',union A563,m8,1)
		AF('J',union A563,m9,1)
		AF('i',union A563,m10,1)
		AF('l',union A563,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CJ<sCBJjjfllJil>iSJISpcdi} */
#pragma pack(push,2)
struct A564 { C m0; J m1; union A563 m2; i m3; S m4; J m5; I m6; S m7; p m8; c m9; d m10; i m11; };
#pragma pack(pop)
int f_cmpA564(const struct A564 *x, const struct A564 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA563(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA564() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A564));
		AF('C',struct A564,m0,1)
		AF('J',struct A564,m1,1)
		AFa(struct A564,m2,1,A563)
		AF('i',struct A564,m3,1)
		AF('S',struct A564,m4,1)
		AF('J',struct A564,m5,1)
		AF('I',struct A564,m6,1)
		AF('S',struct A564,m7,1)
		AF('p',struct A564,m8,1)
		AF('c',struct A564,m9,1)
		AF('d',struct A564,m10,1)
		AF('i',struct A564,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iCc> */
#pragma pack(push,4)
union A565 { i m0; C m1; c m2; };
#pragma pack(pop)
int f_cmpA565(const union A565 *x, const union A565 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA565() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A565));
		AF('i',union A565,m0,1)
		AF('C',union A565,m1,1)
		AF('c',union A565,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJlIfBJBJsfL} */
#pragma pack(push,2)
struct A566 { S m0; J m1; l m2; I m3; f m4; B m5; J m6; B m7; J m8; s m9; f m10; L m11; };
#pragma pack(pop)
int f_cmpA566(const struct A566 *x, const struct A566 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA566() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A566));
		AF('S',struct A566,m0,1)
		AF('J',struct A566,m1,1)
		AF('l',struct A566,m2,1)
		AF('I',struct A566,m3,1)
		AF('f',struct A566,m4,1)
		AF('B',struct A566,m5,1)
		AF('J',struct A566,m6,1)
		AF('B',struct A566,m7,1)
		AF('J',struct A566,m8,1)
		AF('s',struct A566,m9,1)
		AF('f',struct A566,m10,1)
		AF('L',struct A566,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iB{SJlIfBJBJsfL}JLlcfclfj> */
#pragma pack(push,4)
union A567 { i m0; B m1; struct A566 m2; J m3; L m4; l m5; c m6; f m7; c m8; l m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA567(const union A567 *x, const union A567 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA566(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA567() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A567));
		AF('i',union A567,m0,1)
		AF('B',union A567,m1,1)
		AFa(union A567,m2,1,A566)
		AF('J',union A567,m3,1)
		AF('L',union A567,m4,1)
		AF('l',union A567,m5,1)
		AF('c',union A567,m6,1)
		AF('f',union A567,m7,1)
		AF('c',union A567,m8,1)
		AF('l',union A567,m9,1)
		AF('f',union A567,m10,1)
		AF('j',union A567,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cc[5]lLfSIipipp> */
#pragma pack(push,4)
union A568 { C m0; c m1[5]; l m2; L m3; f m4; S m5; I m6; i m7; p m8; i m9; p m10; p m11; };
#pragma pack(pop)
int f_cmpA568(const union A568 *x, const union A568 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA568() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A568));
		AF('C',union A568,m0,1)
		AF('c',union A568,m1,5)
		AF('l',union A568,m2,1)
		AF('L',union A568,m3,1)
		AF('f',union A568,m4,1)
		AF('S',union A568,m5,1)
		AF('I',union A568,m6,1)
		AF('i',union A568,m7,1)
		AF('p',union A568,m8,1)
		AF('i',union A568,m9,1)
		AF('p',union A568,m10,1)
		AF('p',union A568,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dS> */
#pragma pack(push,8)
union A569 { d m0; S m1; };
#pragma pack(pop)
int f_cmpA569(const union A569 *x, const union A569 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA569() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A569));
		AF('d',union A569,m0,1)
		AF('S',union A569,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cllslcjijIiB} */
#pragma pack(push,2)
struct A570 { c m0; l m1; l m2; s m3; l m4; c m5; j m6; i m7; j m8; I m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA570(const struct A570 *x, const struct A570 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA570() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A570));
		AF('c',struct A570,m0,1)
		AF('l',struct A570,m1,1)
		AF('l',struct A570,m2,1)
		AF('s',struct A570,m3,1)
		AF('l',struct A570,m4,1)
		AF('c',struct A570,m5,1)
		AF('j',struct A570,m6,1)
		AF('i',struct A570,m7,1)
		AF('j',struct A570,m8,1)
		AF('I',struct A570,m9,1)
		AF('i',struct A570,m10,1)
		AF('B',struct A570,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BIs<dS>Ip{cllslcjijIiB}lBpLi> */
#pragma pack(push,1)
union A571 { B m0; I m1; s m2; union A569 m3; I m4; p m5; struct A570 m6; l m7; B m8; p m9; L m10; i m11; };
#pragma pack(pop)
int f_cmpA571(const union A571 *x, const union A571 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA569(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA570(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA571() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A571));
		AF('B',union A571,m0,1)
		AF('I',union A571,m1,1)
		AF('s',union A571,m2,1)
		AFa(union A571,m3,1,A569)
		AF('I',union A571,m4,1)
		AF('p',union A571,m5,1)
		AFa(union A571,m6,1,A570)
		AF('l',union A571,m7,1)
		AF('B',union A571,m8,1)
		AF('p',union A571,m9,1)
		AF('L',union A571,m10,1)
		AF('i',union A571,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B[5]CfLjfLBdsIi> */
#pragma pack(push,8)
union A572 { B m0[5]; C m1; f m2; L m3; j m4; f m5; L m6; B m7; d m8; s m9; I m10; i m11; };
#pragma pack(pop)
int f_cmpA572(const union A572 *x, const union A572 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA572() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A572));
		AF('B',union A572,m0,5)
		AF('C',union A572,m1,1)
		AF('f',union A572,m2,1)
		AF('L',union A572,m3,1)
		AF('j',union A572,m4,1)
		AF('f',union A572,m5,1)
		AF('L',union A572,m6,1)
		AF('B',union A572,m7,1)
		AF('d',union A572,m8,1)
		AF('s',union A572,m9,1)
		AF('I',union A572,m10,1)
		AF('i',union A572,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {clISCSLSIsff} */
#pragma pack(push,2)
struct A573 { c m0; l m1; I m2; S m3; C m4; S m5; L m6; S m7; I m8; s m9; f m10; f m11; };
#pragma pack(pop)
int f_cmpA573(const struct A573 *x, const struct A573 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA573() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A573));
		AF('c',struct A573,m0,1)
		AF('l',struct A573,m1,1)
		AF('I',struct A573,m2,1)
		AF('S',struct A573,m3,1)
		AF('C',struct A573,m4,1)
		AF('S',struct A573,m5,1)
		AF('L',struct A573,m6,1)
		AF('S',struct A573,m7,1)
		AF('I',struct A573,m8,1)
		AF('s',struct A573,m9,1)
		AF('f',struct A573,m10,1)
		AF('f',struct A573,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {c<B[5]CfLjfLBdsIi>L[7]LfcSCJIp{clISCSLSIsff}} */
#pragma pack(push,2)
struct A574 { c m0; union A572 m1; L m2[7]; L m3; f m4; c m5; S m6; C m7; J m8; I m9; p m10; struct A573 m11; };
#pragma pack(pop)
int f_cmpA574(const struct A574 *x, const struct A574 *y) { return x->m0 == y->m0 && f_cmpA572(&x->m1, &y->m1) && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA573(&x->m11, &y->m11); };
DCaggr* f_touchA574() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A574));
		AF('c',struct A574,m0,1)
		AFa(struct A574,m1,1,A572)
		AF('L',struct A574,m2,7)
		AF('L',struct A574,m3,1)
		AF('f',struct A574,m4,1)
		AF('c',struct A574,m5,1)
		AF('S',struct A574,m6,1)
		AF('C',struct A574,m7,1)
		AF('J',struct A574,m8,1)
		AF('I',struct A574,m9,1)
		AF('p',struct A574,m10,1)
		AFa(struct A574,m11,1,A573)
		dcCloseAggr(a);
	}
	return a;
};
/* {<BIs<dS>Ip{cllslcjijIiB}lBpLi>pIsCCj{c<B[5]CfLjfLBdsIi>L[7]LfcSCJIp{clISCSLSIsff}}SdSd} */
#pragma pack(push,4)
struct A575 { union A571 m0; p m1; I m2; s m3; C m4; C m5; j m6; struct A574 m7; S m8; d m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA575(const struct A575 *x, const struct A575 *y) { return f_cmpA571(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA574(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA575() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A575));
		AFa(struct A575,m0,1,A571)
		AF('p',struct A575,m1,1)
		AF('I',struct A575,m2,1)
		AF('s',struct A575,m3,1)
		AF('C',struct A575,m4,1)
		AF('C',struct A575,m5,1)
		AF('j',struct A575,m6,1)
		AFa(struct A575,m7,1,A574)
		AF('S',struct A575,m8,1)
		AF('d',struct A575,m9,1)
		AF('S',struct A575,m10,1)
		AF('d',struct A575,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJf> */
#pragma pack(push,4)
union A576 { s m0; J m1; f m2; };
#pragma pack(pop)
int f_cmpA576(const union A576 *x, const union A576 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA576() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A576));
		AF('s',union A576,m0,1)
		AF('J',union A576,m1,1)
		AF('f',union A576,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LSjdscBIs> */
#pragma pack(push,1)
union A577 { L m0; S m1; j m2; d m3; s m4; c m5; B m6; I m7; s m8; };
#pragma pack(pop)
int f_cmpA577(const union A577 *x, const union A577 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA577() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A577));
		AF('L',union A577,m0,1)
		AF('S',union A577,m1,1)
		AF('j',union A577,m2,1)
		AF('d',union A577,m3,1)
		AF('s',union A577,m4,1)
		AF('c',union A577,m5,1)
		AF('B',union A577,m6,1)
		AF('I',union A577,m7,1)
		AF('s',union A577,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CS[8]} */
#pragma pack(push,4)
struct A578 { C m0; S m1[8]; };
#pragma pack(pop)
int f_cmpA578(const struct A578 *x, const struct A578 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7]; };
DCaggr* f_touchA578() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A578));
		AF('C',struct A578,m0,1)
		AF('S',struct A578,m1,8)
		dcCloseAggr(a);
	}
	return a;
};
/* <pfslSijiLlii> */
#pragma pack(push,2)
union A579 { p m0; f m1; s m2; l m3; S m4; i m5; j m6; i m7; L m8; l m9; i m10; i m11; };
#pragma pack(pop)
int f_cmpA579(const union A579 *x, const union A579 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA579() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A579));
		AF('p',union A579,m0,1)
		AF('f',union A579,m1,1)
		AF('s',union A579,m2,1)
		AF('l',union A579,m3,1)
		AF('S',union A579,m4,1)
		AF('i',union A579,m5,1)
		AF('j',union A579,m6,1)
		AF('i',union A579,m7,1)
		AF('L',union A579,m8,1)
		AF('l',union A579,m9,1)
		AF('i',union A579,m10,1)
		AF('i',union A579,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sSJlJssIfCJs> */
#pragma pack(push,2)
union A580 { s m0; S m1; J m2; l m3; J m4; s m5; s m6; I m7; f m8; C m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA580(const union A580 *x, const union A580 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA580() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A580));
		AF('s',union A580,m0,1)
		AF('S',union A580,m1,1)
		AF('J',union A580,m2,1)
		AF('l',union A580,m3,1)
		AF('J',union A580,m4,1)
		AF('s',union A580,m5,1)
		AF('s',union A580,m6,1)
		AF('I',union A580,m7,1)
		AF('f',union A580,m8,1)
		AF('C',union A580,m9,1)
		AF('J',union A580,m10,1)
		AF('s',union A580,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CpjLsCf<pfslSijiLlii><sSJlJssIfCJs>pL[6]B} */
#pragma pack(push,4)
struct A581 { C m0; p m1; j m2; L m3; s m4; C m5; f m6; union A579 m7; union A580 m8; p m9; L m10[6]; B m11; };
#pragma pack(pop)
int f_cmpA581(const struct A581 *x, const struct A581 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA579(&x->m7, &y->m7) && f_cmpA580(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m11 == y->m11; };
DCaggr* f_touchA581() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A581));
		AF('C',struct A581,m0,1)
		AF('p',struct A581,m1,1)
		AF('j',struct A581,m2,1)
		AF('L',struct A581,m3,1)
		AF('s',struct A581,m4,1)
		AF('C',struct A581,m5,1)
		AF('f',struct A581,m6,1)
		AFa(struct A581,m7,1,A579)
		AFa(struct A581,m8,1,A580)
		AF('p',struct A581,m9,1)
		AF('L',struct A581,m10,6)
		AF('B',struct A581,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LBdJB[8]LBBSjfB} */
#pragma pack(push,1)
struct A582 { L m0; B m1; d m2; J m3; B m4[8]; L m5; B m6; B m7; S m8; j m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA582(const struct A582 *x, const struct A582 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA582() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A582));
		AF('L',struct A582,m0,1)
		AF('B',struct A582,m1,1)
		AF('d',struct A582,m2,1)
		AF('J',struct A582,m3,1)
		AF('B',struct A582,m4,8)
		AF('L',struct A582,m5,1)
		AF('B',struct A582,m6,1)
		AF('B',struct A582,m7,1)
		AF('S',struct A582,m8,1)
		AF('j',struct A582,m9,1)
		AF('f',struct A582,m10,1)
		AF('B',struct A582,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ip{LBdJB[8]LBBSjfB}JiJp[12]sjsfj> */
#pragma pack(push,4)
union A583 { i m0; p m1; struct A582 m2; J m3; i m4; J m5; p m6[12]; s m7; j m8; s m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA583(const union A583 *x, const union A583 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA582(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA583() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A583));
		AF('i',union A583,m0,1)
		AF('p',union A583,m1,1)
		AFa(union A583,m2,1,A582)
		AF('J',union A583,m3,1)
		AF('i',union A583,m4,1)
		AF('J',union A583,m5,1)
		AF('p',union A583,m6,12)
		AF('s',union A583,m7,1)
		AF('j',union A583,m8,1)
		AF('s',union A583,m9,1)
		AF('f',union A583,m10,1)
		AF('j',union A583,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ilIiSjfS{CpjLsCf<pfslSijiLlii><sSJlJssIfCJs>pL[6]B}<ip{LBdJB[8]LBBSjfB}JiJp[12]sjsfj>fs} */
#pragma pack(push,1)
struct A584 { i m0; l m1; I m2; i m3; S m4; j m5; f m6; S m7; struct A581 m8; union A583 m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA584(const struct A584 *x, const struct A584 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA581(&x->m8, &y->m8) && f_cmpA583(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA584() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A584));
		AF('i',struct A584,m0,1)
		AF('l',struct A584,m1,1)
		AF('I',struct A584,m2,1)
		AF('i',struct A584,m3,1)
		AF('S',struct A584,m4,1)
		AF('j',struct A584,m5,1)
		AF('f',struct A584,m6,1)
		AF('S',struct A584,m7,1)
		AFa(struct A584,m8,1,A581)
		AFa(struct A584,m9,1,A583)
		AF('f',struct A584,m10,1)
		AF('s',struct A584,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {icBjSLCCcljC} */
#pragma pack(push,4)
struct A585 { i m0; c m1; B m2; j m3; S m4; L m5; C m6; C m7; c m8; l m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA585(const struct A585 *x, const struct A585 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA585() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A585));
		AF('i',struct A585,m0,1)
		AF('c',struct A585,m1,1)
		AF('B',struct A585,m2,1)
		AF('j',struct A585,m3,1)
		AF('S',struct A585,m4,1)
		AF('L',struct A585,m5,1)
		AF('C',struct A585,m6,1)
		AF('C',struct A585,m7,1)
		AF('c',struct A585,m8,1)
		AF('l',struct A585,m9,1)
		AF('j',struct A585,m10,1)
		AF('C',struct A585,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dsIBLpiBjdBp> */
#pragma pack(push,8)
union A586 { d m0; s m1; I m2; B m3; L m4; p m5; i m6; B m7; j m8; d m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA586(const union A586 *x, const union A586 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA586() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A586));
		AF('d',union A586,m0,1)
		AF('s',union A586,m1,1)
		AF('I',union A586,m2,1)
		AF('B',union A586,m3,1)
		AF('L',union A586,m4,1)
		AF('p',union A586,m5,1)
		AF('i',union A586,m6,1)
		AF('B',union A586,m7,1)
		AF('j',union A586,m8,1)
		AF('d',union A586,m9,1)
		AF('B',union A586,m10,1)
		AF('p',union A586,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BlsISSJLj> */
#pragma pack(push,4)
union A587 { B m0; l m1; s m2; I m3; S m4; S m5; J m6; L m7; j m8; };
#pragma pack(pop)
int f_cmpA587(const union A587 *x, const union A587 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA587() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A587));
		AF('B',union A587,m0,1)
		AF('l',union A587,m1,1)
		AF('s',union A587,m2,1)
		AF('I',union A587,m3,1)
		AF('S',union A587,m4,1)
		AF('S',union A587,m5,1)
		AF('J',union A587,m6,1)
		AF('L',union A587,m7,1)
		AF('j',union A587,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pLI} */
#pragma pack(push,2)
struct A588 { p m0; L m1; I m2; };
#pragma pack(pop)
int f_cmpA588(const struct A588 *x, const struct A588 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA588() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A588));
		AF('p',struct A588,m0,1)
		AF('L',struct A588,m1,1)
		AF('I',struct A588,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I{icBjSLCCcljC}BdB<dsIBLpiBjdBp>di<BlsISSJLj>{pLI}} */
#pragma pack(push,4)
struct A589 { I m0; struct A585 m1; B m2; d m3; B m4; union A586 m5; d m6; i m7; union A587 m8; struct A588 m9; };
#pragma pack(pop)
int f_cmpA589(const struct A589 *x, const struct A589 *y) { return x->m0 == y->m0 && f_cmpA585(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA586(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA587(&x->m8, &y->m8) && f_cmpA588(&x->m9, &y->m9); };
DCaggr* f_touchA589() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A589));
		AF('I',struct A589,m0,1)
		AFa(struct A589,m1,1,A585)
		AF('B',struct A589,m2,1)
		AF('d',struct A589,m3,1)
		AF('B',struct A589,m4,1)
		AFa(struct A589,m5,1,A586)
		AF('d',struct A589,m6,1)
		AF('i',struct A589,m7,1)
		AFa(struct A589,m8,1,A587)
		AFa(struct A589,m9,1,A588)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSdIclBdILdd> */
#pragma pack(push,4)
union A590 { l m0; S m1; d m2; I m3; c m4; l m5; B m6; d m7; I m8; L m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA590(const union A590 *x, const union A590 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA590() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A590));
		AF('l',union A590,m0,1)
		AF('S',union A590,m1,1)
		AF('d',union A590,m2,1)
		AF('I',union A590,m3,1)
		AF('c',union A590,m4,1)
		AF('l',union A590,m5,1)
		AF('B',union A590,m6,1)
		AF('d',union A590,m7,1)
		AF('I',union A590,m8,1)
		AF('L',union A590,m9,1)
		AF('d',union A590,m10,1)
		AF('d',union A590,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bl} */
#pragma pack(push,4)
struct A591 { B m0; l m1; };
#pragma pack(pop)
int f_cmpA591(const struct A591 *x, const struct A591 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA591() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A591));
		AF('B',struct A591,m0,1)
		AF('l',struct A591,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LfCS} */
#pragma pack(push,8)
struct A592 { L m0; f m1; C m2; S m3; };
#pragma pack(pop)
int f_cmpA592(const struct A592 *x, const struct A592 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA592() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A592));
		AF('L',struct A592,m0,1)
		AF('f',struct A592,m1,1)
		AF('C',struct A592,m2,1)
		AF('S',struct A592,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l} */
#pragma pack(push,4)
struct A593 { l m0; };
#pragma pack(pop)
int f_cmpA593(const struct A593 *x, const struct A593 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA593() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A593));
		AF('l',struct A593,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fisLS} */
#pragma pack(push,2)
struct A594 { f m0; i m1; s m2; L m3; S m4; };
#pragma pack(pop)
int f_cmpA594(const struct A594 *x, const struct A594 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA594() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A594));
		AF('f',struct A594,m0,1)
		AF('i',struct A594,m1,1)
		AF('s',struct A594,m2,1)
		AF('L',struct A594,m3,1)
		AF('S',struct A594,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dcC} */
#pragma pack(push,2)
struct A595 { d m0; c m1; C m2; };
#pragma pack(pop)
int f_cmpA595(const struct A595 *x, const struct A595 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA595() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A595));
		AF('d',struct A595,m0,1)
		AF('c',struct A595,m1,1)
		AF('C',struct A595,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fp} */
#pragma pack(push,2)
struct A596 { f m0; p m1; };
#pragma pack(pop)
int f_cmpA596(const struct A596 *x, const struct A596 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA596() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A596));
		AF('f',struct A596,m0,1)
		AF('p',struct A596,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lidclCLBpdC} */
#pragma pack(push,4)
struct A597 { l m0; i m1; d m2; c m3; l m4; C m5; L m6; B m7; p m8; d m9; C m10; };
#pragma pack(pop)
int f_cmpA597(const struct A597 *x, const struct A597 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA597() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A597));
		AF('l',struct A597,m0,1)
		AF('i',struct A597,m1,1)
		AF('d',struct A597,m2,1)
		AF('c',struct A597,m3,1)
		AF('l',struct A597,m4,1)
		AF('C',struct A597,m5,1)
		AF('L',struct A597,m6,1)
		AF('B',struct A597,m7,1)
		AF('p',struct A597,m8,1)
		AF('d',struct A597,m9,1)
		AF('C',struct A597,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BS{lidclCLBpdC}JdpSBddCC} */
#pragma pack(push,1)
struct A598 { B m0; S m1; struct A597 m2; J m3; d m4; p m5; S m6; B m7; d m8; d m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA598(const struct A598 *x, const struct A598 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA597(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA598() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A598));
		AF('B',struct A598,m0,1)
		AF('S',struct A598,m1,1)
		AFa(struct A598,m2,1,A597)
		AF('J',struct A598,m3,1)
		AF('d',struct A598,m4,1)
		AF('p',struct A598,m5,1)
		AF('S',struct A598,m6,1)
		AF('B',struct A598,m7,1)
		AF('d',struct A598,m8,1)
		AF('d',struct A598,m9,1)
		AF('C',struct A598,m10,1)
		AF('C',struct A598,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iC{BS{lidclCLBpdC}JdpSBddCC}C} */
#pragma pack(push,1)
struct A599 { i m0; C m1; struct A598 m2; C m3; };
#pragma pack(pop)
int f_cmpA599(const struct A599 *x, const struct A599 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA598(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA599() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A599));
		AF('i',struct A599,m0,1)
		AF('C',struct A599,m1,1)
		AFa(struct A599,m2,1,A598)
		AF('C',struct A599,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iciIIJBslJfs} */
#pragma pack(push,4)
struct A600 { i m0; c m1; i m2; I m3; I m4; J m5; B m6; s m7; l m8; J m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA600(const struct A600 *x, const struct A600 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA600() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A600));
		AF('i',struct A600,m0,1)
		AF('c',struct A600,m1,1)
		AF('i',struct A600,m2,1)
		AF('I',struct A600,m3,1)
		AF('I',struct A600,m4,1)
		AF('J',struct A600,m5,1)
		AF('B',struct A600,m6,1)
		AF('s',struct A600,m7,1)
		AF('l',struct A600,m8,1)
		AF('J',struct A600,m9,1)
		AF('f',struct A600,m10,1)
		AF('s',struct A600,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <id> */
#pragma pack(push,2)
union A601 { i m0; d m1; };
#pragma pack(pop)
int f_cmpA601(const union A601 *x, const union A601 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA601() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A601));
		AF('i',union A601,m0,1)
		AF('d',union A601,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBsjCjdpLJJs} */
#pragma pack(push,2)
struct A602 { I m0; B m1; s m2; j m3; C m4; j m5; d m6; p m7; L m8; J m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA602(const struct A602 *x, const struct A602 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA602() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A602));
		AF('I',struct A602,m0,1)
		AF('B',struct A602,m1,1)
		AF('s',struct A602,m2,1)
		AF('j',struct A602,m3,1)
		AF('C',struct A602,m4,1)
		AF('j',struct A602,m5,1)
		AF('d',struct A602,m6,1)
		AF('p',struct A602,m7,1)
		AF('L',struct A602,m8,1)
		AF('J',struct A602,m9,1)
		AF('J',struct A602,m10,1)
		AF('s',struct A602,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S{IBsjCjdpLJJs}psBIj> */
#pragma pack(push,4)
union A603 { S m0; struct A602 m1; p m2; s m3; B m4; I m5; j m6; };
#pragma pack(pop)
int f_cmpA603(const union A603 *x, const union A603 *y) { return x->m0 == y->m0 && f_cmpA602(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA603() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A603));
		AF('S',union A603,m0,1)
		AFa(union A603,m1,1,A602)
		AF('p',union A603,m2,1)
		AF('s',union A603,m3,1)
		AF('B',union A603,m4,1)
		AF('I',union A603,m5,1)
		AF('j',union A603,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B> */
#pragma pack(push,4)
union A604 { B m0; };
#pragma pack(pop)
int f_cmpA604(const union A604 *x, const union A604 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA604() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A604));
		AF('B',union A604,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iiSsfipICpIp} */
#pragma pack(push,2)
struct A605 { i m0; i m1; S m2; s m3; f m4; i m5; p m6; I m7; C m8; p m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA605(const struct A605 *x, const struct A605 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA605() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A605));
		AF('i',struct A605,m0,1)
		AF('i',struct A605,m1,1)
		AF('S',struct A605,m2,1)
		AF('s',struct A605,m3,1)
		AF('f',struct A605,m4,1)
		AF('i',struct A605,m5,1)
		AF('p',struct A605,m6,1)
		AF('I',struct A605,m7,1)
		AF('C',struct A605,m8,1)
		AF('p',struct A605,m9,1)
		AF('I',struct A605,m10,1)
		AF('p',struct A605,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCLij> */
#pragma pack(push,2)
union A606 { p m0; C m1; L m2; i m3; j m4; };
#pragma pack(pop)
int f_cmpA606(const union A606 *x, const union A606 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA606() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A606));
		AF('p',union A606,m0,1)
		AF('C',union A606,m1,1)
		AF('L',union A606,m2,1)
		AF('i',union A606,m3,1)
		AF('j',union A606,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ffBdLlBCIl> */
#pragma pack(push,8)
union A607 { f m0; f m1; B m2; d m3; L m4; l m5; B m6; C m7; I m8; l m9; };
#pragma pack(pop)
int f_cmpA607(const union A607 *x, const union A607 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA607() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A607));
		AF('f',union A607,m0,1)
		AF('f',union A607,m1,1)
		AF('B',union A607,m2,1)
		AF('d',union A607,m3,1)
		AF('L',union A607,m4,1)
		AF('l',union A607,m5,1)
		AF('B',union A607,m6,1)
		AF('C',union A607,m7,1)
		AF('I',union A607,m8,1)
		AF('l',union A607,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BJcSsidIlSIL} */
#pragma pack(push,4)
struct A608 { B m0; J m1; c m2; S m3; s m4; i m5; d m6; I m7; l m8; S m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA608(const struct A608 *x, const struct A608 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA608() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A608));
		AF('B',struct A608,m0,1)
		AF('J',struct A608,m1,1)
		AF('c',struct A608,m2,1)
		AF('S',struct A608,m3,1)
		AF('s',struct A608,m4,1)
		AF('i',struct A608,m5,1)
		AF('d',struct A608,m6,1)
		AF('I',struct A608,m7,1)
		AF('l',struct A608,m8,1)
		AF('S',struct A608,m9,1)
		AF('I',struct A608,m10,1)
		AF('L',struct A608,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jp[9]> */
#pragma pack(push,2)
union A609 { J m0; p m1[9]; };
#pragma pack(pop)
int f_cmpA609(const union A609 *x, const union A609 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8]; };
DCaggr* f_touchA609() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A609));
		AF('J',union A609,m0,1)
		AF('p',union A609,m1,9)
		dcCloseAggr(a);
	}
	return a;
};
/* <{BJcSsidIlSIL}ilSfCCB<Jp[9]>Sff> */
#pragma pack(push,1)
union A610 { struct A608 m0; i m1; l m2; S m3; f m4; C m5; C m6; B m7; union A609 m8; S m9; f m10; f m11; };
#pragma pack(pop)
int f_cmpA610(const union A610 *x, const union A610 *y) { return f_cmpA608(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA609(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA610() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A610));
		AFa(union A610,m0,1,A608)
		AF('i',union A610,m1,1)
		AF('l',union A610,m2,1)
		AF('S',union A610,m3,1)
		AF('f',union A610,m4,1)
		AF('C',union A610,m5,1)
		AF('C',union A610,m6,1)
		AF('B',union A610,m7,1)
		AFa(union A610,m8,1,A609)
		AF('S',union A610,m9,1)
		AF('f',union A610,m10,1)
		AF('f',union A610,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BfpCCB> */
#pragma pack(push,4)
union A611 { B m0; f m1; p m2; C m3; C m4; B m5; };
#pragma pack(pop)
int f_cmpA611(const union A611 *x, const union A611 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA611() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A611));
		AF('B',union A611,m0,1)
		AF('f',union A611,m1,1)
		AF('p',union A611,m2,1)
		AF('C',union A611,m3,1)
		AF('C',union A611,m4,1)
		AF('B',union A611,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIsLLScIILjf[13]} */
#pragma pack(push,8)
struct A612 { f m0; I m1; s m2; L m3; L m4; S m5; c m6; I m7; I m8; L m9; j m10; f m11[13]; };
#pragma pack(pop)
int f_cmpA612(const struct A612 *x, const struct A612 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12]; };
DCaggr* f_touchA612() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A612));
		AF('f',struct A612,m0,1)
		AF('I',struct A612,m1,1)
		AF('s',struct A612,m2,1)
		AF('L',struct A612,m3,1)
		AF('L',struct A612,m4,1)
		AF('S',struct A612,m5,1)
		AF('c',struct A612,m6,1)
		AF('I',struct A612,m7,1)
		AF('I',struct A612,m8,1)
		AF('L',struct A612,m9,1)
		AF('j',struct A612,m10,1)
		AF('f',struct A612,m11,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {SjpIfss[4]} */
#pragma pack(push,2)
struct A613 { S m0; j m1; p m2; I m3; f m4; s m5; s m6[4]; };
#pragma pack(pop)
int f_cmpA613(const struct A613 *x, const struct A613 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3]; };
DCaggr* f_touchA613() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A613));
		AF('S',struct A613,m0,1)
		AF('j',struct A613,m1,1)
		AF('p',struct A613,m2,1)
		AF('I',struct A613,m3,1)
		AF('f',struct A613,m4,1)
		AF('s',struct A613,m5,1)
		AF('s',struct A613,m6,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <sSfCCflj[10]ICJI> */
#pragma pack(push,2)
union A614 { s m0; S m1; f m2; C m3; C m4; f m5; l m6; j m7[10]; I m8; C m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA614(const union A614 *x, const union A614 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA614() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A614));
		AF('s',union A614,m0,1)
		AF('S',union A614,m1,1)
		AF('f',union A614,m2,1)
		AF('C',union A614,m3,1)
		AF('C',union A614,m4,1)
		AF('f',union A614,m5,1)
		AF('l',union A614,m6,1)
		AF('j',union A614,m7,10)
		AF('I',union A614,m8,1)
		AF('C',union A614,m9,1)
		AF('J',union A614,m10,1)
		AF('I',union A614,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {issJicL} */
#pragma pack(push,8)
struct A615 { i m0; s m1; s m2; J m3; i m4; c m5; L m6; };
#pragma pack(pop)
int f_cmpA615(const struct A615 *x, const struct A615 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA615() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A615));
		AF('i',struct A615,m0,1)
		AF('s',struct A615,m1,1)
		AF('s',struct A615,m2,1)
		AF('J',struct A615,m3,1)
		AF('i',struct A615,m4,1)
		AF('c',struct A615,m5,1)
		AF('L',struct A615,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {if{fIsLLScIILjf[13]}{SjpIfss[4]}pIJpB<sSfCCflj[10]ICJI>I{issJicL}} */
#pragma pack(push,4)
struct A616 { i m0; f m1; struct A612 m2; struct A613 m3; p m4; I m5; J m6; p m7; B m8; union A614 m9; I m10; struct A615 m11; };
#pragma pack(pop)
int f_cmpA616(const struct A616 *x, const struct A616 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA612(&x->m2, &y->m2) && f_cmpA613(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA614(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA615(&x->m11, &y->m11); };
DCaggr* f_touchA616() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A616));
		AF('i',struct A616,m0,1)
		AF('f',struct A616,m1,1)
		AFa(struct A616,m2,1,A612)
		AFa(struct A616,m3,1,A613)
		AF('p',struct A616,m4,1)
		AF('I',struct A616,m5,1)
		AF('J',struct A616,m6,1)
		AF('p',struct A616,m7,1)
		AF('B',struct A616,m8,1)
		AFa(struct A616,m9,1,A614)
		AF('I',struct A616,m10,1)
		AFa(struct A616,m11,1,A615)
		dcCloseAggr(a);
	}
	return a;
};
/* <sBcL> */
#pragma pack(push,2)
union A617 { s m0; B m1; c m2; L m3; };
#pragma pack(pop)
int f_cmpA617(const union A617 *x, const union A617 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA617() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A617));
		AF('s',union A617,m0,1)
		AF('B',union A617,m1,1)
		AF('c',union A617,m2,1)
		AF('L',union A617,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CCCBBslC} */
#pragma pack(push,4)
struct A618 { C m0; C m1; C m2; B m3; B m4; s m5; l m6; C m7; };
#pragma pack(pop)
int f_cmpA618(const struct A618 *x, const struct A618 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA618() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A618));
		AF('C',struct A618,m0,1)
		AF('C',struct A618,m1,1)
		AF('C',struct A618,m2,1)
		AF('B',struct A618,m3,1)
		AF('B',struct A618,m4,1)
		AF('s',struct A618,m5,1)
		AF('l',struct A618,m6,1)
		AF('C',struct A618,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iSll{CCCBBslC}CCB<C>isc} */
#pragma pack(push,8)
struct A619 { i m0; S m1; l m2; l m3; struct A618 m4; C m5; C m6; B m7; union A555 m8; i m9; s m10; c m11; };
#pragma pack(pop)
int f_cmpA619(const struct A619 *x, const struct A619 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA618(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA555(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA619() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A619));
		AF('i',struct A619,m0,1)
		AF('S',struct A619,m1,1)
		AF('l',struct A619,m2,1)
		AF('l',struct A619,m3,1)
		AFa(struct A619,m4,1,A618)
		AF('C',struct A619,m5,1)
		AF('C',struct A619,m6,1)
		AF('B',struct A619,m7,1)
		AFa(struct A619,m8,1,A555)
		AF('i',struct A619,m9,1)
		AF('s',struct A619,m10,1)
		AF('c',struct A619,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ciSIJsLfid} */
#pragma pack(push,1)
struct A620 { c m0; i m1; S m2; I m3; J m4; s m5; L m6; f m7; i m8; d m9; };
#pragma pack(pop)
int f_cmpA620(const struct A620 *x, const struct A620 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA620() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A620));
		AF('c',struct A620,m0,1)
		AF('i',struct A620,m1,1)
		AF('S',struct A620,m2,1)
		AF('I',struct A620,m3,1)
		AF('J',struct A620,m4,1)
		AF('s',struct A620,m5,1)
		AF('L',struct A620,m6,1)
		AF('f',struct A620,m7,1)
		AF('i',struct A620,m8,1)
		AF('d',struct A620,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cdJsL{ciSIJsLfid}f> */
#pragma pack(push,1)
union A621 { c m0; d m1; J m2; s m3; L m4; struct A620 m5; f m6; };
#pragma pack(pop)
int f_cmpA621(const union A621 *x, const union A621 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA620(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA621() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A621));
		AF('c',union A621,m0,1)
		AF('d',union A621,m1,1)
		AF('J',union A621,m2,1)
		AF('s',union A621,m3,1)
		AF('L',union A621,m4,1)
		AFa(union A621,m5,1,A620)
		AF('f',union A621,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LSfdIif[7]Idslj} */
#pragma pack(push,4)
struct A622 { L m0; S m1; f m2; d m3; I m4; i m5; f m6[7]; I m7; d m8; s m9; l m10; j m11; };
#pragma pack(pop)
int f_cmpA622(const struct A622 *x, const struct A622 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA622() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A622));
		AF('L',struct A622,m0,1)
		AF('S',struct A622,m1,1)
		AF('f',struct A622,m2,1)
		AF('d',struct A622,m3,1)
		AF('I',struct A622,m4,1)
		AF('i',struct A622,m5,1)
		AF('f',struct A622,m6,7)
		AF('I',struct A622,m7,1)
		AF('d',struct A622,m8,1)
		AF('s',struct A622,m9,1)
		AF('l',struct A622,m10,1)
		AF('j',struct A622,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL> */
#pragma pack(push,8)
union A623 { J m0; p m1; B m2; union A621 m3; C m4; i m5; L m6; L m7; B m8; struct A622 m9; l m10; L m11; };
#pragma pack(pop)
int f_cmpA623(const union A623 *x, const union A623 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA621(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA622(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA623() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A623));
		AF('J',union A623,m0,1)
		AF('p',union A623,m1,1)
		AF('B',union A623,m2,1)
		AFa(union A623,m3,1,A621)
		AF('C',union A623,m4,1)
		AF('i',union A623,m5,1)
		AF('L',union A623,m6,1)
		AF('L',union A623,m7,1)
		AF('B',union A623,m8,1)
		AFa(union A623,m9,1,A622)
		AF('l',union A623,m10,1)
		AF('L',union A623,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCf[12]Jfpd> */
#pragma pack(push,4)
union A624 { d m0; C m1; f m2[12]; J m3; f m4; p m5; d m6; };
#pragma pack(pop)
int f_cmpA624(const union A624 *x, const union A624 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA624() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A624));
		AF('d',union A624,m0,1)
		AF('C',union A624,m1,1)
		AF('f',union A624,m2,12)
		AF('J',union A624,m3,1)
		AF('f',union A624,m4,1)
		AF('p',union A624,m5,1)
		AF('d',union A624,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJilSIdcJsC> */
#pragma pack(push,2)
union A625 { C m0; J m1; i m2; l m3; S m4; I m5; d m6; c m7; J m8; s m9; C m10; };
#pragma pack(pop)
int f_cmpA625(const union A625 *x, const union A625 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA625() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A625));
		AF('C',union A625,m0,1)
		AF('J',union A625,m1,1)
		AF('i',union A625,m2,1)
		AF('l',union A625,m3,1)
		AF('S',union A625,m4,1)
		AF('I',union A625,m5,1)
		AF('d',union A625,m6,1)
		AF('c',union A625,m7,1)
		AF('J',union A625,m8,1)
		AF('s',union A625,m9,1)
		AF('C',union A625,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdJBpcfBIiBS> */
#pragma pack(push,2)
union A626 { C m0; d m1; J m2; B m3; p m4; c m5; f m6; B m7; I m8; i m9; B m10; S m11; };
#pragma pack(pop)
int f_cmpA626(const union A626 *x, const union A626 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA626() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A626));
		AF('C',union A626,m0,1)
		AF('d',union A626,m1,1)
		AF('J',union A626,m2,1)
		AF('B',union A626,m3,1)
		AF('p',union A626,m4,1)
		AF('c',union A626,m5,1)
		AF('f',union A626,m6,1)
		AF('B',union A626,m7,1)
		AF('I',union A626,m8,1)
		AF('i',union A626,m9,1)
		AF('B',union A626,m10,1)
		AF('S',union A626,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {illCJldj} */
#pragma pack(push,2)
struct A627 { i m0; l m1; l m2; C m3; J m4; l m5; d m6; j m7; };
#pragma pack(pop)
int f_cmpA627(const struct A627 *x, const struct A627 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA627() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A627));
		AF('i',struct A627,m0,1)
		AF('l',struct A627,m1,1)
		AF('l',struct A627,m2,1)
		AF('C',struct A627,m3,1)
		AF('J',struct A627,m4,1)
		AF('l',struct A627,m5,1)
		AF('d',struct A627,m6,1)
		AF('j',struct A627,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj} */
#pragma pack(push,8)
struct A628 { j m0; c m1[4]; union A624 m2; c m3; s m4; C m5; union A625 m6; union A626 m7; struct A627 m8; s m9; I m10; j m11; };
#pragma pack(pop)
int f_cmpA628(const struct A628 *x, const struct A628 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && f_cmpA624(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA625(&x->m6, &y->m6) && f_cmpA626(&x->m7, &y->m7) && f_cmpA627(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA628() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A628));
		AF('j',struct A628,m0,1)
		AF('c',struct A628,m1,4)
		AFa(struct A628,m2,1,A624)
		AF('c',struct A628,m3,1)
		AF('s',struct A628,m4,1)
		AF('C',struct A628,m5,1)
		AFa(struct A628,m6,1,A625)
		AFa(struct A628,m7,1,A626)
		AFa(struct A628,m8,1,A627)
		AF('s',struct A628,m9,1)
		AF('I',struct A628,m10,1)
		AF('j',struct A628,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C} */
#pragma pack(push,2)
struct A629 { l m0; s m1; I m2; l m3; s m4; struct A628 m5; C m6; };
#pragma pack(pop)
int f_cmpA629(const struct A629 *x, const struct A629 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA628(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA629() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A629));
		AF('l',struct A629,m0,1)
		AF('s',struct A629,m1,1)
		AF('I',struct A629,m2,1)
		AF('l',struct A629,m3,1)
		AF('s',struct A629,m4,1)
		AFa(struct A629,m5,1,A628)
		AF('C',struct A629,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CjJdJ} */
#pragma pack(push,2)
struct A630 { C m0; j m1; J m2; d m3; J m4; };
#pragma pack(pop)
int f_cmpA630(const struct A630 *x, const struct A630 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA630() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A630));
		AF('C',struct A630,m0,1)
		AF('j',struct A630,m1,1)
		AF('J',struct A630,m2,1)
		AF('d',struct A630,m3,1)
		AF('J',struct A630,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cpd} */
#pragma pack(push,4)
struct A631 { c m0; p m1; d m2; };
#pragma pack(pop)
int f_cmpA631(const struct A631 *x, const struct A631 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA631() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A631));
		AF('c',struct A631,m0,1)
		AF('p',struct A631,m1,1)
		AF('d',struct A631,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <diJl> */
#pragma pack(push,4)
union A632 { d m0; i m1; J m2; l m3; };
#pragma pack(pop)
int f_cmpA632(const union A632 *x, const union A632 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA632() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A632));
		AF('d',union A632,m0,1)
		AF('i',union A632,m1,1)
		AF('J',union A632,m2,1)
		AF('l',union A632,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CflBdLSB<diJl>SLc} */
#pragma pack(push,4)
struct A633 { C m0; f m1; l m2; B m3; d m4; L m5; S m6; B m7; union A632 m8; S m9; L m10; c m11; };
#pragma pack(pop)
int f_cmpA633(const struct A633 *x, const struct A633 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA632(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA633() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A633));
		AF('C',struct A633,m0,1)
		AF('f',struct A633,m1,1)
		AF('l',struct A633,m2,1)
		AF('B',struct A633,m3,1)
		AF('d',struct A633,m4,1)
		AF('L',struct A633,m5,1)
		AF('S',struct A633,m6,1)
		AF('B',struct A633,m7,1)
		AFa(struct A633,m8,1,A632)
		AF('S',struct A633,m9,1)
		AF('L',struct A633,m10,1)
		AF('c',struct A633,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {csB} */
#pragma pack(push,2)
struct A634 { c m0; s m1; B m2; };
#pragma pack(pop)
int f_cmpA634(const struct A634 *x, const struct A634 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA634() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A634));
		AF('c',struct A634,m0,1)
		AF('s',struct A634,m1,1)
		AF('B',struct A634,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ClIjIpfcISji> */
#pragma pack(push,1)
union A635 { C m0; l m1; I m2; j m3; I m4; p m5; f m6; c m7; I m8; S m9; j m10; i m11; };
#pragma pack(pop)
int f_cmpA635(const union A635 *x, const union A635 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA635() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A635));
		AF('C',union A635,m0,1)
		AF('l',union A635,m1,1)
		AF('I',union A635,m2,1)
		AF('j',union A635,m3,1)
		AF('I',union A635,m4,1)
		AF('p',union A635,m5,1)
		AF('f',union A635,m6,1)
		AF('c',union A635,m7,1)
		AF('I',union A635,m8,1)
		AF('S',union A635,m9,1)
		AF('j',union A635,m10,1)
		AF('i',union A635,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cCcJ> */
#pragma pack(push,4)
union A636 { c m0; C m1; c m2; J m3; };
#pragma pack(pop)
int f_cmpA636(const union A636 *x, const union A636 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA636() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A636));
		AF('c',union A636,m0,1)
		AF('C',union A636,m1,1)
		AF('c',union A636,m2,1)
		AF('J',union A636,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<cCcJ>s} */
#pragma pack(push,4)
struct A637 { union A636 m0; s m1; };
#pragma pack(pop)
int f_cmpA637(const struct A637 *x, const struct A637 *y) { return f_cmpA636(&x->m0, &y->m0) && x->m1 == y->m1; };
DCaggr* f_touchA637() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A637));
		AFa(struct A637,m0,1,A636)
		AF('s',struct A637,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcdlflsCpSS} */
#pragma pack(push,8)
struct A638 { I m0; c m1; d m2; l m3; f m4; l m5; s m6; C m7; p m8; S m9; S m10; };
#pragma pack(pop)
int f_cmpA638(const struct A638 *x, const struct A638 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA638() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A638));
		AF('I',struct A638,m0,1)
		AF('c',struct A638,m1,1)
		AF('d',struct A638,m2,1)
		AF('l',struct A638,m3,1)
		AF('f',struct A638,m4,1)
		AF('l',struct A638,m5,1)
		AF('s',struct A638,m6,1)
		AF('C',struct A638,m7,1)
		AF('p',struct A638,m8,1)
		AF('S',struct A638,m9,1)
		AF('S',struct A638,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fdfLB{IcdlflsCpSS}fisIpc} */
#pragma pack(push,2)
struct A639 { f m0; d m1; f m2; L m3; B m4; struct A638 m5; f m6; i m7; s m8; I m9; p m10; c m11; };
#pragma pack(pop)
int f_cmpA639(const struct A639 *x, const struct A639 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA638(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA639() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A639));
		AF('f',struct A639,m0,1)
		AF('d',struct A639,m1,1)
		AF('f',struct A639,m2,1)
		AF('L',struct A639,m3,1)
		AF('B',struct A639,m4,1)
		AFa(struct A639,m5,1,A638)
		AF('f',struct A639,m6,1)
		AF('i',struct A639,m7,1)
		AF('s',struct A639,m8,1)
		AF('I',struct A639,m9,1)
		AF('p',struct A639,m10,1)
		AF('c',struct A639,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IsSLSic} */
#pragma pack(push,4)
struct A640 { I m0; s m1; S m2; L m3; S m4; i m5; c m6; };
#pragma pack(pop)
int f_cmpA640(const struct A640 *x, const struct A640 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA640() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A640));
		AF('I',struct A640,m0,1)
		AF('s',struct A640,m1,1)
		AF('S',struct A640,m2,1)
		AF('L',struct A640,m3,1)
		AF('S',struct A640,m4,1)
		AF('i',struct A640,m5,1)
		AF('c',struct A640,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cclScj{IsSLSic}pJpcJ> */
#pragma pack(push,1)
union A641 { c m0; c m1; l m2; S m3; c m4; j m5; struct A640 m6; p m7; J m8; p m9; c m10; J m11; };
#pragma pack(pop)
int f_cmpA641(const union A641 *x, const union A641 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA640(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA641() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A641));
		AF('c',union A641,m0,1)
		AF('c',union A641,m1,1)
		AF('l',union A641,m2,1)
		AF('S',union A641,m3,1)
		AF('c',union A641,m4,1)
		AF('j',union A641,m5,1)
		AFa(union A641,m6,1,A640)
		AF('p',union A641,m7,1)
		AF('J',union A641,m8,1)
		AF('p',union A641,m9,1)
		AF('c',union A641,m10,1)
		AF('J',union A641,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JB[12]jfpfBBLLdI[8]> */
#pragma pack(push,4)
union A642 { J m0; B m1[12]; j m2; f m3; p m4; f m5; B m6; B m7; L m8; L m9; d m10; I m11[8]; };
#pragma pack(pop)
int f_cmpA642(const union A642 *x, const union A642 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7]; };
DCaggr* f_touchA642() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A642));
		AF('J',union A642,m0,1)
		AF('B',union A642,m1,12)
		AF('j',union A642,m2,1)
		AF('f',union A642,m3,1)
		AF('p',union A642,m4,1)
		AF('f',union A642,m5,1)
		AF('B',union A642,m6,1)
		AF('B',union A642,m7,1)
		AF('L',union A642,m8,1)
		AF('L',union A642,m9,1)
		AF('d',union A642,m10,1)
		AF('I',union A642,m11,8)
		dcCloseAggr(a);
	}
	return a;
};
/* {JlsLdiCpi[14]I[11]Js} */
#pragma pack(push,4)
struct A643 { J m0; l m1; s m2; L m3; d m4; i m5; C m6; p m7; i m8[14]; I m9[11]; J m10; s m11; };
#pragma pack(pop)
int f_cmpA643(const struct A643 *x, const struct A643 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA643() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A643));
		AF('J',struct A643,m0,1)
		AF('l',struct A643,m1,1)
		AF('s',struct A643,m2,1)
		AF('L',struct A643,m3,1)
		AF('d',struct A643,m4,1)
		AF('i',struct A643,m5,1)
		AF('C',struct A643,m6,1)
		AF('p',struct A643,m7,1)
		AF('i',struct A643,m8,14)
		AF('I',struct A643,m9,11)
		AF('J',struct A643,m10,1)
		AF('s',struct A643,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cC<JB[12]jfpfBBLLdI[8]>dI{JlsLdiCpi[14]I[11]Js}} */
#pragma pack(push,2)
struct A644 { c m0; C m1; union A642 m2; d m3; I m4; struct A643 m5; };
#pragma pack(pop)
int f_cmpA644(const struct A644 *x, const struct A644 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA642(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA643(&x->m5, &y->m5); };
DCaggr* f_touchA644() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A644));
		AF('c',struct A644,m0,1)
		AF('C',struct A644,m1,1)
		AFa(struct A644,m2,1,A642)
		AF('d',struct A644,m3,1)
		AF('I',struct A644,m4,1)
		AFa(struct A644,m5,1,A643)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jlsf<cclScj{IsSLSic}pJpcJ>CslC{cC<JB[12]jfpfBBLLdI[8]>dI{JlsLdiCpi[14]I[11]Js}}li} */
#pragma pack(push,2)
struct A645 { J m0; l m1; s m2; f m3; union A641 m4; C m5; s m6; l m7; C m8; struct A644 m9; l m10; i m11; };
#pragma pack(pop)
int f_cmpA645(const struct A645 *x, const struct A645 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA641(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA644(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA645() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A645));
		AF('J',struct A645,m0,1)
		AF('l',struct A645,m1,1)
		AF('s',struct A645,m2,1)
		AF('f',struct A645,m3,1)
		AFa(struct A645,m4,1,A641)
		AF('C',struct A645,m5,1)
		AF('s',struct A645,m6,1)
		AF('l',struct A645,m7,1)
		AF('C',struct A645,m8,1)
		AFa(struct A645,m9,1,A644)
		AF('l',struct A645,m10,1)
		AF('i',struct A645,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljjJ[7]llsBc> */
#pragma pack(push,4)
union A646 { l m0; j m1; j m2; J m3[7]; l m4; l m5; s m6; B m7; c m8; };
#pragma pack(pop)
int f_cmpA646(const union A646 *x, const union A646 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA646() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A646));
		AF('l',union A646,m0,1)
		AF('j',union A646,m1,1)
		AF('j',union A646,m2,1)
		AF('J',union A646,m3,7)
		AF('l',union A646,m4,1)
		AF('l',union A646,m5,1)
		AF('s',union A646,m6,1)
		AF('B',union A646,m7,1)
		AF('c',union A646,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ilisciSdLl} */
#pragma pack(push,1)
struct A647 { i m0; l m1; i m2; s m3; c m4; i m5; S m6; d m7; L m8; l m9; };
#pragma pack(pop)
int f_cmpA647(const struct A647 *x, const struct A647 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA647() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A647));
		AF('i',struct A647,m0,1)
		AF('l',struct A647,m1,1)
		AF('i',struct A647,m2,1)
		AF('s',struct A647,m3,1)
		AF('c',struct A647,m4,1)
		AF('i',struct A647,m5,1)
		AF('S',struct A647,m6,1)
		AF('d',struct A647,m7,1)
		AF('L',struct A647,m8,1)
		AF('l',struct A647,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<ljjJ[7]llsBc>p{ilisciSdLl}csBJpfCld> */
#pragma pack(push,4)
union A648 { union A646 m0; p m1; struct A647 m2; c m3; s m4; B m5; J m6; p m7; f m8; C m9; l m10; d m11; };
#pragma pack(pop)
int f_cmpA648(const union A648 *x, const union A648 *y) { return f_cmpA646(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA647(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA648() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A648));
		AFa(union A648,m0,1,A646)
		AF('p',union A648,m1,1)
		AFa(union A648,m2,1,A647)
		AF('c',union A648,m3,1)
		AF('s',union A648,m4,1)
		AF('B',union A648,m5,1)
		AF('J',union A648,m6,1)
		AF('p',union A648,m7,1)
		AF('f',union A648,m8,1)
		AF('C',union A648,m9,1)
		AF('l',union A648,m10,1)
		AF('d',union A648,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJ} */
#pragma pack(push,8)
struct A649 { S m0; J m1; };
#pragma pack(pop)
int f_cmpA649(const struct A649 *x, const struct A649 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA649() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A649));
		AF('S',struct A649,m0,1)
		AF('J',struct A649,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdcjJllfBlsi> */
#pragma pack(push,8)
union A650 { j m0; d m1; c m2; j m3; J m4; l m5; l m6; f m7; B m8; l m9; s m10; i m11; };
#pragma pack(pop)
int f_cmpA650(const union A650 *x, const union A650 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA650() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A650));
		AF('j',union A650,m0,1)
		AF('d',union A650,m1,1)
		AF('c',union A650,m2,1)
		AF('j',union A650,m3,1)
		AF('J',union A650,m4,1)
		AF('l',union A650,m5,1)
		AF('l',union A650,m6,1)
		AF('f',union A650,m7,1)
		AF('B',union A650,m8,1)
		AF('l',union A650,m9,1)
		AF('s',union A650,m10,1)
		AF('i',union A650,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p<jdcjJllfBlsi>} */
#pragma pack(push,4)
struct A651 { p m0; union A650 m1; };
#pragma pack(pop)
int f_cmpA651(const struct A651 *x, const struct A651 *y) { return x->m0 == y->m0 && f_cmpA650(&x->m1, &y->m1); };
DCaggr* f_touchA651() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A651));
		AF('p',struct A651,m0,1)
		AFa(struct A651,m1,1,A650)
		dcCloseAggr(a);
	}
	return a;
};
/* <is[1]LLcSd{p<jdcjJllfBlsi>}LIJi> */
#pragma pack(push,1)
union A652 { i m0; s m1[1]; L m2; L m3; c m4; S m5; d m6; struct A651 m7; L m8; I m9; J m10; i m11; };
#pragma pack(pop)
int f_cmpA652(const union A652 *x, const union A652 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA651(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA652() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A652));
		AF('i',union A652,m0,1)
		AF('s',union A652,m1,1)
		AF('L',union A652,m2,1)
		AF('L',union A652,m3,1)
		AF('c',union A652,m4,1)
		AF('S',union A652,m5,1)
		AF('d',union A652,m6,1)
		AFa(union A652,m7,1,A651)
		AF('L',union A652,m8,1)
		AF('I',union A652,m9,1)
		AF('J',union A652,m10,1)
		AF('i',union A652,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIJjCcljCjBL> */
#pragma pack(push,4)
union A653 { l m0; I m1; J m2; j m3; C m4; c m5; l m6; j m7; C m8; j m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA653(const union A653 *x, const union A653 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA653() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A653));
		AF('l',union A653,m0,1)
		AF('I',union A653,m1,1)
		AF('J',union A653,m2,1)
		AF('j',union A653,m3,1)
		AF('C',union A653,m4,1)
		AF('c',union A653,m5,1)
		AF('l',union A653,m6,1)
		AF('j',union A653,m7,1)
		AF('C',union A653,m8,1)
		AF('j',union A653,m9,1)
		AF('B',union A653,m10,1)
		AF('L',union A653,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JI[15]JdLd<lIJjCcljCjBL>sSlCL> */
#pragma pack(push,4)
union A654 { J m0; I m1[15]; J m2; d m3; L m4; d m5; union A653 m6; s m7; S m8; l m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA654(const union A654 *x, const union A654 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA653(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA654() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A654));
		AF('J',union A654,m0,1)
		AF('I',union A654,m1,15)
		AF('J',union A654,m2,1)
		AF('d',union A654,m3,1)
		AF('L',union A654,m4,1)
		AF('d',union A654,m5,1)
		AFa(union A654,m6,1,A653)
		AF('s',union A654,m7,1)
		AF('S',union A654,m8,1)
		AF('l',union A654,m9,1)
		AF('C',union A654,m10,1)
		AF('L',union A654,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fsiCLiCBlcss> */
#pragma pack(push,8)
union A655 { f m0; s m1; i m2; C m3; L m4; i m5; C m6; B m7; l m8; c m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA655(const union A655 *x, const union A655 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA655() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A655));
		AF('f',union A655,m0,1)
		AF('s',union A655,m1,1)
		AF('i',union A655,m2,1)
		AF('C',union A655,m3,1)
		AF('L',union A655,m4,1)
		AF('i',union A655,m5,1)
		AF('C',union A655,m6,1)
		AF('B',union A655,m7,1)
		AF('l',union A655,m8,1)
		AF('c',union A655,m9,1)
		AF('s',union A655,m10,1)
		AF('s',union A655,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cs<fsiCLiCBlcss>ls} */
#pragma pack(push,8)
struct A656 { c m0; s m1; union A655 m2; l m3; s m4; };
#pragma pack(pop)
int f_cmpA656(const struct A656 *x, const struct A656 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA655(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA656() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A656));
		AF('c',struct A656,m0,1)
		AF('s',struct A656,m1,1)
		AFa(struct A656,m2,1,A655)
		AF('l',struct A656,m3,1)
		AF('s',struct A656,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ccfIJBIB} */
#pragma pack(push,4)
struct A657 { c m0; c m1; f m2; I m3; J m4; B m5; I m6; B m7; };
#pragma pack(pop)
int f_cmpA657(const struct A657 *x, const struct A657 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA657() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A657));
		AF('c',struct A657,m0,1)
		AF('c',struct A657,m1,1)
		AF('f',struct A657,m2,1)
		AF('I',struct A657,m3,1)
		AF('J',struct A657,m4,1)
		AF('B',struct A657,m5,1)
		AF('I',struct A657,m6,1)
		AF('B',struct A657,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Sf{ccfIJBIB}BjJlBspiS> */
#pragma pack(push,1)
union A658 { S m0; f m1; struct A657 m2; B m3; j m4; J m5; l m6; B m7; s m8; p m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA658(const union A658 *x, const union A658 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA657(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA658() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A658));
		AF('S',union A658,m0,1)
		AF('f',union A658,m1,1)
		AFa(union A658,m2,1,A657)
		AF('B',union A658,m3,1)
		AF('j',union A658,m4,1)
		AF('J',union A658,m5,1)
		AF('l',union A658,m6,1)
		AF('B',union A658,m7,1)
		AF('s',union A658,m8,1)
		AF('p',union A658,m9,1)
		AF('i',union A658,m10,1)
		AF('S',union A658,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jIC<Sf{ccfIJBIB}BjJlBspiS>} */
#pragma pack(push,4)
struct A659 { j m0; I m1; C m2; union A658 m3; };
#pragma pack(pop)
int f_cmpA659(const struct A659 *x, const struct A659 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA658(&x->m3, &y->m3); };
DCaggr* f_touchA659() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A659));
		AF('j',struct A659,m0,1)
		AF('I',struct A659,m1,1)
		AF('C',struct A659,m2,1)
		AFa(struct A659,m3,1,A658)
		dcCloseAggr(a);
	}
	return a;
};
/* <cfcSBidCipsC> */
#pragma pack(push,8)
union A660 { c m0; f m1; c m2; S m3; B m4; i m5; d m6; C m7; i m8; p m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA660(const union A660 *x, const union A660 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA660() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A660));
		AF('c',union A660,m0,1)
		AF('f',union A660,m1,1)
		AF('c',union A660,m2,1)
		AF('S',union A660,m3,1)
		AF('B',union A660,m4,1)
		AF('i',union A660,m5,1)
		AF('d',union A660,m6,1)
		AF('C',union A660,m7,1)
		AF('i',union A660,m8,1)
		AF('p',union A660,m9,1)
		AF('s',union A660,m10,1)
		AF('C',union A660,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IciBBiL<cfcSBidCipsC>[15]} */
#pragma pack(push,2)
struct A661 { I m0; c m1; i m2; B m3; B m4; i m5; L m6; union A660 m7[15]; };
#pragma pack(pop)
int f_cmpA661(const struct A661 *x, const struct A661 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA660(&x->m7[0], &y->m7[0]) && f_cmpA660(&x->m7[1], &y->m7[1]) && f_cmpA660(&x->m7[2], &y->m7[2]) && f_cmpA660(&x->m7[3], &y->m7[3]) && f_cmpA660(&x->m7[4], &y->m7[4]) && f_cmpA660(&x->m7[5], &y->m7[5]) && f_cmpA660(&x->m7[6], &y->m7[6]) && f_cmpA660(&x->m7[7], &y->m7[7]) && f_cmpA660(&x->m7[8], &y->m7[8]) && f_cmpA660(&x->m7[9], &y->m7[9]) && f_cmpA660(&x->m7[10], &y->m7[10]) && f_cmpA660(&x->m7[11], &y->m7[11]) && f_cmpA660(&x->m7[12], &y->m7[12]) && f_cmpA660(&x->m7[13], &y->m7[13]) && f_cmpA660(&x->m7[14], &y->m7[14]); };
DCaggr* f_touchA661() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A661));
		AF('I',struct A661,m0,1)
		AF('c',struct A661,m1,1)
		AF('i',struct A661,m2,1)
		AF('B',struct A661,m3,1)
		AF('B',struct A661,m4,1)
		AF('i',struct A661,m5,1)
		AF('L',struct A661,m6,1)
		AFa(struct A661,m7,15,A660)
		dcCloseAggr(a);
	}
	return a;
};
/* <SliSSIBdljfd> */
#pragma pack(push,4)
union A662 { S m0; l m1; i m2; S m3; S m4; I m5; B m6; d m7; l m8; j m9; f m10; d m11; };
#pragma pack(pop)
int f_cmpA662(const union A662 *x, const union A662 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA662() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A662));
		AF('S',union A662,m0,1)
		AF('l',union A662,m1,1)
		AF('i',union A662,m2,1)
		AF('S',union A662,m3,1)
		AF('S',union A662,m4,1)
		AF('I',union A662,m5,1)
		AF('B',union A662,m6,1)
		AF('d',union A662,m7,1)
		AF('l',union A662,m8,1)
		AF('j',union A662,m9,1)
		AF('f',union A662,m10,1)
		AF('d',union A662,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ip<SliSSIBdljfd>c} */
#pragma pack(push,4)
struct A663 { i m0; p m1; union A662 m2; c m3; };
#pragma pack(pop)
int f_cmpA663(const struct A663 *x, const struct A663 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA662(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA663() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A663));
		AF('i',struct A663,m0,1)
		AF('p',struct A663,m1,1)
		AFa(struct A663,m2,1,A662)
		AF('c',struct A663,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{ip<SliSSIBdljfd>c}LjLils> */
#pragma pack(push,4)
union A664 { struct A663 m0; L m1; j m2; L m3; i m4; l m5; s m6; };
#pragma pack(pop)
int f_cmpA664(const union A664 *x, const union A664 *y) { return f_cmpA663(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA664() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A664));
		AFa(union A664,m0,1,A663)
		AF('L',union A664,m1,1)
		AF('j',union A664,m2,1)
		AF('L',union A664,m3,1)
		AF('i',union A664,m4,1)
		AF('l',union A664,m5,1)
		AF('s',union A664,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fC} */
#pragma pack(push,4)
struct A665 { f m0; C m1; };
#pragma pack(pop)
int f_cmpA665(const struct A665 *x, const struct A665 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA665() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A665));
		AF('f',struct A665,m0,1)
		AF('C',struct A665,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {psjLfcCpSSJB} */
#pragma pack(push,4)
struct A666 { p m0; s m1; j m2; L m3; f m4; c m5; C m6; p m7; S m8; S m9; J m10; B m11; };
#pragma pack(pop)
int f_cmpA666(const struct A666 *x, const struct A666 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA666() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A666));
		AF('p',struct A666,m0,1)
		AF('s',struct A666,m1,1)
		AF('j',struct A666,m2,1)
		AF('L',struct A666,m3,1)
		AF('f',struct A666,m4,1)
		AF('c',struct A666,m5,1)
		AF('C',struct A666,m6,1)
		AF('p',struct A666,m7,1)
		AF('S',struct A666,m8,1)
		AF('S',struct A666,m9,1)
		AF('J',struct A666,m10,1)
		AF('B',struct A666,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I[2]lfBSfJpBfBj> */
#pragma pack(push,4)
union A667 { I m0[2]; l m1; f m2; B m3; S m4; f m5; J m6; p m7; B m8; f m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA667(const union A667 *x, const union A667 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA667() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A667));
		AF('I',union A667,m0,2)
		AF('l',union A667,m1,1)
		AF('f',union A667,m2,1)
		AF('B',union A667,m3,1)
		AF('S',union A667,m4,1)
		AF('f',union A667,m5,1)
		AF('J',union A667,m6,1)
		AF('p',union A667,m7,1)
		AF('B',union A667,m8,1)
		AF('f',union A667,m9,1)
		AF('B',union A667,m10,1)
		AF('j',union A667,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s{psjLfcCpSSJB}<I[2]lfBSfJpBfBj>lIjclcfsI> */
#pragma pack(push,8)
union A668 { s m0; struct A666 m1; union A667 m2; l m3; I m4; j m5; c m6; l m7; c m8; f m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA668(const union A668 *x, const union A668 *y) { return x->m0 == y->m0 && f_cmpA666(&x->m1, &y->m1) && f_cmpA667(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA668() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A668));
		AF('s',union A668,m0,1)
		AFa(union A668,m1,1,A666)
		AFa(union A668,m2,1,A667)
		AF('l',union A668,m3,1)
		AF('I',union A668,m4,1)
		AF('j',union A668,m5,1)
		AF('c',union A668,m6,1)
		AF('l',union A668,m7,1)
		AF('c',union A668,m8,1)
		AF('f',union A668,m9,1)
		AF('s',union A668,m10,1)
		AF('I',union A668,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pS[7]jB> */
#pragma pack(push,4)
union A669 { p m0; S m1[7]; j m2; B m3; };
#pragma pack(pop)
int f_cmpA669(const union A669 *x, const union A669 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA669() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A669));
		AF('p',union A669,m0,1)
		AF('S',union A669,m1,7)
		AF('j',union A669,m2,1)
		AF('B',union A669,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dsdSBsllsdJi} */
#pragma pack(push,4)
struct A670 { d m0; s m1; d m2; S m3; B m4; s m5; l m6; l m7; s m8; d m9; J m10; i m11; };
#pragma pack(pop)
int f_cmpA670(const struct A670 *x, const struct A670 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA670() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A670));
		AF('d',struct A670,m0,1)
		AF('s',struct A670,m1,1)
		AF('d',struct A670,m2,1)
		AF('S',struct A670,m3,1)
		AF('B',struct A670,m4,1)
		AF('s',struct A670,m5,1)
		AF('l',struct A670,m6,1)
		AF('l',struct A670,m7,1)
		AF('s',struct A670,m8,1)
		AF('d',struct A670,m9,1)
		AF('J',struct A670,m10,1)
		AF('i',struct A670,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfCJlJCppJff> */
#pragma pack(push,4)
union A671 { l m0; f m1; C m2; J m3; l m4; J m5; C m6; p m7; p m8; J m9; f m10; f m11; };
#pragma pack(pop)
int f_cmpA671(const union A671 *x, const union A671 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA671() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A671));
		AF('l',union A671,m0,1)
		AF('f',union A671,m1,1)
		AF('C',union A671,m2,1)
		AF('J',union A671,m3,1)
		AF('l',union A671,m4,1)
		AF('J',union A671,m5,1)
		AF('C',union A671,m6,1)
		AF('p',union A671,m7,1)
		AF('p',union A671,m8,1)
		AF('J',union A671,m9,1)
		AF('f',union A671,m10,1)
		AF('f',union A671,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <idLsfdpC[5]BljC> */
#pragma pack(push,4)
union A672 { i m0; d m1; L m2; s m3; f m4; d m5; p m6; C m7[5]; B m8; l m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA672(const union A672 *x, const union A672 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA672() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A672));
		AF('i',union A672,m0,1)
		AF('d',union A672,m1,1)
		AF('L',union A672,m2,1)
		AF('s',union A672,m3,1)
		AF('f',union A672,m4,1)
		AF('d',union A672,m5,1)
		AF('p',union A672,m6,1)
		AF('C',union A672,m7,5)
		AF('B',union A672,m8,1)
		AF('l',union A672,m9,1)
		AF('j',union A672,m10,1)
		AF('C',union A672,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djLj> */
#pragma pack(push,4)
union A673 { d m0; j m1; L m2; j m3; };
#pragma pack(pop)
int f_cmpA673(const union A673 *x, const union A673 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA673() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A673));
		AF('d',union A673,m0,1)
		AF('j',union A673,m1,1)
		AF('L',union A673,m2,1)
		AF('j',union A673,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IdjpfIlcpC<djLj>c} */
#pragma pack(push,1)
struct A674 { I m0; d m1; j m2; p m3; f m4; I m5; l m6; c m7; p m8; C m9; union A673 m10; c m11; };
#pragma pack(pop)
int f_cmpA674(const struct A674 *x, const struct A674 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA673(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA674() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A674));
		AF('I',struct A674,m0,1)
		AF('d',struct A674,m1,1)
		AF('j',struct A674,m2,1)
		AF('p',struct A674,m3,1)
		AF('f',struct A674,m4,1)
		AF('I',struct A674,m5,1)
		AF('l',struct A674,m6,1)
		AF('c',struct A674,m7,1)
		AF('p',struct A674,m8,1)
		AF('C',struct A674,m9,1)
		AFa(struct A674,m10,1,A673)
		AF('c',struct A674,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBcJsiiCLljS> */
#pragma pack(push,8)
union A675 { B m0; B m1; c m2; J m3; s m4; i m5; i m6; C m7; L m8; l m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA675(const union A675 *x, const union A675 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA675() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A675));
		AF('B',union A675,m0,1)
		AF('B',union A675,m1,1)
		AF('c',union A675,m2,1)
		AF('J',union A675,m3,1)
		AF('s',union A675,m4,1)
		AF('i',union A675,m5,1)
		AF('i',union A675,m6,1)
		AF('C',union A675,m7,1)
		AF('L',union A675,m8,1)
		AF('l',union A675,m9,1)
		AF('j',union A675,m10,1)
		AF('S',union A675,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp[16]lICcSjJpBS} */
#pragma pack(push,4)
struct A676 { S m0; p m1[16]; l m2; I m3; C m4; c m5; S m6; j m7; J m8; p m9; B m10; S m11; };
#pragma pack(pop)
int f_cmpA676(const struct A676 *x, const struct A676 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m1[15] == y->m1[15] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA676() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A676));
		AF('S',struct A676,m0,1)
		AF('p',struct A676,m1,16)
		AF('l',struct A676,m2,1)
		AF('I',struct A676,m3,1)
		AF('C',struct A676,m4,1)
		AF('c',struct A676,m5,1)
		AF('S',struct A676,m6,1)
		AF('j',struct A676,m7,1)
		AF('J',struct A676,m8,1)
		AF('p',struct A676,m9,1)
		AF('B',struct A676,m10,1)
		AF('S',struct A676,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS} */
#pragma pack(push,4)
struct A677 { l m0; j m1; j m2; union A675 m3; d m4; C m5; d m6[4]; s m7; j m8; struct A676 m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA677(const struct A677 *x, const struct A677 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA675(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA676(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA677() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A677));
		AF('l',struct A677,m0,1)
		AF('j',struct A677,m1,1)
		AF('j',struct A677,m2,1)
		AFa(struct A677,m3,1,A675)
		AF('d',struct A677,m4,1)
		AF('C',struct A677,m5,1)
		AF('d',struct A677,m6,4)
		AF('s',struct A677,m7,1)
		AF('j',struct A677,m8,1)
		AFa(struct A677,m9,1,A676)
		AF('c',struct A677,m10,1)
		AF('S',struct A677,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JclL} */
#pragma pack(push,8)
struct A678 { J m0; c m1; l m2; L m3; };
#pragma pack(pop)
int f_cmpA678(const struct A678 *x, const struct A678 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA678() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A678));
		AF('J',struct A678,m0,1)
		AF('c',struct A678,m1,1)
		AF('l',struct A678,m2,1)
		AF('L',struct A678,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJs> */
#pragma pack(push,2)
union A679 { S m0; J m1; s m2; };
#pragma pack(pop)
int f_cmpA679(const union A679 *x, const union A679 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA679() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A679));
		AF('S',union A679,m0,1)
		AF('J',union A679,m1,1)
		AF('s',union A679,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bf} */
#pragma pack(push,4)
struct A680 { B m0; f m1; };
#pragma pack(pop)
int f_cmpA680(const struct A680 *x, const struct A680 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA680() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A680));
		AF('B',struct A680,m0,1)
		AF('f',struct A680,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SJs>Blllip{Bf}} */
#pragma pack(push,8)
struct A681 { union A679 m0; B m1; l m2; l m3; l m4; i m5; p m6; struct A680 m7; };
#pragma pack(pop)
int f_cmpA681(const struct A681 *x, const struct A681 *y) { return f_cmpA679(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA680(&x->m7, &y->m7); };
DCaggr* f_touchA681() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A681));
		AFa(struct A681,m0,1,A679)
		AF('B',struct A681,m1,1)
		AF('l',struct A681,m2,1)
		AF('l',struct A681,m3,1)
		AF('l',struct A681,m4,1)
		AF('i',struct A681,m5,1)
		AF('p',struct A681,m6,1)
		AFa(struct A681,m7,1,A680)
		dcCloseAggr(a);
	}
	return a;
};
/* <B{JclL}LdpSI{<SJs>Blllip{Bf}}ip> */
#pragma pack(push,4)
union A682 { B m0; struct A678 m1; L m2; d m3; p m4; S m5; I m6; struct A681 m7; i m8; p m9; };
#pragma pack(pop)
int f_cmpA682(const union A682 *x, const union A682 *y) { return x->m0 == y->m0 && f_cmpA678(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA681(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA682() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A682));
		AF('B',union A682,m0,1)
		AFa(union A682,m1,1,A678)
		AF('L',union A682,m2,1)
		AF('d',union A682,m3,1)
		AF('p',union A682,m4,1)
		AF('S',union A682,m5,1)
		AF('I',union A682,m6,1)
		AFa(union A682,m7,1,A681)
		AF('i',union A682,m8,1)
		AF('p',union A682,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldCJcCjLfsJs> */
#pragma pack(push,4)
union A683 { l m0; d m1; C m2; J m3; c m4; C m5; j m6; L m7; f m8; s m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA683(const union A683 *x, const union A683 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA683() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A683));
		AF('l',union A683,m0,1)
		AF('d',union A683,m1,1)
		AF('C',union A683,m2,1)
		AF('J',union A683,m3,1)
		AF('c',union A683,m4,1)
		AF('C',union A683,m5,1)
		AF('j',union A683,m6,1)
		AF('L',union A683,m7,1)
		AF('f',union A683,m8,1)
		AF('s',union A683,m9,1)
		AF('J',union A683,m10,1)
		AF('s',union A683,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iJScJI} */
#pragma pack(push,4)
struct A684 { i m0; J m1; S m2; c m3; J m4; I m5; };
#pragma pack(pop)
int f_cmpA684(const struct A684 *x, const struct A684 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA684() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A684));
		AF('i',struct A684,m0,1)
		AF('J',struct A684,m1,1)
		AF('S',struct A684,m2,1)
		AF('c',struct A684,m3,1)
		AF('J',struct A684,m4,1)
		AF('I',struct A684,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fjB> */
#pragma pack(push,2)
union A685 { f m0; j m1; B m2; };
#pragma pack(pop)
int f_cmpA685(const union A685 *x, const union A685 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA685() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A685));
		AF('f',union A685,m0,1)
		AF('j',union A685,m1,1)
		AF('B',union A685,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jBlf<fjB>c> */
#pragma pack(push,4)
union A686 { j m0; B m1; l m2; f m3; union A685 m4; c m5; };
#pragma pack(pop)
int f_cmpA686(const union A686 *x, const union A686 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA685(&x->m4, &y->m4) && x->m5 == y->m5; };
DCaggr* f_touchA686() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A686));
		AF('j',union A686,m0,1)
		AF('B',union A686,m1,1)
		AF('l',union A686,m2,1)
		AF('f',union A686,m3,1)
		AFa(union A686,m4,1,A685)
		AF('c',union A686,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ldd} */
#pragma pack(push,4)
struct A687 { L m0; d m1; d m2; };
#pragma pack(pop)
int f_cmpA687(const struct A687 *x, const struct A687 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA687() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A687));
		AF('L',struct A687,m0,1)
		AF('d',struct A687,m1,1)
		AF('d',struct A687,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CJdl} */
#pragma pack(push,4)
struct A688 { C m0; J m1; d m2; l m3; };
#pragma pack(pop)
int f_cmpA688(const struct A688 *x, const struct A688 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA688() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A688));
		AF('C',struct A688,m0,1)
		AF('J',struct A688,m1,1)
		AF('d',struct A688,m2,1)
		AF('l',struct A688,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <plfIpJsLIffJ> */
#pragma pack(push,4)
union A689 { p m0; l m1; f m2; I m3; p m4; J m5; s m6; L m7; I m8; f m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA689(const union A689 *x, const union A689 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA689() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A689));
		AF('p',union A689,m0,1)
		AF('l',union A689,m1,1)
		AF('f',union A689,m2,1)
		AF('I',union A689,m3,1)
		AF('p',union A689,m4,1)
		AF('J',union A689,m5,1)
		AF('s',union A689,m6,1)
		AF('L',union A689,m7,1)
		AF('I',union A689,m8,1)
		AF('f',union A689,m9,1)
		AF('f',union A689,m10,1)
		AF('J',union A689,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCJdIfJJSdsL> */
#pragma pack(push,4)
union A690 { p m0; C m1; J m2; d m3; I m4; f m5; J m6; J m7; S m8; d m9; s m10; L m11; };
#pragma pack(pop)
int f_cmpA690(const union A690 *x, const union A690 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA690() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A690));
		AF('p',union A690,m0,1)
		AF('C',union A690,m1,1)
		AF('J',union A690,m2,1)
		AF('d',union A690,m3,1)
		AF('I',union A690,m4,1)
		AF('f',union A690,m5,1)
		AF('J',union A690,m6,1)
		AF('J',union A690,m7,1)
		AF('S',union A690,m8,1)
		AF('d',union A690,m9,1)
		AF('s',union A690,m10,1)
		AF('L',union A690,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdIdC> */
#pragma pack(push,4)
union A691 { C m0; d m1; I m2; d m3; C m4; };
#pragma pack(pop)
int f_cmpA691(const union A691 *x, const union A691 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA691() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A691));
		AF('C',union A691,m0,1)
		AF('d',union A691,m1,1)
		AF('I',union A691,m2,1)
		AF('d',union A691,m3,1)
		AF('C',union A691,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCCcBf} */
#pragma pack(push,4)
struct A692 { d m0; C m1; C m2; c m3; B m4; f m5; };
#pragma pack(pop)
int f_cmpA692(const struct A692 *x, const struct A692 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA692() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A692));
		AF('d',struct A692,m0,1)
		AF('C',struct A692,m1,1)
		AF('C',struct A692,m2,1)
		AF('c',struct A692,m3,1)
		AF('B',struct A692,m4,1)
		AF('f',struct A692,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cpI> */
#pragma pack(push,4)
union A693 { c m0; p m1; I m2; };
#pragma pack(pop)
int f_cmpA693(const union A693 *x, const union A693 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA693() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A693));
		AF('c',union A693,m0,1)
		AF('p',union A693,m1,1)
		AF('I',union A693,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fs{dCCcBf}d<cpI>Ljcflsj> */
#pragma pack(push,4)
union A694 { f m0; s m1; struct A692 m2; d m3; union A693 m4; L m5; j m6; c m7; f m8; l m9; s m10; j m11; };
#pragma pack(pop)
int f_cmpA694(const union A694 *x, const union A694 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA692(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA693(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA694() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A694));
		AF('f',union A694,m0,1)
		AF('s',union A694,m1,1)
		AFa(union A694,m2,1,A692)
		AF('d',union A694,m3,1)
		AFa(union A694,m4,1,A693)
		AF('L',union A694,m5,1)
		AF('j',union A694,m6,1)
		AF('c',union A694,m7,1)
		AF('f',union A694,m8,1)
		AF('l',union A694,m9,1)
		AF('s',union A694,m10,1)
		AF('j',union A694,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pfcSdpBS<fs{dCCcBf}d<cpI>Ljcflsj>cls} */
#pragma pack(push,4)
struct A695 { p m0; f m1; c m2; S m3; d m4; p m5; B m6; S m7; union A694 m8; c m9; l m10; s m11; };
#pragma pack(pop)
int f_cmpA695(const struct A695 *x, const struct A695 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA694(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA695() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A695));
		AF('p',struct A695,m0,1)
		AF('f',struct A695,m1,1)
		AF('c',struct A695,m2,1)
		AF('S',struct A695,m3,1)
		AF('d',struct A695,m4,1)
		AF('p',struct A695,m5,1)
		AF('B',struct A695,m6,1)
		AF('S',struct A695,m7,1)
		AFa(struct A695,m8,1,A694)
		AF('c',struct A695,m9,1)
		AF('l',struct A695,m10,1)
		AF('s',struct A695,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SccpL[4]fJCfs} */
#pragma pack(push,2)
struct A696 { S m0; c m1; c m2; p m3; L m4[4]; f m5; J m6; C m7; f m8; s m9; };
#pragma pack(pop)
int f_cmpA696(const struct A696 *x, const struct A696 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA696() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A696));
		AF('S',struct A696,m0,1)
		AF('c',struct A696,m1,1)
		AF('c',struct A696,m2,1)
		AF('p',struct A696,m3,1)
		AF('L',struct A696,m4,4)
		AF('f',struct A696,m5,1)
		AF('J',struct A696,m6,1)
		AF('C',struct A696,m7,1)
		AF('f',struct A696,m8,1)
		AF('s',struct A696,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lCSiJC> */
#pragma pack(push,8)
union A697 { l m0; C m1; S m2; i m3; J m4; C m5; };
#pragma pack(pop)
int f_cmpA697(const union A697 *x, const union A697 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA697() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A697));
		AF('l',union A697,m0,1)
		AF('C',union A697,m1,1)
		AF('S',union A697,m2,1)
		AF('i',union A697,m3,1)
		AF('J',union A697,m4,1)
		AF('C',union A697,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iLpCLLIclLBL} */
#pragma pack(push,2)
struct A698 { i m0; L m1; p m2; C m3; L m4; L m5; I m6; c m7; l m8; L m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA698(const struct A698 *x, const struct A698 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA698() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A698));
		AF('i',struct A698,m0,1)
		AF('L',struct A698,m1,1)
		AF('p',struct A698,m2,1)
		AF('C',struct A698,m3,1)
		AF('L',struct A698,m4,1)
		AF('L',struct A698,m5,1)
		AF('I',struct A698,m6,1)
		AF('c',struct A698,m7,1)
		AF('l',struct A698,m8,1)
		AF('L',struct A698,m9,1)
		AF('B',struct A698,m10,1)
		AF('L',struct A698,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LJlccIiiffcj} */
#pragma pack(push,2)
struct A699 { L m0; J m1; l m2; c m3; c m4; I m5; i m6; i m7; f m8; f m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA699(const struct A699 *x, const struct A699 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA699() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A699));
		AF('L',struct A699,m0,1)
		AF('J',struct A699,m1,1)
		AF('l',struct A699,m2,1)
		AF('c',struct A699,m3,1)
		AF('c',struct A699,m4,1)
		AF('I',struct A699,m5,1)
		AF('i',struct A699,m6,1)
		AF('i',struct A699,m7,1)
		AF('f',struct A699,m8,1)
		AF('f',struct A699,m9,1)
		AF('c',struct A699,m10,1)
		AF('j',struct A699,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pJpJBpd> */
#pragma pack(push,4)
union A700 { p m0; J m1; p m2; J m3; B m4; p m5; d m6; };
#pragma pack(pop)
int f_cmpA700(const union A700 *x, const union A700 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA700() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A700));
		AF('p',union A700,m0,1)
		AF('J',union A700,m1,1)
		AF('p',union A700,m2,1)
		AF('J',union A700,m3,1)
		AF('B',union A700,m4,1)
		AF('p',union A700,m5,1)
		AF('d',union A700,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLsLjp{LJlccIiiffcj}<pJpJBpd>CdpS> */
#pragma pack(push,8)
union A701 { L m0; L m1; s m2; L m3; j m4; p m5; struct A699 m6; union A700 m7; C m8; d m9; p m10; S m11; };
#pragma pack(pop)
int f_cmpA701(const union A701 *x, const union A701 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA699(&x->m6, &y->m6) && f_cmpA700(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA701() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A701));
		AF('L',union A701,m0,1)
		AF('L',union A701,m1,1)
		AF('s',union A701,m2,1)
		AF('L',union A701,m3,1)
		AF('j',union A701,m4,1)
		AF('p',union A701,m5,1)
		AFa(union A701,m6,1,A699)
		AFa(union A701,m7,1,A700)
		AF('C',union A701,m8,1)
		AF('d',union A701,m9,1)
		AF('p',union A701,m10,1)
		AF('S',union A701,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djiBpiJIIpfp} */
#pragma pack(push,4)
struct A702 { d m0; j m1; i m2; B m3; p m4; i m5; J m6; I m7; I m8; p m9; f m10; p m11; };
#pragma pack(pop)
int f_cmpA702(const struct A702 *x, const struct A702 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA702() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A702));
		AF('d',struct A702,m0,1)
		AF('j',struct A702,m1,1)
		AF('i',struct A702,m2,1)
		AF('B',struct A702,m3,1)
		AF('p',struct A702,m4,1)
		AF('i',struct A702,m5,1)
		AF('J',struct A702,m6,1)
		AF('I',struct A702,m7,1)
		AF('I',struct A702,m8,1)
		AF('p',struct A702,m9,1)
		AF('f',struct A702,m10,1)
		AF('p',struct A702,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fBccJpLljCC{djiBpiJIIpfp}> */
#pragma pack(push,1)
union A703 { f m0; B m1; c m2; c m3; J m4; p m5; L m6; l m7; j m8; C m9; C m10; struct A702 m11; };
#pragma pack(pop)
int f_cmpA703(const union A703 *x, const union A703 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA702(&x->m11, &y->m11); };
DCaggr* f_touchA703() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A703));
		AF('f',union A703,m0,1)
		AF('B',union A703,m1,1)
		AF('c',union A703,m2,1)
		AF('c',union A703,m3,1)
		AF('J',union A703,m4,1)
		AF('p',union A703,m5,1)
		AF('L',union A703,m6,1)
		AF('l',union A703,m7,1)
		AF('j',union A703,m8,1)
		AF('C',union A703,m9,1)
		AF('C',union A703,m10,1)
		AFa(union A703,m11,1,A702)
		dcCloseAggr(a);
	}
	return a;
};
/* <ipSj> */
#pragma pack(push,4)
union A704 { i m0; p m1; S m2; j m3; };
#pragma pack(pop)
int f_cmpA704(const union A704 *x, const union A704 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA704() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A704));
		AF('i',union A704,m0,1)
		AF('p',union A704,m1,1)
		AF('S',union A704,m2,1)
		AF('j',union A704,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iddcsBsjBBLd} */
#pragma pack(push,8)
struct A705 { i m0; d m1; d m2; c m3; s m4; B m5; s m6; j m7; B m8; B m9; L m10; d m11; };
#pragma pack(pop)
int f_cmpA705(const struct A705 *x, const struct A705 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA705() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A705));
		AF('i',struct A705,m0,1)
		AF('d',struct A705,m1,1)
		AF('d',struct A705,m2,1)
		AF('c',struct A705,m3,1)
		AF('s',struct A705,m4,1)
		AF('B',struct A705,m5,1)
		AF('s',struct A705,m6,1)
		AF('j',struct A705,m7,1)
		AF('B',struct A705,m8,1)
		AF('B',struct A705,m9,1)
		AF('L',struct A705,m10,1)
		AF('d',struct A705,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dpCJliL[11]JS} */
#pragma pack(push,8)
struct A706 { d m0; p m1; C m2; J m3; l m4; i m5; L m6[11]; J m7; S m8; };
#pragma pack(pop)
int f_cmpA706(const struct A706 *x, const struct A706 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA706() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A706));
		AF('d',struct A706,m0,1)
		AF('p',struct A706,m1,1)
		AF('C',struct A706,m2,1)
		AF('J',struct A706,m3,1)
		AF('l',struct A706,m4,1)
		AF('i',struct A706,m5,1)
		AF('L',struct A706,m6,11)
		AF('J',struct A706,m7,1)
		AF('S',struct A706,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<ipSj>C{iddcsBsjBBLd}LJsBIJJ{dpCJliL[11]JS}j> */
#pragma pack(push,2)
union A707 { union A704 m0; C m1; struct A705 m2; L m3; J m4; s m5; B m6; I m7; J m8; J m9; struct A706 m10; j m11; };
#pragma pack(pop)
int f_cmpA707(const union A707 *x, const union A707 *y) { return f_cmpA704(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA705(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA706(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA707() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A707));
		AFa(union A707,m0,1,A704)
		AF('C',union A707,m1,1)
		AFa(union A707,m2,1,A705)
		AF('L',union A707,m3,1)
		AF('J',union A707,m4,1)
		AF('s',union A707,m5,1)
		AF('B',union A707,m6,1)
		AF('I',union A707,m7,1)
		AF('J',union A707,m8,1)
		AF('J',union A707,m9,1)
		AFa(union A707,m10,1,A706)
		AF('j',union A707,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jp<LLsLjp{LJlccIiiffcj}<pJpJBpd>CdpS>dLij<fBccJpLljCC{djiBpiJIIpfp}>Cil<<ipSj>C{iddcsBsjBBLd}LJsBIJJ{dpCJliL[11]JS}j>> */
#pragma pack(push,4)
union A708 { j m0; p m1; union A701 m2; d m3; L m4; i m5; j m6; union A703 m7; C m8; i m9; l m10; union A707 m11; };
#pragma pack(pop)
int f_cmpA708(const union A708 *x, const union A708 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA701(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA703(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA707(&x->m11, &y->m11); };
DCaggr* f_touchA708() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A708));
		AF('j',union A708,m0,1)
		AF('p',union A708,m1,1)
		AFa(union A708,m2,1,A701)
		AF('d',union A708,m3,1)
		AF('L',union A708,m4,1)
		AF('i',union A708,m5,1)
		AF('j',union A708,m6,1)
		AFa(union A708,m7,1,A703)
		AF('C',union A708,m8,1)
		AF('i',union A708,m9,1)
		AF('l',union A708,m10,1)
		AFa(union A708,m11,1,A707)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJdLJIdLLiJ[6]C> */
#pragma pack(push,8)
union A709 { s m0; J m1; d m2; L m3; J m4; I m5; d m6; L m7; L m8; i m9; J m10[6]; C m11; };
#pragma pack(pop)
int f_cmpA709(const union A709 *x, const union A709 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m11 == y->m11; };
DCaggr* f_touchA709() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A709));
		AF('s',union A709,m0,1)
		AF('J',union A709,m1,1)
		AF('d',union A709,m2,1)
		AF('L',union A709,m3,1)
		AF('J',union A709,m4,1)
		AF('I',union A709,m5,1)
		AF('d',union A709,m6,1)
		AF('L',union A709,m7,1)
		AF('L',union A709,m8,1)
		AF('i',union A709,m9,1)
		AF('J',union A709,m10,6)
		AF('C',union A709,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<sJdLJIdLLiJ[6]C>cLJflfc} */
#pragma pack(push,4)
struct A710 { union A709 m0; c m1; L m2; J m3; f m4; l m5; f m6; c m7; };
#pragma pack(pop)
int f_cmpA710(const struct A710 *x, const struct A710 *y) { return f_cmpA709(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA710() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A710));
		AFa(struct A710,m0,1,A709)
		AF('c',struct A710,m1,1)
		AF('L',struct A710,m2,1)
		AF('J',struct A710,m3,1)
		AF('f',struct A710,m4,1)
		AF('l',struct A710,m5,1)
		AF('f',struct A710,m6,1)
		AF('c',struct A710,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj} */
#pragma pack(push,8)
struct A711 { s m0; B m1; struct A710 m2[16]; S m3; J m4; j m5; };
#pragma pack(pop)
int f_cmpA711(const struct A711 *x, const struct A711 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA710(&x->m2[0], &y->m2[0]) && f_cmpA710(&x->m2[1], &y->m2[1]) && f_cmpA710(&x->m2[2], &y->m2[2]) && f_cmpA710(&x->m2[3], &y->m2[3]) && f_cmpA710(&x->m2[4], &y->m2[4]) && f_cmpA710(&x->m2[5], &y->m2[5]) && f_cmpA710(&x->m2[6], &y->m2[6]) && f_cmpA710(&x->m2[7], &y->m2[7]) && f_cmpA710(&x->m2[8], &y->m2[8]) && f_cmpA710(&x->m2[9], &y->m2[9]) && f_cmpA710(&x->m2[10], &y->m2[10]) && f_cmpA710(&x->m2[11], &y->m2[11]) && f_cmpA710(&x->m2[12], &y->m2[12]) && f_cmpA710(&x->m2[13], &y->m2[13]) && f_cmpA710(&x->m2[14], &y->m2[14]) && f_cmpA710(&x->m2[15], &y->m2[15]) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA711() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A711));
		AF('s',struct A711,m0,1)
		AF('B',struct A711,m1,1)
		AFa(struct A711,m2,16,A710)
		AF('S',struct A711,m3,1)
		AF('J',struct A711,m4,1)
		AF('j',struct A711,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IspBfiLI[7]J} */
#pragma pack(push,4)
struct A712 { I m0; s m1; p m2; B m3; f m4; i m5; L m6; I m7[7]; J m8; };
#pragma pack(pop)
int f_cmpA712(const struct A712 *x, const struct A712 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m8 == y->m8; };
DCaggr* f_touchA712() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A712));
		AF('I',struct A712,m0,1)
		AF('s',struct A712,m1,1)
		AF('p',struct A712,m2,1)
		AF('B',struct A712,m3,1)
		AF('f',struct A712,m4,1)
		AF('i',struct A712,m5,1)
		AF('L',struct A712,m6,1)
		AF('I',struct A712,m7,7)
		AF('J',struct A712,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s> */
#pragma pack(push,1)
union A713 { s m0; };
#pragma pack(pop)
int f_cmpA713(const union A713 *x, const union A713 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA713() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A713));
		AF('s',union A713,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fBdCICLJfICL> */
#pragma pack(push,4)
union A714 { f m0; B m1; d m2; C m3; I m4; C m5; L m6; J m7; f m8; I m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA714(const union A714 *x, const union A714 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA714() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A714));
		AF('f',union A714,m0,1)
		AF('B',union A714,m1,1)
		AF('d',union A714,m2,1)
		AF('C',union A714,m3,1)
		AF('I',union A714,m4,1)
		AF('C',union A714,m5,1)
		AF('L',union A714,m6,1)
		AF('J',union A714,m7,1)
		AF('f',union A714,m8,1)
		AF('I',union A714,m9,1)
		AF('C',union A714,m10,1)
		AF('L',union A714,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpIdplcjd[12]l<fBdCICLJfICL>C} */
#pragma pack(push,4)
struct A715 { j m0; p m1; I m2; d m3; p m4; l m5; c m6; j m7; d m8[12]; l m9; union A714 m10; C m11; };
#pragma pack(pop)
int f_cmpA715(const struct A715 *x, const struct A715 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m9 == y->m9 && f_cmpA714(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA715() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A715));
		AF('j',struct A715,m0,1)
		AF('p',struct A715,m1,1)
		AF('I',struct A715,m2,1)
		AF('d',struct A715,m3,1)
		AF('p',struct A715,m4,1)
		AF('l',struct A715,m5,1)
		AF('c',struct A715,m6,1)
		AF('j',struct A715,m7,1)
		AF('d',struct A715,m8,12)
		AF('l',struct A715,m9,1)
		AFa(struct A715,m10,1,A714)
		AF('C',struct A715,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff> */
#pragma pack(push,2)
union A716 { union A123 m0; d m1; J m2; s m3; union A713 m4; struct A715 m5; j m6; f m7; f m8; };
#pragma pack(pop)
int f_cmpA716(const union A716 *x, const union A716 *y) { return f_cmpA123(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA713(&x->m4, &y->m4) && f_cmpA715(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA716() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A716));
		AFa(union A716,m0,1,A123)
		AF('d',union A716,m1,1)
		AF('J',union A716,m2,1)
		AF('s',union A716,m3,1)
		AFa(union A716,m4,1,A713)
		AFa(union A716,m5,1,A715)
		AF('j',union A716,m6,1)
		AF('f',union A716,m7,1)
		AF('f',union A716,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <piJjCfLCSI> */
#pragma pack(push,8)
union A717 { p m0; i m1; J m2; j m3; C m4; f m5; L m6; C m7; S m8; I m9; };
#pragma pack(pop)
int f_cmpA717(const union A717 *x, const union A717 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA717() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A717));
		AF('p',union A717,m0,1)
		AF('i',union A717,m1,1)
		AF('J',union A717,m2,1)
		AF('j',union A717,m3,1)
		AF('C',union A717,m4,1)
		AF('f',union A717,m5,1)
		AF('L',union A717,m6,1)
		AF('C',union A717,m7,1)
		AF('S',union A717,m8,1)
		AF('I',union A717,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pISICSs[4]p[13]Icl} */
#pragma pack(push,1)
struct A718 { p m0; I m1; S m2; I m3; C m4; S m5; s m6[4]; p m7[13]; I m8; c m9; l m10; };
#pragma pack(pop)
int f_cmpA718(const struct A718 *x, const struct A718 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA718() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A718));
		AF('p',struct A718,m0,1)
		AF('I',struct A718,m1,1)
		AF('S',struct A718,m2,1)
		AF('I',struct A718,m3,1)
		AF('C',struct A718,m4,1)
		AF('S',struct A718,m5,1)
		AF('s',struct A718,m6,4)
		AF('p',struct A718,m7,13)
		AF('I',struct A718,m8,1)
		AF('c',struct A718,m9,1)
		AF('l',struct A718,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{pISICSs[4]p[13]Icl}sCJfs} */
#pragma pack(push,8)
struct A719 { p m0; struct A718 m1; s m2; C m3; J m4; f m5; s m6; };
#pragma pack(pop)
int f_cmpA719(const struct A719 *x, const struct A719 *y) { return x->m0 == y->m0 && f_cmpA718(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA719() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A719));
		AF('p',struct A719,m0,1)
		AFa(struct A719,m1,1,A718)
		AF('s',struct A719,m2,1)
		AF('C',struct A719,m3,1)
		AF('J',struct A719,m4,1)
		AF('f',struct A719,m5,1)
		AF('s',struct A719,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldCjiS> */
#pragma pack(push,4)
union A720 { l m0; d m1; C m2; j m3; i m4; S m5; };
#pragma pack(pop)
int f_cmpA720(const union A720 *x, const union A720 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA720() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A720));
		AF('l',union A720,m0,1)
		AF('d',union A720,m1,1)
		AF('C',union A720,m2,1)
		AF('j',union A720,m3,1)
		AF('i',union A720,m4,1)
		AF('S',union A720,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lflf<ldCjiS>SfSiBIL> */
#pragma pack(push,4)
union A721 { L m0; f m1; l m2; f m3; union A720 m4; S m5; f m6; S m7; i m8; B m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA721(const union A721 *x, const union A721 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA720(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA721() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A721));
		AF('L',union A721,m0,1)
		AF('f',union A721,m1,1)
		AF('l',union A721,m2,1)
		AF('f',union A721,m3,1)
		AFa(union A721,m4,1,A720)
		AF('S',union A721,m5,1)
		AF('f',union A721,m6,1)
		AF('S',union A721,m7,1)
		AF('i',union A721,m8,1)
		AF('B',union A721,m9,1)
		AF('I',union A721,m10,1)
		AF('L',union A721,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLpdsljpfI[4]p[2]s> */
#pragma pack(push,4)
union A722 { J m0; L m1; p m2; d m3; s m4; l m5; j m6; p m7; f m8; I m9[4]; p m10[2]; s m11; };
#pragma pack(pop)
int f_cmpA722(const union A722 *x, const union A722 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m11 == y->m11; };
DCaggr* f_touchA722() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A722));
		AF('J',union A722,m0,1)
		AF('L',union A722,m1,1)
		AF('p',union A722,m2,1)
		AF('d',union A722,m3,1)
		AF('s',union A722,m4,1)
		AF('l',union A722,m5,1)
		AF('j',union A722,m6,1)
		AF('p',union A722,m7,1)
		AF('f',union A722,m8,1)
		AF('I',union A722,m9,4)
		AF('p',union A722,m10,2)
		AF('s',union A722,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ISIjIi[5]IILjds> */
#pragma pack(push,2)
union A723 { I m0; S m1; I m2; j m3; I m4; i m5[5]; I m6; I m7; L m8; j m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA723(const union A723 *x, const union A723 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA723() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A723));
		AF('I',union A723,m0,1)
		AF('S',union A723,m1,1)
		AF('I',union A723,m2,1)
		AF('j',union A723,m3,1)
		AF('I',union A723,m4,1)
		AF('i',union A723,m5,5)
		AF('I',union A723,m6,1)
		AF('I',union A723,m7,1)
		AF('L',union A723,m8,1)
		AF('j',union A723,m9,1)
		AF('d',union A723,m10,1)
		AF('s',union A723,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdSBpSJds> */
#pragma pack(push,2)
union A724 { j m0; d m1; S m2; B m3; p m4; S m5; J m6; d m7; s m8; };
#pragma pack(pop)
int f_cmpA724(const union A724 *x, const union A724 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA724() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A724));
		AF('j',union A724,m0,1)
		AF('d',union A724,m1,1)
		AF('S',union A724,m2,1)
		AF('B',union A724,m3,1)
		AF('p',union A724,m4,1)
		AF('S',union A724,m5,1)
		AF('J',union A724,m6,1)
		AF('d',union A724,m7,1)
		AF('s',union A724,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<ISIjIi[5]IILjds><jdSBpSJds>iCIcIfSLJL> */
#pragma pack(push,2)
union A725 { union A723 m0; union A724 m1; i m2; C m3; I m4; c m5; I m6; f m7; S m8; L m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA725(const union A725 *x, const union A725 *y) { return f_cmpA723(&x->m0, &y->m0) && f_cmpA724(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA725() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A725));
		AFa(union A725,m0,1,A723)
		AFa(union A725,m1,1,A724)
		AF('i',union A725,m2,1)
		AF('C',union A725,m3,1)
		AF('I',union A725,m4,1)
		AF('c',union A725,m5,1)
		AF('I',union A725,m6,1)
		AF('f',union A725,m7,1)
		AF('S',union A725,m8,1)
		AF('L',union A725,m9,1)
		AF('J',union A725,m10,1)
		AF('L',union A725,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<ISIjIi[5]IILjds><jdSBpSJds>iCIcIfSLJL>lSjpLBi} */
#pragma pack(push,8)
struct A726 { union A721 m0; union A722 m1; I m2; L m3; union A725 m4; l m5; S m6; j m7; p m8; L m9; B m10; i m11; };
#pragma pack(pop)
int f_cmpA726(const struct A726 *x, const struct A726 *y) { return f_cmpA721(&x->m0, &y->m0) && f_cmpA722(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA725(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA726() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A726));
		AFa(struct A726,m0,1,A721)
		AFa(struct A726,m1,1,A722)
		AF('I',struct A726,m2,1)
		AF('L',struct A726,m3,1)
		AFa(struct A726,m4,1,A725)
		AF('l',struct A726,m5,1)
		AF('S',struct A726,m6,1)
		AF('j',struct A726,m7,1)
		AF('p',struct A726,m8,1)
		AF('L',struct A726,m9,1)
		AF('B',struct A726,m10,1)
		AF('i',struct A726,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJlCjjsBjcfB} */
#pragma pack(push,4)
struct A727 { p m0; J m1; l m2; C m3; j m4; j m5; s m6; B m7; j m8; c m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA727(const struct A727 *x, const struct A727 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA727() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A727));
		AF('p',struct A727,m0,1)
		AF('J',struct A727,m1,1)
		AF('l',struct A727,m2,1)
		AF('C',struct A727,m3,1)
		AF('j',struct A727,m4,1)
		AF('j',struct A727,m5,1)
		AF('s',struct A727,m6,1)
		AF('B',struct A727,m7,1)
		AF('j',struct A727,m8,1)
		AF('c',struct A727,m9,1)
		AF('f',struct A727,m10,1)
		AF('B',struct A727,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <diS{pJlCjjsBjcfB}jIiCdJSd> */
#pragma pack(push,2)
union A728 { d m0; i m1; S m2; struct A727 m3; j m4; I m5; i m6; C m7; d m8; J m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA728(const union A728 *x, const union A728 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA727(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA728() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A728));
		AF('d',union A728,m0,1)
		AF('i',union A728,m1,1)
		AF('S',union A728,m2,1)
		AFa(union A728,m3,1,A727)
		AF('j',union A728,m4,1)
		AF('I',union A728,m5,1)
		AF('i',union A728,m6,1)
		AF('C',union A728,m7,1)
		AF('d',union A728,m8,1)
		AF('J',union A728,m9,1)
		AF('S',union A728,m10,1)
		AF('d',union A728,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sBIJBjfIidjl> */
#pragma pack(push,1)
union A729 { s m0; B m1; I m2; J m3; B m4; j m5; f m6; I m7; i m8; d m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA729(const union A729 *x, const union A729 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA729() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A729));
		AF('s',union A729,m0,1)
		AF('B',union A729,m1,1)
		AF('I',union A729,m2,1)
		AF('J',union A729,m3,1)
		AF('B',union A729,m4,1)
		AF('j',union A729,m5,1)
		AF('f',union A729,m6,1)
		AF('I',union A729,m7,1)
		AF('i',union A729,m8,1)
		AF('d',union A729,m9,1)
		AF('j',union A729,m10,1)
		AF('l',union A729,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ccdBBlSlisc<sBIJBjfIidjl>> */
#pragma pack(push,4)
union A730 { c m0; c m1; d m2; B m3; B m4; l m5; S m6; l m7; i m8; s m9; c m10; union A729 m11; };
#pragma pack(pop)
int f_cmpA730(const union A730 *x, const union A730 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA729(&x->m11, &y->m11); };
DCaggr* f_touchA730() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A730));
		AF('c',union A730,m0,1)
		AF('c',union A730,m1,1)
		AF('d',union A730,m2,1)
		AF('B',union A730,m3,1)
		AF('B',union A730,m4,1)
		AF('l',union A730,m5,1)
		AF('S',union A730,m6,1)
		AF('l',union A730,m7,1)
		AF('i',union A730,m8,1)
		AF('s',union A730,m9,1)
		AF('c',union A730,m10,1)
		AFa(union A730,m11,1,A729)
		dcCloseAggr(a);
	}
	return a;
};
/* <BjBI> */
#pragma pack(push,4)
union A731 { B m0; j m1; B m2; I m3; };
#pragma pack(pop)
int f_cmpA731(const union A731 *x, const union A731 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA731() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A731));
		AF('B',union A731,m0,1)
		AF('j',union A731,m1,1)
		AF('B',union A731,m2,1)
		AF('I',union A731,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ISdipLlC<BjBI>[5]> */
#pragma pack(push,8)
union A732 { I m0; S m1; d m2; i m3; p m4; L m5; l m6; C m7; union A731 m8[5]; };
#pragma pack(pop)
int f_cmpA732(const union A732 *x, const union A732 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA731(&x->m8[0], &y->m8[0]) && f_cmpA731(&x->m8[1], &y->m8[1]) && f_cmpA731(&x->m8[2], &y->m8[2]) && f_cmpA731(&x->m8[3], &y->m8[3]) && f_cmpA731(&x->m8[4], &y->m8[4]); };
DCaggr* f_touchA732() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A732));
		AF('I',union A732,m0,1)
		AF('S',union A732,m1,1)
		AF('d',union A732,m2,1)
		AF('i',union A732,m3,1)
		AF('p',union A732,m4,1)
		AF('L',union A732,m5,1)
		AF('l',union A732,m6,1)
		AF('C',union A732,m7,1)
		AFa(union A732,m8,5,A731)
		dcCloseAggr(a);
	}
	return a;
};
/* {dcSlsBf<ccdBBlSlisc<sBIJBjfIidjl>>J<ISdipLlC<BjBI>[5]>jl} */
#pragma pack(push,4)
struct A733 { d m0; c m1; S m2; l m3; s m4; B m5; f m6; union A730 m7; J m8; union A732 m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA733(const struct A733 *x, const struct A733 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA730(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA732(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA733() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A733));
		AF('d',struct A733,m0,1)
		AF('c',struct A733,m1,1)
		AF('S',struct A733,m2,1)
		AF('l',struct A733,m3,1)
		AF('s',struct A733,m4,1)
		AF('B',struct A733,m5,1)
		AF('f',struct A733,m6,1)
		AFa(struct A733,m7,1,A730)
		AF('J',struct A733,m8,1)
		AFa(struct A733,m9,1,A732)
		AF('j',struct A733,m10,1)
		AF('l',struct A733,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BlIjLJCfSC[5]LC> */
#pragma pack(push,4)
union A734 { B m0; l m1; I m2; j m3; L m4; J m5; C m6; f m7; S m8; C m9[5]; L m10; C m11; };
#pragma pack(pop)
int f_cmpA734(const union A734 *x, const union A734 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA734() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A734));
		AF('B',union A734,m0,1)
		AF('l',union A734,m1,1)
		AF('I',union A734,m2,1)
		AF('j',union A734,m3,1)
		AF('L',union A734,m4,1)
		AF('J',union A734,m5,1)
		AF('C',union A734,m6,1)
		AF('f',union A734,m7,1)
		AF('S',union A734,m8,1)
		AF('C',union A734,m9,5)
		AF('L',union A734,m10,1)
		AF('C',union A734,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cilCsi[8]ffLJSd} */
#pragma pack(push,4)
struct A735 { c m0; i m1; l m2; C m3; s m4; i m5[8]; f m6; f m7; L m8; J m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA735(const struct A735 *x, const struct A735 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA735() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A735));
		AF('c',struct A735,m0,1)
		AF('i',struct A735,m1,1)
		AF('l',struct A735,m2,1)
		AF('C',struct A735,m3,1)
		AF('s',struct A735,m4,1)
		AF('i',struct A735,m5,8)
		AF('f',struct A735,m6,1)
		AF('f',struct A735,m7,1)
		AF('L',struct A735,m8,1)
		AF('J',struct A735,m9,1)
		AF('S',struct A735,m10,1)
		AF('d',struct A735,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C<BlIjLJCfSC[5]LC>dpLCJBfl{cilCsi[8]ffLJSd}I} */
#pragma pack(push,4)
struct A736 { C m0; union A734 m1; d m2; p m3; L m4; C m5; J m6; B m7; f m8; l m9; struct A735 m10; I m11; };
#pragma pack(pop)
int f_cmpA736(const struct A736 *x, const struct A736 *y) { return x->m0 == y->m0 && f_cmpA734(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA735(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA736() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A736));
		AF('C',struct A736,m0,1)
		AFa(struct A736,m1,1,A734)
		AF('d',struct A736,m2,1)
		AF('p',struct A736,m3,1)
		AF('L',struct A736,m4,1)
		AF('C',struct A736,m5,1)
		AF('J',struct A736,m6,1)
		AF('B',struct A736,m7,1)
		AF('f',struct A736,m8,1)
		AF('l',struct A736,m9,1)
		AFa(struct A736,m10,1,A735)
		AF('I',struct A736,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cl[5]> */
#pragma pack(push,4)
union A737 { c m0; l m1[5]; };
#pragma pack(pop)
int f_cmpA737(const union A737 *x, const union A737 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4]; };
DCaggr* f_touchA737() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A737));
		AF('c',union A737,m0,1)
		AF('l',union A737,m1,5)
		dcCloseAggr(a);
	}
	return a;
};
/* <sIsspcIjLCI> */
#pragma pack(push,4)
union A738 { s m0; I m1; s m2; s m3; p m4; c m5; I m6; j m7; L m8; C m9; I m10; };
#pragma pack(pop)
int f_cmpA738(const union A738 *x, const union A738 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA738() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A738));
		AF('s',union A738,m0,1)
		AF('I',union A738,m1,1)
		AF('s',union A738,m2,1)
		AF('s',union A738,m3,1)
		AF('p',union A738,m4,1)
		AF('c',union A738,m5,1)
		AF('I',union A738,m6,1)
		AF('j',union A738,m7,1)
		AF('L',union A738,m8,1)
		AF('C',union A738,m9,1)
		AF('I',union A738,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IcpjjicJjdSJ> */
#pragma pack(push,1)
union A739 { I m0; c m1; p m2; j m3; j m4; i m5; c m6; J m7; j m8; d m9; S m10; J m11; };
#pragma pack(pop)
int f_cmpA739(const union A739 *x, const union A739 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA739() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A739));
		AF('I',union A739,m0,1)
		AF('c',union A739,m1,1)
		AF('p',union A739,m2,1)
		AF('j',union A739,m3,1)
		AF('j',union A739,m4,1)
		AF('i',union A739,m5,1)
		AF('c',union A739,m6,1)
		AF('J',union A739,m7,1)
		AF('j',union A739,m8,1)
		AF('d',union A739,m9,1)
		AF('S',union A739,m10,1)
		AF('J',union A739,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCLicLCJlLLL> */
#pragma pack(push,4)
union A740 { J m0; C m1; L m2; i m3; c m4; L m5; C m6; J m7; l m8; L m9; L m10; L m11; };
#pragma pack(pop)
int f_cmpA740(const union A740 *x, const union A740 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA740() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A740));
		AF('J',union A740,m0,1)
		AF('C',union A740,m1,1)
		AF('L',union A740,m2,1)
		AF('i',union A740,m3,1)
		AF('c',union A740,m4,1)
		AF('L',union A740,m5,1)
		AF('C',union A740,m6,1)
		AF('J',union A740,m7,1)
		AF('l',union A740,m8,1)
		AF('L',union A740,m9,1)
		AF('L',union A740,m10,1)
		AF('L',union A740,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<sIsspcIjLCI>L<IcpjjicJjdSJ>dS<JCLicLCJlLLL>> */
#pragma pack(push,8)
union A741 { union A738 m0; L m1; union A739 m2; d m3; S m4; union A740 m5; };
#pragma pack(pop)
int f_cmpA741(const union A741 *x, const union A741 *y) { return f_cmpA738(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA739(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA740(&x->m5, &y->m5); };
DCaggr* f_touchA741() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A741));
		AFa(union A741,m0,1,A738)
		AF('L',union A741,m1,1)
		AFa(union A741,m2,1,A739)
		AF('d',union A741,m3,1)
		AF('S',union A741,m4,1)
		AFa(union A741,m5,1,A740)
		dcCloseAggr(a);
	}
	return a;
};
/* {<cl[5]>j<<sIsspcIjLCI>L<IcpjjicJjdSJ>dS<JCLicLCJlLLL>>Llp} */
#pragma pack(push,8)
struct A742 { union A737 m0; j m1; union A741 m2; L m3; l m4; p m5; };
#pragma pack(pop)
int f_cmpA742(const struct A742 *x, const struct A742 *y) { return f_cmpA737(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA741(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA742() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A742));
		AFa(struct A742,m0,1,A737)
		AF('j',struct A742,m1,1)
		AFa(struct A742,m2,1,A741)
		AF('L',struct A742,m3,1)
		AF('l',struct A742,m4,1)
		AF('p',struct A742,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cpjpcds> */
#pragma pack(push,2)
union A743 { C m0; p m1; j m2; p m3; c m4; d m5; s m6; };
#pragma pack(pop)
int f_cmpA743(const union A743 *x, const union A743 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA743() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A743));
		AF('C',union A743,m0,1)
		AF('p',union A743,m1,1)
		AF('j',union A743,m2,1)
		AF('p',union A743,m3,1)
		AF('c',union A743,m4,1)
		AF('d',union A743,m5,1)
		AF('s',union A743,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ciLLC} */
#pragma pack(push,1)
struct A744 { c m0; i m1; L m2; L m3; C m4; };
#pragma pack(pop)
int f_cmpA744(const struct A744 *x, const struct A744 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA744() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A744));
		AF('c',struct A744,m0,1)
		AF('i',struct A744,m1,1)
		AF('L',struct A744,m2,1)
		AF('L',struct A744,m3,1)
		AF('C',struct A744,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdJjjCpscIdI> */
#pragma pack(push,2)
union A745 { I m0; d m1; J m2; j m3; j m4; C m5; p m6; s m7; c m8; I m9; d m10; I m11; };
#pragma pack(pop)
int f_cmpA745(const union A745 *x, const union A745 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA745() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A745));
		AF('I',union A745,m0,1)
		AF('d',union A745,m1,1)
		AF('J',union A745,m2,1)
		AF('j',union A745,m3,1)
		AF('j',union A745,m4,1)
		AF('C',union A745,m5,1)
		AF('p',union A745,m6,1)
		AF('s',union A745,m7,1)
		AF('c',union A745,m8,1)
		AF('I',union A745,m9,1)
		AF('d',union A745,m10,1)
		AF('I',union A745,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ppJJf} */
#pragma pack(push,4)
struct A746 { p m0; p m1; J m2; J m3; f m4; };
#pragma pack(pop)
int f_cmpA746(const struct A746 *x, const struct A746 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA746() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A746));
		AF('p',struct A746,m0,1)
		AF('p',struct A746,m1,1)
		AF('J',struct A746,m2,1)
		AF('J',struct A746,m3,1)
		AF('f',struct A746,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lCpSdIjL} */
#pragma pack(push,2)
struct A747 { l m0; C m1; p m2; S m3; d m4; I m5; j m6; L m7; };
#pragma pack(pop)
int f_cmpA747(const struct A747 *x, const struct A747 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA747() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A747));
		AF('l',struct A747,m0,1)
		AF('C',struct A747,m1,1)
		AF('p',struct A747,m2,1)
		AF('S',struct A747,m3,1)
		AF('d',struct A747,m4,1)
		AF('I',struct A747,m5,1)
		AF('j',struct A747,m6,1)
		AF('L',struct A747,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLc{ppJJf}[7]{lCpSdIjL}SpIji> */
#pragma pack(push,2)
union A748 { s m0; L m1; c m2; struct A746 m3[7]; struct A747 m4; S m5; p m6; I m7; j m8; i m9; };
#pragma pack(pop)
int f_cmpA748(const union A748 *x, const union A748 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA746(&x->m3[0], &y->m3[0]) && f_cmpA746(&x->m3[1], &y->m3[1]) && f_cmpA746(&x->m3[2], &y->m3[2]) && f_cmpA746(&x->m3[3], &y->m3[3]) && f_cmpA746(&x->m3[4], &y->m3[4]) && f_cmpA746(&x->m3[5], &y->m3[5]) && f_cmpA746(&x->m3[6], &y->m3[6]) && f_cmpA747(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA748() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A748));
		AF('s',union A748,m0,1)
		AF('L',union A748,m1,1)
		AF('c',union A748,m2,1)
		AFa(union A748,m3,7,A746)
		AFa(union A748,m4,1,A747)
		AF('S',union A748,m5,1)
		AF('p',union A748,m6,1)
		AF('I',union A748,m7,1)
		AF('j',union A748,m8,1)
		AF('i',union A748,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<sLc{ppJJf}[7]{lCpSdIjL}SpIji>SJC} */
#pragma pack(push,8)
struct A749 { union A748 m0; S m1; J m2; C m3; };
#pragma pack(pop)
int f_cmpA749(const struct A749 *x, const struct A749 *y) { return f_cmpA748(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA749() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A749));
		AFa(struct A749,m0,1,A748)
		AF('S',struct A749,m1,1)
		AF('J',struct A749,m2,1)
		AF('C',struct A749,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lll} */
#pragma pack(push,2)
struct A750 { L m0; l m1; l m2; };
#pragma pack(pop)
int f_cmpA750(const struct A750 *x, const struct A750 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA750() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A750));
		AF('L',struct A750,m0,1)
		AF('l',struct A750,m1,1)
		AF('l',struct A750,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dlcc[7]Jf{Lll}[11]csj} */
#pragma pack(push,4)
struct A751 { d m0; l m1; c m2; c m3[7]; J m4; f m5; struct A750 m6[11]; c m7; s m8; j m9; };
#pragma pack(pop)
int f_cmpA751(const struct A751 *x, const struct A751 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA750(&x->m6[0], &y->m6[0]) && f_cmpA750(&x->m6[1], &y->m6[1]) && f_cmpA750(&x->m6[2], &y->m6[2]) && f_cmpA750(&x->m6[3], &y->m6[3]) && f_cmpA750(&x->m6[4], &y->m6[4]) && f_cmpA750(&x->m6[5], &y->m6[5]) && f_cmpA750(&x->m6[6], &y->m6[6]) && f_cmpA750(&x->m6[7], &y->m6[7]) && f_cmpA750(&x->m6[8], &y->m6[8]) && f_cmpA750(&x->m6[9], &y->m6[9]) && f_cmpA750(&x->m6[10], &y->m6[10]) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA751() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A751));
		AF('d',struct A751,m0,1)
		AF('l',struct A751,m1,1)
		AF('c',struct A751,m2,1)
		AF('c',struct A751,m3,7)
		AF('J',struct A751,m4,1)
		AF('f',struct A751,m5,1)
		AFa(struct A751,m6,11,A750)
		AF('c',struct A751,m7,1)
		AF('s',struct A751,m8,1)
		AF('j',struct A751,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jldld[4]I{dlcc[7]Jf{Lll}[11]csj}} */
#pragma pack(push,4)
struct A752 { J m0; l m1; d m2; l m3; d m4[4]; I m5; struct A751 m6; };
#pragma pack(pop)
int f_cmpA752(const struct A752 *x, const struct A752 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && f_cmpA751(&x->m6, &y->m6); };
DCaggr* f_touchA752() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A752));
		AF('J',struct A752,m0,1)
		AF('l',struct A752,m1,1)
		AF('d',struct A752,m2,1)
		AF('l',struct A752,m3,1)
		AF('d',struct A752,m4,4)
		AF('I',struct A752,m5,1)
		AFa(struct A752,m6,1,A751)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpl} */
#pragma pack(push,1)
struct A753 { f m0; p m1; l m2; };
#pragma pack(pop)
int f_cmpA753(const struct A753 *x, const struct A753 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA753() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A753));
		AF('f',struct A753,m0,1)
		AF('p',struct A753,m1,1)
		AF('l',struct A753,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f{fpl}Sds> */
#pragma pack(push,1)
union A754 { f m0; struct A753 m1; S m2; d m3; s m4; };
#pragma pack(pop)
int f_cmpA754(const union A754 *x, const union A754 *y) { return x->m0 == y->m0 && f_cmpA753(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA754() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A754));
		AF('f',union A754,m0,1)
		AFa(union A754,m1,1,A753)
		AF('S',union A754,m2,1)
		AF('d',union A754,m3,1)
		AF('s',union A754,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IjsIfJJfdfsS} */
#pragma pack(push,4)
struct A755 { I m0; j m1; s m2; I m3; f m4; J m5; J m6; f m7; d m8; f m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA755(const struct A755 *x, const struct A755 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA755() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A755));
		AF('I',struct A755,m0,1)
		AF('j',struct A755,m1,1)
		AF('s',struct A755,m2,1)
		AF('I',struct A755,m3,1)
		AF('f',struct A755,m4,1)
		AF('J',struct A755,m5,1)
		AF('J',struct A755,m6,1)
		AF('f',struct A755,m7,1)
		AF('d',struct A755,m8,1)
		AF('f',struct A755,m9,1)
		AF('s',struct A755,m10,1)
		AF('S',struct A755,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jfsljijdlSfC} */
#pragma pack(push,2)
struct A756 { j m0; f m1; s m2; l m3; j m4; i m5; j m6; d m7; l m8; S m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA756(const struct A756 *x, const struct A756 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA756() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A756));
		AF('j',struct A756,m0,1)
		AF('f',struct A756,m1,1)
		AF('s',struct A756,m2,1)
		AF('l',struct A756,m3,1)
		AF('j',struct A756,m4,1)
		AF('i',struct A756,m5,1)
		AF('j',struct A756,m6,1)
		AF('d',struct A756,m7,1)
		AF('l',struct A756,m8,1)
		AF('S',struct A756,m9,1)
		AF('f',struct A756,m10,1)
		AF('C',struct A756,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lp[2]fJClfSIdfJ> */
#pragma pack(push,8)
union A757 { L m0; p m1[2]; f m2; J m3; C m4; l m5; f m6; S m7; I m8; d m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA757(const union A757 *x, const union A757 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA757() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A757));
		AF('L',union A757,m0,1)
		AF('p',union A757,m1,2)
		AF('f',union A757,m2,1)
		AF('J',union A757,m3,1)
		AF('C',union A757,m4,1)
		AF('l',union A757,m5,1)
		AF('f',union A757,m6,1)
		AF('S',union A757,m7,1)
		AF('I',union A757,m8,1)
		AF('d',union A757,m9,1)
		AF('f',union A757,m10,1)
		AF('J',union A757,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LBlJpjSjjsCC> */
#pragma pack(push,2)
union A758 { L m0; B m1; l m2; J m3; p m4; j m5; S m6; j m7; j m8; s m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA758(const union A758 *x, const union A758 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA758() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A758));
		AF('L',union A758,m0,1)
		AF('B',union A758,m1,1)
		AF('l',union A758,m2,1)
		AF('J',union A758,m3,1)
		AF('p',union A758,m4,1)
		AF('j',union A758,m5,1)
		AF('S',union A758,m6,1)
		AF('j',union A758,m7,1)
		AF('j',union A758,m8,1)
		AF('s',union A758,m9,1)
		AF('C',union A758,m10,1)
		AF('C',union A758,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpLpjpJdidBc} */
#pragma pack(push,2)
struct A759 { j m0; p m1; L m2; p m3; j m4; p m5; J m6; d m7; i m8; d m9; B m10; c m11; };
#pragma pack(pop)
int f_cmpA759(const struct A759 *x, const struct A759 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA759() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A759));
		AF('j',struct A759,m0,1)
		AF('p',struct A759,m1,1)
		AF('L',struct A759,m2,1)
		AF('p',struct A759,m3,1)
		AF('j',struct A759,m4,1)
		AF('p',struct A759,m5,1)
		AF('J',struct A759,m6,1)
		AF('d',struct A759,m7,1)
		AF('i',struct A759,m8,1)
		AF('d',struct A759,m9,1)
		AF('B',struct A759,m10,1)
		AF('c',struct A759,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Idc> */
#pragma pack(push,1)
union A760 { I m0; d m1; c m2; };
#pragma pack(pop)
int f_cmpA760(const union A760 *x, const union A760 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA760() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A760));
		AF('I',union A760,m0,1)
		AF('d',union A760,m1,1)
		AF('c',union A760,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SjIclCfSslBJ} */
#pragma pack(push,1)
struct A761 { S m0; j m1; I m2; c m3; l m4; C m5; f m6; S m7; s m8; l m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA761(const struct A761 *x, const struct A761 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA761() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A761));
		AF('S',struct A761,m0,1)
		AF('j',struct A761,m1,1)
		AF('I',struct A761,m2,1)
		AF('c',struct A761,m3,1)
		AF('l',struct A761,m4,1)
		AF('C',struct A761,m5,1)
		AF('f',struct A761,m6,1)
		AF('S',struct A761,m7,1)
		AF('s',struct A761,m8,1)
		AF('l',struct A761,m9,1)
		AF('B',struct A761,m10,1)
		AF('J',struct A761,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfJ{SjIclCfSslBJ}lfSjdLCS> */
#pragma pack(push,8)
union A762 { l m0; f m1; J m2; struct A761 m3; l m4; f m5; S m6; j m7; d m8; L m9; C m10; S m11; };
#pragma pack(pop)
int f_cmpA762(const union A762 *x, const union A762 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA761(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA762() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A762));
		AF('l',union A762,m0,1)
		AF('f',union A762,m1,1)
		AF('J',union A762,m2,1)
		AFa(union A762,m3,1,A761)
		AF('l',union A762,m4,1)
		AF('f',union A762,m5,1)
		AF('S',union A762,m6,1)
		AF('j',union A762,m7,1)
		AF('d',union A762,m8,1)
		AF('L',union A762,m9,1)
		AF('C',union A762,m10,1)
		AF('S',union A762,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cl} */
#pragma pack(push,1)
struct A763 { c m0; l m1; };
#pragma pack(pop)
int f_cmpA763(const struct A763 *x, const struct A763 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA763() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A763));
		AF('c',struct A763,m0,1)
		AF('l',struct A763,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <siLilSidcLS> */
#pragma pack(push,4)
union A764 { s m0; i m1; L m2; i m3; l m4; S m5; i m6; d m7; c m8; L m9; S m10; };
#pragma pack(pop)
int f_cmpA764(const union A764 *x, const union A764 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA764() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A764));
		AF('s',union A764,m0,1)
		AF('i',union A764,m1,1)
		AF('L',union A764,m2,1)
		AF('i',union A764,m3,1)
		AF('l',union A764,m4,1)
		AF('S',union A764,m5,1)
		AF('i',union A764,m6,1)
		AF('d',union A764,m7,1)
		AF('c',union A764,m8,1)
		AF('L',union A764,m9,1)
		AF('S',union A764,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pL> */
#pragma pack(push,4)
union A765 { p m0; L m1; };
#pragma pack(pop)
int f_cmpA765(const union A765 *x, const union A765 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA765() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A765));
		AF('p',union A765,m0,1)
		AF('L',union A765,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJjsfifIssJI} */
#pragma pack(push,4)
struct A766 { I m0; J m1; j m2; s m3; f m4; i m5; f m6; I m7; s m8; s m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA766(const struct A766 *x, const struct A766 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA766() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A766));
		AF('I',struct A766,m0,1)
		AF('J',struct A766,m1,1)
		AF('j',struct A766,m2,1)
		AF('s',struct A766,m3,1)
		AF('f',struct A766,m4,1)
		AF('i',struct A766,m5,1)
		AF('f',struct A766,m6,1)
		AF('I',struct A766,m7,1)
		AF('s',struct A766,m8,1)
		AF('s',struct A766,m9,1)
		AF('J',struct A766,m10,1)
		AF('I',struct A766,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {S{cl}jB<siLilSidcLS><pL>{IJjsfifIssJI}ssjSB} */
#pragma pack(push,2)
struct A767 { S m0; struct A763 m1; j m2; B m3; union A764 m4; union A765 m5; struct A766 m6; s m7; s m8; j m9; S m10; B m11; };
#pragma pack(pop)
int f_cmpA767(const struct A767 *x, const struct A767 *y) { return x->m0 == y->m0 && f_cmpA763(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA764(&x->m4, &y->m4) && f_cmpA765(&x->m5, &y->m5) && f_cmpA766(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA767() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A767));
		AF('S',struct A767,m0,1)
		AFa(struct A767,m1,1,A763)
		AF('j',struct A767,m2,1)
		AF('B',struct A767,m3,1)
		AFa(struct A767,m4,1,A764)
		AFa(struct A767,m5,1,A765)
		AFa(struct A767,m6,1,A766)
		AF('s',struct A767,m7,1)
		AF('s',struct A767,m8,1)
		AF('j',struct A767,m9,1)
		AF('S',struct A767,m10,1)
		AF('B',struct A767,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fBBLjj[12]fCcLsl> */
#pragma pack(push,2)
union A768 { f m0; B m1; B m2; L m3; j m4; j m5[12]; f m6; C m7; c m8; L m9; s m10; l m11; };
#pragma pack(pop)
int f_cmpA768(const union A768 *x, const union A768 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA768() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A768));
		AF('f',union A768,m0,1)
		AF('B',union A768,m1,1)
		AF('B',union A768,m2,1)
		AF('L',union A768,m3,1)
		AF('j',union A768,m4,1)
		AF('j',union A768,m5,12)
		AF('f',union A768,m6,1)
		AF('C',union A768,m7,1)
		AF('c',union A768,m8,1)
		AF('L',union A768,m9,1)
		AF('s',union A768,m10,1)
		AF('l',union A768,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsjSdIIppS} */
#pragma pack(push,8)
struct A769 { B m0; s m1; j m2; S m3; d m4; I m5; I m6; p m7; p m8; S m9; };
#pragma pack(pop)
int f_cmpA769(const struct A769 *x, const struct A769 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA769() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A769));
		AF('B',struct A769,m0,1)
		AF('s',struct A769,m1,1)
		AF('j',struct A769,m2,1)
		AF('S',struct A769,m3,1)
		AF('d',struct A769,m4,1)
		AF('I',struct A769,m5,1)
		AF('I',struct A769,m6,1)
		AF('p',struct A769,m7,1)
		AF('p',struct A769,m8,1)
		AF('S',struct A769,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iIc[6]J<fBBLjj[12]fCcLsl>SfB{BsjSdIIppS}JIB> */
#pragma pack(push,4)
union A770 { i m0; I m1; c m2[6]; J m3; union A768 m4; S m5; f m6; B m7; struct A769 m8; J m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA770(const union A770 *x, const union A770 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m3 == y->m3 && f_cmpA768(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA769(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA770() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A770));
		AF('i',union A770,m0,1)
		AF('I',union A770,m1,1)
		AF('c',union A770,m2,6)
		AF('J',union A770,m3,1)
		AFa(union A770,m4,1,A768)
		AF('S',union A770,m5,1)
		AF('f',union A770,m6,1)
		AF('B',union A770,m7,1)
		AFa(union A770,m8,1,A769)
		AF('J',union A770,m9,1)
		AF('I',union A770,m10,1)
		AF('B',union A770,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fpcsiIIiIfCJ> */
#pragma pack(push,4)
union A771 { f m0; p m1; c m2; s m3; i m4; I m5; I m6; i m7; I m8; f m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA771(const union A771 *x, const union A771 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA771() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A771));
		AF('f',union A771,m0,1)
		AF('p',union A771,m1,1)
		AF('c',union A771,m2,1)
		AF('s',union A771,m3,1)
		AF('i',union A771,m4,1)
		AF('I',union A771,m5,1)
		AF('I',union A771,m6,1)
		AF('i',union A771,m7,1)
		AF('I',union A771,m8,1)
		AF('f',union A771,m9,1)
		AF('C',union A771,m10,1)
		AF('J',union A771,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LfISIfjfBicC} */
#pragma pack(push,8)
struct A772 { L m0; f m1; I m2; S m3; I m4; f m5; j m6; f m7; B m8; i m9; c m10; C m11; };
#pragma pack(pop)
int f_cmpA772(const struct A772 *x, const struct A772 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA772() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A772));
		AF('L',struct A772,m0,1)
		AF('f',struct A772,m1,1)
		AF('I',struct A772,m2,1)
		AF('S',struct A772,m3,1)
		AF('I',struct A772,m4,1)
		AF('f',struct A772,m5,1)
		AF('j',struct A772,m6,1)
		AF('f',struct A772,m7,1)
		AF('B',struct A772,m8,1)
		AF('i',struct A772,m9,1)
		AF('c',struct A772,m10,1)
		AF('C',struct A772,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pLcs} */
#pragma pack(push,2)
struct A773 { p m0; L m1; c m2; s m3; };
#pragma pack(pop)
int f_cmpA773(const struct A773 *x, const struct A773 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA773() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A773));
		AF('p',struct A773,m0,1)
		AF('L',struct A773,m1,1)
		AF('c',struct A773,m2,1)
		AF('s',struct A773,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<fpcsiIIiIfCJ>lBddCCj{LfISIfjfBicC}S{pLcs}J} */
#pragma pack(push,2)
struct A774 { union A771 m0; l m1; B m2; d m3; d m4; C m5; C m6; j m7; struct A772 m8; S m9; struct A773 m10; J m11; };
#pragma pack(pop)
int f_cmpA774(const struct A774 *x, const struct A774 *y) { return f_cmpA771(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA772(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA773(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA774() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A774));
		AFa(struct A774,m0,1,A771)
		AF('l',struct A774,m1,1)
		AF('B',struct A774,m2,1)
		AF('d',struct A774,m3,1)
		AF('d',struct A774,m4,1)
		AF('C',struct A774,m5,1)
		AF('C',struct A774,m6,1)
		AF('j',struct A774,m7,1)
		AFa(struct A774,m8,1,A772)
		AF('S',struct A774,m9,1)
		AFa(struct A774,m10,1,A773)
		AF('J',struct A774,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ifiI} */
#pragma pack(push,8)
struct A775 { i m0; f m1; i m2; I m3; };
#pragma pack(pop)
int f_cmpA775(const struct A775 *x, const struct A775 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA775() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A775));
		AF('i',struct A775,m0,1)
		AF('f',struct A775,m1,1)
		AF('i',struct A775,m2,1)
		AF('I',struct A775,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JBCC> */
#pragma pack(push,4)
union A776 { J m0; B m1; C m2; C m3; };
#pragma pack(pop)
int f_cmpA776(const union A776 *x, const union A776 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA776() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A776));
		AF('J',union A776,m0,1)
		AF('B',union A776,m1,1)
		AF('C',union A776,m2,1)
		AF('C',union A776,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SB} */
#pragma pack(push,1)
struct A777 { S m0; B m1; };
#pragma pack(pop)
int f_cmpA777(const struct A777 *x, const struct A777 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA777() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A777));
		AF('S',struct A777,m0,1)
		AF('B',struct A777,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pssLf[6]IiC{ifiI}<JBCC>{SB}s> */
#pragma pack(push,2)
union A778 { p m0; s m1; s m2; L m3; f m4[6]; I m5; i m6; C m7; struct A775 m8; union A776 m9; struct A777 m10; s m11; };
#pragma pack(pop)
int f_cmpA778(const union A778 *x, const union A778 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA775(&x->m8, &y->m8) && f_cmpA776(&x->m9, &y->m9) && f_cmpA777(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA778() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A778));
		AF('p',union A778,m0,1)
		AF('s',union A778,m1,1)
		AF('s',union A778,m2,1)
		AF('L',union A778,m3,1)
		AF('f',union A778,m4,6)
		AF('I',union A778,m5,1)
		AF('i',union A778,m6,1)
		AF('C',union A778,m7,1)
		AFa(union A778,m8,1,A775)
		AFa(union A778,m9,1,A776)
		AFa(union A778,m10,1,A777)
		AF('s',union A778,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JB[13]} */
#pragma pack(push,4)
struct A779 { J m0; B m1[13]; };
#pragma pack(pop)
int f_cmpA779(const struct A779 *x, const struct A779 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12]; };
DCaggr* f_touchA779() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A779));
		AF('J',struct A779,m0,1)
		AF('B',struct A779,m1,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {dps<iIc[6]J<fBBLjj[12]fCcLsl>SfB{BsjSdIIppS}JIB>ssL{<fpcsiIIiIfCJ>lBddCCj{LfISIfjfBicC}S{pLcs}J}[13]L<pssLf[6]IiC{ifiI}<JBCC>{SB}s>{JB[13]}f} */
#pragma pack(push,8)
struct A780 { d m0; p m1; s m2; union A770 m3; s m4; s m5; L m6; struct A774 m7[13]; L m8; union A778 m9; struct A779 m10; f m11; };
#pragma pack(pop)
int f_cmpA780(const struct A780 *x, const struct A780 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA770(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA774(&x->m7[0], &y->m7[0]) && f_cmpA774(&x->m7[1], &y->m7[1]) && f_cmpA774(&x->m7[2], &y->m7[2]) && f_cmpA774(&x->m7[3], &y->m7[3]) && f_cmpA774(&x->m7[4], &y->m7[4]) && f_cmpA774(&x->m7[5], &y->m7[5]) && f_cmpA774(&x->m7[6], &y->m7[6]) && f_cmpA774(&x->m7[7], &y->m7[7]) && f_cmpA774(&x->m7[8], &y->m7[8]) && f_cmpA774(&x->m7[9], &y->m7[9]) && f_cmpA774(&x->m7[10], &y->m7[10]) && f_cmpA774(&x->m7[11], &y->m7[11]) && f_cmpA774(&x->m7[12], &y->m7[12]) && x->m8 == y->m8 && f_cmpA778(&x->m9, &y->m9) && f_cmpA779(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA780() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A780));
		AF('d',struct A780,m0,1)
		AF('p',struct A780,m1,1)
		AF('s',struct A780,m2,1)
		AFa(struct A780,m3,1,A770)
		AF('s',struct A780,m4,1)
		AF('s',struct A780,m5,1)
		AF('L',struct A780,m6,1)
		AFa(struct A780,m7,13,A774)
		AF('L',struct A780,m8,1)
		AFa(struct A780,m9,1,A778)
		AFa(struct A780,m10,1,A779)
		AF('f',struct A780,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bffpi[9]J} */
#pragma pack(push,4)
struct A781 { B m0; f m1; f m2; p m3; i m4[9]; J m5; };
#pragma pack(pop)
int f_cmpA781(const struct A781 *x, const struct A781 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m5 == y->m5; };
DCaggr* f_touchA781() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A781));
		AF('B',struct A781,m0,1)
		AF('f',struct A781,m1,1)
		AF('f',struct A781,m2,1)
		AF('p',struct A781,m3,1)
		AF('i',struct A781,m4,9)
		AF('J',struct A781,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {liCipBdScs{Bffpi[9]J}s} */
#pragma pack(push,4)
struct A782 { l m0; i m1; C m2; i m3; p m4; B m5; d m6; S m7; c m8; s m9; struct A781 m10; s m11; };
#pragma pack(pop)
int f_cmpA782(const struct A782 *x, const struct A782 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA781(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA782() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A782));
		AF('l',struct A782,m0,1)
		AF('i',struct A782,m1,1)
		AF('C',struct A782,m2,1)
		AF('i',struct A782,m3,1)
		AF('p',struct A782,m4,1)
		AF('B',struct A782,m5,1)
		AF('d',struct A782,m6,1)
		AF('S',struct A782,m7,1)
		AF('c',struct A782,m8,1)
		AF('s',struct A782,m9,1)
		AFa(struct A782,m10,1,A781)
		AF('s',struct A782,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCis> */
#pragma pack(push,4)
union A783 { C m0; C m1; i m2; s m3; };
#pragma pack(pop)
int f_cmpA783(const union A783 *x, const union A783 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA783() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A783));
		AF('C',union A783,m0,1)
		AF('C',union A783,m1,1)
		AF('i',union A783,m2,1)
		AF('s',union A783,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SSjcsS[8]L<CCis>L} */
#pragma pack(push,4)
struct A784 { S m0; S m1; j m2; c m3; s m4; S m5[8]; L m6; union A783 m7; L m8; };
#pragma pack(pop)
int f_cmpA784(const struct A784 *x, const struct A784 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m6 == y->m6 && f_cmpA783(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA784() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A784));
		AF('S',struct A784,m0,1)
		AF('S',struct A784,m1,1)
		AF('j',struct A784,m2,1)
		AF('c',struct A784,m3,1)
		AF('s',struct A784,m4,1)
		AF('S',struct A784,m5,8)
		AF('L',struct A784,m6,1)
		AFa(struct A784,m7,1,A783)
		AF('L',struct A784,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IIjCCjSLfCdp} */
#pragma pack(push,4)
struct A785 { I m0; I m1; j m2; C m3; C m4; j m5; S m6; L m7; f m8; C m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA785(const struct A785 *x, const struct A785 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA785() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A785));
		AF('I',struct A785,m0,1)
		AF('I',struct A785,m1,1)
		AF('j',struct A785,m2,1)
		AF('C',struct A785,m3,1)
		AF('C',struct A785,m4,1)
		AF('j',struct A785,m5,1)
		AF('S',struct A785,m6,1)
		AF('L',struct A785,m7,1)
		AF('f',struct A785,m8,1)
		AF('C',struct A785,m9,1)
		AF('d',struct A785,m10,1)
		AF('p',struct A785,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fSdCscBi[4]cd} */
#pragma pack(push,1)
struct A786 { f m0; S m1; d m2; C m3; s m4; c m5; B m6; i m7[4]; c m8; d m9; };
#pragma pack(pop)
int f_cmpA786(const struct A786 *x, const struct A786 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA786() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A786));
		AF('f',struct A786,m0,1)
		AF('S',struct A786,m1,1)
		AF('d',struct A786,m2,1)
		AF('C',struct A786,m3,1)
		AF('s',struct A786,m4,1)
		AF('c',struct A786,m5,1)
		AF('B',struct A786,m6,1)
		AF('i',struct A786,m7,4)
		AF('c',struct A786,m8,1)
		AF('d',struct A786,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJj> */
#pragma pack(push,4)
union A787 { f m0; J m1; j m2; };
#pragma pack(pop)
int f_cmpA787(const union A787 *x, const union A787 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA787() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A787));
		AF('f',union A787,m0,1)
		AF('J',union A787,m1,1)
		AF('j',union A787,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <siIj> */
#pragma pack(push,4)
union A788 { s m0; i m1; I m2; j m3; };
#pragma pack(pop)
int f_cmpA788(const union A788 *x, const union A788 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA788() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A788));
		AF('s',union A788,m0,1)
		AF('i',union A788,m1,1)
		AF('I',union A788,m2,1)
		AF('j',union A788,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<fJj>d<siIj>jip> */
#pragma pack(push,2)
union A789 { union A787 m0; d m1; union A788 m2; j m3; i m4; p m5; };
#pragma pack(pop)
int f_cmpA789(const union A789 *x, const union A789 *y) { return f_cmpA787(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA788(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA789() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A789));
		AFa(union A789,m0,1,A787)
		AF('d',union A789,m1,1)
		AFa(union A789,m2,1,A788)
		AF('j',union A789,m3,1)
		AF('i',union A789,m4,1)
		AF('p',union A789,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B<<fJj>d<siIj>jip>fJdIdijJic> */
#pragma pack(push,8)
union A790 { B m0; union A789 m1; f m2; J m3; d m4; I m5; d m6; i m7; j m8; J m9; i m10; c m11; };
#pragma pack(pop)
int f_cmpA790(const union A790 *x, const union A790 *y) { return x->m0 == y->m0 && f_cmpA789(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA790() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A790));
		AF('B',union A790,m0,1)
		AFa(union A790,m1,1,A789)
		AF('f',union A790,m2,1)
		AF('J',union A790,m3,1)
		AF('d',union A790,m4,1)
		AF('I',union A790,m5,1)
		AF('d',union A790,m6,1)
		AF('i',union A790,m7,1)
		AF('j',union A790,m8,1)
		AF('J',union A790,m9,1)
		AF('i',union A790,m10,1)
		AF('c',union A790,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SsjjBlcJcfSI} */
#pragma pack(push,4)
struct A791 { S m0; s m1; j m2; j m3; B m4; l m5; c m6; J m7; c m8; f m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA791(const struct A791 *x, const struct A791 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA791() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A791));
		AF('S',struct A791,m0,1)
		AF('s',struct A791,m1,1)
		AF('j',struct A791,m2,1)
		AF('j',struct A791,m3,1)
		AF('B',struct A791,m4,1)
		AF('l',struct A791,m5,1)
		AF('c',struct A791,m6,1)
		AF('J',struct A791,m7,1)
		AF('c',struct A791,m8,1)
		AF('f',struct A791,m9,1)
		AF('S',struct A791,m10,1)
		AF('I',struct A791,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i{SsjjBlcJcfSI}lSsjCLjjd[4]J} */
#pragma pack(push,4)
struct A792 { i m0; struct A791 m1; l m2; S m3; s m4; j m5; C m6; L m7; j m8; j m9; d m10[4]; J m11; };
#pragma pack(pop)
int f_cmpA792(const struct A792 *x, const struct A792 *y) { return x->m0 == y->m0 && f_cmpA791(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA792() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A792));
		AF('i',struct A792,m0,1)
		AFa(struct A792,m1,1,A791)
		AF('l',struct A792,m2,1)
		AF('S',struct A792,m3,1)
		AF('s',struct A792,m4,1)
		AF('j',struct A792,m5,1)
		AF('C',struct A792,m6,1)
		AF('L',struct A792,m7,1)
		AF('j',struct A792,m8,1)
		AF('j',struct A792,m9,1)
		AF('d',struct A792,m10,4)
		AF('J',struct A792,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iJLC} */
#pragma pack(push,8)
struct A793 { i m0; J m1; L m2; C m3; };
#pragma pack(pop)
int f_cmpA793(const struct A793 *x, const struct A793 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA793() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A793));
		AF('i',struct A793,m0,1)
		AF('J',struct A793,m1,1)
		AF('L',struct A793,m2,1)
		AF('C',struct A793,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cJJjSf} */
#pragma pack(push,4)
struct A794 { c m0; J m1; J m2; j m3; S m4; f m5; };
#pragma pack(pop)
int f_cmpA794(const struct A794 *x, const struct A794 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA794() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A794));
		AF('c',struct A794,m0,1)
		AF('J',struct A794,m1,1)
		AF('J',struct A794,m2,1)
		AF('j',struct A794,m3,1)
		AF('S',struct A794,m4,1)
		AF('f',struct A794,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LiLJciScl} */
#pragma pack(push,2)
struct A795 { L m0; i m1; L m2; J m3; c m4; i m5; S m6; c m7; l m8; };
#pragma pack(pop)
int f_cmpA795(const struct A795 *x, const struct A795 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA795() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A795));
		AF('L',struct A795,m0,1)
		AF('i',struct A795,m1,1)
		AF('L',struct A795,m2,1)
		AF('J',struct A795,m3,1)
		AF('c',struct A795,m4,1)
		AF('i',struct A795,m5,1)
		AF('S',struct A795,m6,1)
		AF('c',struct A795,m7,1)
		AF('l',struct A795,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CpiC> */
#pragma pack(push,4)
union A796 { C m0; p m1; i m2; C m3; };
#pragma pack(pop)
int f_cmpA796(const union A796 *x, const union A796 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA796() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A796));
		AF('C',union A796,m0,1)
		AF('p',union A796,m1,1)
		AF('i',union A796,m2,1)
		AF('C',union A796,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BiJ{iJLC}{cJJjSf}pf{LiLJciScl}c<CpiC>cf> */
#pragma pack(push,8)
union A797 { B m0; i m1; J m2; struct A793 m3; struct A794 m4; p m5; f m6; struct A795 m7; c m8; union A796 m9; c m10; f m11; };
#pragma pack(pop)
int f_cmpA797(const union A797 *x, const union A797 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA793(&x->m3, &y->m3) && f_cmpA794(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA795(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA796(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA797() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A797));
		AF('B',union A797,m0,1)
		AF('i',union A797,m1,1)
		AF('J',union A797,m2,1)
		AFa(union A797,m3,1,A793)
		AFa(union A797,m4,1,A794)
		AF('p',union A797,m5,1)
		AF('f',union A797,m6,1)
		AFa(union A797,m7,1,A795)
		AF('c',union A797,m8,1)
		AFa(union A797,m9,1,A796)
		AF('c',union A797,m10,1)
		AF('f',union A797,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SlSjjliBBspp> */
#pragma pack(push,4)
union A798 { S m0; l m1; S m2; j m3; j m4; l m5; i m6; B m7; B m8; s m9; p m10; p m11; };
#pragma pack(pop)
int f_cmpA798(const union A798 *x, const union A798 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA798() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A798));
		AF('S',union A798,m0,1)
		AF('l',union A798,m1,1)
		AF('S',union A798,m2,1)
		AF('j',union A798,m3,1)
		AF('j',union A798,m4,1)
		AF('l',union A798,m5,1)
		AF('i',union A798,m6,1)
		AF('B',union A798,m7,1)
		AF('B',union A798,m8,1)
		AF('s',union A798,m9,1)
		AF('p',union A798,m10,1)
		AF('p',union A798,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pB{i{SsjjBlcJcfSI}lSsjCLjjd[4]J}C<BiJ{iJLC}{cJJjSf}pf{LiLJciScl}c<CpiC>cf>dL<SlSjjliBBspp>jSlB> */
#pragma pack(push,4)
union A799 { p m0; B m1; struct A792 m2; C m3; union A797 m4; d m5; L m6; union A798 m7; j m8; S m9; l m10; B m11; };
#pragma pack(pop)
int f_cmpA799(const union A799 *x, const union A799 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA792(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA797(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA798(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA799() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A799));
		AF('p',union A799,m0,1)
		AF('B',union A799,m1,1)
		AFa(union A799,m2,1,A792)
		AF('C',union A799,m3,1)
		AFa(union A799,m4,1,A797)
		AF('d',union A799,m5,1)
		AF('L',union A799,m6,1)
		AFa(union A799,m7,1,A798)
		AF('j',union A799,m8,1)
		AF('S',union A799,m9,1)
		AF('l',union A799,m10,1)
		AF('B',union A799,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CIpCpIBdIIcd> */
#pragma pack(push,8)
union A800 { C m0; I m1; p m2; C m3; p m4; I m5; B m6; d m7; I m8; I m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA800(const union A800 *x, const union A800 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA800() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A800));
		AF('C',union A800,m0,1)
		AF('I',union A800,m1,1)
		AF('p',union A800,m2,1)
		AF('C',union A800,m3,1)
		AF('p',union A800,m4,1)
		AF('I',union A800,m5,1)
		AF('B',union A800,m6,1)
		AF('d',union A800,m7,1)
		AF('I',union A800,m8,1)
		AF('I',union A800,m9,1)
		AF('c',union A800,m10,1)
		AF('d',union A800,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jsdBBdIIBfIp> */
#pragma pack(push,8)
union A801 { j m0; s m1; d m2; B m3; B m4; d m5; I m6; I m7; B m8; f m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA801(const union A801 *x, const union A801 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA801() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A801));
		AF('j',union A801,m0,1)
		AF('s',union A801,m1,1)
		AF('d',union A801,m2,1)
		AF('B',union A801,m3,1)
		AF('B',union A801,m4,1)
		AF('d',union A801,m5,1)
		AF('I',union A801,m6,1)
		AF('I',union A801,m7,1)
		AF('B',union A801,m8,1)
		AF('f',union A801,m9,1)
		AF('I',union A801,m10,1)
		AF('p',union A801,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{p}sB} */
#pragma pack(push,4)
struct A802 { struct A231 m0; s m1; B m2; };
#pragma pack(pop)
int f_cmpA802(const struct A802 *x, const struct A802 *y) { return f_cmpA231(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA802() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A802));
		AFa(struct A802,m0,1,A231)
		AF('s',struct A802,m1,1)
		AF('B',struct A802,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJjIcBddijfi> */
#pragma pack(push,8)
union A803 { c m0; J m1; j m2; I m3; c m4; B m5; d m6; d m7; i m8; j m9; f m10; i m11; };
#pragma pack(pop)
int f_cmpA803(const union A803 *x, const union A803 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA803() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A803));
		AF('c',union A803,m0,1)
		AF('J',union A803,m1,1)
		AF('j',union A803,m2,1)
		AF('I',union A803,m3,1)
		AF('c',union A803,m4,1)
		AF('B',union A803,m5,1)
		AF('d',union A803,m6,1)
		AF('d',union A803,m7,1)
		AF('i',union A803,m8,1)
		AF('j',union A803,m9,1)
		AF('f',union A803,m10,1)
		AF('i',union A803,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dIpLlCc[13]SjBiS} */
#pragma pack(push,2)
struct A804 { d m0; I m1; p m2; L m3; l m4; C m5; c m6[13]; S m7; j m8; B m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA804(const struct A804 *x, const struct A804 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m6[12] == y->m6[12] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA804() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A804));
		AF('d',struct A804,m0,1)
		AF('I',struct A804,m1,1)
		AF('p',struct A804,m2,1)
		AF('L',struct A804,m3,1)
		AF('l',struct A804,m4,1)
		AF('C',struct A804,m5,1)
		AF('c',struct A804,m6,13)
		AF('S',struct A804,m7,1)
		AF('j',struct A804,m8,1)
		AF('B',struct A804,m9,1)
		AF('i',struct A804,m10,1)
		AF('S',struct A804,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ccfclcLCjpLi> */
#pragma pack(push,4)
union A805 { c m0; c m1; f m2; c m3; l m4; c m5; L m6; C m7; j m8; p m9; L m10; i m11; };
#pragma pack(pop)
int f_cmpA805(const union A805 *x, const union A805 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA805() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A805));
		AF('c',union A805,m0,1)
		AF('c',union A805,m1,1)
		AF('f',union A805,m2,1)
		AF('c',union A805,m3,1)
		AF('l',union A805,m4,1)
		AF('c',union A805,m5,1)
		AF('L',union A805,m6,1)
		AF('C',union A805,m7,1)
		AF('j',union A805,m8,1)
		AF('p',union A805,m9,1)
		AF('L',union A805,m10,1)
		AF('i',union A805,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cdc> */
#pragma pack(push,8)
union A806 { C m0; d m1; c m2; };
#pragma pack(pop)
int f_cmpA806(const union A806 *x, const union A806 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA806() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A806));
		AF('C',union A806,m0,1)
		AF('d',union A806,m1,1)
		AF('c',union A806,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d[15]CjII<Cdc>i[13]CjfsL> */
#pragma pack(push,4)
union A807 { d m0[15]; C m1; j m2; I m3; I m4; union A806 m5; i m6[13]; C m7; j m8; f m9; s m10; L m11; };
#pragma pack(pop)
int f_cmpA807(const union A807 *x, const union A807 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA806(&x->m5, &y->m5) && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m6[12] == y->m6[12] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA807() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A807));
		AF('d',union A807,m0,15)
		AF('C',union A807,m1,1)
		AF('j',union A807,m2,1)
		AF('I',union A807,m3,1)
		AF('I',union A807,m4,1)
		AFa(union A807,m5,1,A806)
		AF('i',union A807,m6,13)
		AF('C',union A807,m7,1)
		AF('j',union A807,m8,1)
		AF('f',union A807,m9,1)
		AF('s',union A807,m10,1)
		AF('L',union A807,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ipissifiBBp} */
#pragma pack(push,4)
struct A808 { i m0; p m1; i m2; s m3; s m4; i m5; f m6; i m7; B m8; B m9; p m10; };
#pragma pack(pop)
int f_cmpA808(const struct A808 *x, const struct A808 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA808() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A808));
		AF('i',struct A808,m0,1)
		AF('p',struct A808,m1,1)
		AF('i',struct A808,m2,1)
		AF('s',struct A808,m3,1)
		AF('s',struct A808,m4,1)
		AF('i',struct A808,m5,1)
		AF('f',struct A808,m6,1)
		AF('i',struct A808,m7,1)
		AF('B',struct A808,m8,1)
		AF('B',struct A808,m9,1)
		AF('p',struct A808,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L{ipissifiBBp}JlSIc> */
#pragma pack(push,1)
union A809 { L m0; struct A808 m1; J m2; l m3; S m4; I m5; c m6; };
#pragma pack(pop)
int f_cmpA809(const union A809 *x, const union A809 *y) { return x->m0 == y->m0 && f_cmpA808(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA809() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A809));
		AF('L',union A809,m0,1)
		AFa(union A809,m1,1,A808)
		AF('J',union A809,m2,1)
		AF('l',union A809,m3,1)
		AF('S',union A809,m4,1)
		AF('I',union A809,m5,1)
		AF('c',union A809,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djLcslBBSSSp> */
#pragma pack(push,4)
union A810 { d m0; j m1; L m2; c m3; s m4; l m5; B m6; B m7; S m8; S m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA810(const union A810 *x, const union A810 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA810() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A810));
		AF('d',union A810,m0,1)
		AF('j',union A810,m1,1)
		AF('L',union A810,m2,1)
		AF('c',union A810,m3,1)
		AF('s',union A810,m4,1)
		AF('l',union A810,m5,1)
		AF('B',union A810,m6,1)
		AF('B',union A810,m7,1)
		AF('S',union A810,m8,1)
		AF('S',union A810,m9,1)
		AF('S',union A810,m10,1)
		AF('p',union A810,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <j<djLcslBBSSSp>ji> */
#pragma pack(push,4)
union A811 { j m0; union A810 m1; j m2; i m3; };
#pragma pack(pop)
int f_cmpA811(const union A811 *x, const union A811 *y) { return x->m0 == y->m0 && f_cmpA810(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA811() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A811));
		AF('j',union A811,m0,1)
		AFa(union A811,m1,1,A810)
		AF('j',union A811,m2,1)
		AF('i',union A811,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILSIfJCfSiSj} */
#pragma pack(push,4)
struct A812 { I m0; L m1; S m2; I m3; f m4; J m5; C m6; f m7; S m8; i m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA812(const struct A812 *x, const struct A812 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA812() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A812));
		AF('I',struct A812,m0,1)
		AF('L',struct A812,m1,1)
		AF('S',struct A812,m2,1)
		AF('I',struct A812,m3,1)
		AF('f',struct A812,m4,1)
		AF('J',struct A812,m5,1)
		AF('C',struct A812,m6,1)
		AF('f',struct A812,m7,1)
		AF('S',struct A812,m8,1)
		AF('i',struct A812,m9,1)
		AF('S',struct A812,m10,1)
		AF('j',struct A812,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CfcfIScjl} */
#pragma pack(push,2)
struct A813 { C m0; f m1; c m2; f m3; I m4; S m5; c m6; j m7; l m8; };
#pragma pack(pop)
int f_cmpA813(const struct A813 *x, const struct A813 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA813() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A813));
		AF('C',struct A813,m0,1)
		AF('f',struct A813,m1,1)
		AF('c',struct A813,m2,1)
		AF('f',struct A813,m3,1)
		AF('I',struct A813,m4,1)
		AF('S',struct A813,m5,1)
		AF('c',struct A813,m6,1)
		AF('j',struct A813,m7,1)
		AF('l',struct A813,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dfpSjS} */
#pragma pack(push,2)
struct A814 { d m0; f m1; p m2; S m3; j m4; S m5; };
#pragma pack(pop)
int f_cmpA814(const struct A814 *x, const struct A814 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA814() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A814));
		AF('d',struct A814,m0,1)
		AF('f',struct A814,m1,1)
		AF('p',struct A814,m2,1)
		AF('S',struct A814,m3,1)
		AF('j',struct A814,m4,1)
		AF('S',struct A814,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <j[11]c> */
#pragma pack(push,8)
union A815 { j m0[11]; c m1; };
#pragma pack(pop)
int f_cmpA815(const union A815 *x, const union A815 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m1 == y->m1; };
DCaggr* f_touchA815() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A815));
		AF('j',union A815,m0,11)
		AF('c',union A815,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcJ{CfcfIScjl}iclc{dfpSjS}J<j[11]c>l> */
#pragma pack(push,4)
union A816 { B m0; c m1; J m2; struct A813 m3; i m4; c m5; l m6; c m7; struct A814 m8; J m9; union A815 m10; l m11; };
#pragma pack(pop)
int f_cmpA816(const union A816 *x, const union A816 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA813(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA814(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA815(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA816() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A816));
		AF('B',union A816,m0,1)
		AF('c',union A816,m1,1)
		AF('J',union A816,m2,1)
		AFa(union A816,m3,1,A813)
		AF('i',union A816,m4,1)
		AF('c',union A816,m5,1)
		AF('l',union A816,m6,1)
		AF('c',union A816,m7,1)
		AFa(union A816,m8,1,A814)
		AF('J',union A816,m9,1)
		AFa(union A816,m10,1,A815)
		AF('l',union A816,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sClcd<BcJ{CfcfIScjl}iclc{dfpSjS}J<j[11]c>l>BClSil} */
#pragma pack(push,2)
struct A817 { s m0; C m1; l m2; c m3; d m4; union A816 m5; B m6; C m7; l m8; S m9; i m10; l m11; };
#pragma pack(pop)
int f_cmpA817(const struct A817 *x, const struct A817 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA816(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA817() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A817));
		AF('s',struct A817,m0,1)
		AF('C',struct A817,m1,1)
		AF('l',struct A817,m2,1)
		AF('c',struct A817,m3,1)
		AF('d',struct A817,m4,1)
		AFa(struct A817,m5,1,A816)
		AF('B',struct A817,m6,1)
		AF('C',struct A817,m7,1)
		AF('l',struct A817,m8,1)
		AF('S',struct A817,m9,1)
		AF('i',struct A817,m10,1)
		AF('l',struct A817,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BSdCclIC} */
#pragma pack(push,4)
struct A818 { B m0; S m1; d m2; C m3; c m4; l m5; I m6; C m7; };
#pragma pack(pop)
int f_cmpA818(const struct A818 *x, const struct A818 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA818() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A818));
		AF('B',struct A818,m0,1)
		AF('S',struct A818,m1,1)
		AF('d',struct A818,m2,1)
		AF('C',struct A818,m3,1)
		AF('c',struct A818,m4,1)
		AF('l',struct A818,m5,1)
		AF('I',struct A818,m6,1)
		AF('C',struct A818,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d> */
#pragma pack(push,2)
union A819 { d m0; };
#pragma pack(pop)
int f_cmpA819(const union A819 *x, const union A819 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA819() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A819));
		AF('d',union A819,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fcSIBjciIdlL> */
#pragma pack(push,4)
union A820 { f m0; c m1; S m2; I m3; B m4; j m5; c m6; i m7; I m8; d m9; l m10; L m11; };
#pragma pack(pop)
int f_cmpA820(const union A820 *x, const union A820 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA820() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A820));
		AF('f',union A820,m0,1)
		AF('c',union A820,m1,1)
		AF('S',union A820,m2,1)
		AF('I',union A820,m3,1)
		AF('B',union A820,m4,1)
		AF('j',union A820,m5,1)
		AF('c',union A820,m6,1)
		AF('i',union A820,m7,1)
		AF('I',union A820,m8,1)
		AF('d',union A820,m9,1)
		AF('l',union A820,m10,1)
		AF('L',union A820,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ipS> */
#pragma pack(push,4)
union A821 { i m0; p m1; S m2; };
#pragma pack(pop)
int f_cmpA821(const union A821 *x, const union A821 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA821() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A821));
		AF('i',union A821,m0,1)
		AF('p',union A821,m1,1)
		AF('S',union A821,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CSJpsf[3]S<fcSIBjciIdlL>j<ipS>S{i}> */
#pragma pack(push,4)
union A822 { C m0; S m1; J m2; p m3; s m4; f m5[3]; S m6; union A820 m7; j m8; union A821 m9; S m10; struct A553 m11; };
#pragma pack(pop)
int f_cmpA822(const union A822 *x, const union A822 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m6 == y->m6 && f_cmpA820(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA821(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA553(&x->m11, &y->m11); };
DCaggr* f_touchA822() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A822));
		AF('C',union A822,m0,1)
		AF('S',union A822,m1,1)
		AF('J',union A822,m2,1)
		AF('p',union A822,m3,1)
		AF('s',union A822,m4,1)
		AF('f',union A822,m5,3)
		AF('S',union A822,m6,1)
		AFa(union A822,m7,1,A820)
		AF('j',union A822,m8,1)
		AFa(union A822,m9,1,A821)
		AF('S',union A822,m10,1)
		AFa(union A822,m11,1,A553)
		dcCloseAggr(a);
	}
	return a;
};
/* {jiCJdc<CSJpsf[3]S<fcSIBjciIdlL>j<ipS>S{i}>IlCcB} */
#pragma pack(push,2)
struct A823 { j m0; i m1; C m2; J m3; d m4; c m5; union A822 m6; I m7; l m8; C m9; c m10; B m11; };
#pragma pack(pop)
int f_cmpA823(const struct A823 *x, const struct A823 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA822(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA823() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A823));
		AF('j',struct A823,m0,1)
		AF('i',struct A823,m1,1)
		AF('C',struct A823,m2,1)
		AF('J',struct A823,m3,1)
		AF('d',struct A823,m4,1)
		AF('c',struct A823,m5,1)
		AFa(struct A823,m6,1,A822)
		AF('I',struct A823,m7,1)
		AF('l',struct A823,m8,1)
		AF('C',struct A823,m9,1)
		AF('c',struct A823,m10,1)
		AF('B',struct A823,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJBpCfdsIiJp} */
#pragma pack(push,4)
struct A824 { I m0; J m1; B m2; p m3; C m4; f m5; d m6; s m7; I m8; i m9; J m10; p m11; };
#pragma pack(pop)
int f_cmpA824(const struct A824 *x, const struct A824 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA824() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A824));
		AF('I',struct A824,m0,1)
		AF('J',struct A824,m1,1)
		AF('B',struct A824,m2,1)
		AF('p',struct A824,m3,1)
		AF('C',struct A824,m4,1)
		AF('f',struct A824,m5,1)
		AF('d',struct A824,m6,1)
		AF('s',struct A824,m7,1)
		AF('I',struct A824,m8,1)
		AF('i',struct A824,m9,1)
		AF('J',struct A824,m10,1)
		AF('p',struct A824,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdSJ[15]CcIS[8]Lppd> */
#pragma pack(push,4)
union A825 { s m0; d m1; S m2; J m3[15]; C m4; c m5; I m6; S m7[8]; L m8; p m9; p m10; d m11; };
#pragma pack(pop)
int f_cmpA825(const union A825 *x, const union A825 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA825() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A825));
		AF('s',union A825,m0,1)
		AF('d',union A825,m1,1)
		AF('S',union A825,m2,1)
		AF('J',union A825,m3,15)
		AF('C',union A825,m4,1)
		AF('c',union A825,m5,1)
		AF('I',union A825,m6,1)
		AF('S',union A825,m7,8)
		AF('L',union A825,m8,1)
		AF('p',union A825,m9,1)
		AF('p',union A825,m10,1)
		AF('d',union A825,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L{IJBpCfdsIiJp}Js<sdSJ[15]CcIS[8]Lppd>j{L}dJdif> */
#pragma pack(push,4)
union A826 { L m0; struct A824 m1; J m2; s m3; union A825 m4; j m5; struct A76 m6; d m7; J m8; d m9; i m10; f m11; };
#pragma pack(pop)
int f_cmpA826(const union A826 *x, const union A826 *y) { return x->m0 == y->m0 && f_cmpA824(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA825(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA76(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA826() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A826));
		AF('L',union A826,m0,1)
		AFa(union A826,m1,1,A824)
		AF('J',union A826,m2,1)
		AF('s',union A826,m3,1)
		AFa(union A826,m4,1,A825)
		AF('j',union A826,m5,1)
		AFa(union A826,m6,1,A76)
		AF('d',union A826,m7,1)
		AF('J',union A826,m8,1)
		AF('d',union A826,m9,1)
		AF('i',union A826,m10,1)
		AF('f',union A826,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<L{IJBpCfdsIiJp}Js<sdSJ[15]CcIS[8]Lppd>j{L}dJdif>p} */
#pragma pack(push,1)
struct A827 { union A826 m0; p m1; };
#pragma pack(pop)
int f_cmpA827(const struct A827 *x, const struct A827 *y) { return f_cmpA826(&x->m0, &y->m0) && x->m1 == y->m1; };
DCaggr* f_touchA827() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A827));
		AFa(struct A827,m0,1,A826)
		AF('p',struct A827,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IIdic[14]spipp[13]B} */
#pragma pack(push,2)
struct A828 { I m0; I m1; d m2; i m3; c m4[14]; s m5; p m6; i m7; p m8; p m9[13]; B m10; };
#pragma pack(pop)
int f_cmpA828(const struct A828 *x, const struct A828 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m10 == y->m10; };
DCaggr* f_touchA828() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A828));
		AF('I',struct A828,m0,1)
		AF('I',struct A828,m1,1)
		AF('d',struct A828,m2,1)
		AF('i',struct A828,m3,1)
		AF('c',struct A828,m4,14)
		AF('s',struct A828,m5,1)
		AF('p',struct A828,m6,1)
		AF('i',struct A828,m7,1)
		AF('p',struct A828,m8,1)
		AF('p',struct A828,m9,13)
		AF('B',struct A828,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsLsIjJslCBC> */
#pragma pack(push,1)
union A829 { S m0; s m1; L m2; s m3; I m4; j m5; J m6; s m7; l m8; C m9; B m10; C m11; };
#pragma pack(pop)
int f_cmpA829(const union A829 *x, const union A829 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA829() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A829));
		AF('S',union A829,m0,1)
		AF('s',union A829,m1,1)
		AF('L',union A829,m2,1)
		AF('s',union A829,m3,1)
		AF('I',union A829,m4,1)
		AF('j',union A829,m5,1)
		AF('J',union A829,m6,1)
		AF('s',union A829,m7,1)
		AF('l',union A829,m8,1)
		AF('C',union A829,m9,1)
		AF('B',union A829,m10,1)
		AF('C',union A829,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LfcJLCjlf} */
#pragma pack(push,8)
struct A830 { L m0; f m1; c m2; J m3; L m4; C m5; j m6; l m7; f m8; };
#pragma pack(pop)
int f_cmpA830(const struct A830 *x, const struct A830 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA830() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A830));
		AF('L',struct A830,m0,1)
		AF('f',struct A830,m1,1)
		AF('c',struct A830,m2,1)
		AF('J',struct A830,m3,1)
		AF('L',struct A830,m4,1)
		AF('C',struct A830,m5,1)
		AF('j',struct A830,m6,1)
		AF('l',struct A830,m7,1)
		AF('f',struct A830,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pI[5]jifpcfsIfl> */
#pragma pack(push,2)
union A831 { p m0; I m1[5]; j m2; i m3; f m4; p m5; c m6; f m7; s m8; I m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA831(const union A831 *x, const union A831 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA831() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A831));
		AF('p',union A831,m0,1)
		AF('I',union A831,m1,5)
		AF('j',union A831,m2,1)
		AF('i',union A831,m3,1)
		AF('f',union A831,m4,1)
		AF('p',union A831,m5,1)
		AF('c',union A831,m6,1)
		AF('f',union A831,m7,1)
		AF('s',union A831,m8,1)
		AF('I',union A831,m9,1)
		AF('f',union A831,m10,1)
		AF('l',union A831,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CfLCjLdsJcLi} */
#pragma pack(push,1)
struct A832 { C m0; f m1; L m2; C m3; j m4; L m5; d m6; s m7; J m8; c m9; L m10; i m11; };
#pragma pack(pop)
int f_cmpA832(const struct A832 *x, const struct A832 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA832() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A832));
		AF('C',struct A832,m0,1)
		AF('f',struct A832,m1,1)
		AF('L',struct A832,m2,1)
		AF('C',struct A832,m3,1)
		AF('j',struct A832,m4,1)
		AF('L',struct A832,m5,1)
		AF('d',struct A832,m6,1)
		AF('s',struct A832,m7,1)
		AF('J',struct A832,m8,1)
		AF('c',struct A832,m9,1)
		AF('L',struct A832,m10,1)
		AF('i',struct A832,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Idjd[13]IfpIifcI[2]> */
#pragma pack(push,4)
union A833 { I m0; d m1; j m2; d m3[13]; I m4; f m5; p m6; I m7; i m8; f m9; c m10; I m11[2]; };
#pragma pack(pop)
int f_cmpA833(const union A833 *x, const union A833 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1]; };
DCaggr* f_touchA833() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A833));
		AF('I',union A833,m0,1)
		AF('d',union A833,m1,1)
		AF('j',union A833,m2,1)
		AF('d',union A833,m3,13)
		AF('I',union A833,m4,1)
		AF('f',union A833,m5,1)
		AF('p',union A833,m6,1)
		AF('I',union A833,m7,1)
		AF('i',union A833,m8,1)
		AF('f',union A833,m9,1)
		AF('c',union A833,m10,1)
		AF('I',union A833,m11,2)
		dcCloseAggr(a);
	}
	return a;
};
/* <p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl> */
#pragma pack(push,2)
union A834 { p m0; union A831 m1; struct A832 m2; union A833 m3; f m4; f m5; i m6; d m7; j m8; f m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA834(const union A834 *x, const union A834 *y) { return x->m0 == y->m0 && f_cmpA831(&x->m1, &y->m1) && f_cmpA832(&x->m2, &y->m2) && f_cmpA833(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA834() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A834));
		AF('p',union A834,m0,1)
		AFa(union A834,m1,1,A831)
		AFa(union A834,m2,1,A832)
		AFa(union A834,m3,1,A833)
		AF('f',union A834,m4,1)
		AF('f',union A834,m5,1)
		AF('i',union A834,m6,1)
		AF('d',union A834,m7,1)
		AF('j',union A834,m8,1)
		AF('f',union A834,m9,1)
		AF('L',union A834,m10,1)
		AF('l',union A834,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fpjcfIpBsjd[2]C> */
#pragma pack(push,2)
union A835 { f m0; p m1; j m2; c m3; f m4; I m5; p m6; B m7; s m8; j m9; d m10[2]; C m11; };
#pragma pack(pop)
int f_cmpA835(const union A835 *x, const union A835 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m11 == y->m11; };
DCaggr* f_touchA835() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A835));
		AF('f',union A835,m0,1)
		AF('p',union A835,m1,1)
		AF('j',union A835,m2,1)
		AF('c',union A835,m3,1)
		AF('f',union A835,m4,1)
		AF('I',union A835,m5,1)
		AF('p',union A835,m6,1)
		AF('B',union A835,m7,1)
		AF('s',union A835,m8,1)
		AF('j',union A835,m9,1)
		AF('d',union A835,m10,2)
		AF('C',union A835,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sssjidL[12]Idjcj} */
#pragma pack(push,4)
struct A836 { s m0; s m1; s m2; j m3; i m4; d m5; L m6[12]; I m7; d m8; j m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA836(const struct A836 *x, const struct A836 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA836() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A836));
		AF('s',struct A836,m0,1)
		AF('s',struct A836,m1,1)
		AF('s',struct A836,m2,1)
		AF('j',struct A836,m3,1)
		AF('i',struct A836,m4,1)
		AF('d',struct A836,m5,1)
		AF('L',struct A836,m6,12)
		AF('I',struct A836,m7,1)
		AF('d',struct A836,m8,1)
		AF('j',struct A836,m9,1)
		AF('c',struct A836,m10,1)
		AF('j',struct A836,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BpdJppipssfC} */
#pragma pack(push,2)
struct A837 { B m0; p m1; d m2; J m3; p m4; p m5; i m6; p m7; s m8; s m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA837(const struct A837 *x, const struct A837 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA837() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A837));
		AF('B',struct A837,m0,1)
		AF('p',struct A837,m1,1)
		AF('d',struct A837,m2,1)
		AF('J',struct A837,m3,1)
		AF('p',struct A837,m4,1)
		AF('p',struct A837,m5,1)
		AF('i',struct A837,m6,1)
		AF('p',struct A837,m7,1)
		AF('s',struct A837,m8,1)
		AF('s',struct A837,m9,1)
		AF('f',struct A837,m10,1)
		AF('C',struct A837,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j[8]BcdJijdIdif} */
#pragma pack(push,1)
struct A838 { j m0[8]; B m1; c m2; d m3; J m4; i m5; j m6; d m7; I m8; d m9; i m10; f m11; };
#pragma pack(pop)
int f_cmpA838(const struct A838 *x, const struct A838 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA838() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A838));
		AF('j',struct A838,m0,8)
		AF('B',struct A838,m1,1)
		AF('c',struct A838,m2,1)
		AF('d',struct A838,m3,1)
		AF('J',struct A838,m4,1)
		AF('i',struct A838,m5,1)
		AF('j',struct A838,m6,1)
		AF('d',struct A838,m7,1)
		AF('I',struct A838,m8,1)
		AF('d',struct A838,m9,1)
		AF('i',struct A838,m10,1)
		AF('f',struct A838,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SCfjL> */
#pragma pack(push,2)
union A839 { S m0; C m1; f m2; j m3; L m4; };
#pragma pack(pop)
int f_cmpA839(const union A839 *x, const union A839 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA839() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A839));
		AF('S',union A839,m0,1)
		AF('C',union A839,m1,1)
		AF('f',union A839,m2,1)
		AF('j',union A839,m3,1)
		AF('L',union A839,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{BpdJppipssfC}C{j[8]BcdJijdIdif}flpjCL<SCfjL>sS} */
#pragma pack(push,2)
struct A840 { struct A837 m0; C m1; struct A838 m2; f m3; l m4; p m5; j m6; C m7; L m8; union A839 m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA840(const struct A840 *x, const struct A840 *y) { return f_cmpA837(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA838(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA839(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA840() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A840));
		AFa(struct A840,m0,1,A837)
		AF('C',struct A840,m1,1)
		AFa(struct A840,m2,1,A838)
		AF('f',struct A840,m3,1)
		AF('l',struct A840,m4,1)
		AF('p',struct A840,m5,1)
		AF('j',struct A840,m6,1)
		AF('C',struct A840,m7,1)
		AF('L',struct A840,m8,1)
		AFa(struct A840,m9,1,A839)
		AF('s',struct A840,m10,1)
		AF('S',struct A840,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdIB} */
#pragma pack(push,4)
struct A841 { j m0; d m1; I m2; B m3; };
#pragma pack(pop)
int f_cmpA841(const struct A841 *x, const struct A841 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA841() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A841));
		AF('j',struct A841,m0,1)
		AF('d',struct A841,m1,1)
		AF('I',struct A841,m2,1)
		AF('B',struct A841,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f[14]fCBI> */
#pragma pack(push,8)
union A842 { f m0[14]; f m1; C m2; B m3; I m4; };
#pragma pack(pop)
int f_cmpA842(const union A842 *x, const union A842 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA842() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A842));
		AF('f',union A842,m0,14)
		AF('f',union A842,m1,1)
		AF('C',union A842,m2,1)
		AF('B',union A842,m3,1)
		AF('I',union A842,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JjCsSJ<f[14]fCBI>[7]pCJdL> */
#pragma pack(push,4)
union A843 { J m0; j m1; C m2; s m3; S m4; J m5; union A842 m6[7]; p m7; C m8; J m9; d m10; L m11; };
#pragma pack(pop)
int f_cmpA843(const union A843 *x, const union A843 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA842(&x->m6[0], &y->m6[0]) && f_cmpA842(&x->m6[1], &y->m6[1]) && f_cmpA842(&x->m6[2], &y->m6[2]) && f_cmpA842(&x->m6[3], &y->m6[3]) && f_cmpA842(&x->m6[4], &y->m6[4]) && f_cmpA842(&x->m6[5], &y->m6[5]) && f_cmpA842(&x->m6[6], &y->m6[6]) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA843() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A843));
		AF('J',union A843,m0,1)
		AF('j',union A843,m1,1)
		AF('C',union A843,m2,1)
		AF('s',union A843,m3,1)
		AF('S',union A843,m4,1)
		AF('J',union A843,m5,1)
		AFa(union A843,m6,7,A842)
		AF('p',union A843,m7,1)
		AF('C',union A843,m8,1)
		AF('J',union A843,m9,1)
		AF('d',union A843,m10,1)
		AF('L',union A843,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cSCSBJLilSC> */
#pragma pack(push,8)
union A844 { c m0; S m1; C m2; S m3; B m4; J m5; L m6; i m7; l m8; S m9; C m10; };
#pragma pack(pop)
int f_cmpA844(const union A844 *x, const union A844 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA844() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A844));
		AF('c',union A844,m0,1)
		AF('S',union A844,m1,1)
		AF('C',union A844,m2,1)
		AF('S',union A844,m3,1)
		AF('B',union A844,m4,1)
		AF('J',union A844,m5,1)
		AF('L',union A844,m6,1)
		AF('i',union A844,m7,1)
		AF('l',union A844,m8,1)
		AF('S',union A844,m9,1)
		AF('C',union A844,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dB<cSCSBJLilSC>cBsfJi> */
#pragma pack(push,2)
union A845 { d m0; B m1; union A844 m2; c m3; B m4; s m5; f m6; J m7; i m8; };
#pragma pack(pop)
int f_cmpA845(const union A845 *x, const union A845 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA844(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA845() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A845));
		AF('d',union A845,m0,1)
		AF('B',union A845,m1,1)
		AFa(union A845,m2,1,A844)
		AF('c',union A845,m3,1)
		AF('B',union A845,m4,1)
		AF('s',union A845,m5,1)
		AF('f',union A845,m6,1)
		AF('J',union A845,m7,1)
		AF('i',union A845,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CfISddBpllIs} */
#pragma pack(push,4)
struct A846 { C m0; f m1; I m2; S m3; d m4; d m5; B m6; p m7; l m8; l m9; I m10; s m11; };
#pragma pack(pop)
int f_cmpA846(const struct A846 *x, const struct A846 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA846() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A846));
		AF('C',struct A846,m0,1)
		AF('f',struct A846,m1,1)
		AF('I',struct A846,m2,1)
		AF('S',struct A846,m3,1)
		AF('d',struct A846,m4,1)
		AF('d',struct A846,m5,1)
		AF('B',struct A846,m6,1)
		AF('p',struct A846,m7,1)
		AF('l',struct A846,m8,1)
		AF('l',struct A846,m9,1)
		AF('I',struct A846,m10,1)
		AF('s',struct A846,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jic> */
#pragma pack(push,4)
union A847 { j m0; i m1; c m2; };
#pragma pack(pop)
int f_cmpA847(const union A847 *x, const union A847 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA847() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A847));
		AF('j',union A847,m0,1)
		AF('i',union A847,m1,1)
		AF('c',union A847,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cLCSIsCsCCiC> */
#pragma pack(push,4)
union A848 { c m0; L m1; C m2; S m3; I m4; s m5; C m6; s m7; C m8; C m9; i m10; C m11; };
#pragma pack(pop)
int f_cmpA848(const union A848 *x, const union A848 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA848() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A848));
		AF('c',union A848,m0,1)
		AF('L',union A848,m1,1)
		AF('C',union A848,m2,1)
		AF('S',union A848,m3,1)
		AF('I',union A848,m4,1)
		AF('s',union A848,m5,1)
		AF('C',union A848,m6,1)
		AF('s',union A848,m7,1)
		AF('C',union A848,m8,1)
		AF('C',union A848,m9,1)
		AF('i',union A848,m10,1)
		AF('C',union A848,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cf{CfISddBpllIs}S<jic>sB<cLCSIsCsCCiC>Ipp} */
#pragma pack(push,2)
struct A849 { C m0; f m1; struct A846 m2; S m3; union A847 m4; s m5; B m6; union A848 m7; I m8; p m9; p m10; };
#pragma pack(pop)
int f_cmpA849(const struct A849 *x, const struct A849 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA846(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA847(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA848(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA849() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A849));
		AF('C',struct A849,m0,1)
		AF('f',struct A849,m1,1)
		AFa(struct A849,m2,1,A846)
		AF('S',struct A849,m3,1)
		AFa(struct A849,m4,1,A847)
		AF('s',struct A849,m5,1)
		AF('B',struct A849,m6,1)
		AFa(struct A849,m7,1,A848)
		AF('I',struct A849,m8,1)
		AF('p',struct A849,m9,1)
		AF('p',struct A849,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJjLccJjCdcB> */
#pragma pack(push,8)
union A850 { S m0; J m1; j m2; L m3; c m4; c m5; J m6; j m7; C m8; d m9; c m10; B m11; };
#pragma pack(pop)
int f_cmpA850(const union A850 *x, const union A850 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA850() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A850));
		AF('S',union A850,m0,1)
		AF('J',union A850,m1,1)
		AF('j',union A850,m2,1)
		AF('L',union A850,m3,1)
		AF('c',union A850,m4,1)
		AF('c',union A850,m5,1)
		AF('J',union A850,m6,1)
		AF('j',union A850,m7,1)
		AF('C',union A850,m8,1)
		AF('d',union A850,m9,1)
		AF('c',union A850,m10,1)
		AF('B',union A850,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SC} */
#pragma pack(push,2)
struct A851 { S m0; C m1; };
#pragma pack(pop)
int f_cmpA851(const struct A851 *x, const struct A851 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA851() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A851));
		AF('S',struct A851,m0,1)
		AF('C',struct A851,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBlssJJS{SC}djS> */
#pragma pack(push,8)
union A852 { p m0; B m1; l m2; s m3; s m4; J m5; J m6; S m7; struct A851 m8; d m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA852(const union A852 *x, const union A852 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA851(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA852() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A852));
		AF('p',union A852,m0,1)
		AF('B',union A852,m1,1)
		AF('l',union A852,m2,1)
		AF('s',union A852,m3,1)
		AF('s',union A852,m4,1)
		AF('J',union A852,m5,1)
		AF('J',union A852,m6,1)
		AF('S',union A852,m7,1)
		AFa(union A852,m8,1,A851)
		AF('d',union A852,m9,1)
		AF('j',union A852,m10,1)
		AF('S',union A852,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fiiiC[15]cSiJSBJ} */
#pragma pack(push,4)
struct A853 { f m0; i m1; i m2; i m3; C m4[15]; c m5; S m6; i m7; J m8; S m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA853(const struct A853 *x, const struct A853 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m4[14] == y->m4[14] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA853() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A853));
		AF('f',struct A853,m0,1)
		AF('i',struct A853,m1,1)
		AF('i',struct A853,m2,1)
		AF('i',struct A853,m3,1)
		AF('C',struct A853,m4,15)
		AF('c',struct A853,m5,1)
		AF('S',struct A853,m6,1)
		AF('i',struct A853,m7,1)
		AF('J',struct A853,m8,1)
		AF('S',struct A853,m9,1)
		AF('B',struct A853,m10,1)
		AF('J',struct A853,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bf{fiiiC[15]cSiJSBJ}lcfs> */
#pragma pack(push,2)
union A854 { B m0; f m1; struct A853 m2; l m3; c m4; f m5; s m6; };
#pragma pack(pop)
int f_cmpA854(const union A854 *x, const union A854 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA853(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA854() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A854));
		AF('B',union A854,m0,1)
		AF('f',union A854,m1,1)
		AFa(union A854,m2,1,A853)
		AF('l',union A854,m3,1)
		AF('c',union A854,m4,1)
		AF('f',union A854,m5,1)
		AF('s',union A854,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JijCilIscp} */
#pragma pack(push,4)
struct A855 { J m0; i m1; j m2; C m3; i m4; l m5; I m6; s m7; c m8; p m9; };
#pragma pack(pop)
int f_cmpA855(const struct A855 *x, const struct A855 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA855() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A855));
		AF('J',struct A855,m0,1)
		AF('i',struct A855,m1,1)
		AF('j',struct A855,m2,1)
		AF('C',struct A855,m3,1)
		AF('i',struct A855,m4,1)
		AF('l',struct A855,m5,1)
		AF('I',struct A855,m6,1)
		AF('s',struct A855,m7,1)
		AF('c',struct A855,m8,1)
		AF('p',struct A855,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LlCLSL{JijCilIscp}cLJjp> */
#pragma pack(push,2)
union A856 { L m0; l m1; C m2; L m3; S m4; L m5; struct A855 m6; c m7; L m8; J m9; j m10; p m11; };
#pragma pack(pop)
int f_cmpA856(const union A856 *x, const union A856 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA855(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA856() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A856));
		AF('L',union A856,m0,1)
		AF('l',union A856,m1,1)
		AF('C',union A856,m2,1)
		AF('L',union A856,m3,1)
		AF('S',union A856,m4,1)
		AF('L',union A856,m5,1)
		AFa(union A856,m6,1,A855)
		AF('c',union A856,m7,1)
		AF('L',union A856,m8,1)
		AF('J',union A856,m9,1)
		AF('j',union A856,m10,1)
		AF('p',union A856,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf> */
#pragma pack(push,4)
union A857 { union A852 m0; J m1; S m2; f m3; L m4; union A854 m5; union A856 m6; J m7; d m8; d m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA857(const union A857 *x, const union A857 *y) { return f_cmpA852(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA854(&x->m5, &y->m5) && f_cmpA856(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA857() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A857));
		AFa(union A857,m0,1,A852)
		AF('J',union A857,m1,1)
		AF('S',union A857,m2,1)
		AF('f',union A857,m3,1)
		AF('L',union A857,m4,1)
		AFa(union A857,m5,1,A854)
		AFa(union A857,m6,1,A856)
		AF('J',union A857,m7,1)
		AF('d',union A857,m8,1)
		AF('d',union A857,m9,1)
		AF('C',union A857,m10,1)
		AF('f',union A857,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dIjS> */
#pragma pack(push,4)
union A858 { d m0; I m1; j m2; S m3; };
#pragma pack(pop)
int f_cmpA858(const union A858 *x, const union A858 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA858() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A858));
		AF('d',union A858,m0,1)
		AF('I',union A858,m1,1)
		AF('j',union A858,m2,1)
		AF('S',union A858,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlJfjl[3]l[12]Lcj[4]dj> */
#pragma pack(push,4)
union A859 { I m0; l m1; J m2; f m3; j m4; l m5[3]; l m6[12]; L m7; c m8; j m9[4]; d m10; j m11; };
#pragma pack(pop)
int f_cmpA859(const union A859 *x, const union A859 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA859() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A859));
		AF('I',union A859,m0,1)
		AF('l',union A859,m1,1)
		AF('J',union A859,m2,1)
		AF('f',union A859,m3,1)
		AF('j',union A859,m4,1)
		AF('l',union A859,m5,3)
		AF('l',union A859,m6,12)
		AF('L',union A859,m7,1)
		AF('c',union A859,m8,1)
		AF('j',union A859,m9,4)
		AF('d',union A859,m10,1)
		AF('j',union A859,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJjCfiLiSJpd} */
#pragma pack(push,4)
struct A860 { I m0; J m1; j m2; C m3; f m4; i m5; L m6; i m7; S m8; J m9; p m10; d m11; };
#pragma pack(pop)
int f_cmpA860(const struct A860 *x, const struct A860 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA860() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A860));
		AF('I',struct A860,m0,1)
		AF('J',struct A860,m1,1)
		AF('j',struct A860,m2,1)
		AF('C',struct A860,m3,1)
		AF('f',struct A860,m4,1)
		AF('i',struct A860,m5,1)
		AF('L',struct A860,m6,1)
		AF('i',struct A860,m7,1)
		AF('S',struct A860,m8,1)
		AF('J',struct A860,m9,1)
		AF('p',struct A860,m10,1)
		AF('d',struct A860,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BCjJpCfIsI{IJjCfiLiSJpd}J> */
#pragma pack(push,4)
union A861 { B m0; C m1; j m2; J m3; p m4; C m5; f m6; I m7; s m8; I m9; struct A860 m10; J m11; };
#pragma pack(pop)
int f_cmpA861(const union A861 *x, const union A861 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA860(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA861() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A861));
		AF('B',union A861,m0,1)
		AF('C',union A861,m1,1)
		AF('j',union A861,m2,1)
		AF('J',union A861,m3,1)
		AF('p',union A861,m4,1)
		AF('C',union A861,m5,1)
		AF('f',union A861,m6,1)
		AF('I',union A861,m7,1)
		AF('s',union A861,m8,1)
		AF('I',union A861,m9,1)
		AFa(union A861,m10,1,A860)
		AF('J',union A861,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdidfBJf} */
#pragma pack(push,8)
struct A862 { j m0; d m1; i m2; d m3; f m4; B m5; J m6; f m7; };
#pragma pack(pop)
int f_cmpA862(const struct A862 *x, const struct A862 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA862() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A862));
		AF('j',struct A862,m0,1)
		AF('d',struct A862,m1,1)
		AF('i',struct A862,m2,1)
		AF('d',struct A862,m3,1)
		AF('f',struct A862,m4,1)
		AF('B',struct A862,m5,1)
		AF('J',struct A862,m6,1)
		AF('f',struct A862,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LfCBfcsCiII{jdidfBJf}} */
#pragma pack(push,4)
struct A863 { L m0; f m1; C m2; B m3; f m4; c m5; s m6; C m7; i m8; I m9; I m10; struct A862 m11; };
#pragma pack(pop)
int f_cmpA863(const struct A863 *x, const struct A863 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA862(&x->m11, &y->m11); };
DCaggr* f_touchA863() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A863));
		AF('L',struct A863,m0,1)
		AF('f',struct A863,m1,1)
		AF('C',struct A863,m2,1)
		AF('B',struct A863,m3,1)
		AF('f',struct A863,m4,1)
		AF('c',struct A863,m5,1)
		AF('s',struct A863,m6,1)
		AF('C',struct A863,m7,1)
		AF('i',struct A863,m8,1)
		AF('I',struct A863,m9,1)
		AF('I',struct A863,m10,1)
		AFa(struct A863,m11,1,A862)
		dcCloseAggr(a);
	}
	return a;
};
/* {f} */
#pragma pack(push,1)
struct A864 { f m0; };
#pragma pack(pop)
int f_cmpA864(const struct A864 *x, const struct A864 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA864() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A864));
		AF('f',struct A864,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dIffIl[1]JjLffI> */
#pragma pack(push,1)
union A865 { d m0; I m1; f m2; f m3; I m4; l m5[1]; J m6; j m7; L m8; f m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA865(const union A865 *x, const union A865 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA865() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A865));
		AF('d',union A865,m0,1)
		AF('I',union A865,m1,1)
		AF('f',union A865,m2,1)
		AF('f',union A865,m3,1)
		AF('I',union A865,m4,1)
		AF('l',union A865,m5,1)
		AF('J',union A865,m6,1)
		AF('j',union A865,m7,1)
		AF('L',union A865,m8,1)
		AF('f',union A865,m9,1)
		AF('f',union A865,m10,1)
		AF('I',union A865,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pjidISjlfBdj> */
#pragma pack(push,8)
union A866 { p m0; j m1; i m2; d m3; I m4; S m5; j m6; l m7; f m8; B m9; d m10; j m11; };
#pragma pack(pop)
int f_cmpA866(const union A866 *x, const union A866 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA866() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A866));
		AF('p',union A866,m0,1)
		AF('j',union A866,m1,1)
		AF('i',union A866,m2,1)
		AF('d',union A866,m3,1)
		AF('I',union A866,m4,1)
		AF('S',union A866,m5,1)
		AF('j',union A866,m6,1)
		AF('l',union A866,m7,1)
		AF('f',union A866,m8,1)
		AF('B',union A866,m9,1)
		AF('d',union A866,m10,1)
		AF('j',union A866,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <plL> */
#pragma pack(push,4)
union A867 { p m0; l m1; L m2; };
#pragma pack(pop)
int f_cmpA867(const union A867 *x, const union A867 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA867() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A867));
		AF('p',union A867,m0,1)
		AF('l',union A867,m1,1)
		AF('L',union A867,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<pjidISjlfBdj>pIjSBISi<plL>> */
#pragma pack(push,2)
union A868 { union A866 m0; p m1; I m2; j m3; S m4; B m5; I m6; S m7; i m8; union A867 m9; };
#pragma pack(pop)
int f_cmpA868(const union A868 *x, const union A868 *y) { return f_cmpA866(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA867(&x->m9, &y->m9); };
DCaggr* f_touchA868() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A868));
		AFa(union A868,m0,1,A866)
		AF('p',union A868,m1,1)
		AF('I',union A868,m2,1)
		AF('j',union A868,m3,1)
		AF('S',union A868,m4,1)
		AF('B',union A868,m5,1)
		AF('I',union A868,m6,1)
		AF('S',union A868,m7,1)
		AF('i',union A868,m8,1)
		AFa(union A868,m9,1,A867)
		dcCloseAggr(a);
	}
	return a;
};
/* <iSdI[6]JicIJL[12]IJ> */
#pragma pack(push,1)
union A869 { i m0; S m1; d m2; I m3[6]; J m4; i m5; c m6; I m7; J m8; L m9[12]; I m10; J m11; };
#pragma pack(pop)
int f_cmpA869(const union A869 *x, const union A869 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA869() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A869));
		AF('i',union A869,m0,1)
		AF('S',union A869,m1,1)
		AF('d',union A869,m2,1)
		AF('I',union A869,m3,6)
		AF('J',union A869,m4,1)
		AF('i',union A869,m5,1)
		AF('c',union A869,m6,1)
		AF('I',union A869,m7,1)
		AF('J',union A869,m8,1)
		AF('L',union A869,m9,12)
		AF('I',union A869,m10,1)
		AF('J',union A869,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBifSJSILLd<iSdI[6]JicIJL[12]IJ>[4]} */
#pragma pack(push,4)
struct A870 { s m0; B m1; i m2; f m3; S m4; J m5; S m6; I m7; L m8; L m9; d m10; union A869 m11[4]; };
#pragma pack(pop)
int f_cmpA870(const struct A870 *x, const struct A870 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA869(&x->m11[0], &y->m11[0]) && f_cmpA869(&x->m11[1], &y->m11[1]) && f_cmpA869(&x->m11[2], &y->m11[2]) && f_cmpA869(&x->m11[3], &y->m11[3]); };
DCaggr* f_touchA870() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A870));
		AF('s',struct A870,m0,1)
		AF('B',struct A870,m1,1)
		AF('i',struct A870,m2,1)
		AF('f',struct A870,m3,1)
		AF('S',struct A870,m4,1)
		AF('J',struct A870,m5,1)
		AF('S',struct A870,m6,1)
		AF('I',struct A870,m7,1)
		AF('L',struct A870,m8,1)
		AF('L',struct A870,m9,1)
		AF('d',struct A870,m10,1)
		AFa(struct A870,m11,4,A869)
		dcCloseAggr(a);
	}
	return a;
};
/* <CljCBLSILsds> */
#pragma pack(push,4)
union A871 { C m0; l m1; j m2; C m3; B m4; L m5; S m6; I m7; L m8; s m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA871(const union A871 *x, const union A871 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA871() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A871));
		AF('C',union A871,m0,1)
		AF('l',union A871,m1,1)
		AF('j',union A871,m2,1)
		AF('C',union A871,m3,1)
		AF('B',union A871,m4,1)
		AF('L',union A871,m5,1)
		AF('S',union A871,m6,1)
		AF('I',union A871,m7,1)
		AF('L',union A871,m8,1)
		AF('s',union A871,m9,1)
		AF('d',union A871,m10,1)
		AF('s',union A871,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IB{sBifSJSILLd<iSdI[6]JicIJL[12]IJ>[4]}jS<CljCBLSILsds>ICSBli} */
#pragma pack(push,4)
struct A872 { I m0; B m1; struct A870 m2; j m3; S m4; union A871 m5; I m6; C m7; S m8; B m9; l m10; i m11; };
#pragma pack(pop)
int f_cmpA872(const struct A872 *x, const struct A872 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA870(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA871(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA872() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A872));
		AF('I',struct A872,m0,1)
		AF('B',struct A872,m1,1)
		AFa(struct A872,m2,1,A870)
		AF('j',struct A872,m3,1)
		AF('S',struct A872,m4,1)
		AFa(struct A872,m5,1,A871)
		AF('I',struct A872,m6,1)
		AF('C',struct A872,m7,1)
		AF('S',struct A872,m8,1)
		AF('B',struct A872,m9,1)
		AF('l',struct A872,m10,1)
		AF('i',struct A872,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfS[4]} */
#pragma pack(push,4)
struct A873 { c m0; f m1; S m2[4]; };
#pragma pack(pop)
int f_cmpA873(const struct A873 *x, const struct A873 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3]; };
DCaggr* f_touchA873() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A873));
		AF('c',struct A873,m0,1)
		AF('f',struct A873,m1,1)
		AF('S',struct A873,m2,4)
		dcCloseAggr(a);
	}
	return a;
};
/* {sIcjBiCJfcjL} */
#pragma pack(push,4)
struct A874 { s m0; I m1; c m2; j m3; B m4; i m5; C m6; J m7; f m8; c m9; j m10; L m11; };
#pragma pack(pop)
int f_cmpA874(const struct A874 *x, const struct A874 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA874() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A874));
		AF('s',struct A874,m0,1)
		AF('I',struct A874,m1,1)
		AF('c',struct A874,m2,1)
		AF('j',struct A874,m3,1)
		AF('B',struct A874,m4,1)
		AF('i',struct A874,m5,1)
		AF('C',struct A874,m6,1)
		AF('J',struct A874,m7,1)
		AF('f',struct A874,m8,1)
		AF('c',struct A874,m9,1)
		AF('j',struct A874,m10,1)
		AF('L',struct A874,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LICfSS> */
#pragma pack(push,4)
union A875 { L m0; I m1; C m2; f m3; S m4; S m5; };
#pragma pack(pop)
int f_cmpA875(const union A875 *x, const union A875 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA875() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A875));
		AF('L',union A875,m0,1)
		AF('I',union A875,m1,1)
		AF('C',union A875,m2,1)
		AF('f',union A875,m3,1)
		AF('S',union A875,m4,1)
		AF('S',union A875,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl> */
#pragma pack(push,4)
union A876 { B m0; d m1; S m2; l m3; I m4; j m5; L m6; struct A874 m7; union A875 m8; j m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA876(const union A876 *x, const union A876 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA874(&x->m7, &y->m7) && f_cmpA875(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA876() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A876));
		AF('B',union A876,m0,1)
		AF('d',union A876,m1,1)
		AF('S',union A876,m2,1)
		AF('l',union A876,m3,1)
		AF('I',union A876,m4,1)
		AF('j',union A876,m5,1)
		AF('L',union A876,m6,1)
		AFa(union A876,m7,1,A874)
		AFa(union A876,m8,1,A875)
		AF('j',union A876,m9,1)
		AF('c',union A876,m10,1)
		AF('l',union A876,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IlLppBSpiCpp} */
#pragma pack(push,2)
struct A877 { I m0; l m1; L m2; p m3; p m4; B m5; S m6; p m7; i m8; C m9; p m10; p m11; };
#pragma pack(pop)
int f_cmpA877(const struct A877 *x, const struct A877 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA877() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A877));
		AF('I',struct A877,m0,1)
		AF('l',struct A877,m1,1)
		AF('L',struct A877,m2,1)
		AF('p',struct A877,m3,1)
		AF('p',struct A877,m4,1)
		AF('B',struct A877,m5,1)
		AF('S',struct A877,m6,1)
		AF('p',struct A877,m7,1)
		AF('i',struct A877,m8,1)
		AF('C',struct A877,m9,1)
		AF('p',struct A877,m10,1)
		AF('p',struct A877,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{IlLppBSpiCpp}> */
#pragma pack(push,4)
union A878 { struct A877 m0; };
#pragma pack(pop)
int f_cmpA878(const union A878 *x, const union A878 *y) { return f_cmpA877(&x->m0, &y->m0); };
DCaggr* f_touchA878() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A878));
		AFa(union A878,m0,1,A877)
		dcCloseAggr(a);
	}
	return a;
};
/* <cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd> */
#pragma pack(push,2)
union A879 { c m0; j m1; s m2; J m3; union A876 m4; L m5; union A878 m6; p m7; L m8; L m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA879(const union A879 *x, const union A879 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA876(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA878(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA879() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A879));
		AF('c',union A879,m0,1)
		AF('j',union A879,m1,1)
		AF('s',union A879,m2,1)
		AF('J',union A879,m3,1)
		AFa(union A879,m4,1,A876)
		AF('L',union A879,m5,1)
		AFa(union A879,m6,1,A878)
		AF('p',union A879,m7,1)
		AF('L',union A879,m8,1)
		AF('L',union A879,m9,1)
		AF('s',union A879,m10,1)
		AF('d',union A879,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CSpspfCLpLI} */
#pragma pack(push,4)
struct A880 { C m0; S m1; p m2; s m3; p m4; f m5; C m6; L m7; p m8; L m9; I m10; };
#pragma pack(pop)
int f_cmpA880(const struct A880 *x, const struct A880 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA880() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A880));
		AF('C',struct A880,m0,1)
		AF('S',struct A880,m1,1)
		AF('p',struct A880,m2,1)
		AF('s',struct A880,m3,1)
		AF('p',struct A880,m4,1)
		AF('f',struct A880,m5,1)
		AF('C',struct A880,m6,1)
		AF('L',struct A880,m7,1)
		AF('p',struct A880,m8,1)
		AF('L',struct A880,m9,1)
		AF('I',struct A880,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B[6]{CSpspfCLpLI}JCSJj> */
#pragma pack(push,4)
union A881 { B m0[6]; struct A880 m1; J m2; C m3; S m4; J m5; j m6; };
#pragma pack(pop)
int f_cmpA881(const union A881 *x, const union A881 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && f_cmpA880(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA881() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A881));
		AF('B',union A881,m0,6)
		AFa(union A881,m1,1,A880)
		AF('J',union A881,m2,1)
		AF('C',union A881,m3,1)
		AF('S',union A881,m4,1)
		AF('J',union A881,m5,1)
		AF('j',union A881,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csjdjsJcL[4]cfJ> */
#pragma pack(push,2)
union A882 { c m0; s m1; j m2; d m3; j m4; s m5; J m6; c m7; L m8[4]; c m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA882(const union A882 *x, const union A882 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA882() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A882));
		AF('c',union A882,m0,1)
		AF('s',union A882,m1,1)
		AF('j',union A882,m2,1)
		AF('d',union A882,m3,1)
		AF('j',union A882,m4,1)
		AF('s',union A882,m5,1)
		AF('J',union A882,m6,1)
		AF('c',union A882,m7,1)
		AF('L',union A882,m8,4)
		AF('c',union A882,m9,1)
		AF('f',union A882,m10,1)
		AF('J',union A882,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJ[9]sdfIlsjjLL} */
#pragma pack(push,4)
struct A883 { p m0; J m1[9]; s m2; d m3; f m4; I m5; l m6; s m7; j m8; j m9; L m10; L m11; };
#pragma pack(pop)
int f_cmpA883(const struct A883 *x, const struct A883 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA883() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A883));
		AF('p',struct A883,m0,1)
		AF('J',struct A883,m1,9)
		AF('s',struct A883,m2,1)
		AF('d',struct A883,m3,1)
		AF('f',struct A883,m4,1)
		AF('I',struct A883,m5,1)
		AF('l',struct A883,m6,1)
		AF('s',struct A883,m7,1)
		AF('j',struct A883,m8,1)
		AF('j',struct A883,m9,1)
		AF('L',struct A883,m10,1)
		AF('L',struct A883,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sfBfjSc[2]pcJBf} */
#pragma pack(push,2)
struct A884 { s m0; f m1; B m2; f m3; j m4; S m5; c m6[2]; p m7; c m8; J m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA884(const struct A884 *x, const struct A884 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA884() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A884));
		AF('s',struct A884,m0,1)
		AF('f',struct A884,m1,1)
		AF('B',struct A884,m2,1)
		AF('f',struct A884,m3,1)
		AF('j',struct A884,m4,1)
		AF('S',struct A884,m5,1)
		AF('c',struct A884,m6,2)
		AF('p',struct A884,m7,1)
		AF('c',struct A884,m8,1)
		AF('J',struct A884,m9,1)
		AF('B',struct A884,m10,1)
		AF('f',struct A884,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC> */
#pragma pack(push,4)
union A885 { union A882 m0; C m1; struct A883 m2; S m3; L m4; L m5; s m6; struct A884 m7; J m8; p m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA885(const union A885 *x, const union A885 *y) { return f_cmpA882(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA883(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA884(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA885() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A885));
		AFa(union A885,m0,1,A882)
		AF('C',union A885,m1,1)
		AFa(union A885,m2,1,A883)
		AF('S',union A885,m3,1)
		AF('L',union A885,m4,1)
		AF('L',union A885,m5,1)
		AF('s',union A885,m6,1)
		AFa(union A885,m7,1,A884)
		AF('J',union A885,m8,1)
		AF('p',union A885,m9,1)
		AF('s',union A885,m10,1)
		AF('C',union A885,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {df} */
#pragma pack(push,8)
struct A886 { d m0; f m1; };
#pragma pack(pop)
int f_cmpA886(const struct A886 *x, const struct A886 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA886() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A886));
		AF('d',struct A886,m0,1)
		AF('f',struct A886,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLSCcspIjsfC> */
#pragma pack(push,4)
union A887 { s m0; L m1; S m2; C m3; c m4; s m5; p m6; I m7; j m8; s m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA887(const union A887 *x, const union A887 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA887() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A887));
		AF('s',union A887,m0,1)
		AF('L',union A887,m1,1)
		AF('S',union A887,m2,1)
		AF('C',union A887,m3,1)
		AF('c',union A887,m4,1)
		AF('s',union A887,m5,1)
		AF('p',union A887,m6,1)
		AF('I',union A887,m7,1)
		AF('j',union A887,m8,1)
		AF('s',union A887,m9,1)
		AF('f',union A887,m10,1)
		AF('C',union A887,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sBfJBpJCpBpi> */
#pragma pack(push,2)
union A888 { s m0; B m1; f m2; J m3; B m4; p m5; J m6; C m7; p m8; B m9; p m10; i m11; };
#pragma pack(pop)
int f_cmpA888(const union A888 *x, const union A888 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA888() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A888));
		AF('s',union A888,m0,1)
		AF('B',union A888,m1,1)
		AF('f',union A888,m2,1)
		AF('J',union A888,m3,1)
		AF('B',union A888,m4,1)
		AF('p',union A888,m5,1)
		AF('J',union A888,m6,1)
		AF('C',union A888,m7,1)
		AF('p',union A888,m8,1)
		AF('B',union A888,m9,1)
		AF('p',union A888,m10,1)
		AF('i',union A888,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<sLSCcspIjsfC>sBj<sBfJBpJCpBpi>ldLf} */
#pragma pack(push,4)
struct A889 { union A887 m0; s m1; B m2; j m3; union A888 m4; l m5; d m6; L m7; f m8; };
#pragma pack(pop)
int f_cmpA889(const struct A889 *x, const struct A889 *y) { return f_cmpA887(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA888(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA889() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A889));
		AFa(struct A889,m0,1,A887)
		AF('s',struct A889,m1,1)
		AF('B',struct A889,m2,1)
		AF('j',struct A889,m3,1)
		AFa(struct A889,m4,1,A888)
		AF('l',struct A889,m5,1)
		AF('d',struct A889,m6,1)
		AF('L',struct A889,m7,1)
		AF('f',struct A889,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jsLlIC> */
#pragma pack(push,1)
union A890 { j m0; s m1; L m2; l m3; I m4; C m5; };
#pragma pack(pop)
int f_cmpA890(const union A890 *x, const union A890 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA890() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A890));
		AF('j',union A890,m0,1)
		AF('s',union A890,m1,1)
		AF('L',union A890,m2,1)
		AF('l',union A890,m3,1)
		AF('I',union A890,m4,1)
		AF('C',union A890,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lfflBp<jsLlIC>cIClf} */
#pragma pack(push,8)
struct A891 { l m0; f m1; f m2; l m3; B m4; p m5; union A890 m6; c m7; I m8; C m9; l m10; f m11; };
#pragma pack(pop)
int f_cmpA891(const struct A891 *x, const struct A891 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA890(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA891() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A891));
		AF('l',struct A891,m0,1)
		AF('f',struct A891,m1,1)
		AF('f',struct A891,m2,1)
		AF('l',struct A891,m3,1)
		AF('B',struct A891,m4,1)
		AF('p',struct A891,m5,1)
		AFa(struct A891,m6,1,A890)
		AF('c',struct A891,m7,1)
		AF('I',struct A891,m8,1)
		AF('C',struct A891,m9,1)
		AF('l',struct A891,m10,1)
		AF('f',struct A891,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sLBdfsJiJdLC} */
#pragma pack(push,8)
struct A892 { s m0; L m1; B m2; d m3; f m4; s m5; J m6; i m7; J m8; d m9; L m10; C m11; };
#pragma pack(pop)
int f_cmpA892(const struct A892 *x, const struct A892 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA892() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A892));
		AF('s',struct A892,m0,1)
		AF('L',struct A892,m1,1)
		AF('B',struct A892,m2,1)
		AF('d',struct A892,m3,1)
		AF('f',struct A892,m4,1)
		AF('s',struct A892,m5,1)
		AF('J',struct A892,m6,1)
		AF('i',struct A892,m7,1)
		AF('J',struct A892,m8,1)
		AF('d',struct A892,m9,1)
		AF('L',struct A892,m10,1)
		AF('C',struct A892,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {liL} */
#pragma pack(push,8)
struct A893 { l m0; i m1; L m2; };
#pragma pack(pop)
int f_cmpA893(const struct A893 *x, const struct A893 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA893() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A893));
		AF('l',struct A893,m0,1)
		AF('i',struct A893,m1,1)
		AF('L',struct A893,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Sldsf> */
#pragma pack(push,4)
union A894 { S m0; l m1; d m2; s m3; f m4; };
#pragma pack(pop)
int f_cmpA894(const union A894 *x, const union A894 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA894() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A894));
		AF('S',union A894,m0,1)
		AF('l',union A894,m1,1)
		AF('d',union A894,m2,1)
		AF('s',union A894,m3,1)
		AF('f',union A894,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{sLBdfsJiJdLC}{liL}JiIfJ[12]fL<Sldsf>> */
#pragma pack(push,1)
union A895 { struct A892 m0; struct A893 m1; J m2; i m3; I m4; f m5; J m6[12]; f m7; L m8; union A894 m9; };
#pragma pack(pop)
int f_cmpA895(const union A895 *x, const union A895 *y) { return f_cmpA892(&x->m0, &y->m0) && f_cmpA893(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA894(&x->m9, &y->m9); };
DCaggr* f_touchA895() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A895));
		AFa(union A895,m0,1,A892)
		AFa(union A895,m1,1,A893)
		AF('J',union A895,m2,1)
		AF('i',union A895,m3,1)
		AF('I',union A895,m4,1)
		AF('f',union A895,m5,1)
		AF('J',union A895,m6,12)
		AF('f',union A895,m7,1)
		AF('L',union A895,m8,1)
		AFa(union A895,m9,1,A894)
		dcCloseAggr(a);
	}
	return a;
};
/* <<{sLBdfsJiJdLC}{liL}JiIfJ[12]fL<Sldsf>>spiIjiccf> */
#pragma pack(push,1)
union A896 { union A895 m0; s m1; p m2; i m3; I m4; j m5; i m6; c m7; c m8; f m9; };
#pragma pack(pop)
int f_cmpA896(const union A896 *x, const union A896 *y) { return f_cmpA895(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA896() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A896));
		AFa(union A896,m0,1,A895)
		AF('s',union A896,m1,1)
		AF('p',union A896,m2,1)
		AF('i',union A896,m3,1)
		AF('I',union A896,m4,1)
		AF('j',union A896,m5,1)
		AF('i',union A896,m6,1)
		AF('c',union A896,m7,1)
		AF('c',union A896,m8,1)
		AF('f',union A896,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lplLlfsdfdCL> */
#pragma pack(push,4)
union A897 { l m0; p m1; l m2; L m3; l m4; f m5; s m6; d m7; f m8; d m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA897(const union A897 *x, const union A897 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA897() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A897));
		AF('l',union A897,m0,1)
		AF('p',union A897,m1,1)
		AF('l',union A897,m2,1)
		AF('L',union A897,m3,1)
		AF('l',union A897,m4,1)
		AF('f',union A897,m5,1)
		AF('s',union A897,m6,1)
		AF('d',union A897,m7,1)
		AF('f',union A897,m8,1)
		AF('d',union A897,m9,1)
		AF('C',union A897,m10,1)
		AF('L',union A897,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jCBS[9]CjcILiJC} */
#pragma pack(push,4)
struct A898 { j m0; C m1; B m2; S m3[9]; C m4; j m5; c m6; I m7; L m8; i m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA898(const struct A898 *x, const struct A898 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA898() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A898));
		AF('j',struct A898,m0,1)
		AF('C',struct A898,m1,1)
		AF('B',struct A898,m2,1)
		AF('S',struct A898,m3,9)
		AF('C',struct A898,m4,1)
		AF('j',struct A898,m5,1)
		AF('c',struct A898,m6,1)
		AF('I',struct A898,m7,1)
		AF('L',struct A898,m8,1)
		AF('i',struct A898,m9,1)
		AF('J',struct A898,m10,1)
		AF('C',struct A898,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{jCBS[9]CjcILiJC}BLf} */
#pragma pack(push,2)
struct A899 { struct A898 m0; B m1; L m2; f m3; };
#pragma pack(pop)
int f_cmpA899(const struct A899 *x, const struct A899 *y) { return f_cmpA898(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA899() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A899));
		AFa(struct A899,m0,1,A898)
		AF('B',struct A899,m1,1)
		AF('L',struct A899,m2,1)
		AF('f',struct A899,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SfJBsdsicscp} */
#pragma pack(push,4)
struct A900 { S m0; f m1; J m2; B m3; s m4; d m5; s m6; i m7; c m8; s m9; c m10; p m11; };
#pragma pack(pop)
int f_cmpA900(const struct A900 *x, const struct A900 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA900() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A900));
		AF('S',struct A900,m0,1)
		AF('f',struct A900,m1,1)
		AF('J',struct A900,m2,1)
		AF('B',struct A900,m3,1)
		AF('s',struct A900,m4,1)
		AF('d',struct A900,m5,1)
		AF('s',struct A900,m6,1)
		AF('i',struct A900,m7,1)
		AF('c',struct A900,m8,1)
		AF('s',struct A900,m9,1)
		AF('c',struct A900,m10,1)
		AF('p',struct A900,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fd{SfJBsdsicscp}LscLIBICC> */
#pragma pack(push,2)
union A901 { f m0; d m1; struct A900 m2; L m3; s m4; c m5; L m6; I m7; B m8; I m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA901(const union A901 *x, const union A901 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA900(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA901() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A901));
		AF('f',union A901,m0,1)
		AF('d',union A901,m1,1)
		AFa(union A901,m2,1,A900)
		AF('L',union A901,m3,1)
		AF('s',union A901,m4,1)
		AF('c',union A901,m5,1)
		AF('L',union A901,m6,1)
		AF('I',union A901,m7,1)
		AF('B',union A901,m8,1)
		AF('I',union A901,m9,1)
		AF('C',union A901,m10,1)
		AF('C',union A901,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fLjfcs> */
#pragma pack(push,8)
union A902 { f m0; L m1; j m2; f m3; c m4; s m5; };
#pragma pack(pop)
int f_cmpA902(const union A902 *x, const union A902 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA902() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A902));
		AF('f',union A902,m0,1)
		AF('L',union A902,m1,1)
		AF('j',union A902,m2,1)
		AF('f',union A902,m3,1)
		AF('c',union A902,m4,1)
		AF('s',union A902,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {picis} */
#pragma pack(push,2)
struct A903 { p m0; i m1; c m2; i m3; s m4; };
#pragma pack(pop)
int f_cmpA903(const struct A903 *x, const struct A903 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA903() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A903));
		AF('p',struct A903,m0,1)
		AF('i',struct A903,m1,1)
		AF('c',struct A903,m2,1)
		AF('i',struct A903,m3,1)
		AF('s',struct A903,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<fLjfcs>dJIJLBsl{picis}fJ> */
#pragma pack(push,4)
union A904 { union A902 m0; d m1; J m2; I m3; J m4; L m5; B m6; s m7; l m8; struct A903 m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA904(const union A904 *x, const union A904 *y) { return f_cmpA902(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA903(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA904() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A904));
		AFa(union A904,m0,1,A902)
		AF('d',union A904,m1,1)
		AF('J',union A904,m2,1)
		AF('I',union A904,m3,1)
		AF('J',union A904,m4,1)
		AF('L',union A904,m5,1)
		AF('B',union A904,m6,1)
		AF('s',union A904,m7,1)
		AF('l',union A904,m8,1)
		AFa(union A904,m9,1,A903)
		AF('f',union A904,m10,1)
		AF('J',union A904,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pSSJLfclLLc<<fLjfcs>dJIJLBsl{picis}fJ>} */
#pragma pack(push,2)
struct A905 { p m0; S m1; S m2; J m3; L m4; f m5; c m6; l m7; L m8; L m9; c m10; union A904 m11; };
#pragma pack(pop)
int f_cmpA905(const struct A905 *x, const struct A905 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA904(&x->m11, &y->m11); };
DCaggr* f_touchA905() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A905));
		AF('p',struct A905,m0,1)
		AF('S',struct A905,m1,1)
		AF('S',struct A905,m2,1)
		AF('J',struct A905,m3,1)
		AF('L',struct A905,m4,1)
		AF('f',struct A905,m5,1)
		AF('c',struct A905,m6,1)
		AF('l',struct A905,m7,1)
		AF('L',struct A905,m8,1)
		AF('L',struct A905,m9,1)
		AF('c',struct A905,m10,1)
		AFa(struct A905,m11,1,A904)
		dcCloseAggr(a);
	}
	return a;
};
/* {LccBfBjJBdBS[6]} */
#pragma pack(push,2)
struct A906 { L m0; c m1; c m2; B m3; f m4; B m5; j m6; J m7; B m8; d m9; B m10; S m11[6]; };
#pragma pack(pop)
int f_cmpA906(const struct A906 *x, const struct A906 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5]; };
DCaggr* f_touchA906() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A906));
		AF('L',struct A906,m0,1)
		AF('c',struct A906,m1,1)
		AF('c',struct A906,m2,1)
		AF('B',struct A906,m3,1)
		AF('f',struct A906,m4,1)
		AF('B',struct A906,m5,1)
		AF('j',struct A906,m6,1)
		AF('J',struct A906,m7,1)
		AF('B',struct A906,m8,1)
		AF('d',struct A906,m9,1)
		AF('B',struct A906,m10,1)
		AF('S',struct A906,m11,6)
		dcCloseAggr(a);
	}
	return a;
};
/* {SIIjIldSicIB} */
#pragma pack(push,4)
struct A907 { S m0; I m1; I m2; j m3; I m4; l m5; d m6; S m7; i m8; c m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA907(const struct A907 *x, const struct A907 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA907() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A907));
		AF('S',struct A907,m0,1)
		AF('I',struct A907,m1,1)
		AF('I',struct A907,m2,1)
		AF('j',struct A907,m3,1)
		AF('I',struct A907,m4,1)
		AF('l',struct A907,m5,1)
		AF('d',struct A907,m6,1)
		AF('S',struct A907,m7,1)
		AF('i',struct A907,m8,1)
		AF('c',struct A907,m9,1)
		AF('I',struct A907,m10,1)
		AF('B',struct A907,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ic} */
#pragma pack(push,4)
struct A908 { i m0; c m1; };
#pragma pack(pop)
int f_cmpA908(const struct A908 *x, const struct A908 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA908() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A908));
		AF('i',struct A908,m0,1)
		AF('c',struct A908,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjJ} */
#pragma pack(push,4)
struct A909 { L m0; j m1; J m2; };
#pragma pack(pop)
int f_cmpA909(const struct A909 *x, const struct A909 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA909() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A909));
		AF('L',struct A909,m0,1)
		AF('j',struct A909,m1,1)
		AF('J',struct A909,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BdJcBi} */
#pragma pack(push,4)
struct A910 { B m0; d m1; J m2; c m3; B m4; i m5; };
#pragma pack(pop)
int f_cmpA910(const struct A910 *x, const struct A910 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA910() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A910));
		AF('B',struct A910,m0,1)
		AF('d',struct A910,m1,1)
		AF('J',struct A910,m2,1)
		AF('c',struct A910,m3,1)
		AF('B',struct A910,m4,1)
		AF('i',struct A910,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sp} */
#pragma pack(push,1)
struct A911 { s m0; p m1; };
#pragma pack(pop)
int f_cmpA911(const struct A911 *x, const struct A911 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA911() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A911));
		AF('s',struct A911,m0,1)
		AF('p',struct A911,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jId{LjJ}ffiS{BdJcBi}B{sp}I> */
#pragma pack(push,2)
union A912 { j m0; I m1; d m2; struct A909 m3; f m4; f m5; i m6; S m7; struct A910 m8; B m9; struct A911 m10; I m11; };
#pragma pack(pop)
int f_cmpA912(const union A912 *x, const union A912 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA909(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA910(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA911(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA912() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A912));
		AF('j',union A912,m0,1)
		AF('I',union A912,m1,1)
		AF('d',union A912,m2,1)
		AFa(union A912,m3,1,A909)
		AF('f',union A912,m4,1)
		AF('f',union A912,m5,1)
		AF('i',union A912,m6,1)
		AF('S',union A912,m7,1)
		AFa(union A912,m8,1,A910)
		AF('B',union A912,m9,1)
		AFa(union A912,m10,1,A911)
		AF('I',union A912,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lLpLCilJCSfJ} */
#pragma pack(push,2)
struct A913 { l m0; L m1; p m2; L m3; C m4; i m5; l m6; J m7; C m8; S m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA913(const struct A913 *x, const struct A913 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA913() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A913));
		AF('l',struct A913,m0,1)
		AF('L',struct A913,m1,1)
		AF('p',struct A913,m2,1)
		AF('L',struct A913,m3,1)
		AF('C',struct A913,m4,1)
		AF('i',struct A913,m5,1)
		AF('l',struct A913,m6,1)
		AF('J',struct A913,m7,1)
		AF('C',struct A913,m8,1)
		AF('S',struct A913,m9,1)
		AF('f',struct A913,m10,1)
		AF('J',struct A913,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cjBcidCs{lLpLCilJCSfJ}iiS> */
#pragma pack(push,4)
union A914 { c m0; j m1; B m2; c m3; i m4; d m5; C m6; s m7; struct A913 m8; i m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA914(const union A914 *x, const union A914 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA913(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA914() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A914));
		AF('c',union A914,m0,1)
		AF('j',union A914,m1,1)
		AF('B',union A914,m2,1)
		AF('c',union A914,m3,1)
		AF('i',union A914,m4,1)
		AF('d',union A914,m5,1)
		AF('C',union A914,m6,1)
		AF('s',union A914,m7,1)
		AFa(union A914,m8,1,A913)
		AF('i',union A914,m9,1)
		AF('i',union A914,m10,1)
		AF('S',union A914,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sILC} */
#pragma pack(push,4)
struct A915 { s m0; I m1; L m2; C m3; };
#pragma pack(pop)
int f_cmpA915(const struct A915 *x, const struct A915 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA915() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A915));
		AF('s',struct A915,m0,1)
		AF('I',struct A915,m1,1)
		AF('L',struct A915,m2,1)
		AF('C',struct A915,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IBdId> */
#pragma pack(push,4)
union A916 { I m0; B m1; d m2; I m3; d m4; };
#pragma pack(pop)
int f_cmpA916(const union A916 *x, const union A916 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA916() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A916));
		AF('I',union A916,m0,1)
		AF('B',union A916,m1,1)
		AF('d',union A916,m2,1)
		AF('I',union A916,m3,1)
		AF('d',union A916,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IsidcssLIBIc} */
#pragma pack(push,4)
struct A917 { I m0; s m1; i m2; d m3; c m4; s m5; s m6; L m7; I m8; B m9; I m10; c m11; };
#pragma pack(pop)
int f_cmpA917(const struct A917 *x, const struct A917 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA917() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A917));
		AF('I',struct A917,m0,1)
		AF('s',struct A917,m1,1)
		AF('i',struct A917,m2,1)
		AF('d',struct A917,m3,1)
		AF('c',struct A917,m4,1)
		AF('s',struct A917,m5,1)
		AF('s',struct A917,m6,1)
		AF('L',struct A917,m7,1)
		AF('I',struct A917,m8,1)
		AF('B',struct A917,m9,1)
		AF('I',struct A917,m10,1)
		AF('c',struct A917,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldlsCS} */
#pragma pack(push,8)
struct A918 { l m0; d m1; l m2; s m3; C m4; S m5; };
#pragma pack(pop)
int f_cmpA918(const struct A918 *x, const struct A918 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA918() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A918));
		AF('l',struct A918,m0,1)
		AF('d',struct A918,m1,1)
		AF('l',struct A918,m2,1)
		AF('s',struct A918,m3,1)
		AF('C',struct A918,m4,1)
		AF('S',struct A918,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sLdCpsiiflis} */
#pragma pack(push,1)
struct A919 { s m0; L m1; d m2; C m3; p m4; s m5; i m6; i m7; f m8; l m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA919(const struct A919 *x, const struct A919 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA919() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A919));
		AF('s',struct A919,m0,1)
		AF('L',struct A919,m1,1)
		AF('d',struct A919,m2,1)
		AF('C',struct A919,m3,1)
		AF('p',struct A919,m4,1)
		AF('s',struct A919,m5,1)
		AF('i',struct A919,m6,1)
		AF('i',struct A919,m7,1)
		AF('f',struct A919,m8,1)
		AF('l',struct A919,m9,1)
		AF('i',struct A919,m10,1)
		AF('s',struct A919,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjlpcijfLjpL} */
#pragma pack(push,8)
struct A920 { B m0; j m1; l m2; p m3; c m4; i m5; j m6; f m7; L m8; j m9; p m10; L m11; };
#pragma pack(pop)
int f_cmpA920(const struct A920 *x, const struct A920 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA920() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A920));
		AF('B',struct A920,m0,1)
		AF('j',struct A920,m1,1)
		AF('l',struct A920,m2,1)
		AF('p',struct A920,m3,1)
		AF('c',struct A920,m4,1)
		AF('i',struct A920,m5,1)
		AF('j',struct A920,m6,1)
		AF('f',struct A920,m7,1)
		AF('L',struct A920,m8,1)
		AF('j',struct A920,m9,1)
		AF('p',struct A920,m10,1)
		AF('L',struct A920,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<IBdId>JJ{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls> */
#pragma pack(push,1)
union A921 { union A916 m0; J m1; J m2; struct A917 m3; i m4; p m5; s m6; struct A918 m7; struct A919 m8; struct A920 m9; L m10; s m11; };
#pragma pack(pop)
int f_cmpA921(const union A921 *x, const union A921 *y) { return f_cmpA916(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA917(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA918(&x->m7, &y->m7) && f_cmpA919(&x->m8, &y->m8) && f_cmpA920(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA921() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A921));
		AFa(union A921,m0,1,A916)
		AF('J',union A921,m1,1)
		AF('J',union A921,m2,1)
		AFa(union A921,m3,1,A917)
		AF('i',union A921,m4,1)
		AF('p',union A921,m5,1)
		AF('s',union A921,m6,1)
		AFa(union A921,m7,1,A918)
		AFa(union A921,m8,1,A919)
		AFa(union A921,m9,1,A920)
		AF('L',union A921,m10,1)
		AF('s',union A921,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCii> */
#pragma pack(push,8)
union A922 { s m0; C m1; i m2; i m3; };
#pragma pack(pop)
int f_cmpA922(const union A922 *x, const union A922 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA922() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A922));
		AF('s',union A922,m0,1)
		AF('C',union A922,m1,1)
		AF('i',union A922,m2,1)
		AF('i',union A922,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f<sCii>jsiL} */
#pragma pack(push,4)
struct A923 { f m0; union A922 m1; j m2; s m3; i m4; L m5; };
#pragma pack(pop)
int f_cmpA923(const struct A923 *x, const struct A923 *y) { return x->m0 == y->m0 && f_cmpA922(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA923() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A923));
		AF('f',struct A923,m0,1)
		AFa(struct A923,m1,1,A922)
		AF('j',struct A923,m2,1)
		AF('s',struct A923,m3,1)
		AF('i',struct A923,m4,1)
		AF('L',struct A923,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fCddCfdCpdJI} */
#pragma pack(push,8)
struct A924 { f m0; C m1; d m2; d m3; C m4; f m5; d m6; C m7; p m8; d m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA924(const struct A924 *x, const struct A924 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA924() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A924));
		AF('f',struct A924,m0,1)
		AF('C',struct A924,m1,1)
		AF('d',struct A924,m2,1)
		AF('d',struct A924,m3,1)
		AF('C',struct A924,m4,1)
		AF('f',struct A924,m5,1)
		AF('d',struct A924,m6,1)
		AF('C',struct A924,m7,1)
		AF('p',struct A924,m8,1)
		AF('d',struct A924,m9,1)
		AF('J',struct A924,m10,1)
		AF('I',struct A924,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i{fCddCfdCpdJI}s> */
#pragma pack(push,4)
union A925 { i m0; struct A924 m1; s m2; };
#pragma pack(pop)
int f_cmpA925(const union A925 *x, const union A925 *y) { return x->m0 == y->m0 && f_cmpA924(&x->m1, &y->m1) && x->m2 == y->m2; };
DCaggr* f_touchA925() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A925));
		AF('i',union A925,m0,1)
		AFa(union A925,m1,1,A924)
		AF('s',union A925,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BS{f<sCii>jsiL}CsCBjll<i{fCddCfdCpdJI}s>p} */
#pragma pack(push,8)
struct A926 { B m0; S m1; struct A923 m2; C m3; s m4; C m5; B m6; j m7; l m8; l m9; union A925 m10; p m11; };
#pragma pack(pop)
int f_cmpA926(const struct A926 *x, const struct A926 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA923(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA925(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA926() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A926));
		AF('B',struct A926,m0,1)
		AF('S',struct A926,m1,1)
		AFa(struct A926,m2,1,A923)
		AF('C',struct A926,m3,1)
		AF('s',struct A926,m4,1)
		AF('C',struct A926,m5,1)
		AF('B',struct A926,m6,1)
		AF('j',struct A926,m7,1)
		AF('l',struct A926,m8,1)
		AF('l',struct A926,m9,1)
		AFa(struct A926,m10,1,A925)
		AF('p',struct A926,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsI} */
#pragma pack(push,1)
struct A927 { B m0; s m1; I m2; };
#pragma pack(pop)
int f_cmpA927(const struct A927 *x, const struct A927 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA927() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A927));
		AF('B',struct A927,m0,1)
		AF('s',struct A927,m1,1)
		AF('I',struct A927,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {plpiBB} */
#pragma pack(push,1)
struct A928 { p m0; l m1; p m2; i m3; B m4; B m5; };
#pragma pack(pop)
int f_cmpA928(const struct A928 *x, const struct A928 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA928() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A928));
		AF('p',struct A928,m0,1)
		AF('l',struct A928,m1,1)
		AF('p',struct A928,m2,1)
		AF('i',struct A928,m3,1)
		AF('B',struct A928,m4,1)
		AF('B',struct A928,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJiJsdsLSsdl> */
#pragma pack(push,4)
union A929 { c m0; J m1; i m2; J m3; s m4; d m5; s m6; L m7; S m8; s m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA929(const union A929 *x, const union A929 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA929() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A929));
		AF('c',union A929,m0,1)
		AF('J',union A929,m1,1)
		AF('i',union A929,m2,1)
		AF('J',union A929,m3,1)
		AF('s',union A929,m4,1)
		AF('d',union A929,m5,1)
		AF('s',union A929,m6,1)
		AF('L',union A929,m7,1)
		AF('S',union A929,m8,1)
		AF('s',union A929,m9,1)
		AF('d',union A929,m10,1)
		AF('l',union A929,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dljLiS} */
#pragma pack(push,2)
struct A930 { d m0; l m1; j m2; L m3; i m4; S m5; };
#pragma pack(pop)
int f_cmpA930(const struct A930 *x, const struct A930 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA930() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A930));
		AF('d',struct A930,m0,1)
		AF('l',struct A930,m1,1)
		AF('j',struct A930,m2,1)
		AF('L',struct A930,m3,1)
		AF('i',struct A930,m4,1)
		AF('S',struct A930,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I{plpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}Jj} */
#pragma pack(push,4)
struct A931 { I m0; struct A928 m1; j m2; s m3; union A929 m4; C m5; c m6; C m7; i m8; struct A930 m9; J m10; j m11; };
#pragma pack(pop)
int f_cmpA931(const struct A931 *x, const struct A931 *y) { return x->m0 == y->m0 && f_cmpA928(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA929(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA930(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA931() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A931));
		AF('I',struct A931,m0,1)
		AFa(struct A931,m1,1,A928)
		AF('j',struct A931,m2,1)
		AF('s',struct A931,m3,1)
		AFa(struct A931,m4,1,A929)
		AF('C',struct A931,m5,1)
		AF('c',struct A931,m6,1)
		AF('C',struct A931,m7,1)
		AF('i',struct A931,m8,1)
		AFa(struct A931,m9,1,A930)
		AF('J',struct A931,m10,1)
		AF('j',struct A931,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jBSjlI> */
#pragma pack(push,4)
union A932 { j m0; B m1; S m2; j m3; l m4; I m5; };
#pragma pack(pop)
int f_cmpA932(const union A932 *x, const union A932 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA932() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A932));
		AF('j',union A932,m0,1)
		AF('B',union A932,m1,1)
		AF('S',union A932,m2,1)
		AF('j',union A932,m3,1)
		AF('l',union A932,m4,1)
		AF('I',union A932,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {psilCdLCSdIs} */
#pragma pack(push,2)
struct A933 { p m0; s m1; i m2; l m3; C m4; d m5; L m6; C m7; S m8; d m9; I m10; s m11; };
#pragma pack(pop)
int f_cmpA933(const struct A933 *x, const struct A933 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA933() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A933));
		AF('p',struct A933,m0,1)
		AF('s',struct A933,m1,1)
		AF('i',struct A933,m2,1)
		AF('l',struct A933,m3,1)
		AF('C',struct A933,m4,1)
		AF('d',struct A933,m5,1)
		AF('L',struct A933,m6,1)
		AF('C',struct A933,m7,1)
		AF('S',struct A933,m8,1)
		AF('d',struct A933,m9,1)
		AF('I',struct A933,m10,1)
		AF('s',struct A933,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsdjclSssfCl> */
#pragma pack(push,1)
union A934 { S m0; s m1; d m2; j m3; c m4; l m5; S m6; s m7; s m8; f m9; C m10; l m11; };
#pragma pack(pop)
int f_cmpA934(const union A934 *x, const union A934 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA934() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A934));
		AF('S',union A934,m0,1)
		AF('s',union A934,m1,1)
		AF('d',union A934,m2,1)
		AF('j',union A934,m3,1)
		AF('c',union A934,m4,1)
		AF('l',union A934,m5,1)
		AF('S',union A934,m6,1)
		AF('s',union A934,m7,1)
		AF('s',union A934,m8,1)
		AF('f',union A934,m9,1)
		AF('C',union A934,m10,1)
		AF('l',union A934,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CBC} */
#pragma pack(push,4)
struct A935 { C m0; B m1; C m2; };
#pragma pack(pop)
int f_cmpA935(const struct A935 *x, const struct A935 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA935() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A935));
		AF('C',struct A935,m0,1)
		AF('B',struct A935,m1,1)
		AF('C',struct A935,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CspdsjL} */
#pragma pack(push,4)
struct A936 { C m0; s m1; p m2; d m3; s m4; j m5; L m6; };
#pragma pack(pop)
int f_cmpA936(const struct A936 *x, const struct A936 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA936() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A936));
		AF('C',struct A936,m0,1)
		AF('s',struct A936,m1,1)
		AF('p',struct A936,m2,1)
		AF('d',struct A936,m3,1)
		AF('s',struct A936,m4,1)
		AF('j',struct A936,m5,1)
		AF('L',struct A936,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lL[6]sIIcLC{CBC}jS{CspdsjL}} */
#pragma pack(push,2)
struct A937 { l m0; L m1[6]; s m2; I m3; I m4; c m5; L m6; C m7; struct A935 m8; j m9; S m10; struct A936 m11; };
#pragma pack(pop)
int f_cmpA937(const struct A937 *x, const struct A937 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA935(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA936(&x->m11, &y->m11); };
DCaggr* f_touchA937() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A937));
		AF('l',struct A937,m0,1)
		AF('L',struct A937,m1,6)
		AF('s',struct A937,m2,1)
		AF('I',struct A937,m3,1)
		AF('I',struct A937,m4,1)
		AF('c',struct A937,m5,1)
		AF('L',struct A937,m6,1)
		AF('C',struct A937,m7,1)
		AFa(struct A937,m8,1,A935)
		AF('j',struct A937,m9,1)
		AF('S',struct A937,m10,1)
		AFa(struct A937,m11,1,A936)
		dcCloseAggr(a);
	}
	return a;
};
/* <{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji> */
#pragma pack(push,8)
union A938 { struct A937 m0; L m1; c m2; j m3; i m4; };
#pragma pack(pop)
int f_cmpA938(const union A938 *x, const union A938 *y) { return f_cmpA937(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA938() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A938));
		AFa(union A938,m0,1,A937)
		AF('L',union A938,m1,1)
		AF('c',union A938,m2,1)
		AF('j',union A938,m3,1)
		AF('i',union A938,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lfC} */
#pragma pack(push,1)
struct A939 { l m0; f m1; C m2; };
#pragma pack(pop)
int f_cmpA939(const struct A939 *x, const struct A939 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA939() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A939));
		AF('l',struct A939,m0,1)
		AF('f',struct A939,m1,1)
		AF('C',struct A939,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCds{lfC}dclfl[6]ds} */
#pragma pack(push,4)
struct A940 { p m0; C m1; d m2; s m3; struct A939 m4; d m5; c m6; l m7; f m8; l m9[6]; d m10; s m11; };
#pragma pack(pop)
int f_cmpA940(const struct A940 *x, const struct A940 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA939(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA940() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A940));
		AF('p',struct A940,m0,1)
		AF('C',struct A940,m1,1)
		AF('d',struct A940,m2,1)
		AF('s',struct A940,m3,1)
		AFa(struct A940,m4,1,A939)
		AF('d',struct A940,m5,1)
		AF('c',struct A940,m6,1)
		AF('l',struct A940,m7,1)
		AF('f',struct A940,m8,1)
		AF('l',struct A940,m9,6)
		AF('d',struct A940,m10,1)
		AF('s',struct A940,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lS{pCds{lfC}dclfl[6]ds}J} */
#pragma pack(push,4)
struct A941 { l m0; S m1; struct A940 m2; J m3; };
#pragma pack(pop)
int f_cmpA941(const struct A941 *x, const struct A941 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA940(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA941() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A941));
		AF('l',struct A941,m0,1)
		AF('S',struct A941,m1,1)
		AFa(struct A941,m2,1,A940)
		AF('J',struct A941,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldjiSfj} */
#pragma pack(push,2)
struct A942 { l m0; d m1; j m2; i m3; S m4; f m5; j m6; };
#pragma pack(pop)
int f_cmpA942(const struct A942 *x, const struct A942 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA942() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A942));
		AF('l',struct A942,m0,1)
		AF('d',struct A942,m1,1)
		AF('j',struct A942,m2,1)
		AF('i',struct A942,m3,1)
		AF('S',struct A942,m4,1)
		AF('f',struct A942,m5,1)
		AF('j',struct A942,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <plClJLjf> */
#pragma pack(push,8)
union A943 { p m0; l m1; C m2; l m3; J m4; L m5; j m6; f m7; };
#pragma pack(pop)
int f_cmpA943(const union A943 *x, const union A943 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA943() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A943));
		AF('p',union A943,m0,1)
		AF('l',union A943,m1,1)
		AF('C',union A943,m2,1)
		AF('l',union A943,m3,1)
		AF('J',union A943,m4,1)
		AF('L',union A943,m5,1)
		AF('j',union A943,m6,1)
		AF('f',union A943,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J<plClJLjf>ls} */
#pragma pack(push,8)
struct A944 { J m0; union A943 m1; l m2; s m3; };
#pragma pack(pop)
int f_cmpA944(const struct A944 *x, const struct A944 *y) { return x->m0 == y->m0 && f_cmpA943(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA944() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A944));
		AF('J',struct A944,m0,1)
		AFa(struct A944,m1,1,A943)
		AF('l',struct A944,m2,1)
		AF('s',struct A944,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IJdsiiBpScIC> */
#pragma pack(push,4)
union A945 { I m0; J m1; d m2; s m3; i m4; i m5; B m6; p m7; S m8; c m9; I m10; C m11; };
#pragma pack(pop)
int f_cmpA945(const union A945 *x, const union A945 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA945() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A945));
		AF('I',union A945,m0,1)
		AF('J',union A945,m1,1)
		AF('d',union A945,m2,1)
		AF('s',union A945,m3,1)
		AF('i',union A945,m4,1)
		AF('i',union A945,m5,1)
		AF('B',union A945,m6,1)
		AF('p',union A945,m7,1)
		AF('S',union A945,m8,1)
		AF('c',union A945,m9,1)
		AF('I',union A945,m10,1)
		AF('C',union A945,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j<IJdsiiBpScIC>BllddBfBJs} */
#pragma pack(push,2)
struct A946 { j m0; union A945 m1; B m2; l m3; l m4; d m5; d m6; B m7; f m8; B m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA946(const struct A946 *x, const struct A946 *y) { return x->m0 == y->m0 && f_cmpA945(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA946() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A946));
		AF('j',struct A946,m0,1)
		AFa(struct A946,m1,1,A945)
		AF('B',struct A946,m2,1)
		AF('l',struct A946,m3,1)
		AF('l',struct A946,m4,1)
		AF('d',struct A946,m5,1)
		AF('d',struct A946,m6,1)
		AF('B',struct A946,m7,1)
		AF('f',struct A946,m8,1)
		AF('B',struct A946,m9,1)
		AF('J',struct A946,m10,1)
		AF('s',struct A946,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {piBIBjc} */
#pragma pack(push,4)
struct A947 { p m0; i m1; B m2; I m3; B m4; j m5; c m6; };
#pragma pack(pop)
int f_cmpA947(const struct A947 *x, const struct A947 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA947() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A947));
		AF('p',struct A947,m0,1)
		AF('i',struct A947,m1,1)
		AF('B',struct A947,m2,1)
		AF('I',struct A947,m3,1)
		AF('B',struct A947,m4,1)
		AF('j',struct A947,m5,1)
		AF('c',struct A947,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijdiSCJBIiLS> */
#pragma pack(push,2)
union A948 { i m0; j m1; d m2; i m3; S m4; C m5; J m6; B m7; I m8; i m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA948(const union A948 *x, const union A948 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA948() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A948));
		AF('i',union A948,m0,1)
		AF('j',union A948,m1,1)
		AF('d',union A948,m2,1)
		AF('i',union A948,m3,1)
		AF('S',union A948,m4,1)
		AF('C',union A948,m5,1)
		AF('J',union A948,m6,1)
		AF('B',union A948,m7,1)
		AF('I',union A948,m8,1)
		AF('i',union A948,m9,1)
		AF('L',union A948,m10,1)
		AF('S',union A948,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flpSdJiJcsdd> */
#pragma pack(push,2)
union A949 { f m0; l m1; p m2; S m3; d m4; J m5; i m6; J m7; c m8; s m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA949(const union A949 *x, const union A949 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA949() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A949));
		AF('f',union A949,m0,1)
		AF('l',union A949,m1,1)
		AF('p',union A949,m2,1)
		AF('S',union A949,m3,1)
		AF('d',union A949,m4,1)
		AF('J',union A949,m5,1)
		AF('i',union A949,m6,1)
		AF('J',union A949,m7,1)
		AF('c',union A949,m8,1)
		AF('s',union A949,m9,1)
		AF('d',union A949,m10,1)
		AF('d',union A949,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J} */
#pragma pack(push,4)
struct A950 { J m0; };
#pragma pack(pop)
int f_cmpA950(const struct A950 *x, const struct A950 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA950() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A950));
		AF('J',struct A950,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CpS> */
#pragma pack(push,1)
union A951 { C m0; p m1; S m2; };
#pragma pack(pop)
int f_cmpA951(const union A951 *x, const union A951 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA951() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A951));
		AF('C',union A951,m0,1)
		AF('p',union A951,m1,1)
		AF('S',union A951,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JJLsS[10]JjlIsBf> */
#pragma pack(push,2)
union A952 { J m0; J m1; L m2; s m3; S m4[10]; J m5; j m6; l m7; I m8; s m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA952(const union A952 *x, const union A952 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA952() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A952));
		AF('J',union A952,m0,1)
		AF('J',union A952,m1,1)
		AF('L',union A952,m2,1)
		AF('s',union A952,m3,1)
		AF('S',union A952,m4,10)
		AF('J',union A952,m5,1)
		AF('j',union A952,m6,1)
		AF('l',union A952,m7,1)
		AF('I',union A952,m8,1)
		AF('s',union A952,m9,1)
		AF('B',union A952,m10,1)
		AF('f',union A952,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d> */
#pragma pack(push,4)
union A953 { C m0[5]; d m1; c m2; j m3; S m4; p m5; B m6; union A951 m7; c m8; l m9; union A952 m10[13]; d m11; };
#pragma pack(pop)
int f_cmpA953(const union A953 *x, const union A953 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA951(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA952(&x->m10[0], &y->m10[0]) && f_cmpA952(&x->m10[1], &y->m10[1]) && f_cmpA952(&x->m10[2], &y->m10[2]) && f_cmpA952(&x->m10[3], &y->m10[3]) && f_cmpA952(&x->m10[4], &y->m10[4]) && f_cmpA952(&x->m10[5], &y->m10[5]) && f_cmpA952(&x->m10[6], &y->m10[6]) && f_cmpA952(&x->m10[7], &y->m10[7]) && f_cmpA952(&x->m10[8], &y->m10[8]) && f_cmpA952(&x->m10[9], &y->m10[9]) && f_cmpA952(&x->m10[10], &y->m10[10]) && f_cmpA952(&x->m10[11], &y->m10[11]) && f_cmpA952(&x->m10[12], &y->m10[12]) && x->m11 == y->m11; };
DCaggr* f_touchA953() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A953));
		AF('C',union A953,m0,5)
		AF('d',union A953,m1,1)
		AF('c',union A953,m2,1)
		AF('j',union A953,m3,1)
		AF('S',union A953,m4,1)
		AF('p',union A953,m5,1)
		AF('B',union A953,m6,1)
		AFa(union A953,m7,1,A951)
		AF('c',union A953,m8,1)
		AF('l',union A953,m9,1)
		AFa(union A953,m10,13,A952)
		AF('d',union A953,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bi[5]dsJIsdlIds} */
#pragma pack(push,8)
struct A954 { B m0; i m1[5]; d m2; s m3; J m4; I m5; s m6; d m7; l m8; I m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA954(const struct A954 *x, const struct A954 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA954() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A954));
		AF('B',struct A954,m0,1)
		AF('i',struct A954,m1,5)
		AF('d',struct A954,m2,1)
		AF('s',struct A954,m3,1)
		AF('J',struct A954,m4,1)
		AF('I',struct A954,m5,1)
		AF('s',struct A954,m6,1)
		AF('d',struct A954,m7,1)
		AF('l',struct A954,m8,1)
		AF('I',struct A954,m9,1)
		AF('d',struct A954,m10,1)
		AF('s',struct A954,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj> */
#pragma pack(push,2)
union A955 { d m0; d m1; struct A950 m2; d m3; union A953 m4; struct A954 m5; B m6; d m7; B m8; f m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA955(const union A955 *x, const union A955 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA950(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA953(&x->m4, &y->m4) && f_cmpA954(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA955() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A955));
		AF('d',union A955,m0,1)
		AF('d',union A955,m1,1)
		AFa(union A955,m2,1,A950)
		AF('d',union A955,m3,1)
		AFa(union A955,m4,1,A953)
		AFa(union A955,m5,1,A954)
		AF('B',union A955,m6,1)
		AF('d',union A955,m7,1)
		AF('B',union A955,m8,1)
		AF('f',union A955,m9,1)
		AF('j',union A955,m10,1)
		AF('j',union A955,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILfBdBSf} */
#pragma pack(push,2)
struct A956 { I m0; L m1; f m2; B m3; d m4; B m5; S m6; f m7; };
#pragma pack(pop)
int f_cmpA956(const struct A956 *x, const struct A956 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA956() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A956));
		AF('I',struct A956,m0,1)
		AF('L',struct A956,m1,1)
		AF('f',struct A956,m2,1)
		AF('B',struct A956,m3,1)
		AF('d',struct A956,m4,1)
		AF('B',struct A956,m5,1)
		AF('S',struct A956,m6,1)
		AF('f',struct A956,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsJJsfBdIiiB} */
#pragma pack(push,4)
struct A957 { l m0; s m1; J m2; J m3; s m4; f m5; B m6; d m7; I m8; i m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA957(const struct A957 *x, const struct A957 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA957() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A957));
		AF('l',struct A957,m0,1)
		AF('s',struct A957,m1,1)
		AF('J',struct A957,m2,1)
		AF('J',struct A957,m3,1)
		AF('s',struct A957,m4,1)
		AF('f',struct A957,m5,1)
		AF('B',struct A957,m6,1)
		AF('d',struct A957,m7,1)
		AF('I',struct A957,m8,1)
		AF('i',struct A957,m9,1)
		AF('i',struct A957,m10,1)
		AF('B',struct A957,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc> */
#pragma pack(push,2)
union A958 { C m0; s m1[6]; f m2; struct A956 m3; c m4; S m5; struct A957 m6; l m7; c m8; };
#pragma pack(pop)
int f_cmpA958(const union A958 *x, const union A958 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && f_cmpA956(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA957(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA958() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A958));
		AF('C',union A958,m0,1)
		AF('s',union A958,m1,6)
		AF('f',union A958,m2,1)
		AFa(union A958,m3,1,A956)
		AF('c',union A958,m4,1)
		AF('S',union A958,m5,1)
		AFa(union A958,m6,1,A957)
		AF('l',union A958,m7,1)
		AF('c',union A958,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jcspSIfIfCdJ> */
#pragma pack(push,2)
union A959 { j m0; c m1; s m2; p m3; S m4; I m5; f m6; I m7; f m8; C m9; d m10; J m11; };
#pragma pack(pop)
int f_cmpA959(const union A959 *x, const union A959 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA959() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A959));
		AF('j',union A959,m0,1)
		AF('c',union A959,m1,1)
		AF('s',union A959,m2,1)
		AF('p',union A959,m3,1)
		AF('S',union A959,m4,1)
		AF('I',union A959,m5,1)
		AF('f',union A959,m6,1)
		AF('I',union A959,m7,1)
		AF('f',union A959,m8,1)
		AF('C',union A959,m9,1)
		AF('d',union A959,m10,1)
		AF('J',union A959,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bdjssi} */
#pragma pack(push,2)
struct A960 { B m0; d m1; j m2; s m3; s m4; i m5; };
#pragma pack(pop)
int f_cmpA960(const struct A960 *x, const struct A960 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA960() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A960));
		AF('B',struct A960,m0,1)
		AF('d',struct A960,m1,1)
		AF('j',struct A960,m2,1)
		AF('s',struct A960,m3,1)
		AF('s',struct A960,m4,1)
		AF('i',struct A960,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBlsdjdS> */
#pragma pack(push,4)
union A961 { i m0; B m1; l m2; s m3; d m4; j m5; d m6; S m7; };
#pragma pack(pop)
int f_cmpA961(const union A961 *x, const union A961 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA961() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A961));
		AF('i',union A961,m0,1)
		AF('B',union A961,m1,1)
		AF('l',union A961,m2,1)
		AF('s',union A961,m3,1)
		AF('d',union A961,m4,1)
		AF('j',union A961,m5,1)
		AF('d',union A961,m6,1)
		AF('S',union A961,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S} */
#pragma pack(push,8)
struct A962 { d m0; s m1; J m2; s m3; I m4; struct A960 m5; I m6; union A961 m7; C m8; B m9; d m10[4]; S m11; };
#pragma pack(pop)
int f_cmpA962(const struct A962 *x, const struct A962 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA960(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA961(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA962() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A962));
		AF('d',struct A962,m0,1)
		AF('s',struct A962,m1,1)
		AF('J',struct A962,m2,1)
		AF('s',struct A962,m3,1)
		AF('I',struct A962,m4,1)
		AFa(struct A962,m5,1,A960)
		AF('I',struct A962,m6,1)
		AFa(struct A962,m7,1,A961)
		AF('C',struct A962,m8,1)
		AF('B',struct A962,m9,1)
		AF('d',struct A962,m10,4)
		AF('S',struct A962,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flfpldsjdCI[2]f> */
#pragma pack(push,4)
union A963 { f m0; l m1; f m2; p m3; l m4; d m5; s m6; j m7; d m8; C m9; I m10[2]; f m11; };
#pragma pack(pop)
int f_cmpA963(const union A963 *x, const union A963 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m11 == y->m11; };
DCaggr* f_touchA963() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A963));
		AF('f',union A963,m0,1)
		AF('l',union A963,m1,1)
		AF('f',union A963,m2,1)
		AF('p',union A963,m3,1)
		AF('l',union A963,m4,1)
		AF('d',union A963,m5,1)
		AF('s',union A963,m6,1)
		AF('j',union A963,m7,1)
		AF('d',union A963,m8,1)
		AF('C',union A963,m9,1)
		AF('I',union A963,m10,2)
		AF('f',union A963,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LcIB} */
#pragma pack(push,8)
struct A964 { L m0; c m1; I m2; B m3; };
#pragma pack(pop)
int f_cmpA964(const struct A964 *x, const struct A964 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA964() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A964));
		AF('L',struct A964,m0,1)
		AF('c',struct A964,m1,1)
		AF('I',struct A964,m2,1)
		AF('B',struct A964,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Sdd{LcIB}lICLdsj> */
#pragma pack(push,8)
union A965 { S m0; d m1; d m2; struct A964 m3; l m4; I m5; C m6; L m7; d m8; s m9; j m10; };
#pragma pack(pop)
int f_cmpA965(const union A965 *x, const union A965 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA964(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA965() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A965));
		AF('S',union A965,m0,1)
		AF('d',union A965,m1,1)
		AF('d',union A965,m2,1)
		AFa(union A965,m3,1,A964)
		AF('l',union A965,m4,1)
		AF('I',union A965,m5,1)
		AF('C',union A965,m6,1)
		AF('L',union A965,m7,1)
		AF('d',union A965,m8,1)
		AF('s',union A965,m9,1)
		AF('j',union A965,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICIdcLsl} */
#pragma pack(push,2)
struct A966 { I m0; C m1; I m2; d m3; c m4; L m5; s m6; l m7; };
#pragma pack(pop)
int f_cmpA966(const struct A966 *x, const struct A966 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA966() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A966));
		AF('I',struct A966,m0,1)
		AF('C',struct A966,m1,1)
		AF('I',struct A966,m2,1)
		AF('d',struct A966,m3,1)
		AF('c',struct A966,m4,1)
		AF('L',struct A966,m5,1)
		AF('s',struct A966,m6,1)
		AF('l',struct A966,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jl> */
#pragma pack(push,4)
union A967 { j m0; l m1; };
#pragma pack(pop)
int f_cmpA967(const union A967 *x, const union A967 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA967() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A967));
		AF('j',union A967,m0,1)
		AF('l',union A967,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sl[2]SCijBIpJfC} */
#pragma pack(push,1)
struct A968 { S m0; l m1[2]; S m2; C m3; i m4; j m5; B m6; I m7; p m8; J m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA968(const struct A968 *x, const struct A968 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA968() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A968));
		AF('S',struct A968,m0,1)
		AF('l',struct A968,m1,2)
		AF('S',struct A968,m2,1)
		AF('C',struct A968,m3,1)
		AF('i',struct A968,m4,1)
		AF('j',struct A968,m5,1)
		AF('B',struct A968,m6,1)
		AF('I',struct A968,m7,1)
		AF('p',struct A968,m8,1)
		AF('J',struct A968,m9,1)
		AF('f',struct A968,m10,1)
		AF('C',struct A968,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C[5]LJISS> */
#pragma pack(push,2)
union A969 { C m0[5]; L m1; J m2; I m3; S m4; S m5; };
#pragma pack(pop)
int f_cmpA969(const union A969 *x, const union A969 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA969() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A969));
		AF('C',union A969,m0,5)
		AF('L',union A969,m1,1)
		AF('J',union A969,m2,1)
		AF('I',union A969,m3,1)
		AF('S',union A969,m4,1)
		AF('S',union A969,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IISI<C[5]LJISS>CC} */
#pragma pack(push,4)
struct A970 { I m0; I m1; S m2; I m3; union A969 m4; C m5; C m6; };
#pragma pack(pop)
int f_cmpA970(const struct A970 *x, const struct A970 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA969(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA970() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A970));
		AF('I',struct A970,m0,1)
		AF('I',struct A970,m1,1)
		AF('S',struct A970,m2,1)
		AF('I',struct A970,m3,1)
		AFa(struct A970,m4,1,A969)
		AF('C',struct A970,m5,1)
		AF('C',struct A970,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pllI} */
#pragma pack(push,4)
struct A971 { p m0; l m1; l m2; I m3; };
#pragma pack(pop)
int f_cmpA971(const struct A971 *x, const struct A971 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA971() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A971));
		AF('p',struct A971,m0,1)
		AF('l',struct A971,m1,1)
		AF('l',struct A971,m2,1)
		AF('I',struct A971,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I{pllI}SsLssfc[13]dpI> */
#pragma pack(push,8)
union A972 { I m0; struct A971 m1; S m2; s m3; L m4; s m5; s m6; f m7; c m8[13]; d m9; p m10; I m11; };
#pragma pack(pop)
int f_cmpA972(const union A972 *x, const union A972 *y) { return x->m0 == y->m0 && f_cmpA971(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA972() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A972));
		AF('I',union A972,m0,1)
		AFa(union A972,m1,1,A971)
		AF('S',union A972,m2,1)
		AF('s',union A972,m3,1)
		AF('L',union A972,m4,1)
		AF('s',union A972,m5,1)
		AF('s',union A972,m6,1)
		AF('f',union A972,m7,1)
		AF('c',union A972,m8,13)
		AF('d',union A972,m9,1)
		AF('p',union A972,m10,1)
		AF('I',union A972,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsiiLIpsc[12]cIS} */
#pragma pack(push,4)
struct A973 { f m0; s m1; i m2; i m3; L m4; I m5; p m6; s m7; c m8[12]; c m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA973(const struct A973 *x, const struct A973 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA973() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A973));
		AF('f',struct A973,m0,1)
		AF('s',struct A973,m1,1)
		AF('i',struct A973,m2,1)
		AF('i',struct A973,m3,1)
		AF('L',struct A973,m4,1)
		AF('I',struct A973,m5,1)
		AF('p',struct A973,m6,1)
		AF('s',struct A973,m7,1)
		AF('c',struct A973,m8,12)
		AF('c',struct A973,m9,1)
		AF('I',struct A973,m10,1)
		AF('S',struct A973,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BLcdsCjSBSsi> */
#pragma pack(push,4)
union A974 { B m0; L m1; c m2; d m3; s m4; C m5; j m6; S m7; B m8; S m9; s m10; i m11; };
#pragma pack(pop)
int f_cmpA974(const union A974 *x, const union A974 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA974() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A974));
		AF('B',union A974,m0,1)
		AF('L',union A974,m1,1)
		AF('c',union A974,m2,1)
		AF('d',union A974,m3,1)
		AF('s',union A974,m4,1)
		AF('C',union A974,m5,1)
		AF('j',union A974,m6,1)
		AF('S',union A974,m7,1)
		AF('B',union A974,m8,1)
		AF('S',union A974,m9,1)
		AF('s',union A974,m10,1)
		AF('i',union A974,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CfjBSJdBpJJC[4]> */
#pragma pack(push,4)
union A975 { C m0; f m1; j m2; B m3; S m4; J m5; d m6; B m7; p m8; J m9; J m10; C m11[4]; };
#pragma pack(pop)
int f_cmpA975(const union A975 *x, const union A975 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3]; };
DCaggr* f_touchA975() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A975));
		AF('C',union A975,m0,1)
		AF('f',union A975,m1,1)
		AF('j',union A975,m2,1)
		AF('B',union A975,m3,1)
		AF('S',union A975,m4,1)
		AF('J',union A975,m5,1)
		AF('d',union A975,m6,1)
		AF('B',union A975,m7,1)
		AF('p',union A975,m8,1)
		AF('J',union A975,m9,1)
		AF('J',union A975,m10,1)
		AF('C',union A975,m11,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLdjj> */
#pragma pack(push,4)
union A976 { i m0; L m1; d m2; j m3; j m4; };
#pragma pack(pop)
int f_cmpA976(const union A976 *x, const union A976 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA976() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A976));
		AF('i',union A976,m0,1)
		AF('L',union A976,m1,1)
		AF('d',union A976,m2,1)
		AF('j',union A976,m3,1)
		AF('j',union A976,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fCpjCJJdclSd> */
#pragma pack(push,2)
union A977 { f m0; C m1; p m2; j m3; C m4; J m5; J m6; d m7; c m8; l m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA977(const union A977 *x, const union A977 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA977() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A977));
		AF('f',union A977,m0,1)
		AF('C',union A977,m1,1)
		AF('p',union A977,m2,1)
		AF('j',union A977,m3,1)
		AF('C',union A977,m4,1)
		AF('J',union A977,m5,1)
		AF('J',union A977,m6,1)
		AF('d',union A977,m7,1)
		AF('c',union A977,m8,1)
		AF('l',union A977,m9,1)
		AF('S',union A977,m10,1)
		AF('d',union A977,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCpsi} */
#pragma pack(push,4)
struct A978 { S m0; C m1; p m2; s m3; i m4; };
#pragma pack(pop)
int f_cmpA978(const struct A978 *x, const struct A978 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA978() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A978));
		AF('S',struct A978,m0,1)
		AF('C',struct A978,m1,1)
		AF('p',struct A978,m2,1)
		AF('s',struct A978,m3,1)
		AF('i',struct A978,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jil> */
#pragma pack(push,4)
union A979 { J m0; i m1; l m2; };
#pragma pack(pop)
int f_cmpA979(const union A979 *x, const union A979 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA979() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A979));
		AF('J',union A979,m0,1)
		AF('i',union A979,m1,1)
		AF('l',union A979,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <icB{SCpsi}<Jil>lsdIBiI> */
#pragma pack(push,4)
union A980 { i m0; c m1; B m2; struct A978 m3; union A979 m4; l m5; s m6; d m7; I m8; B m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA980(const union A980 *x, const union A980 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA978(&x->m3, &y->m3) && f_cmpA979(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA980() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A980));
		AF('i',union A980,m0,1)
		AF('c',union A980,m1,1)
		AF('B',union A980,m2,1)
		AFa(union A980,m3,1,A978)
		AFa(union A980,m4,1,A979)
		AF('l',union A980,m5,1)
		AF('s',union A980,m6,1)
		AF('d',union A980,m7,1)
		AF('I',union A980,m8,1)
		AF('B',union A980,m9,1)
		AF('i',union A980,m10,1)
		AF('I',union A980,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {isipjdlsSjlS} */
#pragma pack(push,1)
struct A981 { i m0; s m1; i m2; p m3; j m4; d m5; l m6; s m7; S m8; j m9; l m10; S m11; };
#pragma pack(pop)
int f_cmpA981(const struct A981 *x, const struct A981 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA981() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A981));
		AF('i',struct A981,m0,1)
		AF('s',struct A981,m1,1)
		AF('i',struct A981,m2,1)
		AF('p',struct A981,m3,1)
		AF('j',struct A981,m4,1)
		AF('d',struct A981,m5,1)
		AF('l',struct A981,m6,1)
		AF('s',struct A981,m7,1)
		AF('S',struct A981,m8,1)
		AF('j',struct A981,m9,1)
		AF('l',struct A981,m10,1)
		AF('S',struct A981,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjdci} */
#pragma pack(push,4)
struct A982 { s m0; j m1; d m2; c m3; i m4; };
#pragma pack(pop)
int f_cmpA982(const struct A982 *x, const struct A982 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA982() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A982));
		AF('s',struct A982,m0,1)
		AF('j',struct A982,m1,1)
		AF('d',struct A982,m2,1)
		AF('c',struct A982,m3,1)
		AF('i',struct A982,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BpfscIcLdCLd} */
#pragma pack(push,4)
struct A983 { B m0; p m1; f m2; s m3; c m4; I m5; c m6; L m7; d m8; C m9; L m10; d m11; };
#pragma pack(pop)
int f_cmpA983(const struct A983 *x, const struct A983 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA983() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A983));
		AF('B',struct A983,m0,1)
		AF('p',struct A983,m1,1)
		AF('f',struct A983,m2,1)
		AF('s',struct A983,m3,1)
		AF('c',struct A983,m4,1)
		AF('I',struct A983,m5,1)
		AF('c',struct A983,m6,1)
		AF('L',struct A983,m7,1)
		AF('d',struct A983,m8,1)
		AF('C',struct A983,m9,1)
		AF('L',struct A983,m10,1)
		AF('d',struct A983,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f{BpfscIcLdCLd}c> */
#pragma pack(push,4)
union A984 { f m0; struct A983 m1; c m2; };
#pragma pack(pop)
int f_cmpA984(const union A984 *x, const union A984 *y) { return x->m0 == y->m0 && f_cmpA983(&x->m1, &y->m1) && x->m2 == y->m2; };
DCaggr* f_touchA984() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A984));
		AF('f',union A984,m0,1)
		AFa(union A984,m1,1,A983)
		AF('c',union A984,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBpCspifsjlf> */
#pragma pack(push,4)
union A985 { p m0; B m1; p m2; C m3; s m4; p m5; i m6; f m7; s m8; j m9; l m10; f m11; };
#pragma pack(pop)
int f_cmpA985(const union A985 *x, const union A985 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA985() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A985));
		AF('p',union A985,m0,1)
		AF('B',union A985,m1,1)
		AF('p',union A985,m2,1)
		AF('C',union A985,m3,1)
		AF('s',union A985,m4,1)
		AF('p',union A985,m5,1)
		AF('i',union A985,m6,1)
		AF('f',union A985,m7,1)
		AF('s',union A985,m8,1)
		AF('j',union A985,m9,1)
		AF('l',union A985,m10,1)
		AF('f',union A985,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pfiiCdBj<pBpCspifsjlf>jfJ} */
#pragma pack(push,1)
struct A986 { p m0; f m1; i m2; i m3; C m4; d m5; B m6; j m7; union A985 m8; j m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA986(const struct A986 *x, const struct A986 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA985(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA986() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A986));
		AF('p',struct A986,m0,1)
		AF('f',struct A986,m1,1)
		AF('i',struct A986,m2,1)
		AF('i',struct A986,m3,1)
		AF('C',struct A986,m4,1)
		AF('d',struct A986,m5,1)
		AF('B',struct A986,m6,1)
		AF('j',struct A986,m7,1)
		AFa(struct A986,m8,1,A985)
		AF('j',struct A986,m9,1)
		AF('f',struct A986,m10,1)
		AF('J',struct A986,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CcLCfpCj} */
#pragma pack(push,8)
struct A987 { C m0; c m1; L m2; C m3; f m4; p m5; C m6; j m7; };
#pragma pack(pop)
int f_cmpA987(const struct A987 *x, const struct A987 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA987() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A987));
		AF('C',struct A987,m0,1)
		AF('c',struct A987,m1,1)
		AF('L',struct A987,m2,1)
		AF('C',struct A987,m3,1)
		AF('f',struct A987,m4,1)
		AF('p',struct A987,m5,1)
		AF('C',struct A987,m6,1)
		AF('j',struct A987,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {llfffsddlcjf} */
#pragma pack(push,4)
struct A988 { l m0; l m1; f m2; f m3; f m4; s m5; d m6; d m7; l m8; c m9; j m10; f m11; };
#pragma pack(pop)
int f_cmpA988(const struct A988 *x, const struct A988 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA988() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A988));
		AF('l',struct A988,m0,1)
		AF('l',struct A988,m1,1)
		AF('f',struct A988,m2,1)
		AF('f',struct A988,m3,1)
		AF('f',struct A988,m4,1)
		AF('s',struct A988,m5,1)
		AF('d',struct A988,m6,1)
		AF('d',struct A988,m7,1)
		AF('l',struct A988,m8,1)
		AF('c',struct A988,m9,1)
		AF('j',struct A988,m10,1)
		AF('f',struct A988,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp[7]s} */
#pragma pack(push,2)
struct A989 { S m0; p m1[7]; s m2; };
#pragma pack(pop)
int f_cmpA989(const struct A989 *x, const struct A989 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m2 == y->m2; };
DCaggr* f_touchA989() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A989));
		AF('S',struct A989,m0,1)
		AF('p',struct A989,m1,7)
		AF('s',struct A989,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cSCJJcSSjjiJ> */
#pragma pack(push,2)
union A990 { c m0; S m1; C m2; J m3; J m4; c m5; S m6; S m7; j m8; j m9; i m10; J m11; };
#pragma pack(pop)
int f_cmpA990(const union A990 *x, const union A990 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA990() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A990));
		AF('c',union A990,m0,1)
		AF('S',union A990,m1,1)
		AF('C',union A990,m2,1)
		AF('J',union A990,m3,1)
		AF('J',union A990,m4,1)
		AF('c',union A990,m5,1)
		AF('S',union A990,m6,1)
		AF('S',union A990,m7,1)
		AF('j',union A990,m8,1)
		AF('j',union A990,m9,1)
		AF('i',union A990,m10,1)
		AF('J',union A990,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ifcBjsdcCsjj} */
#pragma pack(push,4)
struct A991 { i m0; f m1; c m2; B m3; j m4; s m5; d m6; c m7; C m8; s m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA991(const struct A991 *x, const struct A991 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA991() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A991));
		AF('i',struct A991,m0,1)
		AF('f',struct A991,m1,1)
		AF('c',struct A991,m2,1)
		AF('B',struct A991,m3,1)
		AF('j',struct A991,m4,1)
		AF('s',struct A991,m5,1)
		AF('d',struct A991,m6,1)
		AF('c',struct A991,m7,1)
		AF('C',struct A991,m8,1)
		AF('s',struct A991,m9,1)
		AF('j',struct A991,m10,1)
		AF('j',struct A991,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SLfCsLSIISIS} */
#pragma pack(push,8)
struct A992 { S m0; L m1; f m2; C m3; s m4; L m5; S m6; I m7; I m8; S m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA992(const struct A992 *x, const struct A992 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA992() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A992));
		AF('S',struct A992,m0,1)
		AF('L',struct A992,m1,1)
		AF('f',struct A992,m2,1)
		AF('C',struct A992,m3,1)
		AF('s',struct A992,m4,1)
		AF('L',struct A992,m5,1)
		AF('S',struct A992,m6,1)
		AF('I',struct A992,m7,1)
		AF('I',struct A992,m8,1)
		AF('S',struct A992,m9,1)
		AF('I',struct A992,m10,1)
		AF('S',struct A992,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps} */
#pragma pack(push,1)
struct A993 { S m0; S m1; j m2; I m3; struct A989 m4; s m5; j m6; union A990 m7; struct A991 m8; struct A992 m9; p m10; s m11; };
#pragma pack(pop)
int f_cmpA993(const struct A993 *x, const struct A993 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA989(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA990(&x->m7, &y->m7) && f_cmpA991(&x->m8, &y->m8) && f_cmpA992(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA993() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A993));
		AF('S',struct A993,m0,1)
		AF('S',struct A993,m1,1)
		AF('j',struct A993,m2,1)
		AF('I',struct A993,m3,1)
		AFa(struct A993,m4,1,A989)
		AF('s',struct A993,m5,1)
		AF('j',struct A993,m6,1)
		AFa(struct A993,m7,1,A990)
		AFa(struct A993,m8,1,A991)
		AFa(struct A993,m9,1,A992)
		AF('p',struct A993,m10,1)
		AF('s',struct A993,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIjp> */
#pragma pack(push,4)
union A994 { p m0; I m1; j m2; p m3; };
#pragma pack(pop)
int f_cmpA994(const union A994 *x, const union A994 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA994() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A994));
		AF('p',union A994,m0,1)
		AF('I',union A994,m1,1)
		AF('j',union A994,m2,1)
		AF('p',union A994,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BJiidBSciJlI} */
#pragma pack(push,8)
struct A995 { B m0; J m1; i m2; i m3; d m4; B m5; S m6; c m7; i m8; J m9; l m10; I m11; };
#pragma pack(pop)
int f_cmpA995(const struct A995 *x, const struct A995 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA995() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A995));
		AF('B',struct A995,m0,1)
		AF('J',struct A995,m1,1)
		AF('i',struct A995,m2,1)
		AF('i',struct A995,m3,1)
		AF('d',struct A995,m4,1)
		AF('B',struct A995,m5,1)
		AF('S',struct A995,m6,1)
		AF('c',struct A995,m7,1)
		AF('i',struct A995,m8,1)
		AF('J',struct A995,m9,1)
		AF('l',struct A995,m10,1)
		AF('I',struct A995,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{BJiidBSciJlI}fd> */
#pragma pack(push,8)
union A996 { struct A995 m0; f m1; d m2; };
#pragma pack(pop)
int f_cmpA996(const union A996 *x, const union A996 *y) { return f_cmpA995(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA996() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A996));
		AFa(union A996,m0,1,A995)
		AF('f',union A996,m1,1)
		AF('d',union A996,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijjCJl> */
#pragma pack(push,4)
union A997 { i m0; j m1; j m2; C m3; J m4; l m5; };
#pragma pack(pop)
int f_cmpA997(const union A997 *x, const union A997 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA997() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A997));
		AF('i',union A997,m0,1)
		AF('j',union A997,m1,1)
		AF('j',union A997,m2,1)
		AF('C',union A997,m3,1)
		AF('J',union A997,m4,1)
		AF('l',union A997,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L<ijjCJl>i[7]pcS} */
#pragma pack(push,4)
struct A998 { L m0; union A997 m1; i m2[7]; p m3; c m4; S m5; };
#pragma pack(pop)
int f_cmpA998(const struct A998 *x, const struct A998 *y) { return x->m0 == y->m0 && f_cmpA997(&x->m1, &y->m1) && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA998() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A998));
		AF('L',struct A998,m0,1)
		AFa(struct A998,m1,1,A997)
		AF('i',struct A998,m2,7)
		AF('p',struct A998,m3,1)
		AF('c',struct A998,m4,1)
		AF('S',struct A998,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<{BJiidBSciJlI}fd>fLI[8]Sp{L<ijjCJl>i[7]pcS}cIBLC} */
#pragma pack(push,8)
struct A999 { union A996 m0; f m1; L m2; I m3[8]; S m4; p m5; struct A998 m6; c m7; I m8; B m9; L m10; C m11; };
#pragma pack(pop)
int f_cmpA999(const struct A999 *x, const struct A999 *y) { return f_cmpA996(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA998(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA999() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A999));
		AFa(struct A999,m0,1,A996)
		AF('f',struct A999,m1,1)
		AF('L',struct A999,m2,1)
		AF('I',struct A999,m3,8)
		AF('S',struct A999,m4,1)
		AF('p',struct A999,m5,1)
		AFa(struct A999,m6,1,A998)
		AF('c',struct A999,m7,1)
		AF('I',struct A999,m8,1)
		AF('B',struct A999,m9,1)
		AF('L',struct A999,m10,1)
		AF('C',struct A999,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fscfSBc[8]> */
#pragma pack(push,8)
union A1000 { f m0; s m1; c m2; f m3; S m4; B m5; c m6[8]; };
#pragma pack(pop)
int f_cmpA1000(const union A1000 *x, const union A1000 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7]; };
DCaggr* f_touchA1000() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1000));
		AF('f',union A1000,m0,1)
		AF('s',union A1000,m1,1)
		AF('c',union A1000,m2,1)
		AF('f',union A1000,m3,1)
		AF('S',union A1000,m4,1)
		AF('B',union A1000,m5,1)
		AF('c',union A1000,m6,8)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cd} */
#pragma pack(push,2)
struct A1001 { C m0; d m1; };
#pragma pack(pop)
int f_cmpA1001(const struct A1001 *x, const struct A1001 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1001() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1001));
		AF('C',struct A1001,m0,1)
		AF('d',struct A1001,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SiffijcIiIs> */
#pragma pack(push,4)
union A1002 { S m0; i m1; f m2; f m3; i m4; j m5; c m6; I m7; i m8; I m9; s m10; };
#pragma pack(pop)
int f_cmpA1002(const union A1002 *x, const union A1002 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1002() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1002));
		AF('S',union A1002,m0,1)
		AF('i',union A1002,m1,1)
		AF('f',union A1002,m2,1)
		AF('f',union A1002,m3,1)
		AF('i',union A1002,m4,1)
		AF('j',union A1002,m5,1)
		AF('c',union A1002,m6,1)
		AF('I',union A1002,m7,1)
		AF('i',union A1002,m8,1)
		AF('I',union A1002,m9,1)
		AF('s',union A1002,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cc<SiffijcIiIs>Ls[3]cCjii{p}L> */
#pragma pack(push,8)
union A1003 { C m0; c m1; union A1002 m2; L m3; s m4[3]; c m5; C m6; j m7; i m8; i m9; struct A231 m10; L m11; };
#pragma pack(pop)
int f_cmpA1003(const union A1003 *x, const union A1003 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1002(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA231(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1003() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1003));
		AF('C',union A1003,m0,1)
		AF('c',union A1003,m1,1)
		AFa(union A1003,m2,1,A1002)
		AF('L',union A1003,m3,1)
		AF('s',union A1003,m4,3)
		AF('c',union A1003,m5,1)
		AF('C',union A1003,m6,1)
		AF('j',union A1003,m7,1)
		AF('i',union A1003,m8,1)
		AF('i',union A1003,m9,1)
		AFa(union A1003,m10,1,A231)
		AF('L',union A1003,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsI{Cd}LpSdI<Cc<SiffijcIiIs>Ls[3]cCjii{p}L>di} */
#pragma pack(push,1)
struct A1004 { l m0; s m1; I m2; struct A1001 m3; L m4; p m5; S m6; d m7; I m8; union A1003 m9; d m10; i m11; };
#pragma pack(pop)
int f_cmpA1004(const struct A1004 *x, const struct A1004 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1001(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1003(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1004() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1004));
		AF('l',struct A1004,m0,1)
		AF('s',struct A1004,m1,1)
		AF('I',struct A1004,m2,1)
		AFa(struct A1004,m3,1,A1001)
		AF('L',struct A1004,m4,1)
		AF('p',struct A1004,m5,1)
		AF('S',struct A1004,m6,1)
		AF('d',struct A1004,m7,1)
		AF('I',struct A1004,m8,1)
		AFa(struct A1004,m9,1,A1003)
		AF('d',struct A1004,m10,1)
		AF('i',struct A1004,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fd[5]SJpiSILpBp> */
#pragma pack(push,4)
union A1005 { f m0; d m1[5]; S m2; J m3; p m4; i m5; S m6; I m7; L m8; p m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA1005(const union A1005 *x, const union A1005 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1005() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1005));
		AF('f',union A1005,m0,1)
		AF('d',union A1005,m1,5)
		AF('S',union A1005,m2,1)
		AF('J',union A1005,m3,1)
		AF('p',union A1005,m4,1)
		AF('i',union A1005,m5,1)
		AF('S',union A1005,m6,1)
		AF('I',union A1005,m7,1)
		AF('L',union A1005,m8,1)
		AF('p',union A1005,m9,1)
		AF('B',union A1005,m10,1)
		AF('p',union A1005,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JIJIcJcJ<fd[5]SJpiSILpBp>JLj} */
#pragma pack(push,4)
struct A1006 { J m0; I m1; J m2; I m3; c m4; J m5; c m6; J m7; union A1005 m8; J m9; L m10; j m11; };
#pragma pack(pop)
int f_cmpA1006(const struct A1006 *x, const struct A1006 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1005(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1006() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1006));
		AF('J',struct A1006,m0,1)
		AF('I',struct A1006,m1,1)
		AF('J',struct A1006,m2,1)
		AF('I',struct A1006,m3,1)
		AF('c',struct A1006,m4,1)
		AF('J',struct A1006,m5,1)
		AF('c',struct A1006,m6,1)
		AF('J',struct A1006,m7,1)
		AFa(struct A1006,m8,1,A1005)
		AF('J',struct A1006,m9,1)
		AF('L',struct A1006,m10,1)
		AF('j',struct A1006,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ddCiclSBBCcs} */
#pragma pack(push,4)
struct A1007 { d m0; d m1; C m2; i m3; c m4; l m5; S m6; B m7; B m8; C m9; c m10; s m11; };
#pragma pack(pop)
int f_cmpA1007(const struct A1007 *x, const struct A1007 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1007() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1007));
		AF('d',struct A1007,m0,1)
		AF('d',struct A1007,m1,1)
		AF('C',struct A1007,m2,1)
		AF('i',struct A1007,m3,1)
		AF('c',struct A1007,m4,1)
		AF('l',struct A1007,m5,1)
		AF('S',struct A1007,m6,1)
		AF('B',struct A1007,m7,1)
		AF('B',struct A1007,m8,1)
		AF('C',struct A1007,m9,1)
		AF('c',struct A1007,m10,1)
		AF('s',struct A1007,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBjL{ddCiclSBBCcs}sCjsCfL> */
#pragma pack(push,4)
union A1008 { B m0; B m1; j m2; L m3; struct A1007 m4; s m5; C m6; j m7; s m8; C m9; f m10; L m11; };
#pragma pack(pop)
int f_cmpA1008(const union A1008 *x, const union A1008 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1007(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1008() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1008));
		AF('B',union A1008,m0,1)
		AF('B',union A1008,m1,1)
		AF('j',union A1008,m2,1)
		AF('L',union A1008,m3,1)
		AFa(union A1008,m4,1,A1007)
		AF('s',union A1008,m5,1)
		AF('C',union A1008,m6,1)
		AF('j',union A1008,m7,1)
		AF('s',union A1008,m8,1)
		AF('C',union A1008,m9,1)
		AF('f',union A1008,m10,1)
		AF('L',union A1008,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjfL} */
#pragma pack(push,2)
struct A1009 { B m0; j m1; f m2; L m3; };
#pragma pack(pop)
int f_cmpA1009(const struct A1009 *x, const struct A1009 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1009() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1009));
		AF('B',struct A1009,m0,1)
		AF('j',struct A1009,m1,1)
		AF('f',struct A1009,m2,1)
		AF('L',struct A1009,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jjl} */
#pragma pack(push,2)
struct A1010 { J m0; j m1; l m2; };
#pragma pack(pop)
int f_cmpA1010(const struct A1010 *x, const struct A1010 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1010() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1010));
		AF('J',struct A1010,m0,1)
		AF('j',struct A1010,m1,1)
		AF('l',struct A1010,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SpidpfIjJidd> */
#pragma pack(push,2)
union A1011 { S m0; p m1; i m2; d m3; p m4; f m5; I m6; j m7; J m8; i m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA1011(const union A1011 *x, const union A1011 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1011() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1011));
		AF('S',union A1011,m0,1)
		AF('p',union A1011,m1,1)
		AF('i',union A1011,m2,1)
		AF('d',union A1011,m3,1)
		AF('p',union A1011,m4,1)
		AF('f',union A1011,m5,1)
		AF('I',union A1011,m6,1)
		AF('j',union A1011,m7,1)
		AF('J',union A1011,m8,1)
		AF('i',union A1011,m9,1)
		AF('d',union A1011,m10,1)
		AF('d',union A1011,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bjdljps> */
#pragma pack(push,2)
union A1012 { B m0; j m1; d m2; l m3; j m4; p m5; s m6; };
#pragma pack(pop)
int f_cmpA1012(const union A1012 *x, const union A1012 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1012() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1012));
		AF('B',union A1012,m0,1)
		AF('j',union A1012,m1,1)
		AF('d',union A1012,m2,1)
		AF('l',union A1012,m3,1)
		AF('j',union A1012,m4,1)
		AF('p',union A1012,m5,1)
		AF('s',union A1012,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLdliddddJI> */
#pragma pack(push,8)
union A1013 { s m0; L m1; d m2; l m3; i m4; d m5; d m6; d m7; d m8; J m9; I m10; };
#pragma pack(pop)
int f_cmpA1013(const union A1013 *x, const union A1013 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1013() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1013));
		AF('s',union A1013,m0,1)
		AF('L',union A1013,m1,1)
		AF('d',union A1013,m2,1)
		AF('l',union A1013,m3,1)
		AF('i',union A1013,m4,1)
		AF('d',union A1013,m5,1)
		AF('d',union A1013,m6,1)
		AF('d',union A1013,m7,1)
		AF('d',union A1013,m8,1)
		AF('J',union A1013,m9,1)
		AF('I',union A1013,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i<sLdliddddJI>dLSffI> */
#pragma pack(push,8)
union A1014 { i m0; union A1013 m1; d m2; L m3; S m4; f m5; f m6; I m7; };
#pragma pack(pop)
int f_cmpA1014(const union A1014 *x, const union A1014 *y) { return x->m0 == y->m0 && f_cmpA1013(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1014() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1014));
		AF('i',union A1014,m0,1)
		AFa(union A1014,m1,1,A1013)
		AF('d',union A1014,m2,1)
		AF('L',union A1014,m3,1)
		AF('S',union A1014,m4,1)
		AF('f',union A1014,m5,1)
		AF('f',union A1014,m6,1)
		AF('I',union A1014,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JJ} */
#pragma pack(push,8)
struct A1015 { J m0; J m1; };
#pragma pack(pop)
int f_cmpA1015(const struct A1015 *x, const struct A1015 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1015() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1015));
		AF('J',struct A1015,m0,1)
		AF('J',struct A1015,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jLcjdCCcjpCS} */
#pragma pack(push,4)
struct A1016 { j m0; L m1; c m2; j m3; d m4; C m5; C m6; c m7; j m8; p m9; C m10; S m11; };
#pragma pack(pop)
int f_cmpA1016(const struct A1016 *x, const struct A1016 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1016() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1016));
		AF('j',struct A1016,m0,1)
		AF('L',struct A1016,m1,1)
		AF('c',struct A1016,m2,1)
		AF('j',struct A1016,m3,1)
		AF('d',struct A1016,m4,1)
		AF('C',struct A1016,m5,1)
		AF('C',struct A1016,m6,1)
		AF('c',struct A1016,m7,1)
		AF('j',struct A1016,m8,1)
		AF('p',struct A1016,m9,1)
		AF('C',struct A1016,m10,1)
		AF('S',struct A1016,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JfdJIijddBCB> */
#pragma pack(push,8)
union A1017 { J m0; f m1; d m2; J m3; I m4; i m5; j m6; d m7; d m8; B m9; C m10; B m11; };
#pragma pack(pop)
int f_cmpA1017(const union A1017 *x, const union A1017 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1017() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1017));
		AF('J',union A1017,m0,1)
		AF('f',union A1017,m1,1)
		AF('d',union A1017,m2,1)
		AF('J',union A1017,m3,1)
		AF('I',union A1017,m4,1)
		AF('i',union A1017,m5,1)
		AF('j',union A1017,m6,1)
		AF('d',union A1017,m7,1)
		AF('d',union A1017,m8,1)
		AF('B',union A1017,m9,1)
		AF('C',union A1017,m10,1)
		AF('B',union A1017,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{JJ}dII{jLcjdCCcjpCS}c<JfdJIijddBCB>CBdLJ} */
#pragma pack(push,4)
struct A1018 { struct A1015 m0; d m1; I m2; I m3; struct A1016 m4; c m5; union A1017 m6; C m7; B m8; d m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA1018(const struct A1018 *x, const struct A1018 *y) { return f_cmpA1015(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1016(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1017(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1018() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1018));
		AFa(struct A1018,m0,1,A1015)
		AF('d',struct A1018,m1,1)
		AF('I',struct A1018,m2,1)
		AF('I',struct A1018,m3,1)
		AFa(struct A1018,m4,1,A1016)
		AF('c',struct A1018,m5,1)
		AFa(struct A1018,m6,1,A1017)
		AF('C',struct A1018,m7,1)
		AF('B',struct A1018,m8,1)
		AF('d',struct A1018,m9,1)
		AF('L',struct A1018,m10,1)
		AF('J',struct A1018,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LBcjJ} */
#pragma pack(push,1)
struct A1019 { L m0; B m1; c m2; j m3; J m4; };
#pragma pack(pop)
int f_cmpA1019(const struct A1019 *x, const struct A1019 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1019() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1019));
		AF('L',struct A1019,m0,1)
		AF('B',struct A1019,m1,1)
		AF('c',struct A1019,m2,1)
		AF('j',struct A1019,m3,1)
		AF('J',struct A1019,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sL{{JJ}dII{jLcjdCCcjpCS}c<JfdJIijddBCB>CBdLJ}Jd{LBcjJ}SSIjfJ} */
#pragma pack(push,2)
struct A1020 { s m0; L m1; struct A1018 m2; J m3; d m4; struct A1019 m5; S m6; S m7; I m8; j m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA1020(const struct A1020 *x, const struct A1020 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1018(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1019(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1020() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1020));
		AF('s',struct A1020,m0,1)
		AF('L',struct A1020,m1,1)
		AFa(struct A1020,m2,1,A1018)
		AF('J',struct A1020,m3,1)
		AF('d',struct A1020,m4,1)
		AFa(struct A1020,m5,1,A1019)
		AF('S',struct A1020,m6,1)
		AF('S',struct A1020,m7,1)
		AF('I',struct A1020,m8,1)
		AF('j',struct A1020,m9,1)
		AF('f',struct A1020,m10,1)
		AF('J',struct A1020,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcfdCSiLIf[1]BJ} */
#pragma pack(push,8)
struct A1021 { l m0; c m1; f m2; d m3; C m4; S m5; i m6; L m7; I m8; f m9[1]; B m10; J m11; };
#pragma pack(pop)
int f_cmpA1021(const struct A1021 *x, const struct A1021 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1021() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1021));
		AF('l',struct A1021,m0,1)
		AF('c',struct A1021,m1,1)
		AF('f',struct A1021,m2,1)
		AF('d',struct A1021,m3,1)
		AF('C',struct A1021,m4,1)
		AF('S',struct A1021,m5,1)
		AF('i',struct A1021,m6,1)
		AF('L',struct A1021,m7,1)
		AF('I',struct A1021,m8,1)
		AF('f',struct A1021,m9,1)
		AF('B',struct A1021,m10,1)
		AF('J',struct A1021,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jpLLSIdsJpii> */
#pragma pack(push,4)
union A1022 { j m0; p m1; L m2; L m3; S m4; I m5; d m6; s m7; J m8; p m9; i m10; i m11; };
#pragma pack(pop)
int f_cmpA1022(const union A1022 *x, const union A1022 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1022() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1022));
		AF('j',union A1022,m0,1)
		AF('p',union A1022,m1,1)
		AF('L',union A1022,m2,1)
		AF('L',union A1022,m3,1)
		AF('S',union A1022,m4,1)
		AF('I',union A1022,m5,1)
		AF('d',union A1022,m6,1)
		AF('s',union A1022,m7,1)
		AF('J',union A1022,m8,1)
		AF('p',union A1022,m9,1)
		AF('i',union A1022,m10,1)
		AF('i',union A1022,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lf} */
#pragma pack(push,2)
struct A1023 { L m0; f m1; };
#pragma pack(pop)
int f_cmpA1023(const struct A1023 *x, const struct A1023 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1023() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1023));
		AF('L',struct A1023,m0,1)
		AF('f',struct A1023,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp[11]} */
#pragma pack(push,1)
struct A1024 { S m0; p m1[11]; };
#pragma pack(pop)
int f_cmpA1024(const struct A1024 *x, const struct A1024 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10]; };
DCaggr* f_touchA1024() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1024));
		AF('S',struct A1024,m0,1)
		AF('p',struct A1024,m1,11)
		dcCloseAggr(a);
	}
	return a;
};
/* {{Sp[11]}} */
#pragma pack(push,4)
struct A1025 { struct A1024 m0; };
#pragma pack(pop)
int f_cmpA1025(const struct A1025 *x, const struct A1025 *y) { return f_cmpA1024(&x->m0, &y->m0); };
DCaggr* f_touchA1025() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A1025));
		AFa(struct A1025,m0,1,A1024)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bpifl{s}lIcfJL> */
#pragma pack(push,2)
union A1026 { B m0; p m1; i m2; f m3; l m4; struct A457 m5; l m6; I m7; c m8; f m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA1026(const union A1026 *x, const union A1026 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA457(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1026() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1026));
		AF('B',union A1026,m0,1)
		AF('p',union A1026,m1,1)
		AF('i',union A1026,m2,1)
		AF('f',union A1026,m3,1)
		AF('l',union A1026,m4,1)
		AFa(union A1026,m5,1,A457)
		AF('l',union A1026,m6,1)
		AF('I',union A1026,m7,1)
		AF('c',union A1026,m8,1)
		AF('f',union A1026,m9,1)
		AF('J',union A1026,m10,1)
		AF('L',union A1026,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j} */
#pragma pack(push,8)
struct A1027 { l m0; f m1; f m2; struct A1025 m3; j m4; c m5; d m6; i m7; C m8; union A1026 m9; c m10[13]; j m11; };
#pragma pack(pop)
int f_cmpA1027(const struct A1027 *x, const struct A1027 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1025(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1026(&x->m9, &y->m9) && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m10[11] == y->m10[11] && x->m10[12] == y->m10[12] && x->m11 == y->m11; };
DCaggr* f_touchA1027() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1027));
		AF('l',struct A1027,m0,1)
		AF('f',struct A1027,m1,1)
		AF('f',struct A1027,m2,1)
		AFa(struct A1027,m3,1,A1025)
		AF('j',struct A1027,m4,1)
		AF('c',struct A1027,m5,1)
		AF('d',struct A1027,m6,1)
		AF('i',struct A1027,m7,1)
		AF('C',struct A1027,m8,1)
		AFa(struct A1027,m9,1,A1026)
		AF('c',struct A1027,m10,13)
		AF('j',struct A1027,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {li} */
#pragma pack(push,2)
struct A1028 { l m0; i m1; };
#pragma pack(pop)
int f_cmpA1028(const struct A1028 *x, const struct A1028 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1028() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1028));
		AF('l',struct A1028,m0,1)
		AF('i',struct A1028,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLlsiBljIJS[8]c> */
#pragma pack(push,4)
union A1029 { i m0; L m1; l m2; s m3; i m4; B m5; l m6; j m7; I m8; J m9; S m10[8]; c m11; };
#pragma pack(pop)
int f_cmpA1029(const union A1029 *x, const union A1029 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m11 == y->m11; };
DCaggr* f_touchA1029() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1029));
		AF('i',union A1029,m0,1)
		AF('L',union A1029,m1,1)
		AF('l',union A1029,m2,1)
		AF('s',union A1029,m3,1)
		AF('i',union A1029,m4,1)
		AF('B',union A1029,m5,1)
		AF('l',union A1029,m6,1)
		AF('j',union A1029,m7,1)
		AF('I',union A1029,m8,1)
		AF('J',union A1029,m9,1)
		AF('S',union A1029,m10,8)
		AF('c',union A1029,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJCd{li}<iLlsiBljIJS[8]c>BpJcpL> */
#pragma pack(push,8)
union A1030 { f m0; J m1; C m2; d m3; struct A1028 m4; union A1029 m5; B m6; p m7; J m8; c m9; p m10; L m11; };
#pragma pack(pop)
int f_cmpA1030(const union A1030 *x, const union A1030 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1028(&x->m4, &y->m4) && f_cmpA1029(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1030() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1030));
		AF('f',union A1030,m0,1)
		AF('J',union A1030,m1,1)
		AF('C',union A1030,m2,1)
		AF('d',union A1030,m3,1)
		AFa(union A1030,m4,1,A1028)
		AFa(union A1030,m5,1,A1029)
		AF('B',union A1030,m6,1)
		AF('p',union A1030,m7,1)
		AF('J',union A1030,m8,1)
		AF('c',union A1030,m9,1)
		AF('p',union A1030,m10,1)
		AF('L',union A1030,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI> */
#pragma pack(push,2)
union A1031 { C m0; L m1; s m2; union A1030 m3; d m4; p m5; C m6; f m7; I m8; };
#pragma pack(pop)
int f_cmpA1031(const union A1031 *x, const union A1031 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1030(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1031() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1031));
		AF('C',union A1031,m0,1)
		AF('L',union A1031,m1,1)
		AF('s',union A1031,m2,1)
		AFa(union A1031,m3,1,A1030)
		AF('d',union A1031,m4,1)
		AF('p',union A1031,m5,1)
		AF('C',union A1031,m6,1)
		AF('f',union A1031,m7,1)
		AF('I',union A1031,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jIScpBCCdIJ} */
#pragma pack(push,8)
struct A1032 { j m0; I m1; S m2; c m3; p m4; B m5; C m6; C m7; d m8; I m9; J m10; };
#pragma pack(pop)
int f_cmpA1032(const struct A1032 *x, const struct A1032 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1032() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1032));
		AF('j',struct A1032,m0,1)
		AF('I',struct A1032,m1,1)
		AF('S',struct A1032,m2,1)
		AF('c',struct A1032,m3,1)
		AF('p',struct A1032,m4,1)
		AF('B',struct A1032,m5,1)
		AF('C',struct A1032,m6,1)
		AF('C',struct A1032,m7,1)
		AF('d',struct A1032,m8,1)
		AF('I',struct A1032,m9,1)
		AF('J',struct A1032,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CjjBClii> */
#pragma pack(push,4)
union A1033 { C m0; j m1; j m2; B m3; C m4; l m5; i m6; i m7; };
#pragma pack(pop)
int f_cmpA1033(const union A1033 *x, const union A1033 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1033() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1033));
		AF('C',union A1033,m0,1)
		AF('j',union A1033,m1,1)
		AF('j',union A1033,m2,1)
		AF('B',union A1033,m3,1)
		AF('C',union A1033,m4,1)
		AF('l',union A1033,m5,1)
		AF('i',union A1033,m6,1)
		AF('i',union A1033,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LjciSBjJfp<CjjBClii>J> */
#pragma pack(push,1)
union A1034 { L m0; j m1; c m2; i m3; S m4; B m5; j m6; J m7; f m8; p m9; union A1033 m10; J m11; };
#pragma pack(pop)
int f_cmpA1034(const union A1034 *x, const union A1034 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1033(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1034() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1034));
		AF('L',union A1034,m0,1)
		AF('j',union A1034,m1,1)
		AF('c',union A1034,m2,1)
		AF('i',union A1034,m3,1)
		AF('S',union A1034,m4,1)
		AF('B',union A1034,m5,1)
		AF('j',union A1034,m6,1)
		AF('J',union A1034,m7,1)
		AF('f',union A1034,m8,1)
		AF('p',union A1034,m9,1)
		AFa(union A1034,m10,1,A1033)
		AF('J',union A1034,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BssijcJdsjid> */
#pragma pack(push,1)
union A1035 { B m0; s m1; s m2; i m3; j m4; c m5; J m6; d m7; s m8; j m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA1035(const union A1035 *x, const union A1035 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1035() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1035));
		AF('B',union A1035,m0,1)
		AF('s',union A1035,m1,1)
		AF('s',union A1035,m2,1)
		AF('i',union A1035,m3,1)
		AF('j',union A1035,m4,1)
		AF('c',union A1035,m5,1)
		AF('J',union A1035,m6,1)
		AF('d',union A1035,m7,1)
		AF('s',union A1035,m8,1)
		AF('j',union A1035,m9,1)
		AF('i',union A1035,m10,1)
		AF('d',union A1035,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJd<BssijcJdsjid>dSCcIfcl> */
#pragma pack(push,2)
union A1036 { f m0; J m1; d m2; union A1035 m3; d m4; S m5; C m6; c m7; I m8; f m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA1036(const union A1036 *x, const union A1036 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1035(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1036() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1036));
		AF('f',union A1036,m0,1)
		AF('J',union A1036,m1,1)
		AF('d',union A1036,m2,1)
		AFa(union A1036,m3,1,A1035)
		AF('d',union A1036,m4,1)
		AF('S',union A1036,m5,1)
		AF('C',union A1036,m6,1)
		AF('c',union A1036,m7,1)
		AF('I',union A1036,m8,1)
		AF('f',union A1036,m9,1)
		AF('c',union A1036,m10,1)
		AF('l',union A1036,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is> */
#pragma pack(push,4)
union A1037 { C m0; j m1; J m2; union A1034 m3; C m4; B m5; union A1036 m6; I m7; s m8; };
#pragma pack(pop)
int f_cmpA1037(const union A1037 *x, const union A1037 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1034(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1036(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1037() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1037));
		AF('C',union A1037,m0,1)
		AF('j',union A1037,m1,1)
		AF('J',union A1037,m2,1)
		AFa(union A1037,m3,1,A1034)
		AF('C',union A1037,m4,1)
		AF('B',union A1037,m5,1)
		AFa(union A1037,m6,1,A1036)
		AF('I',union A1037,m7,1)
		AF('s',union A1037,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IislccIiIiIl} */
#pragma pack(push,4)
struct A1038 { I m0; i m1; s m2; l m3; c m4; c m5; I m6; i m7; I m8; i m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA1038(const struct A1038 *x, const struct A1038 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1038() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1038));
		AF('I',struct A1038,m0,1)
		AF('i',struct A1038,m1,1)
		AF('s',struct A1038,m2,1)
		AF('l',struct A1038,m3,1)
		AF('c',struct A1038,m4,1)
		AF('c',struct A1038,m5,1)
		AF('I',struct A1038,m6,1)
		AF('i',struct A1038,m7,1)
		AF('I',struct A1038,m8,1)
		AF('i',struct A1038,m9,1)
		AF('I',struct A1038,m10,1)
		AF('l',struct A1038,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f[15]f> */
#pragma pack(push,1)
union A1039 { f m0[15]; f m1; };
#pragma pack(pop)
int f_cmpA1039(const union A1039 *x, const union A1039 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && x->m1 == y->m1; };
DCaggr* f_touchA1039() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1039));
		AF('f',union A1039,m0,15)
		AF('f',union A1039,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i{IislccIiIiIl}Cd<f[15]f>fIji} */
#pragma pack(push,8)
struct A1040 { i m0; struct A1038 m1; C m2; d m3; union A1039 m4; f m5; I m6; j m7; i m8; };
#pragma pack(pop)
int f_cmpA1040(const struct A1040 *x, const struct A1040 *y) { return x->m0 == y->m0 && f_cmpA1038(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1039(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1040() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1040));
		AF('i',struct A1040,m0,1)
		AFa(struct A1040,m1,1,A1038)
		AF('C',struct A1040,m2,1)
		AF('d',struct A1040,m3,1)
		AFa(struct A1040,m4,1,A1039)
		AF('f',struct A1040,m5,1)
		AF('I',struct A1040,m6,1)
		AF('j',struct A1040,m7,1)
		AF('i',struct A1040,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fplpclLIiJLd> */
#pragma pack(push,4)
union A1041 { f m0; p m1; l m2; p m3; c m4; l m5; L m6; I m7; i m8; J m9; L m10; d m11; };
#pragma pack(pop)
int f_cmpA1041(const union A1041 *x, const union A1041 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1041() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1041));
		AF('f',union A1041,m0,1)
		AF('p',union A1041,m1,1)
		AF('l',union A1041,m2,1)
		AF('p',union A1041,m3,1)
		AF('c',union A1041,m4,1)
		AF('l',union A1041,m5,1)
		AF('L',union A1041,m6,1)
		AF('I',union A1041,m7,1)
		AF('i',union A1041,m8,1)
		AF('J',union A1041,m9,1)
		AF('L',union A1041,m10,1)
		AF('d',union A1041,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LlI[4]I<B>i<fplpclLIiJLd>IBSBf> */
#pragma pack(push,2)
union A1042 { L m0; l m1; I m2[4]; I m3; union A604 m4; i m5; union A1041 m6; I m7; B m8; S m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA1042(const union A1042 *x, const union A1042 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m3 == y->m3 && f_cmpA604(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1041(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1042() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1042));
		AF('L',union A1042,m0,1)
		AF('l',union A1042,m1,1)
		AF('I',union A1042,m2,4)
		AF('I',union A1042,m3,1)
		AFa(union A1042,m4,1,A604)
		AF('i',union A1042,m5,1)
		AFa(union A1042,m6,1,A1041)
		AF('I',union A1042,m7,1)
		AF('B',union A1042,m8,1)
		AF('S',union A1042,m9,1)
		AF('B',union A1042,m10,1)
		AF('f',union A1042,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSldj} */
#pragma pack(push,2)
struct A1043 { d m0; S m1; l m2; d m3; j m4; };
#pragma pack(pop)
int f_cmpA1043(const struct A1043 *x, const struct A1043 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1043() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1043));
		AF('d',struct A1043,m0,1)
		AF('S',struct A1043,m1,1)
		AF('l',struct A1043,m2,1)
		AF('d',struct A1043,m3,1)
		AF('j',struct A1043,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBdddLBI> */
#pragma pack(push,4)
union A1044 { S m0; B m1; d m2; d m3; d m4; L m5; B m6; I m7; };
#pragma pack(pop)
int f_cmpA1044(const union A1044 *x, const union A1044 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1044() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1044));
		AF('S',union A1044,m0,1)
		AF('B',union A1044,m1,1)
		AF('d',union A1044,m2,1)
		AF('d',union A1044,m3,1)
		AF('d',union A1044,m4,1)
		AF('L',union A1044,m5,1)
		AF('B',union A1044,m6,1)
		AF('I',union A1044,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LpdfcLssLfs> */
#pragma pack(push,1)
union A1045 { L m0; p m1; d m2; f m3; c m4; L m5; s m6; s m7; L m8; f m9; s m10; };
#pragma pack(pop)
int f_cmpA1045(const union A1045 *x, const union A1045 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1045() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1045));
		AF('L',union A1045,m0,1)
		AF('p',union A1045,m1,1)
		AF('d',union A1045,m2,1)
		AF('f',union A1045,m3,1)
		AF('c',union A1045,m4,1)
		AF('L',union A1045,m5,1)
		AF('s',union A1045,m6,1)
		AF('s',union A1045,m7,1)
		AF('L',union A1045,m8,1)
		AF('f',union A1045,m9,1)
		AF('s',union A1045,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ff<SBdddLBI>SIjJ<LpdfcLssLfs>jf<C>L} */
#pragma pack(push,1)
struct A1046 { f m0; f m1; union A1044 m2; S m3; I m4; j m5; J m6; union A1045 m7; j m8; f m9; union A555 m10; L m11; };
#pragma pack(pop)
int f_cmpA1046(const struct A1046 *x, const struct A1046 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1044(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1045(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA555(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1046() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1046));
		AF('f',struct A1046,m0,1)
		AF('f',struct A1046,m1,1)
		AFa(struct A1046,m2,1,A1044)
		AF('S',struct A1046,m3,1)
		AF('I',struct A1046,m4,1)
		AF('j',struct A1046,m5,1)
		AF('J',struct A1046,m6,1)
		AFa(struct A1046,m7,1,A1045)
		AF('j',struct A1046,m8,1)
		AF('f',struct A1046,m9,1)
		AFa(struct A1046,m10,1,A555)
		AF('L',struct A1046,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lIpSjjplsifI} */
#pragma pack(push,4)
struct A1047 { l m0; I m1; p m2; S m3; j m4; j m5; p m6; l m7; s m8; i m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA1047(const struct A1047 *x, const struct A1047 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1047() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1047));
		AF('l',struct A1047,m0,1)
		AF('I',struct A1047,m1,1)
		AF('p',struct A1047,m2,1)
		AF('S',struct A1047,m3,1)
		AF('j',struct A1047,m4,1)
		AF('j',struct A1047,m5,1)
		AF('p',struct A1047,m6,1)
		AF('l',struct A1047,m7,1)
		AF('s',struct A1047,m8,1)
		AF('i',struct A1047,m9,1)
		AF('f',struct A1047,m10,1)
		AF('I',struct A1047,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SslspCBcpScS> */
#pragma pack(push,1)
union A1048 { S m0; s m1; l m2; s m3; p m4; C m5; B m6; c m7; p m8; S m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA1048(const union A1048 *x, const union A1048 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1048() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1048));
		AF('S',union A1048,m0,1)
		AF('s',union A1048,m1,1)
		AF('l',union A1048,m2,1)
		AF('s',union A1048,m3,1)
		AF('p',union A1048,m4,1)
		AF('C',union A1048,m5,1)
		AF('B',union A1048,m6,1)
		AF('c',union A1048,m7,1)
		AF('p',union A1048,m8,1)
		AF('S',union A1048,m9,1)
		AF('c',union A1048,m10,1)
		AF('S',union A1048,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fdCILSCdffJi} */
#pragma pack(push,8)
struct A1049 { f m0; d m1; C m2; I m3; L m4; S m5; C m6; d m7; f m8; f m9; J m10; i m11; };
#pragma pack(pop)
int f_cmpA1049(const struct A1049 *x, const struct A1049 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1049() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1049));
		AF('f',struct A1049,m0,1)
		AF('d',struct A1049,m1,1)
		AF('C',struct A1049,m2,1)
		AF('I',struct A1049,m3,1)
		AF('L',struct A1049,m4,1)
		AF('S',struct A1049,m5,1)
		AF('C',struct A1049,m6,1)
		AF('d',struct A1049,m7,1)
		AF('f',struct A1049,m8,1)
		AF('f',struct A1049,m9,1)
		AF('J',struct A1049,m10,1)
		AF('i',struct A1049,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {piCfIsp{sf}Lf{fdCILSCdffJi}p} */
#pragma pack(push,4)
struct A1050 { p m0; i m1; C m2; f m3; I m4; s m5; p m6; struct A217 m7; L m8; f m9; struct A1049 m10; p m11; };
#pragma pack(pop)
int f_cmpA1050(const struct A1050 *x, const struct A1050 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA217(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1049(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1050() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1050));
		AF('p',struct A1050,m0,1)
		AF('i',struct A1050,m1,1)
		AF('C',struct A1050,m2,1)
		AF('f',struct A1050,m3,1)
		AF('I',struct A1050,m4,1)
		AF('s',struct A1050,m5,1)
		AF('p',struct A1050,m6,1)
		AFa(struct A1050,m7,1,A217)
		AF('L',struct A1050,m8,1)
		AF('f',struct A1050,m9,1)
		AFa(struct A1050,m10,1,A1049)
		AF('p',struct A1050,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf> */
#pragma pack(push,2)
union A1051 { C m0; p m1; i m2; j m3; struct A1050 m4; C m5; C m6; S m7; c m8; B m9; d m10; f m11; };
#pragma pack(pop)
int f_cmpA1051(const union A1051 *x, const union A1051 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1050(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1051() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1051));
		AF('C',union A1051,m0,1)
		AF('p',union A1051,m1,1)
		AF('i',union A1051,m2,1)
		AF('j',union A1051,m3,1)
		AFa(union A1051,m4,1,A1050)
		AF('C',union A1051,m5,1)
		AF('C',union A1051,m6,1)
		AF('S',union A1051,m7,1)
		AF('c',union A1051,m8,1)
		AF('B',union A1051,m9,1)
		AF('d',union A1051,m10,1)
		AF('f',union A1051,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIBsBBJccSJB> */
#pragma pack(push,8)
union A1052 { p m0; I m1; B m2; s m3; B m4; B m5; J m6; c m7; c m8; S m9; J m10; B m11; };
#pragma pack(pop)
int f_cmpA1052(const union A1052 *x, const union A1052 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1052() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1052));
		AF('p',union A1052,m0,1)
		AF('I',union A1052,m1,1)
		AF('B',union A1052,m2,1)
		AF('s',union A1052,m3,1)
		AF('B',union A1052,m4,1)
		AF('B',union A1052,m5,1)
		AF('J',union A1052,m6,1)
		AF('c',union A1052,m7,1)
		AF('c',union A1052,m8,1)
		AF('S',union A1052,m9,1)
		AF('J',union A1052,m10,1)
		AF('B',union A1052,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<pIBsBBJccSJB>CISjiJ> */
#pragma pack(push,2)
union A1053 { union A1052 m0; C m1; I m2; S m3; j m4; i m5; J m6; };
#pragma pack(pop)
int f_cmpA1053(const union A1053 *x, const union A1053 *y) { return f_cmpA1052(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1053() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1053));
		AFa(union A1053,m0,1,A1052)
		AF('C',union A1053,m1,1)
		AF('I',union A1053,m2,1)
		AF('S',union A1053,m3,1)
		AF('j',union A1053,m4,1)
		AF('i',union A1053,m5,1)
		AF('J',union A1053,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBcdfjJ[5]dcflp} */
#pragma pack(push,4)
struct A1054 { S m0; B m1; c m2; d m3; f m4; j m5; J m6[5]; d m7; c m8; f m9; l m10; p m11; };
#pragma pack(pop)
int f_cmpA1054(const struct A1054 *x, const struct A1054 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1054() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1054));
		AF('S',struct A1054,m0,1)
		AF('B',struct A1054,m1,1)
		AF('c',struct A1054,m2,1)
		AF('d',struct A1054,m3,1)
		AF('f',struct A1054,m4,1)
		AF('j',struct A1054,m5,1)
		AF('J',struct A1054,m6,5)
		AF('d',struct A1054,m7,1)
		AF('c',struct A1054,m8,1)
		AF('f',struct A1054,m9,1)
		AF('l',struct A1054,m10,1)
		AF('p',struct A1054,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BciIsp> */
#pragma pack(push,8)
union A1055 { B m0; c m1; i m2; I m3; s m4; p m5; };
#pragma pack(pop)
int f_cmpA1055(const union A1055 *x, const union A1055 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1055() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1055));
		AF('B',union A1055,m0,1)
		AF('c',union A1055,m1,1)
		AF('i',union A1055,m2,1)
		AF('I',union A1055,m3,1)
		AF('s',union A1055,m4,1)
		AF('p',union A1055,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sdscC[8]IIjCfp} */
#pragma pack(push,4)
struct A1056 { s m0; d m1; s m2; c m3; C m4[8]; I m5; I m6; j m7; C m8; f m9; p m10; };
#pragma pack(pop)
int f_cmpA1056(const struct A1056 *x, const struct A1056 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1056() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1056));
		AF('s',struct A1056,m0,1)
		AF('d',struct A1056,m1,1)
		AF('s',struct A1056,m2,1)
		AF('c',struct A1056,m3,1)
		AF('C',struct A1056,m4,8)
		AF('I',struct A1056,m5,1)
		AF('I',struct A1056,m6,1)
		AF('j',struct A1056,m7,1)
		AF('C',struct A1056,m8,1)
		AF('f',struct A1056,m9,1)
		AF('p',struct A1056,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCBBIpJJCJc> */
#pragma pack(push,4)
union A1057 { s m0; C m1; B m2; B m3; I m4; p m5; J m6; J m7; C m8; J m9; c m10; };
#pragma pack(pop)
int f_cmpA1057(const union A1057 *x, const union A1057 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1057() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1057));
		AF('s',union A1057,m0,1)
		AF('C',union A1057,m1,1)
		AF('B',union A1057,m2,1)
		AF('B',union A1057,m3,1)
		AF('I',union A1057,m4,1)
		AF('p',union A1057,m5,1)
		AF('J',union A1057,m6,1)
		AF('J',union A1057,m7,1)
		AF('C',union A1057,m8,1)
		AF('J',union A1057,m9,1)
		AF('c',union A1057,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {icSiBljfcps} */
#pragma pack(push,4)
struct A1058 { i m0; c m1; S m2; i m3; B m4; l m5; j m6; f m7; c m8; p m9; s m10; };
#pragma pack(pop)
int f_cmpA1058(const struct A1058 *x, const struct A1058 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1058() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1058));
		AF('i',struct A1058,m0,1)
		AF('c',struct A1058,m1,1)
		AF('S',struct A1058,m2,1)
		AF('i',struct A1058,m3,1)
		AF('B',struct A1058,m4,1)
		AF('l',struct A1058,m5,1)
		AF('j',struct A1058,m6,1)
		AF('f',struct A1058,m7,1)
		AF('c',struct A1058,m8,1)
		AF('p',struct A1058,m9,1)
		AF('s',struct A1058,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iBj} */
#pragma pack(push,8)
struct A1059 { i m0; B m1; j m2; };
#pragma pack(pop)
int f_cmpA1059(const struct A1059 *x, const struct A1059 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1059() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1059));
		AF('i',struct A1059,m0,1)
		AF('B',struct A1059,m1,1)
		AF('j',struct A1059,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJBSiJjcIcSp} */
#pragma pack(push,4)
struct A1060 { p m0; J m1; B m2; S m3; i m4; J m5; j m6; c m7; I m8; c m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA1060(const struct A1060 *x, const struct A1060 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1060() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1060));
		AF('p',struct A1060,m0,1)
		AF('J',struct A1060,m1,1)
		AF('B',struct A1060,m2,1)
		AF('S',struct A1060,m3,1)
		AF('i',struct A1060,m4,1)
		AF('J',struct A1060,m5,1)
		AF('j',struct A1060,m6,1)
		AF('c',struct A1060,m7,1)
		AF('I',struct A1060,m8,1)
		AF('c',struct A1060,m9,1)
		AF('S',struct A1060,m10,1)
		AF('p',struct A1060,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {S} */
#pragma pack(push,4)
struct A1061 { S m0; };
#pragma pack(pop)
int f_cmpA1061(const struct A1061 *x, const struct A1061 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA1061() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A1061));
		AF('S',struct A1061,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lcddCJ> */
#pragma pack(push,1)
union A1062 { l m0; c m1; d m2; d m3; C m4; J m5; };
#pragma pack(pop)
int f_cmpA1062(const union A1062 *x, const union A1062 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1062() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1062));
		AF('l',union A1062,m0,1)
		AF('c',union A1062,m1,1)
		AF('d',union A1062,m2,1)
		AF('d',union A1062,m3,1)
		AF('C',union A1062,m4,1)
		AF('J',union A1062,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBi} */
#pragma pack(push,4)
struct A1063 { I m0; B m1; i m2; };
#pragma pack(pop)
int f_cmpA1063(const struct A1063 *x, const struct A1063 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1063() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1063));
		AF('I',struct A1063,m0,1)
		AF('B',struct A1063,m1,1)
		AF('i',struct A1063,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JBspd{IBi}BlBpf> */
#pragma pack(push,4)
union A1064 { J m0; B m1; s m2; p m3; d m4; struct A1063 m5; B m6; l m7; B m8; p m9; f m10; };
#pragma pack(pop)
int f_cmpA1064(const union A1064 *x, const union A1064 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1063(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1064() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1064));
		AF('J',union A1064,m0,1)
		AF('B',union A1064,m1,1)
		AF('s',union A1064,m2,1)
		AF('p',union A1064,m3,1)
		AF('d',union A1064,m4,1)
		AFa(union A1064,m5,1,A1063)
		AF('B',union A1064,m6,1)
		AF('l',union A1064,m7,1)
		AF('B',union A1064,m8,1)
		AF('p',union A1064,m9,1)
		AF('f',union A1064,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IpC} */
#pragma pack(push,1)
struct A1065 { I m0; p m1; C m2; };
#pragma pack(pop)
int f_cmpA1065(const struct A1065 *x, const struct A1065 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1065() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1065));
		AF('I',struct A1065,m0,1)
		AF('p',struct A1065,m1,1)
		AF('C',struct A1065,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JiSflJpjsciS> */
#pragma pack(push,4)
union A1066 { J m0; i m1; S m2; f m3; l m4; J m5; p m6; j m7; s m8; c m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA1066(const union A1066 *x, const union A1066 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1066() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1066));
		AF('J',union A1066,m0,1)
		AF('i',union A1066,m1,1)
		AF('S',union A1066,m2,1)
		AF('f',union A1066,m3,1)
		AF('l',union A1066,m4,1)
		AF('J',union A1066,m5,1)
		AF('p',union A1066,m6,1)
		AF('j',union A1066,m7,1)
		AF('s',union A1066,m8,1)
		AF('c',union A1066,m9,1)
		AF('i',union A1066,m10,1)
		AF('S',union A1066,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J<JiSflJpjsciS>> */
#pragma pack(push,4)
union A1067 { J m0; union A1066 m1; };
#pragma pack(pop)
int f_cmpA1067(const union A1067 *x, const union A1067 *y) { return x->m0 == y->m0 && f_cmpA1066(&x->m1, &y->m1); };
DCaggr* f_touchA1067() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1067));
		AF('J',union A1067,m0,1)
		AFa(union A1067,m1,1,A1066)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdcipJLcilpi[5]> */
#pragma pack(push,4)
union A1068 { I m0; d m1; c m2; i m3; p m4; J m5; L m6; c m7; i m8; l m9; p m10; i m11[5]; };
#pragma pack(pop)
int f_cmpA1068(const union A1068 *x, const union A1068 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4]; };
DCaggr* f_touchA1068() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1068));
		AF('I',union A1068,m0,1)
		AF('d',union A1068,m1,1)
		AF('c',union A1068,m2,1)
		AF('i',union A1068,m3,1)
		AF('p',union A1068,m4,1)
		AF('J',union A1068,m5,1)
		AF('L',union A1068,m6,1)
		AF('c',union A1068,m7,1)
		AF('i',union A1068,m8,1)
		AF('l',union A1068,m9,1)
		AF('p',union A1068,m10,1)
		AF('i',union A1068,m11,5)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsBLCdspJs<IdcipJLcilpi[5]>s} */
#pragma pack(push,2)
struct A1069 { f m0; s m1; B m2; L m3; C m4; d m5; s m6; p m7; J m8; s m9; union A1068 m10; s m11; };
#pragma pack(pop)
int f_cmpA1069(const struct A1069 *x, const struct A1069 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1068(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1069() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1069));
		AF('f',struct A1069,m0,1)
		AF('s',struct A1069,m1,1)
		AF('B',struct A1069,m2,1)
		AF('L',struct A1069,m3,1)
		AF('C',struct A1069,m4,1)
		AF('d',struct A1069,m5,1)
		AF('s',struct A1069,m6,1)
		AF('p',struct A1069,m7,1)
		AF('J',struct A1069,m8,1)
		AF('s',struct A1069,m9,1)
		AFa(struct A1069,m10,1,A1068)
		AF('s',struct A1069,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jp> */
#pragma pack(push,4)
union A1070 { J m0; p m1; };
#pragma pack(pop)
int f_cmpA1070(const union A1070 *x, const union A1070 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1070() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1070));
		AF('J',union A1070,m0,1)
		AF('p',union A1070,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B<Jp>JcBJBpLC<c>i} */
#pragma pack(push,4)
struct A1071 { B m0; union A1070 m1; J m2; c m3; B m4; J m5; B m6; p m7; L m8; C m9; union A123 m10; i m11; };
#pragma pack(pop)
int f_cmpA1071(const struct A1071 *x, const struct A1071 *y) { return x->m0 == y->m0 && f_cmpA1070(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA123(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1071() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1071));
		AF('B',struct A1071,m0,1)
		AFa(struct A1071,m1,1,A1070)
		AF('J',struct A1071,m2,1)
		AF('c',struct A1071,m3,1)
		AF('B',struct A1071,m4,1)
		AF('J',struct A1071,m5,1)
		AF('B',struct A1071,m6,1)
		AF('p',struct A1071,m7,1)
		AF('L',struct A1071,m8,1)
		AF('C',struct A1071,m9,1)
		AFa(struct A1071,m10,1,A123)
		AF('i',struct A1071,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljiScBj[16]fLdfi> */
#pragma pack(push,8)
union A1072 { l m0; j m1; i m2; S m3; c m4; B m5; j m6[16]; f m7; L m8; d m9; f m10; i m11; };
#pragma pack(pop)
int f_cmpA1072(const union A1072 *x, const union A1072 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m6[12] == y->m6[12] && x->m6[13] == y->m6[13] && x->m6[14] == y->m6[14] && x->m6[15] == y->m6[15] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1072() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1072));
		AF('l',union A1072,m0,1)
		AF('j',union A1072,m1,1)
		AF('i',union A1072,m2,1)
		AF('S',union A1072,m3,1)
		AF('c',union A1072,m4,1)
		AF('B',union A1072,m5,1)
		AF('j',union A1072,m6,16)
		AF('f',union A1072,m7,1)
		AF('L',union A1072,m8,1)
		AF('d',union A1072,m9,1)
		AF('f',union A1072,m10,1)
		AF('i',union A1072,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<I>J> */
#pragma pack(push,8)
union A1073 { union A408 m0; J m1; };
#pragma pack(pop)
int f_cmpA1073(const union A1073 *x, const union A1073 *y) { return f_cmpA408(&x->m0, &y->m0) && x->m1 == y->m1; };
DCaggr* f_touchA1073() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1073));
		AFa(union A1073,m0,1,A408)
		AF('J',union A1073,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBscfIC<<I>J>jllB> */
#pragma pack(push,4)
union A1074 { S m0; B m1; s m2; c m3; f m4; I m5; C m6; union A1073 m7; j m8; l m9; l m10; B m11; };
#pragma pack(pop)
int f_cmpA1074(const union A1074 *x, const union A1074 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1073(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1074() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1074));
		AF('S',union A1074,m0,1)
		AF('B',union A1074,m1,1)
		AF('s',union A1074,m2,1)
		AF('c',union A1074,m3,1)
		AF('f',union A1074,m4,1)
		AF('I',union A1074,m5,1)
		AF('C',union A1074,m6,1)
		AFa(union A1074,m7,1,A1073)
		AF('j',union A1074,m8,1)
		AF('l',union A1074,m9,1)
		AF('l',union A1074,m10,1)
		AF('B',union A1074,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cL[13]IBBsdLLcLI> */
#pragma pack(push,4)
union A1075 { c m0; L m1[13]; I m2; B m3; B m4; s m5; d m6; L m7; L m8; c m9; L m10; I m11; };
#pragma pack(pop)
int f_cmpA1075(const union A1075 *x, const union A1075 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1075() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1075));
		AF('c',union A1075,m0,1)
		AF('L',union A1075,m1,13)
		AF('I',union A1075,m2,1)
		AF('B',union A1075,m3,1)
		AF('B',union A1075,m4,1)
		AF('s',union A1075,m5,1)
		AF('d',union A1075,m6,1)
		AF('L',union A1075,m7,1)
		AF('L',union A1075,m8,1)
		AF('c',union A1075,m9,1)
		AF('L',union A1075,m10,1)
		AF('I',union A1075,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBLjBSCjL> */
#pragma pack(push,1)
union A1076 { i m0; B m1; L m2; j m3; B m4; S m5; C m6; j m7; L m8; };
#pragma pack(pop)
int f_cmpA1076(const union A1076 *x, const union A1076 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1076() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1076));
		AF('i',union A1076,m0,1)
		AF('B',union A1076,m1,1)
		AF('L',union A1076,m2,1)
		AF('j',union A1076,m3,1)
		AF('B',union A1076,m4,1)
		AF('S',union A1076,m5,1)
		AF('C',union A1076,m6,1)
		AF('j',union A1076,m7,1)
		AF('L',union A1076,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jL> */
#pragma pack(push,8)
union A1077 { j m0; L m1; };
#pragma pack(pop)
int f_cmpA1077(const union A1077 *x, const union A1077 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1077() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1077));
		AF('j',union A1077,m0,1)
		AF('L',union A1077,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B> */
#pragma pack(push,2)
union A1078 { union A1075 m0; c m1; J m2; s m3; union A1076 m4; L m5[14]; c m6; union A1077 m7; B m8; };
#pragma pack(pop)
int f_cmpA1078(const union A1078 *x, const union A1078 *y) { return f_cmpA1075(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1076(&x->m4, &y->m4) && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m6 == y->m6 && f_cmpA1077(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA1078() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1078));
		AFa(union A1078,m0,1,A1075)
		AF('c',union A1078,m1,1)
		AF('J',union A1078,m2,1)
		AF('s',union A1078,m3,1)
		AFa(union A1078,m4,1,A1076)
		AF('L',union A1078,m5,14)
		AF('c',union A1078,m6,1)
		AFa(union A1078,m7,1,A1077)
		AF('B',union A1078,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LIfBLcc> */
#pragma pack(push,1)
union A1079 { L m0; I m1; f m2; B m3; L m4; c m5; c m6; };
#pragma pack(pop)
int f_cmpA1079(const union A1079 *x, const union A1079 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1079() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1079));
		AF('L',union A1079,m0,1)
		AF('I',union A1079,m1,1)
		AF('f',union A1079,m2,1)
		AF('B',union A1079,m3,1)
		AF('L',union A1079,m4,1)
		AF('c',union A1079,m5,1)
		AF('c',union A1079,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iciLIC} */
#pragma pack(push,8)
struct A1080 { i m0; c m1; i m2; L m3; I m4; C m5; };
#pragma pack(pop)
int f_cmpA1080(const struct A1080 *x, const struct A1080 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1080() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1080));
		AF('i',struct A1080,m0,1)
		AF('c',struct A1080,m1,1)
		AF('i',struct A1080,m2,1)
		AF('L',struct A1080,m3,1)
		AF('I',struct A1080,m4,1)
		AF('C',struct A1080,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fISIspfJl> */
#pragma pack(push,4)
union A1081 { f m0; I m1; S m2; I m3; s m4; p m5; f m6; J m7; l m8; };
#pragma pack(pop)
int f_cmpA1081(const union A1081 *x, const union A1081 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1081() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1081));
		AF('f',union A1081,m0,1)
		AF('I',union A1081,m1,1)
		AF('S',union A1081,m2,1)
		AF('I',union A1081,m3,1)
		AF('s',union A1081,m4,1)
		AF('p',union A1081,m5,1)
		AF('f',union A1081,m6,1)
		AF('J',union A1081,m7,1)
		AF('l',union A1081,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fJJCcidJSjpC} */
#pragma pack(push,4)
struct A1082 { f m0; J m1; J m2; C m3; c m4; i m5; d m6; J m7; S m8; j m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1082(const struct A1082 *x, const struct A1082 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1082() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1082));
		AF('f',struct A1082,m0,1)
		AF('J',struct A1082,m1,1)
		AF('J',struct A1082,m2,1)
		AF('C',struct A1082,m3,1)
		AF('c',struct A1082,m4,1)
		AF('i',struct A1082,m5,1)
		AF('d',struct A1082,m6,1)
		AF('J',struct A1082,m7,1)
		AF('S',struct A1082,m8,1)
		AF('j',struct A1082,m9,1)
		AF('p',struct A1082,m10,1)
		AF('C',struct A1082,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {js{fJJCcidJSjpC}JBS} */
#pragma pack(push,4)
struct A1083 { j m0; s m1; struct A1082 m2; J m3; B m4; S m5; };
#pragma pack(pop)
int f_cmpA1083(const struct A1083 *x, const struct A1083 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1082(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1083() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1083));
		AF('j',struct A1083,m0,1)
		AF('s',struct A1083,m1,1)
		AFa(struct A1083,m2,1,A1082)
		AF('J',struct A1083,m3,1)
		AF('B',struct A1083,m4,1)
		AF('S',struct A1083,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijC> */
#pragma pack(push,1)
union A1084 { i m0; j m1; C m2; };
#pragma pack(pop)
int f_cmpA1084(const union A1084 *x, const union A1084 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1084() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1084));
		AF('i',union A1084,m0,1)
		AF('j',union A1084,m1,1)
		AF('C',union A1084,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bj[11]iLBISJS> */
#pragma pack(push,8)
union A1085 { B m0; j m1[11]; i m2; L m3; B m4; I m5; S m6; J m7; S m8; };
#pragma pack(pop)
int f_cmpA1085(const union A1085 *x, const union A1085 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1085() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1085));
		AF('B',union A1085,m0,1)
		AF('j',union A1085,m1,11)
		AF('i',union A1085,m2,1)
		AF('L',union A1085,m3,1)
		AF('B',union A1085,m4,1)
		AF('I',union A1085,m5,1)
		AF('S',union A1085,m6,1)
		AF('J',union A1085,m7,1)
		AF('S',union A1085,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pJiLd> */
#pragma pack(push,4)
union A1086 { p m0; J m1; i m2; L m3; d m4; };
#pragma pack(pop)
int f_cmpA1086(const union A1086 *x, const union A1086 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1086() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1086));
		AF('p',union A1086,m0,1)
		AF('J',union A1086,m1,1)
		AF('i',union A1086,m2,1)
		AF('L',union A1086,m3,1)
		AF('d',union A1086,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>> */
#pragma pack(push,4)
union A1087 { B m0; d m1; d m2; union A1084 m3; S m4; C m5; union A1085 m6; j m7; i m8; i m9; S m10; union A1086 m11; };
#pragma pack(pop)
int f_cmpA1087(const union A1087 *x, const union A1087 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1084(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1085(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1086(&x->m11, &y->m11); };
DCaggr* f_touchA1087() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1087));
		AF('B',union A1087,m0,1)
		AF('d',union A1087,m1,1)
		AF('d',union A1087,m2,1)
		AFa(union A1087,m3,1,A1084)
		AF('S',union A1087,m4,1)
		AF('C',union A1087,m5,1)
		AFa(union A1087,m6,1,A1085)
		AF('j',union A1087,m7,1)
		AF('i',union A1087,m8,1)
		AF('i',union A1087,m9,1)
		AF('S',union A1087,m10,1)
		AFa(union A1087,m11,1,A1086)
		dcCloseAggr(a);
	}
	return a;
};
/* <IfpCS> */
#pragma pack(push,4)
union A1088 { I m0; f m1; p m2; C m3; S m4; };
#pragma pack(pop)
int f_cmpA1088(const union A1088 *x, const union A1088 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1088() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1088));
		AF('I',union A1088,m0,1)
		AF('f',union A1088,m1,1)
		AF('p',union A1088,m2,1)
		AF('C',union A1088,m3,1)
		AF('S',union A1088,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cpddcC<IfpCS>LLcfl} */
#pragma pack(push,4)
struct A1089 { c m0; p m1; d m2; d m3; c m4; C m5; union A1088 m6; L m7; L m8; c m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA1089(const struct A1089 *x, const struct A1089 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1088(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1089() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1089));
		AF('c',struct A1089,m0,1)
		AF('p',struct A1089,m1,1)
		AF('d',struct A1089,m2,1)
		AF('d',struct A1089,m3,1)
		AF('c',struct A1089,m4,1)
		AF('C',struct A1089,m5,1)
		AFa(struct A1089,m6,1,A1088)
		AF('L',struct A1089,m7,1)
		AF('L',struct A1089,m8,1)
		AF('c',struct A1089,m9,1)
		AF('f',struct A1089,m10,1)
		AF('l',struct A1089,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<IfpCS>LLcfl}i> */
#pragma pack(push,4)
union A1090 { union A1087 m0; p m1; s m2; struct A1089 m3; i m4; };
#pragma pack(pop)
int f_cmpA1090(const union A1090 *x, const union A1090 *y) { return f_cmpA1087(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1089(&x->m3, &y->m3) && x->m4 == y->m4; };
DCaggr* f_touchA1090() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1090));
		AFa(union A1090,m0,1,A1087)
		AF('p',union A1090,m1,1)
		AF('s',union A1090,m2,1)
		AFa(union A1090,m3,1,A1089)
		AF('i',union A1090,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBiCfCcLBSpc> */
#pragma pack(push,2)
union A1091 { S m0; B m1; i m2; C m3; f m4; C m5; c m6; L m7; B m8; S m9; p m10; c m11; };
#pragma pack(pop)
int f_cmpA1091(const union A1091 *x, const union A1091 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1091() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1091));
		AF('S',union A1091,m0,1)
		AF('B',union A1091,m1,1)
		AF('i',union A1091,m2,1)
		AF('C',union A1091,m3,1)
		AF('f',union A1091,m4,1)
		AF('C',union A1091,m5,1)
		AF('c',union A1091,m6,1)
		AF('L',union A1091,m7,1)
		AF('B',union A1091,m8,1)
		AF('S',union A1091,m9,1)
		AF('p',union A1091,m10,1)
		AF('c',union A1091,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s<SBiCfCcLBSpc>cSBjB> */
#pragma pack(push,2)
union A1092 { s m0; union A1091 m1; c m2; S m3; B m4; j m5; B m6; };
#pragma pack(pop)
int f_cmpA1092(const union A1092 *x, const union A1092 *y) { return x->m0 == y->m0 && f_cmpA1091(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1092() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1092));
		AF('s',union A1092,m0,1)
		AFa(union A1092,m1,1,A1091)
		AF('c',union A1092,m2,1)
		AF('S',union A1092,m3,1)
		AF('B',union A1092,m4,1)
		AF('j',union A1092,m5,1)
		AF('B',union A1092,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJJpfpcIj> */
#pragma pack(push,4)
union A1093 { f m0; J m1; J m2; p m3; f m4; p m5; c m6; I m7; j m8; };
#pragma pack(pop)
int f_cmpA1093(const union A1093 *x, const union A1093 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1093() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1093));
		AF('f',union A1093,m0,1)
		AF('J',union A1093,m1,1)
		AF('J',union A1093,m2,1)
		AF('p',union A1093,m3,1)
		AF('f',union A1093,m4,1)
		AF('p',union A1093,m5,1)
		AF('c',union A1093,m6,1)
		AF('I',union A1093,m7,1)
		AF('j',union A1093,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BpJdsJCIJfSc> */
#pragma pack(push,8)
union A1094 { B m0; p m1; J m2; d m3; s m4; J m5; C m6; I m7; J m8; f m9; S m10; c m11; };
#pragma pack(pop)
int f_cmpA1094(const union A1094 *x, const union A1094 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1094() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1094));
		AF('B',union A1094,m0,1)
		AF('p',union A1094,m1,1)
		AF('J',union A1094,m2,1)
		AF('d',union A1094,m3,1)
		AF('s',union A1094,m4,1)
		AF('J',union A1094,m5,1)
		AF('C',union A1094,m6,1)
		AF('I',union A1094,m7,1)
		AF('J',union A1094,m8,1)
		AF('f',union A1094,m9,1)
		AF('S',union A1094,m10,1)
		AF('c',union A1094,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCpf<fJJpfpcIj>Cc<BpJdsJCIJfSc>disj} */
#pragma pack(push,4)
struct A1095 { L m0; C m1; p m2; f m3; union A1093 m4; C m5; c m6; union A1094 m7; d m8; i m9; s m10; j m11; };
#pragma pack(pop)
int f_cmpA1095(const struct A1095 *x, const struct A1095 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1093(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1094(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1095() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1095));
		AF('L',struct A1095,m0,1)
		AF('C',struct A1095,m1,1)
		AF('p',struct A1095,m2,1)
		AF('f',struct A1095,m3,1)
		AFa(struct A1095,m4,1,A1093)
		AF('C',struct A1095,m5,1)
		AF('c',struct A1095,m6,1)
		AFa(struct A1095,m7,1,A1094)
		AF('d',struct A1095,m8,1)
		AF('i',struct A1095,m9,1)
		AF('s',struct A1095,m10,1)
		AF('j',struct A1095,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LiI> */
#pragma pack(push,4)
union A1096 { L m0; i m1; I m2; };
#pragma pack(pop)
int f_cmpA1096(const union A1096 *x, const union A1096 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1096() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1096));
		AF('L',union A1096,m0,1)
		AF('i',union A1096,m1,1)
		AF('I',union A1096,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlJ> */
#pragma pack(push,4)
union A1097 { I m0; l m1; J m2; };
#pragma pack(pop)
int f_cmpA1097(const union A1097 *x, const union A1097 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1097() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1097));
		AF('I',union A1097,m0,1)
		AF('l',union A1097,m1,1)
		AF('J',union A1097,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBCc} */
#pragma pack(push,4)
struct A1098 { S m0; B m1; C m2; c m3; };
#pragma pack(pop)
int f_cmpA1098(const struct A1098 *x, const struct A1098 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1098() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1098));
		AF('S',struct A1098,m0,1)
		AF('B',struct A1098,m1,1)
		AF('C',struct A1098,m2,1)
		AF('c',struct A1098,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ss} */
#pragma pack(push,4)
struct A1099 { S m0; s m1; };
#pragma pack(pop)
int f_cmpA1099(const struct A1099 *x, const struct A1099 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1099() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1099));
		AF('S',struct A1099,m0,1)
		AF('s',struct A1099,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cfJlScdI> */
#pragma pack(push,4)
union A1100 { c m0; f m1; J m2; l m3; S m4; c m5; d m6; I m7; };
#pragma pack(pop)
int f_cmpA1100(const union A1100 *x, const union A1100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1100() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1100));
		AF('c',union A1100,m0,1)
		AF('f',union A1100,m1,1)
		AF('J',union A1100,m2,1)
		AF('l',union A1100,m3,1)
		AF('S',union A1100,m4,1)
		AF('c',union A1100,m5,1)
		AF('d',union A1100,m6,1)
		AF('I',union A1100,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcS<cfJlScdI>BpBdJSSd> */
#pragma pack(push,4)
union A1101 { B m0; c m1; S m2; union A1100 m3; B m4; p m5; B m6; d m7; J m8; S m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA1101(const union A1101 *x, const union A1101 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1100(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1101() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1101));
		AF('B',union A1101,m0,1)
		AF('c',union A1101,m1,1)
		AF('S',union A1101,m2,1)
		AFa(union A1101,m3,1,A1100)
		AF('B',union A1101,m4,1)
		AF('p',union A1101,m5,1)
		AF('B',union A1101,m6,1)
		AF('d',union A1101,m7,1)
		AF('J',union A1101,m8,1)
		AF('S',union A1101,m9,1)
		AF('S',union A1101,m10,1)
		AF('d',union A1101,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc} */
#pragma pack(push,4)
struct A1102 { c m0; j m1; S m2; struct A1099 m3; f m4; union A1101 m5; i m6; f m7; c m8; };
#pragma pack(pop)
int f_cmpA1102(const struct A1102 *x, const struct A1102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1099(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1101(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1102() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1102));
		AF('c',struct A1102,m0,1)
		AF('j',struct A1102,m1,1)
		AF('S',struct A1102,m2,1)
		AFa(struct A1102,m3,1,A1099)
		AF('f',struct A1102,m4,1)
		AFa(struct A1102,m5,1,A1101)
		AF('i',struct A1102,m6,1)
		AF('f',struct A1102,m7,1)
		AF('c',struct A1102,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfiilBJIB} */
#pragma pack(push,4)
struct A1103 { I m0; f m1; i m2; i m3; l m4; B m5; J m6; I m7; B m8; };
#pragma pack(pop)
int f_cmpA1103(const struct A1103 *x, const struct A1103 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1103() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1103));
		AF('I',struct A1103,m0,1)
		AF('f',struct A1103,m1,1)
		AF('i',struct A1103,m2,1)
		AF('i',struct A1103,m3,1)
		AF('l',struct A1103,m4,1)
		AF('B',struct A1103,m5,1)
		AF('J',struct A1103,m6,1)
		AF('I',struct A1103,m7,1)
		AF('B',struct A1103,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSSsjS[15]BJc} */
#pragma pack(push,2)
struct A1104 { c m0; S m1; S m2; s m3; j m4; S m5[15]; B m6; J m7; c m8; };
#pragma pack(pop)
int f_cmpA1104(const struct A1104 *x, const struct A1104 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m5[14] == y->m5[14] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1104() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1104));
		AF('c',struct A1104,m0,1)
		AF('S',struct A1104,m1,1)
		AF('S',struct A1104,m2,1)
		AF('s',struct A1104,m3,1)
		AF('j',struct A1104,m4,1)
		AF('S',struct A1104,m5,15)
		AF('B',struct A1104,m6,1)
		AF('J',struct A1104,m7,1)
		AF('c',struct A1104,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ccfdBdl[5]SCIBj} */
#pragma pack(push,2)
struct A1105 { c m0; c m1; f m2; d m3; B m4; d m5; l m6[5]; S m7; C m8; I m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA1105(const struct A1105 *x, const struct A1105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1105() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1105));
		AF('c',struct A1105,m0,1)
		AF('c',struct A1105,m1,1)
		AF('f',struct A1105,m2,1)
		AF('d',struct A1105,m3,1)
		AF('B',struct A1105,m4,1)
		AF('d',struct A1105,m5,1)
		AF('l',struct A1105,m6,5)
		AF('S',struct A1105,m7,1)
		AF('C',struct A1105,m8,1)
		AF('I',struct A1105,m9,1)
		AF('B',struct A1105,m10,1)
		AF('j',struct A1105,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jlcijcf[12]pLLlC> */
#pragma pack(push,2)
union A1106 { J m0; l m1; c m2; i m3; j m4; c m5; f m6[12]; p m7; L m8; L m9; l m10; C m11; };
#pragma pack(pop)
int f_cmpA1106(const union A1106 *x, const union A1106 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1106() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1106));
		AF('J',union A1106,m0,1)
		AF('l',union A1106,m1,1)
		AF('c',union A1106,m2,1)
		AF('i',union A1106,m3,1)
		AF('j',union A1106,m4,1)
		AF('c',union A1106,m5,1)
		AF('f',union A1106,m6,12)
		AF('p',union A1106,m7,1)
		AF('L',union A1106,m8,1)
		AF('L',union A1106,m9,1)
		AF('l',union A1106,m10,1)
		AF('C',union A1106,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{ccfdBdl[5]SCIBj}llpddjis<Jlcijcf[12]pLLlC>[10]fs> */
#pragma pack(push,4)
union A1107 { struct A1105 m0; l m1; l m2; p m3; d m4; d m5; j m6; i m7; s m8; union A1106 m9[10]; f m10; s m11; };
#pragma pack(pop)
int f_cmpA1107(const union A1107 *x, const union A1107 *y) { return f_cmpA1105(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1106(&x->m9[0], &y->m9[0]) && f_cmpA1106(&x->m9[1], &y->m9[1]) && f_cmpA1106(&x->m9[2], &y->m9[2]) && f_cmpA1106(&x->m9[3], &y->m9[3]) && f_cmpA1106(&x->m9[4], &y->m9[4]) && f_cmpA1106(&x->m9[5], &y->m9[5]) && f_cmpA1106(&x->m9[6], &y->m9[6]) && f_cmpA1106(&x->m9[7], &y->m9[7]) && f_cmpA1106(&x->m9[8], &y->m9[8]) && f_cmpA1106(&x->m9[9], &y->m9[9]) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1107() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1107));
		AFa(union A1107,m0,1,A1105)
		AF('l',union A1107,m1,1)
		AF('l',union A1107,m2,1)
		AF('p',union A1107,m3,1)
		AF('d',union A1107,m4,1)
		AF('d',union A1107,m5,1)
		AF('j',union A1107,m6,1)
		AF('i',union A1107,m7,1)
		AF('s',union A1107,m8,1)
		AFa(union A1107,m9,10,A1106)
		AF('f',union A1107,m10,1)
		AF('s',union A1107,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cC> */
#pragma pack(push,2)
union A1108 { c m0; C m1; };
#pragma pack(pop)
int f_cmpA1108(const union A1108 *x, const union A1108 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1108() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1108));
		AF('c',union A1108,m0,1)
		AF('C',union A1108,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlsdI} */
#pragma pack(push,4)
struct A1109 { S m0; l m1; s m2; d m3; I m4; };
#pragma pack(pop)
int f_cmpA1109(const struct A1109 *x, const struct A1109 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1109() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1109));
		AF('S',struct A1109,m0,1)
		AF('l',struct A1109,m1,1)
		AF('s',struct A1109,m2,1)
		AF('d',struct A1109,m3,1)
		AF('I',struct A1109,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlC> */
#pragma pack(push,4)
union A1110 { I m0; l m1; C m2; };
#pragma pack(pop)
int f_cmpA1110(const union A1110 *x, const union A1110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1110() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1110));
		AF('I',union A1110,m0,1)
		AF('l',union A1110,m1,1)
		AF('C',union A1110,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ppfBIlI> */
#pragma pack(push,1)
union A1111 { p m0; p m1; f m2; B m3; I m4; l m5; I m6; };
#pragma pack(pop)
int f_cmpA1111(const union A1111 *x, const union A1111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1111() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1111));
		AF('p',union A1111,m0,1)
		AF('p',union A1111,m1,1)
		AF('f',union A1111,m2,1)
		AF('B',union A1111,m3,1)
		AF('I',union A1111,m4,1)
		AF('l',union A1111,m5,1)
		AF('I',union A1111,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sIijdS} */
#pragma pack(push,2)
struct A1112 { s m0; I m1; i m2; j m3; d m4; S m5; };
#pragma pack(pop)
int f_cmpA1112(const struct A1112 *x, const struct A1112 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1112() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1112));
		AF('s',struct A1112,m0,1)
		AF('I',struct A1112,m1,1)
		AF('i',struct A1112,m2,1)
		AF('j',struct A1112,m3,1)
		AF('d',struct A1112,m4,1)
		AF('S',struct A1112,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SifC<IlC>J<ppfBIlI>{sIijdS}pLi[7]} */
#pragma pack(push,4)
struct A1113 { S m0; i m1; f m2; C m3; union A1110 m4; J m5; union A1111 m6; struct A1112 m7; p m8; L m9; i m10[7]; };
#pragma pack(pop)
int f_cmpA1113(const struct A1113 *x, const struct A1113 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1110(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1111(&x->m6, &y->m6) && f_cmpA1112(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6]; };
DCaggr* f_touchA1113() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1113));
		AF('S',struct A1113,m0,1)
		AF('i',struct A1113,m1,1)
		AF('f',struct A1113,m2,1)
		AF('C',struct A1113,m3,1)
		AFa(struct A1113,m4,1,A1110)
		AF('J',struct A1113,m5,1)
		AFa(struct A1113,m6,1,A1111)
		AFa(struct A1113,m7,1,A1112)
		AF('p',struct A1113,m8,1)
		AF('L',struct A1113,m9,1)
		AF('i',struct A1113,m10,7)
		dcCloseAggr(a);
	}
	return a;
};
/* <fiJSj> */
#pragma pack(push,8)
union A1114 { f m0; i m1; J m2; S m3; j m4; };
#pragma pack(pop)
int f_cmpA1114(const union A1114 *x, const union A1114 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1114() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1114));
		AF('f',union A1114,m0,1)
		AF('i',union A1114,m1,1)
		AF('J',union A1114,m2,1)
		AF('S',union A1114,m3,1)
		AF('j',union A1114,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lScp<fiJSj>SLSC> */
#pragma pack(push,4)
union A1115 { l m0; S m1; c m2; p m3; union A1114 m4; S m5; L m6; S m7; C m8; };
#pragma pack(pop)
int f_cmpA1115(const union A1115 *x, const union A1115 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1114(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1115() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1115));
		AF('l',union A1115,m0,1)
		AF('S',union A1115,m1,1)
		AF('c',union A1115,m2,1)
		AF('p',union A1115,m3,1)
		AFa(union A1115,m4,1,A1114)
		AF('S',union A1115,m5,1)
		AF('L',union A1115,m6,1)
		AF('S',union A1115,m7,1)
		AF('C',union A1115,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<lScp<fiJSj>SLSC>JfICSL} */
#pragma pack(push,4)
struct A1116 { union A1115 m0; J m1; f m2; I m3; C m4; S m5; L m6; };
#pragma pack(pop)
int f_cmpA1116(const struct A1116 *x, const struct A1116 *y) { return f_cmpA1115(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1116() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1116));
		AFa(struct A1116,m0,1,A1115)
		AF('J',struct A1116,m1,1)
		AF('f',struct A1116,m2,1)
		AF('I',struct A1116,m3,1)
		AF('C',struct A1116,m4,1)
		AF('S',struct A1116,m5,1)
		AF('L',struct A1116,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjScLpcCLipf} */
#pragma pack(push,4)
struct A1117 { s m0; j m1; S m2; c m3; L m4; p m5; c m6; C m7; L m8; i m9; p m10; f m11; };
#pragma pack(pop)
int f_cmpA1117(const struct A1117 *x, const struct A1117 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1117() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1117));
		AF('s',struct A1117,m0,1)
		AF('j',struct A1117,m1,1)
		AF('S',struct A1117,m2,1)
		AF('c',struct A1117,m3,1)
		AF('L',struct A1117,m4,1)
		AF('p',struct A1117,m5,1)
		AF('c',struct A1117,m6,1)
		AF('C',struct A1117,m7,1)
		AF('L',struct A1117,m8,1)
		AF('i',struct A1117,m9,1)
		AF('p',struct A1117,m10,1)
		AF('f',struct A1117,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICdidcl} */
#pragma pack(push,2)
struct A1118 { I m0; C m1; d m2; i m3; d m4; c m5; l m6; };
#pragma pack(pop)
int f_cmpA1118(const struct A1118 *x, const struct A1118 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1118() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1118));
		AF('I',struct A1118,m0,1)
		AF('C',struct A1118,m1,1)
		AF('d',struct A1118,m2,1)
		AF('i',struct A1118,m3,1)
		AF('d',struct A1118,m4,1)
		AF('c',struct A1118,m5,1)
		AF('l',struct A1118,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fpJ> */
#pragma pack(push,4)
union A1119 { f m0; p m1; J m2; };
#pragma pack(pop)
int f_cmpA1119(const union A1119 *x, const union A1119 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1119() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1119));
		AF('f',union A1119,m0,1)
		AF('p',union A1119,m1,1)
		AF('J',union A1119,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<fpJ>ICICpS} */
#pragma pack(push,2)
struct A1120 { union A1119 m0; I m1; C m2; I m3; C m4; p m5; S m6; };
#pragma pack(pop)
int f_cmpA1120(const struct A1120 *x, const struct A1120 *y) { return f_cmpA1119(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1120() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1120));
		AFa(struct A1120,m0,1,A1119)
		AF('I',struct A1120,m1,1)
		AF('C',struct A1120,m2,1)
		AF('I',struct A1120,m3,1)
		AF('C',struct A1120,m4,1)
		AF('p',struct A1120,m5,1)
		AF('S',struct A1120,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iliflIjjBcJp> */
#pragma pack(push,4)
union A1121 { i m0; l m1; i m2; f m3; l m4; I m5; j m6; j m7; B m8; c m9; J m10; p m11; };
#pragma pack(pop)
int f_cmpA1121(const union A1121 *x, const union A1121 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1121() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1121));
		AF('i',union A1121,m0,1)
		AF('l',union A1121,m1,1)
		AF('i',union A1121,m2,1)
		AF('f',union A1121,m3,1)
		AF('l',union A1121,m4,1)
		AF('I',union A1121,m5,1)
		AF('j',union A1121,m6,1)
		AF('j',union A1121,m7,1)
		AF('B',union A1121,m8,1)
		AF('c',union A1121,m9,1)
		AF('J',union A1121,m10,1)
		AF('p',union A1121,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CiJ[8]B> */
#pragma pack(push,1)
union A1122 { C m0; i m1; J m2[8]; B m3; };
#pragma pack(pop)
int f_cmpA1122(const union A1122 *x, const union A1122 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m3 == y->m3; };
DCaggr* f_touchA1122() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1122));
		AF('C',union A1122,m0,1)
		AF('i',union A1122,m1,1)
		AF('J',union A1122,m2,8)
		AF('B',union A1122,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfc<iliflIjjBcJp>Liji<CiJ[8]B>cC[10]S> */
#pragma pack(push,4)
union A1123 { l m0; f m1; c m2; union A1121 m3; L m4; i m5; j m6; i m7; union A1122 m8; c m9; C m10[10]; S m11; };
#pragma pack(pop)
int f_cmpA1123(const union A1123 *x, const union A1123 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1121(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1122(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m11 == y->m11; };
DCaggr* f_touchA1123() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1123));
		AF('l',union A1123,m0,1)
		AF('f',union A1123,m1,1)
		AF('c',union A1123,m2,1)
		AFa(union A1123,m3,1,A1121)
		AF('L',union A1123,m4,1)
		AF('i',union A1123,m5,1)
		AF('j',union A1123,m6,1)
		AF('i',union A1123,m7,1)
		AFa(union A1123,m8,1,A1122)
		AF('c',union A1123,m9,1)
		AF('C',union A1123,m10,10)
		AF('S',union A1123,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJL{ICdidcl}pcLlJ{<fpJ>ICICpS}I<lfc<iliflIjjBcJp>Liji<CiJ[8]B>cC[10]S>> */
#pragma pack(push,4)
union A1124 { c m0; J m1; L m2; struct A1118 m3; p m4; c m5; L m6; l m7; J m8; struct A1120 m9; I m10; union A1123 m11; };
#pragma pack(pop)
int f_cmpA1124(const union A1124 *x, const union A1124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1118(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1120(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1123(&x->m11, &y->m11); };
DCaggr* f_touchA1124() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1124));
		AF('c',union A1124,m0,1)
		AF('J',union A1124,m1,1)
		AF('L',union A1124,m2,1)
		AFa(union A1124,m3,1,A1118)
		AF('p',union A1124,m4,1)
		AF('c',union A1124,m5,1)
		AF('L',union A1124,m6,1)
		AF('l',union A1124,m7,1)
		AF('J',union A1124,m8,1)
		AFa(union A1124,m9,1,A1120)
		AF('I',union A1124,m10,1)
		AFa(union A1124,m11,1,A1123)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCSdSSdssIjB> */
#pragma pack(push,8)
union A1125 { J m0; C m1; S m2; d m3; S m4; S m5; d m6; s m7; s m8; I m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA1125(const union A1125 *x, const union A1125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1125() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1125));
		AF('J',union A1125,m0,1)
		AF('C',union A1125,m1,1)
		AF('S',union A1125,m2,1)
		AF('d',union A1125,m3,1)
		AF('S',union A1125,m4,1)
		AF('S',union A1125,m5,1)
		AF('d',union A1125,m6,1)
		AF('s',union A1125,m7,1)
		AF('s',union A1125,m8,1)
		AF('I',union A1125,m9,1)
		AF('j',union A1125,m10,1)
		AF('B',union A1125,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IjdclcC} */
#pragma pack(push,4)
struct A1126 { I m0; j m1; d m2; c m3; l m4; c m5; C m6; };
#pragma pack(pop)
int f_cmpA1126(const struct A1126 *x, const struct A1126 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1126() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1126));
		AF('I',struct A1126,m0,1)
		AF('j',struct A1126,m1,1)
		AF('d',struct A1126,m2,1)
		AF('c',struct A1126,m3,1)
		AF('l',struct A1126,m4,1)
		AF('c',struct A1126,m5,1)
		AF('C',struct A1126,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[10]LdIlSjIs} */
#pragma pack(push,4)
struct A1127 { d m0[10]; L m1; d m2; I m3; l m4; S m5; j m6; I m7; s m8; };
#pragma pack(pop)
int f_cmpA1127(const struct A1127 *x, const struct A1127 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1127() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1127));
		AF('d',struct A1127,m0,10)
		AF('L',struct A1127,m1,1)
		AF('d',struct A1127,m2,1)
		AF('I',struct A1127,m3,1)
		AF('l',struct A1127,m4,1)
		AF('S',struct A1127,m5,1)
		AF('j',struct A1127,m6,1)
		AF('I',struct A1127,m7,1)
		AF('s',struct A1127,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{IjdclcC}fC{d[10]LdIlSjIs}JLcffIic} */
#pragma pack(push,2)
struct A1128 { struct A1126 m0; f m1; C m2; struct A1127 m3; J m4; L m5; c m6; f m7; f m8; I m9; i m10; c m11; };
#pragma pack(pop)
int f_cmpA1128(const struct A1128 *x, const struct A1128 *y) { return f_cmpA1126(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1127(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1128() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1128));
		AFa(struct A1128,m0,1,A1126)
		AF('f',struct A1128,m1,1)
		AF('C',struct A1128,m2,1)
		AFa(struct A1128,m3,1,A1127)
		AF('J',struct A1128,m4,1)
		AF('L',struct A1128,m5,1)
		AF('c',struct A1128,m6,1)
		AF('f',struct A1128,m7,1)
		AF('f',struct A1128,m8,1)
		AF('I',struct A1128,m9,1)
		AF('i',struct A1128,m10,1)
		AF('c',struct A1128,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SCLCdiifLpcB> */
#pragma pack(push,1)
union A1129 { S m0; C m1; L m2; C m3; d m4; i m5; i m6; f m7; L m8; p m9; c m10; B m11; };
#pragma pack(pop)
int f_cmpA1129(const union A1129 *x, const union A1129 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1129() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1129));
		AF('S',union A1129,m0,1)
		AF('C',union A1129,m1,1)
		AF('L',union A1129,m2,1)
		AF('C',union A1129,m3,1)
		AF('d',union A1129,m4,1)
		AF('i',union A1129,m5,1)
		AF('i',union A1129,m6,1)
		AF('f',union A1129,m7,1)
		AF('L',union A1129,m8,1)
		AF('p',union A1129,m9,1)
		AF('c',union A1129,m10,1)
		AF('B',union A1129,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<SCLCdiifLpcB>> */
#pragma pack(push,1)
union A1130 { union A1129 m0; };
#pragma pack(pop)
int f_cmpA1130(const union A1130 *x, const union A1130 *y) { return f_cmpA1129(&x->m0, &y->m0); };
DCaggr* f_touchA1130() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A1130));
		AFa(union A1130,m0,1,A1129)
		dcCloseAggr(a);
	}
	return a;
};
/* <fcLj<JCSdSSdssIjB>JdS{{IjdclcC}fC{d[10]LdIlSjIs}JLcffIic}Jl<<SCLCdiifLpcB>>> */
#pragma pack(push,8)
union A1131 { f m0; c m1; L m2; j m3; union A1125 m4; J m5; d m6; S m7; struct A1128 m8; J m9; l m10; union A1130 m11; };
#pragma pack(pop)
int f_cmpA1131(const union A1131 *x, const union A1131 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1125(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1128(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1130(&x->m11, &y->m11); };
DCaggr* f_touchA1131() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1131));
		AF('f',union A1131,m0,1)
		AF('c',union A1131,m1,1)
		AF('L',union A1131,m2,1)
		AF('j',union A1131,m3,1)
		AFa(union A1131,m4,1,A1125)
		AF('J',union A1131,m5,1)
		AF('d',union A1131,m6,1)
		AF('S',union A1131,m7,1)
		AFa(union A1131,m8,1,A1128)
		AF('J',union A1131,m9,1)
		AF('l',union A1131,m10,1)
		AFa(union A1131,m11,1,A1130)
		dcCloseAggr(a);
	}
	return a;
};
/* {dL} */
#pragma pack(push,4)
struct A1132 { d m0; L m1; };
#pragma pack(pop)
int f_cmpA1132(const struct A1132 *x, const struct A1132 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1132() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1132));
		AF('d',struct A1132,m0,1)
		AF('L',struct A1132,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d} */
#pragma pack(push,4)
struct A1133 { d m0; };
#pragma pack(pop)
int f_cmpA1133(const struct A1133 *x, const struct A1133 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA1133() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A1133));
		AF('d',struct A1133,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {slcfdJLdiCcC} */
#pragma pack(push,4)
struct A1134 { s m0; l m1; c m2; f m3; d m4; J m5; L m6; d m7; i m8; C m9; c m10; C m11; };
#pragma pack(pop)
int f_cmpA1134(const struct A1134 *x, const struct A1134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1134() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1134));
		AF('s',struct A1134,m0,1)
		AF('l',struct A1134,m1,1)
		AF('c',struct A1134,m2,1)
		AF('f',struct A1134,m3,1)
		AF('d',struct A1134,m4,1)
		AF('J',struct A1134,m5,1)
		AF('L',struct A1134,m6,1)
		AF('d',struct A1134,m7,1)
		AF('i',struct A1134,m8,1)
		AF('C',struct A1134,m9,1)
		AF('c',struct A1134,m10,1)
		AF('C',struct A1134,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcj} */
#pragma pack(push,4)
struct A1135 { l m0; c m1; j m2; };
#pragma pack(pop)
int f_cmpA1135(const struct A1135 *x, const struct A1135 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1135() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1135));
		AF('l',struct A1135,m0,1)
		AF('c',struct A1135,m1,1)
		AF('j',struct A1135,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJIs} */
#pragma pack(push,4)
struct A1136 { S m0; J m1; I m2; s m3; };
#pragma pack(pop)
int f_cmpA1136(const struct A1136 *x, const struct A1136 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1136() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1136));
		AF('S',struct A1136,m0,1)
		AF('J',struct A1136,m1,1)
		AF('I',struct A1136,m2,1)
		AF('s',struct A1136,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{d}ipC{slcfdJLdiCcC}IBdJ{lcj}{SJIs}> */
#pragma pack(push,4)
union A1137 { struct A1133 m0; i m1; p m2; C m3; struct A1134 m4; I m5; B m6; d m7; J m8; struct A1135 m9; struct A1136 m10; };
#pragma pack(pop)
int f_cmpA1137(const union A1137 *x, const union A1137 *y) { return f_cmpA1133(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1134(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1135(&x->m9, &y->m9) && f_cmpA1136(&x->m10, &y->m10); };
DCaggr* f_touchA1137() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1137));
		AFa(union A1137,m0,1,A1133)
		AF('i',union A1137,m1,1)
		AF('p',union A1137,m2,1)
		AF('C',union A1137,m3,1)
		AFa(union A1137,m4,1,A1134)
		AF('I',union A1137,m5,1)
		AF('B',union A1137,m6,1)
		AF('d',union A1137,m7,1)
		AF('J',union A1137,m8,1)
		AFa(union A1137,m9,1,A1135)
		AFa(union A1137,m10,1,A1136)
		dcCloseAggr(a);
	}
	return a;
};
/* <fdILpSjpL> */
#pragma pack(push,2)
union A1138 { f m0; d m1; I m2; L m3; p m4; S m5; j m6; p m7; L m8; };
#pragma pack(pop)
int f_cmpA1138(const union A1138 *x, const union A1138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1138() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1138));
		AF('f',union A1138,m0,1)
		AF('d',union A1138,m1,1)
		AF('I',union A1138,m2,1)
		AF('L',union A1138,m3,1)
		AF('p',union A1138,m4,1)
		AF('S',union A1138,m5,1)
		AF('j',union A1138,m6,1)
		AF('p',union A1138,m7,1)
		AF('L',union A1138,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S<fdILpSjpL>> */
#pragma pack(push,8)
union A1139 { S m0; union A1138 m1; };
#pragma pack(pop)
int f_cmpA1139(const union A1139 *x, const union A1139 *y) { return x->m0 == y->m0 && f_cmpA1138(&x->m1, &y->m1); };
DCaggr* f_touchA1139() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1139));
		AF('S',union A1139,m0,1)
		AFa(union A1139,m1,1,A1138)
		dcCloseAggr(a);
	}
	return a;
};
/* <ipIiIlBsi<{d}ipC{slcfdJLdiCcC}IBdJ{lcj}{SJIs}><S<fdILpSjpL>>J> */
#pragma pack(push,4)
union A1140 { i m0; p m1; I m2; i m3; I m4; l m5; B m6; s m7; i m8; union A1137 m9; union A1139 m10; J m11; };
#pragma pack(pop)
int f_cmpA1140(const union A1140 *x, const union A1140 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1137(&x->m9, &y->m9) && f_cmpA1139(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1140() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1140));
		AF('i',union A1140,m0,1)
		AF('p',union A1140,m1,1)
		AF('I',union A1140,m2,1)
		AF('i',union A1140,m3,1)
		AF('I',union A1140,m4,1)
		AF('l',union A1140,m5,1)
		AF('B',union A1140,m6,1)
		AF('s',union A1140,m7,1)
		AF('i',union A1140,m8,1)
		AFa(union A1140,m9,1,A1137)
		AFa(union A1140,m10,1,A1139)
		AF('J',union A1140,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCcpIisfjSci} */
#pragma pack(push,4)
struct A1141 { L m0; C m1; c m2; p m3; I m4; i m5; s m6; f m7; j m8; S m9; c m10; i m11; };
#pragma pack(pop)
int f_cmpA1141(const struct A1141 *x, const struct A1141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1141() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1141));
		AF('L',struct A1141,m0,1)
		AF('C',struct A1141,m1,1)
		AF('c',struct A1141,m2,1)
		AF('p',struct A1141,m3,1)
		AF('I',struct A1141,m4,1)
		AF('i',struct A1141,m5,1)
		AF('s',struct A1141,m6,1)
		AF('f',struct A1141,m7,1)
		AF('j',struct A1141,m8,1)
		AF('S',struct A1141,m9,1)
		AF('c',struct A1141,m10,1)
		AF('i',struct A1141,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BBlCBcCfJSpf} */
#pragma pack(push,1)
struct A1142 { B m0; B m1; l m2; C m3; B m4; c m5; C m6; f m7; J m8; S m9; p m10; f m11; };
#pragma pack(pop)
int f_cmpA1142(const struct A1142 *x, const struct A1142 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1142() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1142));
		AF('B',struct A1142,m0,1)
		AF('B',struct A1142,m1,1)
		AF('l',struct A1142,m2,1)
		AF('C',struct A1142,m3,1)
		AF('B',struct A1142,m4,1)
		AF('c',struct A1142,m5,1)
		AF('C',struct A1142,m6,1)
		AF('f',struct A1142,m7,1)
		AF('J',struct A1142,m8,1)
		AF('S',struct A1142,m9,1)
		AF('p',struct A1142,m10,1)
		AF('f',struct A1142,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dJcS[4]sfl{BBlCBcCfJSpf}JScd> */
#pragma pack(push,4)
union A1143 { d m0; J m1; c m2; S m3[4]; s m4; f m5; l m6; struct A1142 m7; J m8; S m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA1143(const union A1143 *x, const union A1143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1142(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1143() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1143));
		AF('d',union A1143,m0,1)
		AF('J',union A1143,m1,1)
		AF('c',union A1143,m2,1)
		AF('S',union A1143,m3,4)
		AF('s',union A1143,m4,1)
		AF('f',union A1143,m5,1)
		AF('l',union A1143,m6,1)
		AFa(union A1143,m7,1,A1142)
		AF('J',union A1143,m8,1)
		AF('S',union A1143,m9,1)
		AF('c',union A1143,m10,1)
		AF('d',union A1143,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<dJcS[4]sfl{BBlCBcCfJSpf}JScd>IJdl> */
#pragma pack(push,4)
union A1144 { union A1143 m0; I m1; J m2; d m3; l m4; };
#pragma pack(pop)
int f_cmpA1144(const union A1144 *x, const union A1144 *y) { return f_cmpA1143(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1144() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1144));
		AFa(union A1144,m0,1,A1143)
		AF('I',union A1144,m1,1)
		AF('J',union A1144,m2,1)
		AF('d',union A1144,m3,1)
		AF('l',union A1144,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SIifjBpCSiCB} */
#pragma pack(push,8)
struct A1145 { S m0; I m1; i m2; f m3; j m4; B m5; p m6; C m7; S m8; i m9; C m10; B m11; };
#pragma pack(pop)
int f_cmpA1145(const struct A1145 *x, const struct A1145 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1145() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1145));
		AF('S',struct A1145,m0,1)
		AF('I',struct A1145,m1,1)
		AF('i',struct A1145,m2,1)
		AF('f',struct A1145,m3,1)
		AF('j',struct A1145,m4,1)
		AF('B',struct A1145,m5,1)
		AF('p',struct A1145,m6,1)
		AF('C',struct A1145,m7,1)
		AF('S',struct A1145,m8,1)
		AF('i',struct A1145,m9,1)
		AF('C',struct A1145,m10,1)
		AF('B',struct A1145,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IjdpiLssldjC> */
#pragma pack(push,2)
union A1146 { I m0; j m1; d m2; p m3; i m4; L m5; s m6; s m7; l m8; d m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA1146(const union A1146 *x, const union A1146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1146() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1146));
		AF('I',union A1146,m0,1)
		AF('j',union A1146,m1,1)
		AF('d',union A1146,m2,1)
		AF('p',union A1146,m3,1)
		AF('i',union A1146,m4,1)
		AF('L',union A1146,m5,1)
		AF('s',union A1146,m6,1)
		AF('s',union A1146,m7,1)
		AF('l',union A1146,m8,1)
		AF('d',union A1146,m9,1)
		AF('j',union A1146,m10,1)
		AF('C',union A1146,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>I} */
#pragma pack(push,4)
struct A1147 { S m0; l m1; I m2; s m3; s m4; l m5; l m6; C m7; struct A1145 m8; p m9; union A1146 m10; I m11; };
#pragma pack(pop)
int f_cmpA1147(const struct A1147 *x, const struct A1147 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1145(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA1146(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1147() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1147));
		AF('S',struct A1147,m0,1)
		AF('l',struct A1147,m1,1)
		AF('I',struct A1147,m2,1)
		AF('s',struct A1147,m3,1)
		AF('s',struct A1147,m4,1)
		AF('l',struct A1147,m5,1)
		AF('l',struct A1147,m6,1)
		AF('C',struct A1147,m7,1)
		AFa(struct A1147,m8,1,A1145)
		AF('p',struct A1147,m9,1)
		AFa(struct A1147,m10,1,A1146)
		AF('I',struct A1147,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CIcciLSc{SlIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>I}Sld} */
#pragma pack(push,4)
struct A1148 { C m0; I m1; c m2; c m3; i m4; L m5; S m6; c m7; struct A1147 m8; S m9; l m10; d m11; };
#pragma pack(pop)
int f_cmpA1148(const struct A1148 *x, const struct A1148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1147(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1148() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1148));
		AF('C',struct A1148,m0,1)
		AF('I',struct A1148,m1,1)
		AF('c',struct A1148,m2,1)
		AF('c',struct A1148,m3,1)
		AF('i',struct A1148,m4,1)
		AF('L',struct A1148,m5,1)
		AF('S',struct A1148,m6,1)
		AF('c',struct A1148,m7,1)
		AFa(struct A1148,m8,1,A1147)
		AF('S',struct A1148,m9,1)
		AF('l',struct A1148,m10,1)
		AF('d',struct A1148,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCfiLLpfJf} */
#pragma pack(push,2)
struct A1149 { L m0; C m1; f m2; i m3; L m4; L m5; p m6; f m7; J m8; f m9; };
#pragma pack(pop)
int f_cmpA1149(const struct A1149 *x, const struct A1149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1149() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A1149));
		AF('L',struct A1149,m0,1)
		AF('C',struct A1149,m1,1)
		AF('f',struct A1149,m2,1)
		AF('i',struct A1149,m3,1)
		AF('L',struct A1149,m4,1)
		AF('L',struct A1149,m5,1)
		AF('p',struct A1149,m6,1)
		AF('f',struct A1149,m7,1)
		AF('J',struct A1149,m8,1)
		AF('f',struct A1149,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLjJJIjJs} */
#pragma pack(push,1)
struct A1150 { J m0; L m1; j m2; J m3; J m4; I m5; j m6; J m7; s m8; };
#pragma pack(pop)
int f_cmpA1150(const struct A1150 *x, const struct A1150 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1150() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1150));
		AF('J',struct A1150,m0,1)
		AF('L',struct A1150,m1,1)
		AF('j',struct A1150,m2,1)
		AF('J',struct A1150,m3,1)
		AF('J',struct A1150,m4,1)
		AF('I',struct A1150,m5,1)
		AF('j',struct A1150,m6,1)
		AF('J',struct A1150,m7,1)
		AF('s',struct A1150,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sCdIcLiillId} */
#pragma pack(push,4)
struct A1151 { s m0; C m1; d m2; I m3; c m4; L m5; i m6; i m7; l m8; l m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA1151(const struct A1151 *x, const struct A1151 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1151() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1151));
		AF('s',struct A1151,m0,1)
		AF('C',struct A1151,m1,1)
		AF('d',struct A1151,m2,1)
		AF('I',struct A1151,m3,1)
		AF('c',struct A1151,m4,1)
		AF('L',struct A1151,m5,1)
		AF('i',struct A1151,m6,1)
		AF('i',struct A1151,m7,1)
		AF('l',struct A1151,m8,1)
		AF('l',struct A1151,m9,1)
		AF('I',struct A1151,m10,1)
		AF('d',struct A1151,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sj{sCdIcLiillId}d} */
#pragma pack(push,2)
struct A1152 { S m0; j m1; struct A1151 m2; d m3; };
#pragma pack(pop)
int f_cmpA1152(const struct A1152 *x, const struct A1152 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1151(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA1152() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1152));
		AF('S',struct A1152,m0,1)
		AF('j',struct A1152,m1,1)
		AFa(struct A1152,m2,1,A1151)
		AF('d',struct A1152,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flscjdJpLL> */
#pragma pack(push,1)
union A1153 { f m0; l m1; s m2; c m3; j m4; d m5; J m6; p m7; L m8; L m9; };
#pragma pack(pop)
int f_cmpA1153(const union A1153 *x, const union A1153 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1153() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1153));
		AF('f',union A1153,m0,1)
		AF('l',union A1153,m1,1)
		AF('s',union A1153,m2,1)
		AF('c',union A1153,m3,1)
		AF('j',union A1153,m4,1)
		AF('d',union A1153,m5,1)
		AF('J',union A1153,m6,1)
		AF('p',union A1153,m7,1)
		AF('L',union A1153,m8,1)
		AF('L',union A1153,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcjSLfiiIi[3]sJ} */
#pragma pack(push,4)
struct A1154 { f m0; c m1; j m2; S m3; L m4; f m5; i m6; i m7; I m8; i m9[3]; s m10; J m11; };
#pragma pack(pop)
int f_cmpA1154(const struct A1154 *x, const struct A1154 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1154() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1154));
		AF('f',struct A1154,m0,1)
		AF('c',struct A1154,m1,1)
		AF('j',struct A1154,m2,1)
		AF('S',struct A1154,m3,1)
		AF('L',struct A1154,m4,1)
		AF('f',struct A1154,m5,1)
		AF('i',struct A1154,m6,1)
		AF('i',struct A1154,m7,1)
		AF('I',struct A1154,m8,1)
		AF('i',struct A1154,m9,3)
		AF('s',struct A1154,m10,1)
		AF('J',struct A1154,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{fcjSLfiiIi[3]sJ}si> */
#pragma pack(push,4)
union A1155 { struct A1154 m0; s m1; i m2; };
#pragma pack(pop)
int f_cmpA1155(const union A1155 *x, const union A1155 *y) { return f_cmpA1154(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1155() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1155));
		AFa(union A1155,m0,1,A1154)
		AF('s',union A1155,m1,1)
		AF('i',union A1155,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BidlICcCip> */
#pragma pack(push,1)
union A1156 { B m0; i m1; d m2; l m3; I m4; C m5; c m6; C m7; i m8; p m9; };
#pragma pack(pop)
int f_cmpA1156(const union A1156 *x, const union A1156 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1156() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1156));
		AF('B',union A1156,m0,1)
		AF('i',union A1156,m1,1)
		AF('d',union A1156,m2,1)
		AF('l',union A1156,m3,1)
		AF('I',union A1156,m4,1)
		AF('C',union A1156,m5,1)
		AF('c',union A1156,m6,1)
		AF('C',union A1156,m7,1)
		AF('i',union A1156,m8,1)
		AF('p',union A1156,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BBISl<BidlICcCip>LSS} */
#pragma pack(push,4)
struct A1157 { B m0; B m1; I m2; S m3; l m4; union A1156 m5; L m6; S m7; S m8; };
#pragma pack(pop)
int f_cmpA1157(const struct A1157 *x, const struct A1157 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1156(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1157() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1157));
		AF('B',struct A1157,m0,1)
		AF('B',struct A1157,m1,1)
		AF('I',struct A1157,m2,1)
		AF('S',struct A1157,m3,1)
		AF('l',struct A1157,m4,1)
		AFa(struct A1157,m5,1,A1156)
		AF('L',struct A1157,m6,1)
		AF('S',struct A1157,m7,1)
		AF('S',struct A1157,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sC> */
#pragma pack(push,2)
union A1158 { s m0; C m1; };
#pragma pack(pop)
int f_cmpA1158(const union A1158 *x, const union A1158 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1158() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1158));
		AF('s',union A1158,m0,1)
		AF('C',union A1158,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLS{BBISl<BidlICcCip>LSS}<sC>Id[12]> */
#pragma pack(push,2)
union A1159 { L m0; L m1; S m2; struct A1157 m3; union A1158 m4; I m5; d m6[12]; };
#pragma pack(pop)
int f_cmpA1159(const union A1159 *x, const union A1159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1157(&x->m3, &y->m3) && f_cmpA1158(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11]; };
DCaggr* f_touchA1159() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1159));
		AF('L',union A1159,m0,1)
		AF('L',union A1159,m1,1)
		AF('S',union A1159,m2,1)
		AFa(union A1159,m3,1,A1157)
		AFa(union A1159,m4,1,A1158)
		AF('I',union A1159,m5,1)
		AF('d',union A1159,m6,12)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJd> */
#pragma pack(push,8)
union A1160 { C m0; J m1; d m2; };
#pragma pack(pop)
int f_cmpA1160(const union A1160 *x, const union A1160 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1160() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1160));
		AF('C',union A1160,m0,1)
		AF('J',union A1160,m1,1)
		AF('d',union A1160,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBid<CJd>LBLSjjC> */
#pragma pack(push,2)
union A1161 { i m0; B m1; i m2; d m3; union A1160 m4; L m5; B m6; L m7; S m8; j m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA1161(const union A1161 *x, const union A1161 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1160(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1161() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1161));
		AF('i',union A1161,m0,1)
		AF('B',union A1161,m1,1)
		AF('i',union A1161,m2,1)
		AF('d',union A1161,m3,1)
		AFa(union A1161,m4,1,A1160)
		AF('L',union A1161,m5,1)
		AF('B',union A1161,m6,1)
		AF('L',union A1161,m7,1)
		AF('S',union A1161,m8,1)
		AF('j',union A1161,m9,1)
		AF('j',union A1161,m10,1)
		AF('C',union A1161,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dScSlsj} */
#pragma pack(push,2)
struct A1162 { d m0; S m1; c m2; S m3; l m4; s m5; j m6; };
#pragma pack(pop)
int f_cmpA1162(const struct A1162 *x, const struct A1162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1162() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1162));
		AF('d',struct A1162,m0,1)
		AF('S',struct A1162,m1,1)
		AF('c',struct A1162,m2,1)
		AF('S',struct A1162,m3,1)
		AF('l',struct A1162,m4,1)
		AF('s',struct A1162,m5,1)
		AF('j',struct A1162,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fjBLjLiLfIf{dScSlsj}} */
#pragma pack(push,4)
struct A1163 { f m0; j m1; B m2; L m3; j m4; L m5; i m6; L m7; f m8; I m9; f m10; struct A1162 m11; };
#pragma pack(pop)
int f_cmpA1163(const struct A1163 *x, const struct A1163 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1162(&x->m11, &y->m11); };
DCaggr* f_touchA1163() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1163));
		AF('f',struct A1163,m0,1)
		AF('j',struct A1163,m1,1)
		AF('B',struct A1163,m2,1)
		AF('L',struct A1163,m3,1)
		AF('j',struct A1163,m4,1)
		AF('L',struct A1163,m5,1)
		AF('i',struct A1163,m6,1)
		AF('L',struct A1163,m7,1)
		AF('f',struct A1163,m8,1)
		AF('I',struct A1163,m9,1)
		AF('f',struct A1163,m10,1)
		AFa(struct A1163,m11,1,A1162)
		dcCloseAggr(a);
	}
	return a;
};
/* {JjSSBSsi{fjBLjLiLfIf{dScSlsj}}cBp} */
#pragma pack(push,4)
struct A1164 { J m0; j m1; S m2; S m3; B m4; S m5; s m6; i m7; struct A1163 m8; c m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA1164(const struct A1164 *x, const struct A1164 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1163(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1164() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1164));
		AF('J',struct A1164,m0,1)
		AF('j',struct A1164,m1,1)
		AF('S',struct A1164,m2,1)
		AF('S',struct A1164,m3,1)
		AF('B',struct A1164,m4,1)
		AF('S',struct A1164,m5,1)
		AF('s',struct A1164,m6,1)
		AF('i',struct A1164,m7,1)
		AFa(struct A1164,m8,1,A1163)
		AF('c',struct A1164,m9,1)
		AF('B',struct A1164,m10,1)
		AF('p',struct A1164,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIfjBjpfCidf} */
#pragma pack(push,4)
struct A1165 { f m0; I m1; f m2; j m3; B m4; j m5; p m6; f m7; C m8; i m9; d m10; f m11; };
#pragma pack(pop)
int f_cmpA1165(const struct A1165 *x, const struct A1165 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1165() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1165));
		AF('f',struct A1165,m0,1)
		AF('I',struct A1165,m1,1)
		AF('f',struct A1165,m2,1)
		AF('j',struct A1165,m3,1)
		AF('B',struct A1165,m4,1)
		AF('j',struct A1165,m5,1)
		AF('p',struct A1165,m6,1)
		AF('f',struct A1165,m7,1)
		AF('C',struct A1165,m8,1)
		AF('i',struct A1165,m9,1)
		AF('d',struct A1165,m10,1)
		AF('f',struct A1165,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Sl> */
#pragma pack(push,2)
union A1166 { S m0; l m1; };
#pragma pack(pop)
int f_cmpA1166(const union A1166 *x, const union A1166 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1166() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1166));
		AF('S',union A1166,m0,1)
		AF('l',union A1166,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<Sl>i} */
#pragma pack(push,4)
struct A1167 { union A1166 m0; i m1; };
#pragma pack(pop)
int f_cmpA1167(const struct A1167 *x, const struct A1167 *y) { return f_cmpA1166(&x->m0, &y->m0) && x->m1 == y->m1; };
DCaggr* f_touchA1167() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1167));
		AFa(struct A1167,m0,1,A1166)
		AF('i',struct A1167,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLdj> */
#pragma pack(push,4)
union A1168 { l m0; L m1; d m2; j m3; };
#pragma pack(pop)
int f_cmpA1168(const union A1168 *x, const union A1168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1168() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1168));
		AF('l',union A1168,m0,1)
		AF('L',union A1168,m1,1)
		AF('d',union A1168,m2,1)
		AF('j',union A1168,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LCiBlj> */
#pragma pack(push,4)
union A1169 { L m0; C m1; i m2; B m3; l m4; j m5; };
#pragma pack(pop)
int f_cmpA1169(const union A1169 *x, const union A1169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1169() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1169));
		AF('L',union A1169,m0,1)
		AF('C',union A1169,m1,1)
		AF('i',union A1169,m2,1)
		AF('B',union A1169,m3,1)
		AF('l',union A1169,m4,1)
		AF('j',union A1169,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ScJ> */
#pragma pack(push,4)
union A1170 { S m0; c m1; J m2; };
#pragma pack(pop)
int f_cmpA1170(const union A1170 *x, const union A1170 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1170() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1170));
		AF('S',union A1170,m0,1)
		AF('c',union A1170,m1,1)
		AF('J',union A1170,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JccSBc[12]LJSfSs} */
#pragma pack(push,1)
struct A1171 { J m0; c m1; c m2; S m3; B m4; c m5[12]; L m6; J m7; S m8; f m9; S m10; s m11; };
#pragma pack(pop)
int f_cmpA1171(const struct A1171 *x, const struct A1171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1171() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1171));
		AF('J',struct A1171,m0,1)
		AF('c',struct A1171,m1,1)
		AF('c',struct A1171,m2,1)
		AF('S',struct A1171,m3,1)
		AF('B',struct A1171,m4,1)
		AF('c',struct A1171,m5,12)
		AF('L',struct A1171,m6,1)
		AF('J',struct A1171,m7,1)
		AF('S',struct A1171,m8,1)
		AF('f',struct A1171,m9,1)
		AF('S',struct A1171,m10,1)
		AF('s',struct A1171,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILBSBJ[15]{JccSBc[12]LJSfSs}BJpjs} */
#pragma pack(push,2)
struct A1172 { I m0; L m1; B m2; S m3; B m4; J m5[15]; struct A1171 m6; B m7; J m8; p m9; j m10; s m11; };
#pragma pack(pop)
int f_cmpA1172(const struct A1172 *x, const struct A1172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m5[14] == y->m5[14] && f_cmpA1171(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1172() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1172));
		AF('I',struct A1172,m0,1)
		AF('L',struct A1172,m1,1)
		AF('B',struct A1172,m2,1)
		AF('S',struct A1172,m3,1)
		AF('B',struct A1172,m4,1)
		AF('J',struct A1172,m5,15)
		AFa(struct A1172,m6,1,A1171)
		AF('B',struct A1172,m7,1)
		AF('J',struct A1172,m8,1)
		AF('p',struct A1172,m9,1)
		AF('j',struct A1172,m10,1)
		AF('s',struct A1172,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLdilssflJLC> */
#pragma pack(push,4)
union A1173 { i m0; L m1; d m2; i m3; l m4; s m5; s m6; f m7; l m8; J m9; L m10; C m11; };
#pragma pack(pop)
int f_cmpA1173(const union A1173 *x, const union A1173 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1173() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1173));
		AF('i',union A1173,m0,1)
		AF('L',union A1173,m1,1)
		AF('d',union A1173,m2,1)
		AF('i',union A1173,m3,1)
		AF('l',union A1173,m4,1)
		AF('s',union A1173,m5,1)
		AF('s',union A1173,m6,1)
		AF('f',union A1173,m7,1)
		AF('l',union A1173,m8,1)
		AF('J',union A1173,m9,1)
		AF('L',union A1173,m10,1)
		AF('C',union A1173,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i<iLdilssflJLC>JcScCBpcl> */
#pragma pack(push,4)
union A1174 { i m0; union A1173 m1; J m2; c m3; S m4; c m5; C m6; B m7; p m8; c m9; l m10; };
#pragma pack(pop)
int f_cmpA1174(const union A1174 *x, const union A1174 *y) { return x->m0 == y->m0 && f_cmpA1173(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1174() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1174));
		AF('i',union A1174,m0,1)
		AFa(union A1174,m1,1,A1173)
		AF('J',union A1174,m2,1)
		AF('c',union A1174,m3,1)
		AF('S',union A1174,m4,1)
		AF('c',union A1174,m5,1)
		AF('C',union A1174,m6,1)
		AF('B',union A1174,m7,1)
		AF('p',union A1174,m8,1)
		AF('c',union A1174,m9,1)
		AF('l',union A1174,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJL> */
#pragma pack(push,8)
union A1175 { f m0; J m1; L m2; };
#pragma pack(pop)
int f_cmpA1175(const union A1175 *x, const union A1175 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1175() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1175));
		AF('f',union A1175,m0,1)
		AF('J',union A1175,m1,1)
		AF('L',union A1175,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CILpcsLliSf<fJL>> */
#pragma pack(push,4)
union A1176 { C m0; I m1; L m2; p m3; c m4; s m5; L m6; l m7; i m8; S m9; f m10; union A1175 m11; };
#pragma pack(pop)
int f_cmpA1176(const union A1176 *x, const union A1176 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1175(&x->m11, &y->m11); };
DCaggr* f_touchA1176() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1176));
		AF('C',union A1176,m0,1)
		AF('I',union A1176,m1,1)
		AF('L',union A1176,m2,1)
		AF('p',union A1176,m3,1)
		AF('c',union A1176,m4,1)
		AF('s',union A1176,m5,1)
		AF('L',union A1176,m6,1)
		AF('l',union A1176,m7,1)
		AF('i',union A1176,m8,1)
		AF('S',union A1176,m9,1)
		AF('f',union A1176,m10,1)
		AFa(union A1176,m11,1,A1175)
		dcCloseAggr(a);
	}
	return a;
};
/* <jj<i<iLdilssflJLC>JcScCBpcl>BLc<CILpcsLliSf<fJL>>S<s>lIf> */
#pragma pack(push,8)
union A1177 { j m0; j m1; union A1174 m2; B m3; L m4; c m5; union A1176 m6; S m7; union A713 m8; l m9; I m10; f m11; };
#pragma pack(pop)
int f_cmpA1177(const union A1177 *x, const union A1177 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1174(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1176(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA713(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1177() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1177));
		AF('j',union A1177,m0,1)
		AF('j',union A1177,m1,1)
		AFa(union A1177,m2,1,A1174)
		AF('B',union A1177,m3,1)
		AF('L',union A1177,m4,1)
		AF('c',union A1177,m5,1)
		AFa(union A1177,m6,1,A1176)
		AF('S',union A1177,m7,1)
		AFa(union A1177,m8,1,A713)
		AF('l',union A1177,m9,1)
		AF('I',union A1177,m10,1)
		AF('f',union A1177,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lcf[8]lLf[6]LcJSis> */
#pragma pack(push,2)
union A1178 { l m0; c m1; f m2[8]; l m3; L m4; f m5[6]; L m6; c m7; J m8; S m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA1178(const union A1178 *x, const union A1178 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1178() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1178));
		AF('l',union A1178,m0,1)
		AF('c',union A1178,m1,1)
		AF('f',union A1178,m2,8)
		AF('l',union A1178,m3,1)
		AF('L',union A1178,m4,1)
		AF('f',union A1178,m5,6)
		AF('L',union A1178,m6,1)
		AF('c',union A1178,m7,1)
		AF('J',union A1178,m8,1)
		AF('S',union A1178,m9,1)
		AF('i',union A1178,m10,1)
		AF('s',union A1178,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jI} */
#pragma pack(push,1)
struct A1179 { j m0; I m1; };
#pragma pack(pop)
int f_cmpA1179(const struct A1179 *x, const struct A1179 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1179() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1179));
		AF('j',struct A1179,m0,1)
		AF('I',struct A1179,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcssCCLdlfCl[9]} */
#pragma pack(push,2)
struct A1180 { f m0; c m1; s m2; s m3; C m4; C m5; L m6; d m7; l m8; f m9; C m10; l m11[9]; };
#pragma pack(pop)
int f_cmpA1180(const struct A1180 *x, const struct A1180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8]; };
DCaggr* f_touchA1180() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1180));
		AF('f',struct A1180,m0,1)
		AF('c',struct A1180,m1,1)
		AF('s',struct A1180,m2,1)
		AF('s',struct A1180,m3,1)
		AF('C',struct A1180,m4,1)
		AF('C',struct A1180,m5,1)
		AF('L',struct A1180,m6,1)
		AF('d',struct A1180,m7,1)
		AF('l',struct A1180,m8,1)
		AF('f',struct A1180,m9,1)
		AF('C',struct A1180,m10,1)
		AF('l',struct A1180,m11,9)
		dcCloseAggr(a);
	}
	return a;
};
/* <lscdSJ> */
#pragma pack(push,4)
union A1181 { l m0; s m1; c m2; d m3; S m4; J m5; };
#pragma pack(pop)
int f_cmpA1181(const union A1181 *x, const union A1181 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1181() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1181));
		AF('l',union A1181,m0,1)
		AF('s',union A1181,m1,1)
		AF('c',union A1181,m2,1)
		AF('d',union A1181,m3,1)
		AF('S',union A1181,m4,1)
		AF('J',union A1181,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CcBBlJBLsJ[7]Bj> */
#pragma pack(push,4)
union A1182 { C m0; c m1; B m2; B m3; l m4; J m5; B m6; L m7; s m8; J m9[7]; B m10; j m11; };
#pragma pack(pop)
int f_cmpA1182(const union A1182 *x, const union A1182 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1182() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1182));
		AF('C',union A1182,m0,1)
		AF('c',union A1182,m1,1)
		AF('B',union A1182,m2,1)
		AF('B',union A1182,m3,1)
		AF('l',union A1182,m4,1)
		AF('J',union A1182,m5,1)
		AF('B',union A1182,m6,1)
		AF('L',union A1182,m7,1)
		AF('s',union A1182,m8,1)
		AF('J',union A1182,m9,7)
		AF('B',union A1182,m10,1)
		AF('j',union A1182,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i<lscdSJ>JIJplB<CcBBlJBLsJ[7]Bj>lpC} */
#pragma pack(push,4)
struct A1183 { i m0; union A1181 m1; J m2; I m3; J m4; p m5; l m6; B m7; union A1182 m8; l m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1183(const struct A1183 *x, const struct A1183 *y) { return x->m0 == y->m0 && f_cmpA1181(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1182(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1183() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1183));
		AF('i',struct A1183,m0,1)
		AFa(struct A1183,m1,1,A1181)
		AF('J',struct A1183,m2,1)
		AF('I',struct A1183,m3,1)
		AF('J',struct A1183,m4,1)
		AF('p',struct A1183,m5,1)
		AF('l',struct A1183,m6,1)
		AF('B',struct A1183,m7,1)
		AFa(struct A1183,m8,1,A1182)
		AF('l',struct A1183,m9,1)
		AF('p',struct A1183,m10,1)
		AF('C',struct A1183,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bjl[14]jf[14]BBSBfpC> */
#pragma pack(push,4)
union A1184 { B m0; j m1; l m2[14]; j m3; f m4[14]; B m5; B m6; S m7; B m8; f m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1184(const union A1184 *x, const union A1184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1184() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1184));
		AF('B',union A1184,m0,1)
		AF('j',union A1184,m1,1)
		AF('l',union A1184,m2,14)
		AF('j',union A1184,m3,1)
		AF('f',union A1184,m4,14)
		AF('B',union A1184,m5,1)
		AF('B',union A1184,m6,1)
		AF('S',union A1184,m7,1)
		AF('B',union A1184,m8,1)
		AF('f',union A1184,m9,1)
		AF('p',union A1184,m10,1)
		AF('C',union A1184,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f> */
#pragma pack(push,2)
union A1185 { i m0; J m1; J m2; C m3; s m4; i m5; i m6; j m7; C m8; d m9; union A1184 m10; f m11; };
#pragma pack(pop)
int f_cmpA1185(const union A1185 *x, const union A1185 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1184(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1185() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1185));
		AF('i',union A1185,m0,1)
		AF('J',union A1185,m1,1)
		AF('J',union A1185,m2,1)
		AF('C',union A1185,m3,1)
		AF('s',union A1185,m4,1)
		AF('i',union A1185,m5,1)
		AF('i',union A1185,m6,1)
		AF('j',union A1185,m7,1)
		AF('C',union A1185,m8,1)
		AF('d',union A1185,m9,1)
		AFa(union A1185,m10,1,A1184)
		AF('f',union A1185,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfLiJj> */
#pragma pack(push,2)
union A1186 { l m0; f m1; L m2; i m3; J m4; j m5; };
#pragma pack(pop)
int f_cmpA1186(const union A1186 *x, const union A1186 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1186() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1186));
		AF('l',union A1186,m0,1)
		AF('f',union A1186,m1,1)
		AF('L',union A1186,m2,1)
		AF('i',union A1186,m3,1)
		AF('J',union A1186,m4,1)
		AF('j',union A1186,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cs[1]fSssJcBJJ> */
#pragma pack(push,4)
union A1187 { C m0; s m1[1]; f m2; S m3; s m4; s m5; J m6; c m7; B m8; J m9; J m10; };
#pragma pack(pop)
int f_cmpA1187(const union A1187 *x, const union A1187 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1187() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1187));
		AF('C',union A1187,m0,1)
		AF('s',union A1187,m1,1)
		AF('f',union A1187,m2,1)
		AF('S',union A1187,m3,1)
		AF('s',union A1187,m4,1)
		AF('s',union A1187,m5,1)
		AF('J',union A1187,m6,1)
		AF('c',union A1187,m7,1)
		AF('B',union A1187,m8,1)
		AF('J',union A1187,m9,1)
		AF('J',union A1187,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B<Cs[1]fSssJcBJJ>IjifBSCBpB> */
#pragma pack(push,2)
union A1188 { B m0; union A1187 m1; I m2; j m3; i m4; f m5; B m6; S m7; C m8; B m9; p m10; B m11; };
#pragma pack(pop)
int f_cmpA1188(const union A1188 *x, const union A1188 *y) { return x->m0 == y->m0 && f_cmpA1187(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1188() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1188));
		AF('B',union A1188,m0,1)
		AFa(union A1188,m1,1,A1187)
		AF('I',union A1188,m2,1)
		AF('j',union A1188,m3,1)
		AF('i',union A1188,m4,1)
		AF('f',union A1188,m5,1)
		AF('B',union A1188,m6,1)
		AF('S',union A1188,m7,1)
		AF('C',union A1188,m8,1)
		AF('B',union A1188,m9,1)
		AF('p',union A1188,m10,1)
		AF('B',union A1188,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSfpjdCdSidp} */
#pragma pack(push,4)
struct A1189 { d m0; S m1; f m2; p m3; j m4; d m5; C m6; d m7; S m8; i m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA1189(const struct A1189 *x, const struct A1189 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1189() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1189));
		AF('d',struct A1189,m0,1)
		AF('S',struct A1189,m1,1)
		AF('f',struct A1189,m2,1)
		AF('p',struct A1189,m3,1)
		AF('j',struct A1189,m4,1)
		AF('d',struct A1189,m5,1)
		AF('C',struct A1189,m6,1)
		AF('d',struct A1189,m7,1)
		AF('S',struct A1189,m8,1)
		AF('i',struct A1189,m9,1)
		AF('d',struct A1189,m10,1)
		AF('p',struct A1189,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I[3]sfcs} */
#pragma pack(push,8)
struct A1190 { I m0[3]; s m1; f m2; c m3; s m4; };
#pragma pack(pop)
int f_cmpA1190(const struct A1190 *x, const struct A1190 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1190() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1190));
		AF('I',struct A1190,m0,3)
		AF('s',struct A1190,m1,1)
		AF('f',struct A1190,m2,1)
		AF('c',struct A1190,m3,1)
		AF('s',struct A1190,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSfSjsB> */
#pragma pack(push,1)
union A1191 { l m0; S m1; f m2; S m3; j m4; s m5; B m6; };
#pragma pack(pop)
int f_cmpA1191(const union A1191 *x, const union A1191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1191() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1191));
		AF('l',union A1191,m0,1)
		AF('S',union A1191,m1,1)
		AF('f',union A1191,m2,1)
		AF('S',union A1191,m3,1)
		AF('j',union A1191,m4,1)
		AF('s',union A1191,m5,1)
		AF('B',union A1191,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<lSfSjsB>IdfJCifILsC} */
#pragma pack(push,8)
struct A1192 { union A1191 m0; I m1; d m2; f m3; J m4; C m5; i m6; f m7; I m8; L m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA1192(const struct A1192 *x, const struct A1192 *y) { return f_cmpA1191(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1192() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1192));
		AFa(struct A1192,m0,1,A1191)
		AF('I',struct A1192,m1,1)
		AF('d',struct A1192,m2,1)
		AF('f',struct A1192,m3,1)
		AF('J',struct A1192,m4,1)
		AF('C',struct A1192,m5,1)
		AF('i',struct A1192,m6,1)
		AF('f',struct A1192,m7,1)
		AF('I',struct A1192,m8,1)
		AF('L',struct A1192,m9,1)
		AF('s',struct A1192,m10,1)
		AF('C',struct A1192,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dICicfildfJL} */
#pragma pack(push,2)
struct A1193 { d m0; I m1; C m2; i m3; c m4; f m5; i m6; l m7; d m8; f m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA1193(const struct A1193 *x, const struct A1193 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1193() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1193));
		AF('d',struct A1193,m0,1)
		AF('I',struct A1193,m1,1)
		AF('C',struct A1193,m2,1)
		AF('i',struct A1193,m3,1)
		AF('c',struct A1193,m4,1)
		AF('f',struct A1193,m5,1)
		AF('i',struct A1193,m6,1)
		AF('l',struct A1193,m7,1)
		AF('d',struct A1193,m8,1)
		AF('f',struct A1193,m9,1)
		AF('J',struct A1193,m10,1)
		AF('L',struct A1193,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCSdlBsSd[13]SCS} */
#pragma pack(push,4)
struct A1194 { p m0; C m1; S m2; d m3; l m4; B m5; s m6; S m7; d m8[13]; S m9; C m10; S m11; };
#pragma pack(pop)
int f_cmpA1194(const struct A1194 *x, const struct A1194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1194() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1194));
		AF('p',struct A1194,m0,1)
		AF('C',struct A1194,m1,1)
		AF('S',struct A1194,m2,1)
		AF('d',struct A1194,m3,1)
		AF('l',struct A1194,m4,1)
		AF('B',struct A1194,m5,1)
		AF('s',struct A1194,m6,1)
		AF('S',struct A1194,m7,1)
		AF('d',struct A1194,m8,13)
		AF('S',struct A1194,m9,1)
		AF('C',struct A1194,m10,1)
		AF('S',struct A1194,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{dICicfildfJL}LBfSLlid{pCSdlBsSd[13]SCS}} */
#pragma pack(push,4)
struct A1195 { struct A1193 m0; L m1; B m2; f m3; S m4; L m5; l m6; i m7; d m8; struct A1194 m9; };
#pragma pack(pop)
int f_cmpA1195(const struct A1195 *x, const struct A1195 *y) { return f_cmpA1193(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1194(&x->m9, &y->m9); };
DCaggr* f_touchA1195() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A1195));
		AFa(struct A1195,m0,1,A1193)
		AF('L',struct A1195,m1,1)
		AF('B',struct A1195,m2,1)
		AF('f',struct A1195,m3,1)
		AF('S',struct A1195,m4,1)
		AF('L',struct A1195,m5,1)
		AF('l',struct A1195,m6,1)
		AF('i',struct A1195,m7,1)
		AF('d',struct A1195,m8,1)
		AFa(struct A1195,m9,1,A1194)
		dcCloseAggr(a);
	}
	return a;
};
/* <JcSfSJB> */
#pragma pack(push,1)
union A1196 { J m0; c m1; S m2; f m3; S m4; J m5; B m6; };
#pragma pack(pop)
int f_cmpA1196(const union A1196 *x, const union A1196 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1196() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1196));
		AF('J',union A1196,m0,1)
		AF('c',union A1196,m1,1)
		AF('S',union A1196,m2,1)
		AF('f',union A1196,m3,1)
		AF('S',union A1196,m4,1)
		AF('J',union A1196,m5,1)
		AF('B',union A1196,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {diScIiiisdBC} */
#pragma pack(push,4)
struct A1197 { d m0; i m1; S m2; c m3; I m4; i m5; i m6; i m7; s m8; d m9; B m10; C m11; };
#pragma pack(pop)
int f_cmpA1197(const struct A1197 *x, const struct A1197 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1197() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1197));
		AF('d',struct A1197,m0,1)
		AF('i',struct A1197,m1,1)
		AF('S',struct A1197,m2,1)
		AF('c',struct A1197,m3,1)
		AF('I',struct A1197,m4,1)
		AF('i',struct A1197,m5,1)
		AF('i',struct A1197,m6,1)
		AF('i',struct A1197,m7,1)
		AF('s',struct A1197,m8,1)
		AF('d',struct A1197,m9,1)
		AF('B',struct A1197,m10,1)
		AF('C',struct A1197,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ} */
#pragma pack(push,2)
struct A1198 { union A1196 m0; f m1; C m2; L m3; f m4; l m5; f m6; struct A1197 m7; c m8; I m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA1198(const struct A1198 *x, const struct A1198 *y) { return f_cmpA1196(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1197(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1198() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1198));
		AFa(struct A1198,m0,1,A1196)
		AF('f',struct A1198,m1,1)
		AF('C',struct A1198,m2,1)
		AF('L',struct A1198,m3,1)
		AF('f',struct A1198,m4,1)
		AF('l',struct A1198,m5,1)
		AF('f',struct A1198,m6,1)
		AFa(struct A1198,m7,1,A1197)
		AF('c',struct A1198,m8,1)
		AF('I',struct A1198,m9,1)
		AF('J',struct A1198,m10,1)
		AF('J',struct A1198,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IiccSICJjic} */
#pragma pack(push,4)
struct A1199 { I m0; i m1; c m2; c m3; S m4; I m5; C m6; J m7; j m8; i m9; c m10; };
#pragma pack(pop)
int f_cmpA1199(const struct A1199 *x, const struct A1199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1199() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1199));
		AF('I',struct A1199,m0,1)
		AF('i',struct A1199,m1,1)
		AF('c',struct A1199,m2,1)
		AF('c',struct A1199,m3,1)
		AF('S',struct A1199,m4,1)
		AF('I',struct A1199,m5,1)
		AF('C',struct A1199,m6,1)
		AF('J',struct A1199,m7,1)
		AF('j',struct A1199,m8,1)
		AF('i',struct A1199,m9,1)
		AF('c',struct A1199,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JClcSd> */
#pragma pack(push,2)
union A1200 { J m0; C m1; l m2; c m3; S m4; d m5; };
#pragma pack(pop)
int f_cmpA1200(const union A1200 *x, const union A1200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1200() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1200));
		AF('J',union A1200,m0,1)
		AF('C',union A1200,m1,1)
		AF('l',union A1200,m2,1)
		AF('c',union A1200,m3,1)
		AF('S',union A1200,m4,1)
		AF('d',union A1200,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>> */
#pragma pack(push,4)
union A1201 { j m0; d m1; s m2; L m3; J m4; S m5; i m6; struct A1198 m7; j m8; struct A1199 m9; B m10; union A1200 m11; };
#pragma pack(pop)
int f_cmpA1201(const union A1201 *x, const union A1201 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1198(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA1199(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1200(&x->m11, &y->m11); };
DCaggr* f_touchA1201() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1201));
		AF('j',union A1201,m0,1)
		AF('d',union A1201,m1,1)
		AF('s',union A1201,m2,1)
		AF('L',union A1201,m3,1)
		AF('J',union A1201,m4,1)
		AF('S',union A1201,m5,1)
		AF('i',union A1201,m6,1)
		AFa(union A1201,m7,1,A1198)
		AF('j',union A1201,m8,1)
		AFa(union A1201,m9,1,A1199)
		AF('B',union A1201,m10,1)
		AFa(union A1201,m11,1,A1200)
		dcCloseAggr(a);
	}
	return a;
};
/* <ifJ> */
#pragma pack(push,4)
union A1202 { i m0; f m1; J m2; };
#pragma pack(pop)
int f_cmpA1202(const union A1202 *x, const union A1202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1202() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1202));
		AF('i',union A1202,m0,1)
		AF('f',union A1202,m1,1)
		AF('J',union A1202,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <si> */
#pragma pack(push,4)
union A1203 { s m0; i m1; };
#pragma pack(pop)
int f_cmpA1203(const union A1203 *x, const union A1203 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1203() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1203));
		AF('s',union A1203,m0,1)
		AF('i',union A1203,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldCSLjLsIdsp} */
#pragma pack(push,2)
struct A1204 { l m0; d m1; C m2; S m3; L m4; j m5; L m6; s m7; I m8; d m9; s m10; p m11; };
#pragma pack(pop)
int f_cmpA1204(const struct A1204 *x, const struct A1204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1204() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1204));
		AF('l',struct A1204,m0,1)
		AF('d',struct A1204,m1,1)
		AF('C',struct A1204,m2,1)
		AF('S',struct A1204,m3,1)
		AF('L',struct A1204,m4,1)
		AF('j',struct A1204,m5,1)
		AF('L',struct A1204,m6,1)
		AF('s',struct A1204,m7,1)
		AF('I',struct A1204,m8,1)
		AF('d',struct A1204,m9,1)
		AF('s',struct A1204,m10,1)
		AF('p',struct A1204,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{ldCSLjLsIdsp}SljBcjCdBj} */
#pragma pack(push,4)
struct A1205 { struct A1204 m0; S m1; l m2; j m3; B m4; c m5; j m6; C m7; d m8; B m9; j m10; };
#pragma pack(pop)
int f_cmpA1205(const struct A1205 *x, const struct A1205 *y) { return f_cmpA1204(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1205() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1205));
		AFa(struct A1205,m0,1,A1204)
		AF('S',struct A1205,m1,1)
		AF('l',struct A1205,m2,1)
		AF('j',struct A1205,m3,1)
		AF('B',struct A1205,m4,1)
		AF('c',struct A1205,m5,1)
		AF('j',struct A1205,m6,1)
		AF('C',struct A1205,m7,1)
		AF('d',struct A1205,m8,1)
		AF('B',struct A1205,m9,1)
		AF('j',struct A1205,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jSCliJLc} */
#pragma pack(push,4)
struct A1206 { j m0; S m1; C m2; l m3; i m4; J m5; L m6; c m7; };
#pragma pack(pop)
int f_cmpA1206(const struct A1206 *x, const struct A1206 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1206() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A1206));
		AF('j',struct A1206,m0,1)
		AF('S',struct A1206,m1,1)
		AF('C',struct A1206,m2,1)
		AF('l',struct A1206,m3,1)
		AF('i',struct A1206,m4,1)
		AF('J',struct A1206,m5,1)
		AF('L',struct A1206,m6,1)
		AF('c',struct A1206,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iCs} */
#pragma pack(push,4)
struct A1207 { i m0; C m1; s m2; };
#pragma pack(pop)
int f_cmpA1207(const struct A1207 *x, const struct A1207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1207() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1207));
		AF('i',struct A1207,m0,1)
		AF('C',struct A1207,m1,1)
		AF('s',struct A1207,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJBpBfsspd} */
#pragma pack(push,4)
struct A1208 { p m0; J m1; B m2; p m3; B m4; f m5; s m6; s m7; p m8; d m9; };
#pragma pack(pop)
int f_cmpA1208(const struct A1208 *x, const struct A1208 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1208() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A1208));
		AF('p',struct A1208,m0,1)
		AF('J',struct A1208,m1,1)
		AF('B',struct A1208,m2,1)
		AF('p',struct A1208,m3,1)
		AF('B',struct A1208,m4,1)
		AF('f',struct A1208,m5,1)
		AF('s',struct A1208,m6,1)
		AF('s',struct A1208,m7,1)
		AF('p',struct A1208,m8,1)
		AF('d',struct A1208,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIpCcfscsSiI} */
#pragma pack(push,4)
struct A1209 { f m0; I m1; p m2; C m3; c m4; f m5; s m6; c m7; s m8; S m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA1209(const struct A1209 *x, const struct A1209 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1209() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1209));
		AF('f',struct A1209,m0,1)
		AF('I',struct A1209,m1,1)
		AF('p',struct A1209,m2,1)
		AF('C',struct A1209,m3,1)
		AF('c',struct A1209,m4,1)
		AF('f',struct A1209,m5,1)
		AF('s',struct A1209,m6,1)
		AF('c',struct A1209,m7,1)
		AF('s',struct A1209,m8,1)
		AF('S',struct A1209,m9,1)
		AF('i',struct A1209,m10,1)
		AF('I',struct A1209,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LcLJfdLliLBp> */
#pragma pack(push,4)
union A1210 { L m0; c m1; L m2; J m3; f m4; d m5; L m6; l m7; i m8; L m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA1210(const union A1210 *x, const union A1210 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1210() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1210));
		AF('L',union A1210,m0,1)
		AF('c',union A1210,m1,1)
		AF('L',union A1210,m2,1)
		AF('J',union A1210,m3,1)
		AF('f',union A1210,m4,1)
		AF('d',union A1210,m5,1)
		AF('L',union A1210,m6,1)
		AF('l',union A1210,m7,1)
		AF('i',union A1210,m8,1)
		AF('L',union A1210,m9,1)
		AF('B',union A1210,m10,1)
		AF('p',union A1210,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bd<LcLJfdLliLBp>BpdjpLISp} */
#pragma pack(push,4)
struct A1211 { B m0; d m1; union A1210 m2; B m3; p m4; d m5; j m6; p m7; L m8; I m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA1211(const struct A1211 *x, const struct A1211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1210(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1211() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1211));
		AF('B',struct A1211,m0,1)
		AF('d',struct A1211,m1,1)
		AFa(struct A1211,m2,1,A1210)
		AF('B',struct A1211,m3,1)
		AF('p',struct A1211,m4,1)
		AF('d',struct A1211,m5,1)
		AF('j',struct A1211,m6,1)
		AF('p',struct A1211,m7,1)
		AF('L',struct A1211,m8,1)
		AF('I',struct A1211,m9,1)
		AF('S',struct A1211,m10,1)
		AF('p',struct A1211,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ISJ[3]ffCCl> */
#pragma pack(push,2)
union A1212 { I m0; S m1; J m2[3]; f m3; f m4; C m5; C m6; l m7; };
#pragma pack(pop)
int f_cmpA1212(const union A1212 *x, const union A1212 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1212() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1212));
		AF('I',union A1212,m0,1)
		AF('S',union A1212,m1,1)
		AF('J',union A1212,m2,3)
		AF('f',union A1212,m3,1)
		AF('f',union A1212,m4,1)
		AF('C',union A1212,m5,1)
		AF('C',union A1212,m6,1)
		AF('l',union A1212,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dLiLC<ISJ[3]ffCCl>lliSjp} */
#pragma pack(push,4)
struct A1213 { d m0; L m1; i m2; L m3; C m4; union A1212 m5; l m6; l m7; i m8; S m9; j m10; p m11; };
#pragma pack(pop)
int f_cmpA1213(const struct A1213 *x, const struct A1213 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1212(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1213() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1213));
		AF('d',struct A1213,m0,1)
		AF('L',struct A1213,m1,1)
		AF('i',struct A1213,m2,1)
		AF('L',struct A1213,m3,1)
		AF('C',struct A1213,m4,1)
		AFa(struct A1213,m5,1,A1212)
		AF('l',struct A1213,m6,1)
		AF('l',struct A1213,m7,1)
		AF('i',struct A1213,m8,1)
		AF('S',struct A1213,m9,1)
		AF('j',struct A1213,m10,1)
		AF('p',struct A1213,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BcsfcCCCB} */
#pragma pack(push,4)
struct A1214 { B m0; c m1; s m2; f m3; c m4; C m5; C m6; C m7; B m8; };
#pragma pack(pop)
int f_cmpA1214(const struct A1214 *x, const struct A1214 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1214() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1214));
		AF('B',struct A1214,m0,1)
		AF('c',struct A1214,m1,1)
		AF('s',struct A1214,m2,1)
		AF('f',struct A1214,m3,1)
		AF('c',struct A1214,m4,1)
		AF('C',struct A1214,m5,1)
		AF('C',struct A1214,m6,1)
		AF('C',struct A1214,m7,1)
		AF('B',struct A1214,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fLlipc> */
#pragma pack(push,4)
union A1215 { f m0; L m1; l m2; i m3; p m4; c m5; };
#pragma pack(pop)
int f_cmpA1215(const union A1215 *x, const union A1215 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1215() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1215));
		AF('f',union A1215,m0,1)
		AF('L',union A1215,m1,1)
		AF('l',union A1215,m2,1)
		AF('i',union A1215,m3,1)
		AF('p',union A1215,m4,1)
		AF('c',union A1215,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Iff{BcsfcCCCB}c<fLlipc>SsiClj} */
#pragma pack(push,4)
struct A1216 { I m0; f m1; f m2; struct A1214 m3; c m4; union A1215 m5; S m6; s m7; i m8; C m9; l m10; j m11; };
#pragma pack(pop)
int f_cmpA1216(const struct A1216 *x, const struct A1216 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1214(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1215(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1216() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1216));
		AF('I',struct A1216,m0,1)
		AF('f',struct A1216,m1,1)
		AF('f',struct A1216,m2,1)
		AFa(struct A1216,m3,1,A1214)
		AF('c',struct A1216,m4,1)
		AFa(struct A1216,m5,1,A1215)
		AF('S',struct A1216,m6,1)
		AF('s',struct A1216,m7,1)
		AF('i',struct A1216,m8,1)
		AF('C',struct A1216,m9,1)
		AF('l',struct A1216,m10,1)
		AF('j',struct A1216,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}> */
#pragma pack(push,4)
union A1217 { struct A1213 m0; l m1; I m2; i m3; s m4; C m5; struct A1216 m6; };
#pragma pack(pop)
int f_cmpA1217(const union A1217 *x, const union A1217 *y) { return f_cmpA1213(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1216(&x->m6, &y->m6); };
DCaggr* f_touchA1217() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1217));
		AFa(union A1217,m0,1,A1213)
		AF('l',union A1217,m1,1)
		AF('I',union A1217,m2,1)
		AF('i',union A1217,m3,1)
		AF('s',union A1217,m4,1)
		AF('C',union A1217,m5,1)
		AFa(union A1217,m6,1,A1216)
		dcCloseAggr(a);
	}
	return a;
};
/* <dfI[16]djjS> */
#pragma pack(push,4)
union A1218 { d m0; f m1; I m2[16]; d m3; j m4; j m5; S m6; };
#pragma pack(pop)
int f_cmpA1218(const union A1218 *x, const union A1218 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m2[15] == y->m2[15] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1218() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1218));
		AF('d',union A1218,m0,1)
		AF('f',union A1218,m1,1)
		AF('I',union A1218,m2,16)
		AF('d',union A1218,m3,1)
		AF('j',union A1218,m4,1)
		AF('j',union A1218,m5,1)
		AF('S',union A1218,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sLfS<dfI[16]djjS>BfspIcc} */
#pragma pack(push,4)
struct A1219 { s m0; L m1; f m2; S m3; union A1218 m4; B m5; f m6; s m7; p m8; I m9; c m10; c m11; };
#pragma pack(pop)
int f_cmpA1219(const struct A1219 *x, const struct A1219 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1218(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1219() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1219));
		AF('s',struct A1219,m0,1)
		AF('L',struct A1219,m1,1)
		AF('f',struct A1219,m2,1)
		AF('S',struct A1219,m3,1)
		AFa(struct A1219,m4,1,A1218)
		AF('B',struct A1219,m5,1)
		AF('f',struct A1219,m6,1)
		AF('s',struct A1219,m7,1)
		AF('p',struct A1219,m8,1)
		AF('I',struct A1219,m9,1)
		AF('c',struct A1219,m10,1)
		AF('c',struct A1219,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlSdlLlBIpSC> */
#pragma pack(push,2)
union A1220 { I m0; l m1; S m2; d m3; l m4; L m5; l m6; B m7; I m8; p m9; S m10; C m11; };
#pragma pack(pop)
int f_cmpA1220(const union A1220 *x, const union A1220 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1220() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1220));
		AF('I',union A1220,m0,1)
		AF('l',union A1220,m1,1)
		AF('S',union A1220,m2,1)
		AF('d',union A1220,m3,1)
		AF('l',union A1220,m4,1)
		AF('L',union A1220,m5,1)
		AF('l',union A1220,m6,1)
		AF('B',union A1220,m7,1)
		AF('I',union A1220,m8,1)
		AF('p',union A1220,m9,1)
		AF('S',union A1220,m10,1)
		AF('C',union A1220,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LL<IlSdlLlBIpSC>iJpLiIsfL> */
#pragma pack(push,4)
union A1221 { L m0; L m1; union A1220 m2; i m3; J m4; p m5; L m6; i m7; I m8; s m9; f m10; L m11; };
#pragma pack(pop)
int f_cmpA1221(const union A1221 *x, const union A1221 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1220(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1221() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1221));
		AF('L',union A1221,m0,1)
		AF('L',union A1221,m1,1)
		AFa(union A1221,m2,1,A1220)
		AF('i',union A1221,m3,1)
		AF('J',union A1221,m4,1)
		AF('p',union A1221,m5,1)
		AF('L',union A1221,m6,1)
		AF('i',union A1221,m7,1)
		AF('I',union A1221,m8,1)
		AF('s',union A1221,m9,1)
		AF('f',union A1221,m10,1)
		AF('L',union A1221,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi} */
#pragma pack(push,8)
struct A1222 { B m0; s m1; I m2; struct A1219 m3; union A1221 m4; c m5; B m6; C m7; i m8; };
#pragma pack(pop)
int f_cmpA1222(const struct A1222 *x, const struct A1222 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1219(&x->m3, &y->m3) && f_cmpA1221(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1222() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1222));
		AF('B',struct A1222,m0,1)
		AF('s',struct A1222,m1,1)
		AF('I',struct A1222,m2,1)
		AFa(struct A1222,m3,1,A1219)
		AFa(struct A1222,m4,1,A1221)
		AF('c',struct A1222,m5,1)
		AF('B',struct A1222,m6,1)
		AF('C',struct A1222,m7,1)
		AF('i',struct A1222,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C{li}fjJ> */
#pragma pack(push,2)
union A1223 { C m0; struct A1028 m1; f m2; j m3; J m4; };
#pragma pack(pop)
int f_cmpA1223(const union A1223 *x, const union A1223 *y) { return x->m0 == y->m0 && f_cmpA1028(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1223() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1223));
		AF('C',union A1223,m0,1)
		AFa(union A1223,m1,1,A1028)
		AF('f',union A1223,m2,1)
		AF('j',union A1223,m3,1)
		AF('J',union A1223,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jJlji} */
#pragma pack(push,4)
struct A1224 { j m0; J m1; l m2; j m3; i m4; };
#pragma pack(pop)
int f_cmpA1224(const struct A1224 *x, const struct A1224 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1224() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1224));
		AF('j',struct A1224,m0,1)
		AF('J',struct A1224,m1,1)
		AF('l',struct A1224,m2,1)
		AF('j',struct A1224,m3,1)
		AF('i',struct A1224,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSLfcSIBfjJf} */
#pragma pack(push,2)
struct A1225 { c m0; S m1; L m2; f m3; c m4; S m5; I m6; B m7; f m8; j m9; J m10; f m11; };
#pragma pack(pop)
int f_cmpA1225(const struct A1225 *x, const struct A1225 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1225() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1225));
		AF('c',struct A1225,m0,1)
		AF('S',struct A1225,m1,1)
		AF('L',struct A1225,m2,1)
		AF('f',struct A1225,m3,1)
		AF('c',struct A1225,m4,1)
		AF('S',struct A1225,m5,1)
		AF('I',struct A1225,m6,1)
		AF('B',struct A1225,m7,1)
		AF('f',struct A1225,m8,1)
		AF('j',struct A1225,m9,1)
		AF('J',struct A1225,m10,1)
		AF('f',struct A1225,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jILjcI> */
#pragma pack(push,8)
union A1226 { j m0; I m1; L m2; j m3; c m4; I m5; };
#pragma pack(pop)
int f_cmpA1226(const union A1226 *x, const union A1226 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1226() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1226));
		AF('j',union A1226,m0,1)
		AF('I',union A1226,m1,1)
		AF('L',union A1226,m2,1)
		AF('j',union A1226,m3,1)
		AF('c',union A1226,m4,1)
		AF('I',union A1226,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BCdcpf[7]Bj<jILjcI>IJB> */
#pragma pack(push,4)
union A1227 { B m0; C m1; d m2; c m3; p m4; f m5[7]; B m6; j m7; union A1226 m8; I m9; J m10; B m11; };
#pragma pack(pop)
int f_cmpA1227(const union A1227 *x, const union A1227 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1226(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1227() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1227));
		AF('B',union A1227,m0,1)
		AF('C',union A1227,m1,1)
		AF('d',union A1227,m2,1)
		AF('c',union A1227,m3,1)
		AF('p',union A1227,m4,1)
		AF('f',union A1227,m5,7)
		AF('B',union A1227,m6,1)
		AF('j',union A1227,m7,1)
		AFa(union A1227,m8,1,A1226)
		AF('I',union A1227,m9,1)
		AF('J',union A1227,m10,1)
		AF('B',union A1227,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L<BCdcpf[7]Bj<jILjcI>IJB>pBBffIcsi[5]j> */
#pragma pack(push,1)
union A1228 { L m0; union A1227 m1; p m2; B m3; B m4; f m5; f m6; I m7; c m8; s m9; i m10[5]; j m11; };
#pragma pack(pop)
int f_cmpA1228(const union A1228 *x, const union A1228 *y) { return x->m0 == y->m0 && f_cmpA1227(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m11 == y->m11; };
DCaggr* f_touchA1228() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1228));
		AF('L',union A1228,m0,1)
		AFa(union A1228,m1,1,A1227)
		AF('p',union A1228,m2,1)
		AF('B',union A1228,m3,1)
		AF('B',union A1228,m4,1)
		AF('f',union A1228,m5,1)
		AF('f',union A1228,m6,1)
		AF('I',union A1228,m7,1)
		AF('c',union A1228,m8,1)
		AF('s',union A1228,m9,1)
		AF('i',union A1228,m10,5)
		AF('j',union A1228,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjsJcSI[4]lCCl} */
#pragma pack(push,2)
struct A1229 { L m0; j m1; s m2; J m3; c m4; S m5; I m6[4]; l m7; C m8; C m9; l m10; };
#pragma pack(pop)
int f_cmpA1229(const struct A1229 *x, const struct A1229 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1229() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1229));
		AF('L',struct A1229,m0,1)
		AF('j',struct A1229,m1,1)
		AF('s',struct A1229,m2,1)
		AF('J',struct A1229,m3,1)
		AF('c',struct A1229,m4,1)
		AF('S',struct A1229,m5,1)
		AF('I',struct A1229,m6,4)
		AF('l',struct A1229,m7,1)
		AF('C',struct A1229,m8,1)
		AF('C',struct A1229,m9,1)
		AF('l',struct A1229,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BBdLppBjiSil} */
#pragma pack(push,4)
struct A1230 { B m0; B m1; d m2; L m3; p m4; p m5; B m6; j m7; i m8; S m9; i m10; l m11; };
#pragma pack(pop)
int f_cmpA1230(const struct A1230 *x, const struct A1230 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1230() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1230));
		AF('B',struct A1230,m0,1)
		AF('B',struct A1230,m1,1)
		AF('d',struct A1230,m2,1)
		AF('L',struct A1230,m3,1)
		AF('p',struct A1230,m4,1)
		AF('p',struct A1230,m5,1)
		AF('B',struct A1230,m6,1)
		AF('j',struct A1230,m7,1)
		AF('i',struct A1230,m8,1)
		AF('S',struct A1230,m9,1)
		AF('i',struct A1230,m10,1)
		AF('l',struct A1230,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {psi[12]ssIIIi} */
#pragma pack(push,2)
struct A1231 { p m0; s m1; i m2[12]; s m3; s m4; I m5; I m6; I m7; i m8; };
#pragma pack(pop)
int f_cmpA1231(const struct A1231 *x, const struct A1231 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1231() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1231));
		AF('p',struct A1231,m0,1)
		AF('s',struct A1231,m1,1)
		AF('i',struct A1231,m2,12)
		AF('s',struct A1231,m3,1)
		AF('s',struct A1231,m4,1)
		AF('I',struct A1231,m5,1)
		AF('I',struct A1231,m6,1)
		AF('I',struct A1231,m7,1)
		AF('i',struct A1231,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {flCisdlcBIps} */
#pragma pack(push,4)
struct A1232 { f m0; l m1; C m2; i m3; s m4; d m5; l m6; c m7; B m8; I m9; p m10; s m11; };
#pragma pack(pop)
int f_cmpA1232(const struct A1232 *x, const struct A1232 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1232() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1232));
		AF('f',struct A1232,m0,1)
		AF('l',struct A1232,m1,1)
		AF('C',struct A1232,m2,1)
		AF('i',struct A1232,m3,1)
		AF('s',struct A1232,m4,1)
		AF('d',struct A1232,m5,1)
		AF('l',struct A1232,m6,1)
		AF('c',struct A1232,m7,1)
		AF('B',struct A1232,m8,1)
		AF('I',struct A1232,m9,1)
		AF('p',struct A1232,m10,1)
		AF('s',struct A1232,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdLCI[8]jfL> */
#pragma pack(push,2)
union A1233 { C m0; d m1; L m2; C m3; I m4[8]; j m5; f m6; L m7; };
#pragma pack(pop)
int f_cmpA1233(const union A1233 *x, const union A1233 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1233() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1233));
		AF('C',union A1233,m0,1)
		AF('d',union A1233,m1,1)
		AF('L',union A1233,m2,1)
		AF('C',union A1233,m3,1)
		AF('I',union A1233,m4,8)
		AF('j',union A1233,m5,1)
		AF('f',union A1233,m6,1)
		AF('L',union A1233,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{flCisdlcBIps}<CdLCI[8]jfL>LjS[4]jfSILji} */
#pragma pack(push,8)
struct A1234 { struct A1232 m0; union A1233 m1; L m2; j m3; S m4[4]; j m5; f m6; S m7; I m8; L m9; j m10; i m11; };
#pragma pack(pop)
int f_cmpA1234(const struct A1234 *x, const struct A1234 *y) { return f_cmpA1232(&x->m0, &y->m0) && f_cmpA1233(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1234() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1234));
		AFa(struct A1234,m0,1,A1232)
		AFa(struct A1234,m1,1,A1233)
		AF('L',struct A1234,m2,1)
		AF('j',struct A1234,m3,1)
		AF('S',struct A1234,m4,4)
		AF('j',struct A1234,m5,1)
		AF('f',struct A1234,m6,1)
		AF('S',struct A1234,m7,1)
		AF('I',struct A1234,m8,1)
		AF('L',struct A1234,m9,1)
		AF('j',struct A1234,m10,1)
		AF('i',struct A1234,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CLICc} */
#pragma pack(push,1)
struct A1235 { C m0; L m1; I m2; C m3; c m4; };
#pragma pack(pop)
int f_cmpA1235(const struct A1235 *x, const struct A1235 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1235() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1235));
		AF('C',struct A1235,m0,1)
		AF('L',struct A1235,m1,1)
		AF('I',struct A1235,m2,1)
		AF('C',struct A1235,m3,1)
		AF('c',struct A1235,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sCCJfifBi{CLICc}lj} */
#pragma pack(push,4)
struct A1236 { s m0; C m1; C m2; J m3; f m4; i m5; f m6; B m7; i m8; struct A1235 m9; l m10; j m11; };
#pragma pack(pop)
int f_cmpA1236(const struct A1236 *x, const struct A1236 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1235(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1236() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1236));
		AF('s',struct A1236,m0,1)
		AF('C',struct A1236,m1,1)
		AF('C',struct A1236,m2,1)
		AF('J',struct A1236,m3,1)
		AF('f',struct A1236,m4,1)
		AF('i',struct A1236,m5,1)
		AF('f',struct A1236,m6,1)
		AF('B',struct A1236,m7,1)
		AF('i',struct A1236,m8,1)
		AFa(struct A1236,m9,1,A1235)
		AF('l',struct A1236,m10,1)
		AF('j',struct A1236,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsiLjBBILpLl} */
#pragma pack(push,4)
struct A1237 { f m0; s m1; i m2; L m3; j m4; B m5; B m6; I m7; L m8; p m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA1237(const struct A1237 *x, const struct A1237 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1237() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1237));
		AF('f',struct A1237,m0,1)
		AF('s',struct A1237,m1,1)
		AF('i',struct A1237,m2,1)
		AF('L',struct A1237,m3,1)
		AF('j',struct A1237,m4,1)
		AF('B',struct A1237,m5,1)
		AF('B',struct A1237,m6,1)
		AF('I',struct A1237,m7,1)
		AF('L',struct A1237,m8,1)
		AF('p',struct A1237,m9,1)
		AF('L',struct A1237,m10,1)
		AF('l',struct A1237,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fJcsBfJdfics} */
#pragma pack(push,4)
struct A1238 { f m0; J m1; c m2; s m3; B m4; f m5; J m6; d m7; f m8; i m9; c m10; s m11; };
#pragma pack(pop)
int f_cmpA1238(const struct A1238 *x, const struct A1238 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1238() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1238));
		AF('f',struct A1238,m0,1)
		AF('J',struct A1238,m1,1)
		AF('c',struct A1238,m2,1)
		AF('s',struct A1238,m3,1)
		AF('B',struct A1238,m4,1)
		AF('f',struct A1238,m5,1)
		AF('J',struct A1238,m6,1)
		AF('d',struct A1238,m7,1)
		AF('f',struct A1238,m8,1)
		AF('i',struct A1238,m9,1)
		AF('c',struct A1238,m10,1)
		AF('s',struct A1238,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lL} */
#pragma pack(push,2)
struct A1239 { l m0; L m1; };
#pragma pack(pop)
int f_cmpA1239(const struct A1239 *x, const struct A1239 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1239() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1239));
		AF('l',struct A1239,m0,1)
		AF('L',struct A1239,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{fsiLjBBILpLl}BcBL{fJcsBfJdfics}L{lL}JlfS> */
#pragma pack(push,2)
union A1240 { struct A1237 m0; B m1; c m2; B m3; L m4; struct A1238 m5; L m6; struct A1239 m7; J m8; l m9; f m10; S m11; };
#pragma pack(pop)
int f_cmpA1240(const union A1240 *x, const union A1240 *y) { return f_cmpA1237(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1238(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1239(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1240() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1240));
		AFa(union A1240,m0,1,A1237)
		AF('B',union A1240,m1,1)
		AF('c',union A1240,m2,1)
		AF('B',union A1240,m3,1)
		AF('L',union A1240,m4,1)
		AFa(union A1240,m5,1,A1238)
		AF('L',union A1240,m6,1)
		AFa(union A1240,m7,1,A1239)
		AF('J',union A1240,m8,1)
		AF('l',union A1240,m9,1)
		AF('f',union A1240,m10,1)
		AF('S',union A1240,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jBBLcffSILdC[5]> */
#pragma pack(push,2)
union A1241 { j m0; B m1; B m2; L m3; c m4; f m5; f m6; S m7; I m8; L m9; d m10; C m11[5]; };
#pragma pack(pop)
int f_cmpA1241(const union A1241 *x, const union A1241 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4]; };
DCaggr* f_touchA1241() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1241));
		AF('j',union A1241,m0,1)
		AF('B',union A1241,m1,1)
		AF('B',union A1241,m2,1)
		AF('L',union A1241,m3,1)
		AF('c',union A1241,m4,1)
		AF('f',union A1241,m5,1)
		AF('f',union A1241,m6,1)
		AF('S',union A1241,m7,1)
		AF('I',union A1241,m8,1)
		AF('L',union A1241,m9,1)
		AF('d',union A1241,m10,1)
		AF('C',union A1241,m11,5)
		dcCloseAggr(a);
	}
	return a;
};
/* {sfdSCjjCjfsi} */
#pragma pack(push,2)
struct A1242 { s m0; f m1; d m2; S m3; C m4; j m5; j m6; C m7; j m8; f m9; s m10; i m11; };
#pragma pack(pop)
int f_cmpA1242(const struct A1242 *x, const struct A1242 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1242() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1242));
		AF('s',struct A1242,m0,1)
		AF('f',struct A1242,m1,1)
		AF('d',struct A1242,m2,1)
		AF('S',struct A1242,m3,1)
		AF('C',struct A1242,m4,1)
		AF('j',struct A1242,m5,1)
		AF('j',struct A1242,m6,1)
		AF('C',struct A1242,m7,1)
		AF('j',struct A1242,m8,1)
		AF('f',struct A1242,m9,1)
		AF('s',struct A1242,m10,1)
		AF('i',struct A1242,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s<jBBLcffSILdC[5]>s{sfdSCjjCjfsi}> */
#pragma pack(push,4)
union A1243 { s m0; union A1241 m1; s m2; struct A1242 m3; };
#pragma pack(pop)
int f_cmpA1243(const union A1243 *x, const union A1243 *y) { return x->m0 == y->m0 && f_cmpA1241(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA1242(&x->m3, &y->m3); };
DCaggr* f_touchA1243() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1243));
		AF('s',union A1243,m0,1)
		AFa(union A1243,m1,1,A1241)
		AF('s',union A1243,m2,1)
		AFa(union A1243,m3,1,A1242)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLdcCdIifcjL> */
#pragma pack(push,4)
union A1244 { s m0; L m1; d m2; c m3; C m4; d m5; I m6; i m7; f m8; c m9; j m10; L m11; };
#pragma pack(pop)
int f_cmpA1244(const union A1244 *x, const union A1244 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1244() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1244));
		AF('s',union A1244,m0,1)
		AF('L',union A1244,m1,1)
		AF('d',union A1244,m2,1)
		AF('c',union A1244,m3,1)
		AF('C',union A1244,m4,1)
		AF('d',union A1244,m5,1)
		AF('I',union A1244,m6,1)
		AF('i',union A1244,m7,1)
		AF('f',union A1244,m8,1)
		AF('c',union A1244,m9,1)
		AF('j',union A1244,m10,1)
		AF('L',union A1244,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IjcfjBIIssdl} */
#pragma pack(push,4)
struct A1245 { I m0; j m1; c m2; f m3; j m4; B m5; I m6; I m7; s m8; s m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA1245(const struct A1245 *x, const struct A1245 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1245() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1245));
		AF('I',struct A1245,m0,1)
		AF('j',struct A1245,m1,1)
		AF('c',struct A1245,m2,1)
		AF('f',struct A1245,m3,1)
		AF('j',struct A1245,m4,1)
		AF('B',struct A1245,m5,1)
		AF('I',struct A1245,m6,1)
		AF('I',struct A1245,m7,1)
		AF('s',struct A1245,m8,1)
		AF('s',struct A1245,m9,1)
		AF('d',struct A1245,m10,1)
		AF('l',struct A1245,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCLc{IjcfjBIIssdl}dlSSlJS> */
#pragma pack(push,2)
union A1246 { J m0; C m1; L m2; c m3; struct A1245 m4; d m5; l m6; S m7; S m8; l m9; J m10; S m11; };
#pragma pack(pop)
int f_cmpA1246(const union A1246 *x, const union A1246 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1245(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1246() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1246));
		AF('J',union A1246,m0,1)
		AF('C',union A1246,m1,1)
		AF('L',union A1246,m2,1)
		AF('c',union A1246,m3,1)
		AFa(union A1246,m4,1,A1245)
		AF('d',union A1246,m5,1)
		AF('l',union A1246,m6,1)
		AF('S',union A1246,m7,1)
		AF('S',union A1246,m8,1)
		AF('l',union A1246,m9,1)
		AF('J',union A1246,m10,1)
		AF('S',union A1246,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iIcC} */
#pragma pack(push,4)
struct A1247 { i m0; I m1; c m2; C m3; };
#pragma pack(pop)
int f_cmpA1247(const struct A1247 *x, const struct A1247 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1247() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1247));
		AF('i',struct A1247,m0,1)
		AF('I',struct A1247,m1,1)
		AF('c',struct A1247,m2,1)
		AF('C',struct A1247,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fdJijijLI{iIcC}cL} */
#pragma pack(push,2)
struct A1248 { f m0; d m1; J m2; i m3; j m4; i m5; j m6; L m7; I m8; struct A1247 m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA1248(const struct A1248 *x, const struct A1248 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1247(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1248() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1248));
		AF('f',struct A1248,m0,1)
		AF('d',struct A1248,m1,1)
		AF('J',struct A1248,m2,1)
		AF('i',struct A1248,m3,1)
		AF('j',struct A1248,m4,1)
		AF('i',struct A1248,m5,1)
		AF('j',struct A1248,m6,1)
		AF('L',struct A1248,m7,1)
		AF('I',struct A1248,m8,1)
		AFa(struct A1248,m9,1,A1247)
		AF('c',struct A1248,m10,1)
		AF('L',struct A1248,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpBLij{fdJijijLI{iIcC}cL}[13]jCCSd} */
#pragma pack(push,4)
struct A1249 { f m0; p m1; B m2; L m3; i m4; j m5; struct A1248 m6[13]; j m7; C m8; C m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA1249(const struct A1249 *x, const struct A1249 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1248(&x->m6[0], &y->m6[0]) && f_cmpA1248(&x->m6[1], &y->m6[1]) && f_cmpA1248(&x->m6[2], &y->m6[2]) && f_cmpA1248(&x->m6[3], &y->m6[3]) && f_cmpA1248(&x->m6[4], &y->m6[4]) && f_cmpA1248(&x->m6[5], &y->m6[5]) && f_cmpA1248(&x->m6[6], &y->m6[6]) && f_cmpA1248(&x->m6[7], &y->m6[7]) && f_cmpA1248(&x->m6[8], &y->m6[8]) && f_cmpA1248(&x->m6[9], &y->m6[9]) && f_cmpA1248(&x->m6[10], &y->m6[10]) && f_cmpA1248(&x->m6[11], &y->m6[11]) && f_cmpA1248(&x->m6[12], &y->m6[12]) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1249() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1249));
		AF('f',struct A1249,m0,1)
		AF('p',struct A1249,m1,1)
		AF('B',struct A1249,m2,1)
		AF('L',struct A1249,m3,1)
		AF('i',struct A1249,m4,1)
		AF('j',struct A1249,m5,1)
		AFa(struct A1249,m6,13,A1248)
		AF('j',struct A1249,m7,1)
		AF('C',struct A1249,m8,1)
		AF('C',struct A1249,m9,1)
		AF('S',struct A1249,m10,1)
		AF('d',struct A1249,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fBdjdCBIJdLB} */
#pragma pack(push,2)
struct A1250 { f m0; B m1; d m2; j m3; d m4; C m5; B m6; I m7; J m8; d m9; L m10; B m11; };
#pragma pack(pop)
int f_cmpA1250(const struct A1250 *x, const struct A1250 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1250() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1250));
		AF('f',struct A1250,m0,1)
		AF('B',struct A1250,m1,1)
		AF('d',struct A1250,m2,1)
		AF('j',struct A1250,m3,1)
		AF('d',struct A1250,m4,1)
		AF('C',struct A1250,m5,1)
		AF('B',struct A1250,m6,1)
		AF('I',struct A1250,m7,1)
		AF('J',struct A1250,m8,1)
		AF('d',struct A1250,m9,1)
		AF('L',struct A1250,m10,1)
		AF('B',struct A1250,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CS{fBdjdCBIJdLB}dJdipJSip> */
#pragma pack(push,4)
union A1251 { C m0; S m1; struct A1250 m2; d m3; J m4; d m5; i m6; p m7; J m8; S m9; i m10; p m11; };
#pragma pack(pop)
int f_cmpA1251(const union A1251 *x, const union A1251 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1250(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1251() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1251));
		AF('C',union A1251,m0,1)
		AF('S',union A1251,m1,1)
		AFa(union A1251,m2,1,A1250)
		AF('d',union A1251,m3,1)
		AF('J',union A1251,m4,1)
		AF('d',union A1251,m5,1)
		AF('i',union A1251,m6,1)
		AF('p',union A1251,m7,1)
		AF('J',union A1251,m8,1)
		AF('S',union A1251,m9,1)
		AF('i',union A1251,m10,1)
		AF('p',union A1251,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLsJlJCcfJcp> */
#pragma pack(push,2)
union A1252 { l m0; L m1; s m2; J m3; l m4; J m5; C m6; c m7; f m8; J m9; c m10; p m11; };
#pragma pack(pop)
int f_cmpA1252(const union A1252 *x, const union A1252 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1252() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1252));
		AF('l',union A1252,m0,1)
		AF('L',union A1252,m1,1)
		AF('s',union A1252,m2,1)
		AF('J',union A1252,m3,1)
		AF('l',union A1252,m4,1)
		AF('J',union A1252,m5,1)
		AF('C',union A1252,m6,1)
		AF('c',union A1252,m7,1)
		AF('f',union A1252,m8,1)
		AF('J',union A1252,m9,1)
		AF('c',union A1252,m10,1)
		AF('p',union A1252,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIBIfsI<lLsJlJCcfJcp>CCiJ} */
#pragma pack(push,2)
struct A1253 { f m0; I m1; B m2; I m3; f m4; s m5; I m6; union A1252 m7; C m8; C m9; i m10; J m11; };
#pragma pack(pop)
int f_cmpA1253(const struct A1253 *x, const struct A1253 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1252(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1253() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1253));
		AF('f',struct A1253,m0,1)
		AF('I',struct A1253,m1,1)
		AF('B',struct A1253,m2,1)
		AF('I',struct A1253,m3,1)
		AF('f',struct A1253,m4,1)
		AF('s',struct A1253,m5,1)
		AF('I',struct A1253,m6,1)
		AFa(struct A1253,m7,1,A1252)
		AF('C',struct A1253,m8,1)
		AF('C',struct A1253,m9,1)
		AF('i',struct A1253,m10,1)
		AF('J',struct A1253,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pcssisscllcp} */
#pragma pack(push,8)
struct A1254 { p m0; c m1; s m2; s m3; i m4; s m5; s m6; c m7; l m8; l m9; c m10; p m11; };
#pragma pack(pop)
int f_cmpA1254(const struct A1254 *x, const struct A1254 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1254() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1254));
		AF('p',struct A1254,m0,1)
		AF('c',struct A1254,m1,1)
		AF('s',struct A1254,m2,1)
		AF('s',struct A1254,m3,1)
		AF('i',struct A1254,m4,1)
		AF('s',struct A1254,m5,1)
		AF('s',struct A1254,m6,1)
		AF('c',struct A1254,m7,1)
		AF('l',struct A1254,m8,1)
		AF('l',struct A1254,m9,1)
		AF('c',struct A1254,m10,1)
		AF('p',struct A1254,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JIBidBBSf} */
#pragma pack(push,1)
struct A1255 { J m0; I m1; B m2; i m3; d m4; B m5; B m6; S m7; f m8; };
#pragma pack(pop)
int f_cmpA1255(const struct A1255 *x, const struct A1255 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1255() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1255));
		AF('J',struct A1255,m0,1)
		AF('I',struct A1255,m1,1)
		AF('B',struct A1255,m2,1)
		AF('i',struct A1255,m3,1)
		AF('d',struct A1255,m4,1)
		AF('B',struct A1255,m5,1)
		AF('B',struct A1255,m6,1)
		AF('S',struct A1255,m7,1)
		AF('f',struct A1255,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p[7]l[14]JLiBBLBsIl> */
#pragma pack(push,4)
union A1256 { p m0[7]; l m1[14]; J m2; L m3; i m4; B m5; B m6; L m7; B m8; s m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA1256(const union A1256 *x, const union A1256 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1256() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1256));
		AF('p',union A1256,m0,7)
		AF('l',union A1256,m1,14)
		AF('J',union A1256,m2,1)
		AF('L',union A1256,m3,1)
		AF('i',union A1256,m4,1)
		AF('B',union A1256,m5,1)
		AF('B',union A1256,m6,1)
		AF('L',union A1256,m7,1)
		AF('B',union A1256,m8,1)
		AF('s',union A1256,m9,1)
		AF('I',union A1256,m10,1)
		AF('l',union A1256,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdjJpsIlfJcc[6]> */
#pragma pack(push,4)
union A1257 { I m0; d m1; j m2; J m3; p m4; s m5; I m6; l m7; f m8; J m9; c m10; c m11[6]; };
#pragma pack(pop)
int f_cmpA1257(const union A1257 *x, const union A1257 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5]; };
DCaggr* f_touchA1257() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1257));
		AF('I',union A1257,m0,1)
		AF('d',union A1257,m1,1)
		AF('j',union A1257,m2,1)
		AF('J',union A1257,m3,1)
		AF('p',union A1257,m4,1)
		AF('s',union A1257,m5,1)
		AF('I',union A1257,m6,1)
		AF('l',union A1257,m7,1)
		AF('f',union A1257,m8,1)
		AF('J',union A1257,m9,1)
		AF('c',union A1257,m10,1)
		AF('c',union A1257,m11,6)
		dcCloseAggr(a);
	}
	return a;
};
/* {jCcBd[4]JlcBSsp} */
#pragma pack(push,4)
struct A1258 { j m0; C m1; c m2; B m3; d m4[4]; J m5; l m6; c m7; B m8; S m9; s m10; p m11; };
#pragma pack(pop)
int f_cmpA1258(const struct A1258 *x, const struct A1258 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1258() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1258));
		AF('j',struct A1258,m0,1)
		AF('C',struct A1258,m1,1)
		AF('c',struct A1258,m2,1)
		AF('B',struct A1258,m3,1)
		AF('d',struct A1258,m4,4)
		AF('J',struct A1258,m5,1)
		AF('l',struct A1258,m6,1)
		AF('c',struct A1258,m7,1)
		AF('B',struct A1258,m8,1)
		AF('S',struct A1258,m9,1)
		AF('s',struct A1258,m10,1)
		AF('p',struct A1258,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI> */
#pragma pack(push,4)
union A1259 { s m0; j m1; c m2; union A1256 m3; union A1257 m4; C m5; C m6; struct A1258 m7; B m8; f m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA1259(const union A1259 *x, const union A1259 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1256(&x->m3, &y->m3) && f_cmpA1257(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1258(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1259() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1259));
		AF('s',union A1259,m0,1)
		AF('j',union A1259,m1,1)
		AF('c',union A1259,m2,1)
		AFa(union A1259,m3,1,A1256)
		AFa(union A1259,m4,1,A1257)
		AF('C',union A1259,m5,1)
		AF('C',union A1259,m6,1)
		AFa(union A1259,m7,1,A1258)
		AF('B',union A1259,m8,1)
		AF('f',union A1259,m9,1)
		AF('J',union A1259,m10,1)
		AF('I',union A1259,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <l[6]fBfJpsBicBf> */
#pragma pack(push,1)
union A1260 { l m0[6]; f m1; B m2; f m3; J m4; p m5; s m6; B m7; i m8; c m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA1260(const union A1260 *x, const union A1260 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1260() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1260));
		AF('l',union A1260,m0,6)
		AF('f',union A1260,m1,1)
		AF('B',union A1260,m2,1)
		AF('f',union A1260,m3,1)
		AF('J',union A1260,m4,1)
		AF('p',union A1260,m5,1)
		AF('s',union A1260,m6,1)
		AF('B',union A1260,m7,1)
		AF('i',union A1260,m8,1)
		AF('c',union A1260,m9,1)
		AF('B',union A1260,m10,1)
		AF('f',union A1260,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jfILC} */
#pragma pack(push,2)
struct A1261 { j m0; f m1; I m2; L m3; C m4; };
#pragma pack(pop)
int f_cmpA1261(const struct A1261 *x, const struct A1261 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1261() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1261));
		AF('j',struct A1261,m0,1)
		AF('f',struct A1261,m1,1)
		AF('I',struct A1261,m2,1)
		AF('L',struct A1261,m3,1)
		AF('C',struct A1261,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis> */
#pragma pack(push,8)
union A1262 { p m0; c m1; L m2; l m3; d m4; union A1260 m5; C m6; struct A1261 m7; J m8; C m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA1262(const union A1262 *x, const union A1262 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1260(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1261(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1262() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1262));
		AF('p',union A1262,m0,1)
		AF('c',union A1262,m1,1)
		AF('L',union A1262,m2,1)
		AF('l',union A1262,m3,1)
		AF('d',union A1262,m4,1)
		AFa(union A1262,m5,1,A1260)
		AF('C',union A1262,m6,1)
		AFa(union A1262,m7,1,A1261)
		AF('J',union A1262,m8,1)
		AF('C',union A1262,m9,1)
		AF('i',union A1262,m10,1)
		AF('s',union A1262,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldlsBddf> */
#pragma pack(push,4)
union A1263 { l m0; d m1; l m2; s m3; B m4; d m5; d m6; f m7; };
#pragma pack(pop)
int f_cmpA1263(const union A1263 *x, const union A1263 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1263() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1263));
		AF('l',union A1263,m0,1)
		AF('d',union A1263,m1,1)
		AF('l',union A1263,m2,1)
		AF('s',union A1263,m3,1)
		AF('B',union A1263,m4,1)
		AF('d',union A1263,m5,1)
		AF('d',union A1263,m6,1)
		AF('f',union A1263,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS> */
#pragma pack(push,4)
union A1264 { union A1259 m0; I m1; S m2; B m3; c m4; d m5; d m6; j m7; union A1262 m8; union A1263 m9; d m10; S m11; };
#pragma pack(pop)
int f_cmpA1264(const union A1264 *x, const union A1264 *y) { return f_cmpA1259(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1262(&x->m8, &y->m8) && f_cmpA1263(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1264() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1264));
		AFa(union A1264,m0,1,A1259)
		AF('I',union A1264,m1,1)
		AF('S',union A1264,m2,1)
		AF('B',union A1264,m3,1)
		AF('c',union A1264,m4,1)
		AF('d',union A1264,m5,1)
		AF('d',union A1264,m6,1)
		AF('j',union A1264,m7,1)
		AFa(union A1264,m8,1,A1262)
		AFa(union A1264,m9,1,A1263)
		AF('d',union A1264,m10,1)
		AF('S',union A1264,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBidSJlclJf> */
#pragma pack(push,8)
union A1265 { B m0; B m1; i m2; d m3; S m4; J m5; l m6; c m7; l m8; J m9; f m10; };
#pragma pack(pop)
int f_cmpA1265(const union A1265 *x, const union A1265 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1265() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1265));
		AF('B',union A1265,m0,1)
		AF('B',union A1265,m1,1)
		AF('i',union A1265,m2,1)
		AF('d',union A1265,m3,1)
		AF('S',union A1265,m4,1)
		AF('J',union A1265,m5,1)
		AF('l',union A1265,m6,1)
		AF('c',union A1265,m7,1)
		AF('l',union A1265,m8,1)
		AF('J',union A1265,m9,1)
		AF('f',union A1265,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d<BBidSJlclJf>jfBddIpCdI> */
#pragma pack(push,8)
union A1266 { d m0; union A1265 m1; j m2; f m3; B m4; d m5; d m6; I m7; p m8; C m9; d m10; I m11; };
#pragma pack(pop)
int f_cmpA1266(const union A1266 *x, const union A1266 *y) { return x->m0 == y->m0 && f_cmpA1265(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1266() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1266));
		AF('d',union A1266,m0,1)
		AFa(union A1266,m1,1,A1265)
		AF('j',union A1266,m2,1)
		AF('f',union A1266,m3,1)
		AF('B',union A1266,m4,1)
		AF('d',union A1266,m5,1)
		AF('d',union A1266,m6,1)
		AF('I',union A1266,m7,1)
		AF('p',union A1266,m8,1)
		AF('C',union A1266,m9,1)
		AF('d',union A1266,m10,1)
		AF('I',union A1266,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LpBJdfL} */
#pragma pack(push,2)
struct A1267 { L m0; p m1; B m2; J m3; d m4; f m5; L m6; };
#pragma pack(pop)
int f_cmpA1267(const struct A1267 *x, const struct A1267 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1267() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1267));
		AF('L',struct A1267,m0,1)
		AF('p',struct A1267,m1,1)
		AF('B',struct A1267,m2,1)
		AF('J',struct A1267,m3,1)
		AF('d',struct A1267,m4,1)
		AF('f',struct A1267,m5,1)
		AF('L',struct A1267,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCLlJCcLBLj> */
#pragma pack(push,2)
union A1268 { s m0; C m1; L m2; l m3; J m4; C m5; c m6; L m7; B m8; L m9; j m10; };
#pragma pack(pop)
int f_cmpA1268(const union A1268 *x, const union A1268 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1268() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1268));
		AF('s',union A1268,m0,1)
		AF('C',union A1268,m1,1)
		AF('L',union A1268,m2,1)
		AF('l',union A1268,m3,1)
		AF('J',union A1268,m4,1)
		AF('C',union A1268,m5,1)
		AF('c',union A1268,m6,1)
		AF('L',union A1268,m7,1)
		AF('B',union A1268,m8,1)
		AF('L',union A1268,m9,1)
		AF('j',union A1268,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BCCsciillfii> */
#pragma pack(push,4)
union A1269 { B m0; C m1; C m2; s m3; c m4; i m5; i m6; l m7; l m8; f m9; i m10; i m11; };
#pragma pack(pop)
int f_cmpA1269(const union A1269 *x, const union A1269 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1269() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1269));
		AF('B',union A1269,m0,1)
		AF('C',union A1269,m1,1)
		AF('C',union A1269,m2,1)
		AF('s',union A1269,m3,1)
		AF('c',union A1269,m4,1)
		AF('i',union A1269,m5,1)
		AF('i',union A1269,m6,1)
		AF('l',union A1269,m7,1)
		AF('l',union A1269,m8,1)
		AF('f',union A1269,m9,1)
		AF('i',union A1269,m10,1)
		AF('i',union A1269,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSiSJjLIlc[1]li> */
#pragma pack(push,4)
union A1270 { l m0; S m1; i m2; S m3; J m4; j m5; L m6; I m7; l m8; c m9[1]; l m10; i m11; };
#pragma pack(pop)
int f_cmpA1270(const union A1270 *x, const union A1270 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1270() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1270));
		AF('l',union A1270,m0,1)
		AF('S',union A1270,m1,1)
		AF('i',union A1270,m2,1)
		AF('S',union A1270,m3,1)
		AF('J',union A1270,m4,1)
		AF('j',union A1270,m5,1)
		AF('L',union A1270,m6,1)
		AF('I',union A1270,m7,1)
		AF('l',union A1270,m8,1)
		AF('c',union A1270,m9,1)
		AF('l',union A1270,m10,1)
		AF('i',union A1270,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ISdsJc[8]SsijpC} */
#pragma pack(push,4)
struct A1271 { I m0; S m1; d m2; s m3; J m4; c m5[8]; S m6; s m7; i m8; j m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1271(const struct A1271 *x, const struct A1271 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1271() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1271));
		AF('I',struct A1271,m0,1)
		AF('S',struct A1271,m1,1)
		AF('d',struct A1271,m2,1)
		AF('s',struct A1271,m3,1)
		AF('J',struct A1271,m4,1)
		AF('c',struct A1271,m5,8)
		AF('S',struct A1271,m6,1)
		AF('s',struct A1271,m7,1)
		AF('i',struct A1271,m8,1)
		AF('j',struct A1271,m9,1)
		AF('p',struct A1271,m10,1)
		AF('C',struct A1271,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjiliLiscSSj} */
#pragma pack(push,4)
struct A1272 { L m0; j m1; i m2; l m3; i m4; L m5; i m6; s m7; c m8; S m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA1272(const struct A1272 *x, const struct A1272 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1272() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1272));
		AF('L',struct A1272,m0,1)
		AF('j',struct A1272,m1,1)
		AF('i',struct A1272,m2,1)
		AF('l',struct A1272,m3,1)
		AF('i',struct A1272,m4,1)
		AF('L',struct A1272,m5,1)
		AF('i',struct A1272,m6,1)
		AF('s',struct A1272,m7,1)
		AF('c',struct A1272,m8,1)
		AF('S',struct A1272,m9,1)
		AF('S',struct A1272,m10,1)
		AF('j',struct A1272,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IfBLCJslC> */
#pragma pack(push,8)
union A1273 { I m0; f m1; B m2; L m3; C m4; J m5; s m6; l m7; C m8; };
#pragma pack(pop)
int f_cmpA1273(const union A1273 *x, const union A1273 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1273() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1273));
		AF('I',union A1273,m0,1)
		AF('f',union A1273,m1,1)
		AF('B',union A1273,m2,1)
		AF('L',union A1273,m3,1)
		AF('C',union A1273,m4,1)
		AF('J',union A1273,m5,1)
		AF('s',union A1273,m6,1)
		AF('l',union A1273,m7,1)
		AF('C',union A1273,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LpjpiJLsIfj<IfBLCJslC>} */
#pragma pack(push,8)
struct A1274 { L m0; p m1; j m2; p m3; i m4; J m5; L m6; s m7; I m8; f m9; j m10; union A1273 m11; };
#pragma pack(pop)
int f_cmpA1274(const struct A1274 *x, const struct A1274 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1273(&x->m11, &y->m11); };
DCaggr* f_touchA1274() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1274));
		AF('L',struct A1274,m0,1)
		AF('p',struct A1274,m1,1)
		AF('j',struct A1274,m2,1)
		AF('p',struct A1274,m3,1)
		AF('i',struct A1274,m4,1)
		AF('J',struct A1274,m5,1)
		AF('L',struct A1274,m6,1)
		AF('s',struct A1274,m7,1)
		AF('I',struct A1274,m8,1)
		AF('f',struct A1274,m9,1)
		AF('j',struct A1274,m10,1)
		AFa(struct A1274,m11,1,A1273)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[9]cdilcIli[15]sis} */
#pragma pack(push,4)
struct A1275 { d m0[9]; c m1; d m2; i m3; l m4; c m5; I m6; l m7; i m8[15]; s m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA1275(const struct A1275 *x, const struct A1275 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1275() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1275));
		AF('d',struct A1275,m0,9)
		AF('c',struct A1275,m1,1)
		AF('d',struct A1275,m2,1)
		AF('i',struct A1275,m3,1)
		AF('l',struct A1275,m4,1)
		AF('c',struct A1275,m5,1)
		AF('I',struct A1275,m6,1)
		AF('l',struct A1275,m7,1)
		AF('i',struct A1275,m8,15)
		AF('s',struct A1275,m9,1)
		AF('i',struct A1275,m10,1)
		AF('s',struct A1275,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <l{d[9]cdilcIli[15]sis}f[8]SfSILLSiS> */
#pragma pack(push,4)
union A1276 { l m0; struct A1275 m1; f m2[8]; S m3; f m4; S m5; I m6; L m7; L m8; S m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA1276(const union A1276 *x, const union A1276 *y) { return x->m0 == y->m0 && f_cmpA1275(&x->m1, &y->m1) && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1276() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1276));
		AF('l',union A1276,m0,1)
		AFa(union A1276,m1,1,A1275)
		AF('f',union A1276,m2,8)
		AF('S',union A1276,m3,1)
		AF('f',union A1276,m4,1)
		AF('S',union A1276,m5,1)
		AF('I',union A1276,m6,1)
		AF('L',union A1276,m7,1)
		AF('L',union A1276,m8,1)
		AF('S',union A1276,m9,1)
		AF('i',union A1276,m10,1)
		AF('S',union A1276,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fSJICjIJJLdi} */
#pragma pack(push,2)
struct A1277 { f m0; S m1; J m2; I m3; C m4; j m5; I m6; J m7; J m8; L m9; d m10; i m11; };
#pragma pack(pop)
int f_cmpA1277(const struct A1277 *x, const struct A1277 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1277() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1277));
		AF('f',struct A1277,m0,1)
		AF('S',struct A1277,m1,1)
		AF('J',struct A1277,m2,1)
		AF('I',struct A1277,m3,1)
		AF('C',struct A1277,m4,1)
		AF('j',struct A1277,m5,1)
		AF('I',struct A1277,m6,1)
		AF('J',struct A1277,m7,1)
		AF('J',struct A1277,m8,1)
		AF('L',struct A1277,m9,1)
		AF('d',struct A1277,m10,1)
		AF('i',struct A1277,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lCdSsJs} */
#pragma pack(push,4)
struct A1278 { l m0; C m1; d m2; S m3; s m4; J m5; s m6; };
#pragma pack(pop)
int f_cmpA1278(const struct A1278 *x, const struct A1278 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1278() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1278));
		AF('l',struct A1278,m0,1)
		AF('C',struct A1278,m1,1)
		AF('d',struct A1278,m2,1)
		AF('S',struct A1278,m3,1)
		AF('s',struct A1278,m4,1)
		AF('J',struct A1278,m5,1)
		AF('s',struct A1278,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CLScspdjfcdd} */
#pragma pack(push,8)
struct A1279 { C m0; L m1; S m2; c m3; s m4; p m5; d m6; j m7; f m8; c m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA1279(const struct A1279 *x, const struct A1279 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1279() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1279));
		AF('C',struct A1279,m0,1)
		AF('L',struct A1279,m1,1)
		AF('S',struct A1279,m2,1)
		AF('c',struct A1279,m3,1)
		AF('s',struct A1279,m4,1)
		AF('p',struct A1279,m5,1)
		AF('d',struct A1279,m6,1)
		AF('j',struct A1279,m7,1)
		AF('f',struct A1279,m8,1)
		AF('c',struct A1279,m9,1)
		AF('d',struct A1279,m10,1)
		AF('d',struct A1279,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sll{CLScspdjfcdd}sId} */
#pragma pack(push,2)
struct A1280 { s m0; l m1; l m2; struct A1279 m3; s m4; I m5; d m6; };
#pragma pack(pop)
int f_cmpA1280(const struct A1280 *x, const struct A1280 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1279(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1280() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1280));
		AF('s',struct A1280,m0,1)
		AF('l',struct A1280,m1,1)
		AF('l',struct A1280,m2,1)
		AFa(struct A1280,m3,1,A1279)
		AF('s',struct A1280,m4,1)
		AF('I',struct A1280,m5,1)
		AF('d',struct A1280,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LsLsjIlLJ> */
#pragma pack(push,1)
union A1281 { L m0; s m1; L m2; s m3; j m4; I m5; l m6; L m7; J m8; };
#pragma pack(pop)
int f_cmpA1281(const union A1281 *x, const union A1281 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1281() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1281));
		AF('L',union A1281,m0,1)
		AF('s',union A1281,m1,1)
		AF('L',union A1281,m2,1)
		AF('s',union A1281,m3,1)
		AF('j',union A1281,m4,1)
		AF('I',union A1281,m5,1)
		AF('l',union A1281,m6,1)
		AF('L',union A1281,m7,1)
		AF('J',union A1281,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BJ} */
#pragma pack(push,4)
struct A1282 { B m0; J m1; };
#pragma pack(pop)
int f_cmpA1282(const struct A1282 *x, const struct A1282 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1282() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1282));
		AF('B',struct A1282,m0,1)
		AF('J',struct A1282,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SpIiSsIsJpsJ} */
#pragma pack(push,4)
struct A1283 { S m0; p m1; I m2; i m3; S m4; s m5; I m6; s m7; J m8; p m9; s m10; J m11; };
#pragma pack(pop)
int f_cmpA1283(const struct A1283 *x, const struct A1283 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1283() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1283));
		AF('S',struct A1283,m0,1)
		AF('p',struct A1283,m1,1)
		AF('I',struct A1283,m2,1)
		AF('i',struct A1283,m3,1)
		AF('S',struct A1283,m4,1)
		AF('s',struct A1283,m5,1)
		AF('I',struct A1283,m6,1)
		AF('s',struct A1283,m7,1)
		AF('J',struct A1283,m8,1)
		AF('p',struct A1283,m9,1)
		AF('s',struct A1283,m10,1)
		AF('J',struct A1283,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J[5]BfLiBjJjdIc> */
#pragma pack(push,2)
union A1284 { J m0[5]; B m1; f m2; L m3; i m4; B m5; j m6; J m7; j m8; d m9; I m10; c m11; };
#pragma pack(pop)
int f_cmpA1284(const union A1284 *x, const union A1284 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1284() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1284));
		AF('J',union A1284,m0,5)
		AF('B',union A1284,m1,1)
		AF('f',union A1284,m2,1)
		AF('L',union A1284,m3,1)
		AF('i',union A1284,m4,1)
		AF('B',union A1284,m5,1)
		AF('j',union A1284,m6,1)
		AF('J',union A1284,m7,1)
		AF('j',union A1284,m8,1)
		AF('d',union A1284,m9,1)
		AF('I',union A1284,m10,1)
		AF('c',union A1284,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fs> */
#pragma pack(push,4)
union A1285 { f m0; s m1; };
#pragma pack(pop)
int f_cmpA1285(const union A1285 *x, const union A1285 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1285() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1285));
		AF('f',union A1285,m0,1)
		AF('s',union A1285,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBLLd[13]JCip} */
#pragma pack(push,4)
struct A1286 { I m0; B m1; L m2; L m3; d m4[13]; J m5; C m6; i m7; p m8; };
#pragma pack(pop)
int f_cmpA1286(const struct A1286 *x, const struct A1286 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1286() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1286));
		AF('I',struct A1286,m0,1)
		AF('B',struct A1286,m1,1)
		AF('L',struct A1286,m2,1)
		AF('L',struct A1286,m3,1)
		AF('d',struct A1286,m4,13)
		AF('J',struct A1286,m5,1)
		AF('C',struct A1286,m6,1)
		AF('i',struct A1286,m7,1)
		AF('p',struct A1286,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdd{IBLLd[13]JCip}dccJscCf> */
#pragma pack(push,4)
union A1287 { j m0; d m1; d m2; struct A1286 m3; d m4; c m5; c m6; J m7; s m8; c m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA1287(const union A1287 *x, const union A1287 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1286(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1287() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1287));
		AF('j',union A1287,m0,1)
		AF('d',union A1287,m1,1)
		AF('d',union A1287,m2,1)
		AFa(union A1287,m3,1,A1286)
		AF('d',union A1287,m4,1)
		AF('c',union A1287,m5,1)
		AF('c',union A1287,m6,1)
		AF('J',union A1287,m7,1)
		AF('s',union A1287,m8,1)
		AF('c',union A1287,m9,1)
		AF('C',union A1287,m10,1)
		AF('f',union A1287,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d<jdd{IBLLd[13]JCip}dccJscCf>ipij[7]f{S}LLss} */
#pragma pack(push,2)
struct A1288 { d m0; union A1287 m1; i m2; p m3; i m4; j m5[7]; f m6; struct A1061 m7; L m8; L m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA1288(const struct A1288 *x, const struct A1288 *y) { return x->m0 == y->m0 && f_cmpA1287(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m6 == y->m6 && f_cmpA1061(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1288() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1288));
		AF('d',struct A1288,m0,1)
		AFa(struct A1288,m1,1,A1287)
		AF('i',struct A1288,m2,1)
		AF('p',struct A1288,m3,1)
		AF('i',struct A1288,m4,1)
		AF('j',struct A1288,m5,7)
		AF('f',struct A1288,m6,1)
		AFa(struct A1288,m7,1,A1061)
		AF('L',struct A1288,m8,1)
		AF('L',struct A1288,m9,1)
		AF('s',struct A1288,m10,1)
		AF('s',struct A1288,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljp> */
#pragma pack(push,2)
union A1289 { l m0; j m1; p m2; };
#pragma pack(pop)
int f_cmpA1289(const union A1289 *x, const union A1289 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1289() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1289));
		AF('l',union A1289,m0,1)
		AF('j',union A1289,m1,1)
		AF('p',union A1289,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ifJIllsJflLL} */
#pragma pack(push,2)
struct A1290 { i m0; f m1; J m2; I m3; l m4; l m5; s m6; J m7; f m8; l m9; L m10; L m11; };
#pragma pack(pop)
int f_cmpA1290(const struct A1290 *x, const struct A1290 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1290() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1290));
		AF('i',struct A1290,m0,1)
		AF('f',struct A1290,m1,1)
		AF('J',struct A1290,m2,1)
		AF('I',struct A1290,m3,1)
		AF('l',struct A1290,m4,1)
		AF('l',struct A1290,m5,1)
		AF('s',struct A1290,m6,1)
		AF('J',struct A1290,m7,1)
		AF('f',struct A1290,m8,1)
		AF('l',struct A1290,m9,1)
		AF('L',struct A1290,m10,1)
		AF('L',struct A1290,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCBBSpsL{ifJIllsJflLL}Jjp> */
#pragma pack(push,2)
union A1291 { C m0; C m1; B m2; B m3; S m4; p m5; s m6; L m7; struct A1290 m8; J m9; j m10; p m11; };
#pragma pack(pop)
int f_cmpA1291(const union A1291 *x, const union A1291 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1290(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1291() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1291));
		AF('C',union A1291,m0,1)
		AF('C',union A1291,m1,1)
		AF('B',union A1291,m2,1)
		AF('B',union A1291,m3,1)
		AF('S',union A1291,m4,1)
		AF('p',union A1291,m5,1)
		AF('s',union A1291,m6,1)
		AF('L',union A1291,m7,1)
		AFa(union A1291,m8,1,A1290)
		AF('J',union A1291,m9,1)
		AF('j',union A1291,m10,1)
		AF('p',union A1291,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <di[15]sBpJiiIJ> */
#pragma pack(push,4)
union A1292 { d m0; i m1[15]; s m2; B m3; p m4; J m5; i m6; i m7; I m8; J m9; };
#pragma pack(pop)
int f_cmpA1292(const union A1292 *x, const union A1292 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1292() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1292));
		AF('d',union A1292,m0,1)
		AF('i',union A1292,m1,15)
		AF('s',union A1292,m2,1)
		AF('B',union A1292,m3,1)
		AF('p',union A1292,m4,1)
		AF('J',union A1292,m5,1)
		AF('i',union A1292,m6,1)
		AF('i',union A1292,m7,1)
		AF('I',union A1292,m8,1)
		AF('J',union A1292,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILLC} */
#pragma pack(push,2)
struct A1293 { I m0; L m1; L m2; C m3; };
#pragma pack(pop)
int f_cmpA1293(const struct A1293 *x, const struct A1293 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1293() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1293));
		AF('I',struct A1293,m0,1)
		AF('L',struct A1293,m1,1)
		AF('L',struct A1293,m2,1)
		AF('C',struct A1293,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d{ILLC}CBdJCjipfs> */
#pragma pack(push,2)
union A1294 { d m0; struct A1293 m1; C m2; B m3; d m4; J m5; C m6; j m7; i m8; p m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA1294(const union A1294 *x, const union A1294 *y) { return x->m0 == y->m0 && f_cmpA1293(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1294() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1294));
		AF('d',union A1294,m0,1)
		AFa(union A1294,m1,1,A1293)
		AF('C',union A1294,m2,1)
		AF('B',union A1294,m3,1)
		AF('d',union A1294,m4,1)
		AF('J',union A1294,m5,1)
		AF('C',union A1294,m6,1)
		AF('j',union A1294,m7,1)
		AF('i',union A1294,m8,1)
		AF('p',union A1294,m9,1)
		AF('f',union A1294,m10,1)
		AF('s',union A1294,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBdcLSpCiBJJ} */
#pragma pack(push,2)
struct A1295 { S m0; B m1; d m2; c m3; L m4; S m5; p m6; C m7; i m8; B m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA1295(const struct A1295 *x, const struct A1295 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1295() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1295));
		AF('S',struct A1295,m0,1)
		AF('B',struct A1295,m1,1)
		AF('d',struct A1295,m2,1)
		AF('c',struct A1295,m3,1)
		AF('L',struct A1295,m4,1)
		AF('S',struct A1295,m5,1)
		AF('p',struct A1295,m6,1)
		AF('C',struct A1295,m7,1)
		AF('i',struct A1295,m8,1)
		AF('B',struct A1295,m9,1)
		AF('J',struct A1295,m10,1)
		AF('J',struct A1295,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJiJj[3]cfSsISj> */
#pragma pack(push,2)
union A1296 { c m0; J m1; i m2; J m3; j m4[3]; c m5; f m6; S m7; s m8; I m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA1296(const union A1296 *x, const union A1296 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1296() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1296));
		AF('c',union A1296,m0,1)
		AF('J',union A1296,m1,1)
		AF('i',union A1296,m2,1)
		AF('J',union A1296,m3,1)
		AF('j',union A1296,m4,3)
		AF('c',union A1296,m5,1)
		AF('f',union A1296,m6,1)
		AF('S',union A1296,m7,1)
		AF('s',union A1296,m8,1)
		AF('I',union A1296,m9,1)
		AF('S',union A1296,m10,1)
		AF('j',union A1296,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc} */
#pragma pack(push,2)
struct A1297 { B m0; struct A1295 m1; d m2; p m3; j m4; B m5; L m6; c m7; union A1296 m8; S m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA1297(const struct A1297 *x, const struct A1297 *y) { return x->m0 == y->m0 && f_cmpA1295(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1296(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1297() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1297));
		AF('B',struct A1297,m0,1)
		AFa(struct A1297,m1,1,A1295)
		AF('d',struct A1297,m2,1)
		AF('p',struct A1297,m3,1)
		AF('j',struct A1297,m4,1)
		AF('B',struct A1297,m5,1)
		AF('L',struct A1297,m6,1)
		AF('c',struct A1297,m7,1)
		AFa(struct A1297,m8,1,A1296)
		AF('S',struct A1297,m9,1)
		AF('j',struct A1297,m10,1)
		AF('c',struct A1297,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC} */
#pragma pack(push,4)
struct A1298 { s m0; f m1; struct A1297 m2; p m3; j m4; C m5; };
#pragma pack(pop)
int f_cmpA1298(const struct A1298 *x, const struct A1298 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1297(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1298() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1298));
		AF('s',struct A1298,m0,1)
		AF('f',struct A1298,m1,1)
		AFa(struct A1298,m2,1,A1297)
		AF('p',struct A1298,m3,1)
		AF('j',struct A1298,m4,1)
		AF('C',struct A1298,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjBiLljIddpI} */
#pragma pack(push,4)
struct A1299 { s m0; j m1; B m2; i m3; L m4; l m5; j m6; I m7; d m8; d m9; p m10; I m11; };
#pragma pack(pop)
int f_cmpA1299(const struct A1299 *x, const struct A1299 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1299() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1299));
		AF('s',struct A1299,m0,1)
		AF('j',struct A1299,m1,1)
		AF('B',struct A1299,m2,1)
		AF('i',struct A1299,m3,1)
		AF('L',struct A1299,m4,1)
		AF('l',struct A1299,m5,1)
		AF('j',struct A1299,m6,1)
		AF('I',struct A1299,m7,1)
		AF('d',struct A1299,m8,1)
		AF('d',struct A1299,m9,1)
		AF('p',struct A1299,m10,1)
		AF('I',struct A1299,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cp{sjBiLljIddpI}isBi} */
#pragma pack(push,4)
struct A1300 { c m0; p m1; struct A1299 m2; i m3; s m4; B m5; i m6; };
#pragma pack(pop)
int f_cmpA1300(const struct A1300 *x, const struct A1300 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1299(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1300() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1300));
		AF('c',struct A1300,m0,1)
		AF('p',struct A1300,m1,1)
		AFa(struct A1300,m2,1,A1299)
		AF('i',struct A1300,m3,1)
		AF('s',struct A1300,m4,1)
		AF('B',struct A1300,m5,1)
		AF('i',struct A1300,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLBpjcB[5]JifiB> */
#pragma pack(push,2)
union A1301 { S m0; L m1; B m2; p m3; j m4; c m5; B m6[5]; J m7; i m8; f m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA1301(const union A1301 *x, const union A1301 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1301() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1301));
		AF('S',union A1301,m0,1)
		AF('L',union A1301,m1,1)
		AF('B',union A1301,m2,1)
		AF('p',union A1301,m3,1)
		AF('j',union A1301,m4,1)
		AF('c',union A1301,m5,1)
		AF('B',union A1301,m6,5)
		AF('J',union A1301,m7,1)
		AF('i',union A1301,m8,1)
		AF('f',union A1301,m9,1)
		AF('i',union A1301,m10,1)
		AF('B',union A1301,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCfsisJlcdBB} */
#pragma pack(push,8)
struct A1302 { p m0; C m1; f m2; s m3; i m4; s m5; J m6; l m7; c m8; d m9; B m10; B m11; };
#pragma pack(pop)
int f_cmpA1302(const struct A1302 *x, const struct A1302 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1302() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1302));
		AF('p',struct A1302,m0,1)
		AF('C',struct A1302,m1,1)
		AF('f',struct A1302,m2,1)
		AF('s',struct A1302,m3,1)
		AF('i',struct A1302,m4,1)
		AF('s',struct A1302,m5,1)
		AF('J',struct A1302,m6,1)
		AF('l',struct A1302,m7,1)
		AF('c',struct A1302,m8,1)
		AF('d',struct A1302,m9,1)
		AF('B',struct A1302,m10,1)
		AF('B',struct A1302,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C<SLBpjcB[5]JifiB>{S}lCB{pCfsisJlcdBB}dcLCi> */
#pragma pack(push,4)
union A1303 { C m0; union A1301 m1; struct A1061 m2; l m3; C m4; B m5; struct A1302 m6; d m7; c m8; L m9; C m10; i m11; };
#pragma pack(pop)
int f_cmpA1303(const union A1303 *x, const union A1303 *y) { return x->m0 == y->m0 && f_cmpA1301(&x->m1, &y->m1) && f_cmpA1061(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1302(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1303() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1303));
		AF('C',union A1303,m0,1)
		AFa(union A1303,m1,1,A1301)
		AFa(union A1303,m2,1,A1061)
		AF('l',union A1303,m3,1)
		AF('C',union A1303,m4,1)
		AF('B',union A1303,m5,1)
		AFa(union A1303,m6,1,A1302)
		AF('d',union A1303,m7,1)
		AF('c',union A1303,m8,1)
		AF('L',union A1303,m9,1)
		AF('C',union A1303,m10,1)
		AF('i',union A1303,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJffdcSCjjjj} */
#pragma pack(push,2)
struct A1304 { p m0; J m1; f m2; f m3; d m4; c m5; S m6; C m7; j m8; j m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA1304(const struct A1304 *x, const struct A1304 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1304() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1304));
		AF('p',struct A1304,m0,1)
		AF('J',struct A1304,m1,1)
		AF('f',struct A1304,m2,1)
		AF('f',struct A1304,m3,1)
		AF('d',struct A1304,m4,1)
		AF('c',struct A1304,m5,1)
		AF('S',struct A1304,m6,1)
		AF('C',struct A1304,m7,1)
		AF('j',struct A1304,m8,1)
		AF('j',struct A1304,m9,1)
		AF('j',struct A1304,m10,1)
		AF('j',struct A1304,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JSCdlBiSJffB> */
#pragma pack(push,8)
union A1305 { J m0; S m1; C m2; d m3; l m4; B m5; i m6; S m7; J m8; f m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA1305(const union A1305 *x, const union A1305 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1305() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1305));
		AF('J',union A1305,m0,1)
		AF('S',union A1305,m1,1)
		AF('C',union A1305,m2,1)
		AF('d',union A1305,m3,1)
		AF('l',union A1305,m4,1)
		AF('B',union A1305,m5,1)
		AF('i',union A1305,m6,1)
		AF('S',union A1305,m7,1)
		AF('J',union A1305,m8,1)
		AF('f',union A1305,m9,1)
		AF('f',union A1305,m10,1)
		AF('B',union A1305,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CClcs[12]{pJffdcSCjjjj}Cdfs<JSCdlBiSJffB>L} */
#pragma pack(push,4)
struct A1306 { C m0; C m1; l m2; c m3; s m4[12]; struct A1304 m5; C m6; d m7; f m8; s m9; union A1305 m10; L m11; };
#pragma pack(pop)
int f_cmpA1306(const struct A1306 *x, const struct A1306 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && f_cmpA1304(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1305(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1306() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1306));
		AF('C',struct A1306,m0,1)
		AF('C',struct A1306,m1,1)
		AF('l',struct A1306,m2,1)
		AF('c',struct A1306,m3,1)
		AF('s',struct A1306,m4,12)
		AFa(struct A1306,m5,1,A1304)
		AF('C',struct A1306,m6,1)
		AF('d',struct A1306,m7,1)
		AF('f',struct A1306,m8,1)
		AF('s',struct A1306,m9,1)
		AFa(struct A1306,m10,1,A1305)
		AF('L',struct A1306,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iLJicdIISI<c>C} */
#pragma pack(push,8)
struct A1307 { i m0; L m1; J m2; i m3; c m4; d m5; I m6; I m7; S m8; I m9; union A123 m10; C m11; };
#pragma pack(pop)
int f_cmpA1307(const struct A1307 *x, const struct A1307 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA123(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1307() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1307));
		AF('i',struct A1307,m0,1)
		AF('L',struct A1307,m1,1)
		AF('J',struct A1307,m2,1)
		AF('i',struct A1307,m3,1)
		AF('c',struct A1307,m4,1)
		AF('d',struct A1307,m5,1)
		AF('I',struct A1307,m6,1)
		AF('I',struct A1307,m7,1)
		AF('S',struct A1307,m8,1)
		AF('I',struct A1307,m9,1)
		AFa(struct A1307,m10,1,A123)
		AF('C',struct A1307,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BlIJdpBsfiJC> */
#pragma pack(push,2)
union A1308 { B m0; l m1; I m2; J m3; d m4; p m5; B m6; s m7; f m8; i m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA1308(const union A1308 *x, const union A1308 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1308() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1308));
		AF('B',union A1308,m0,1)
		AF('l',union A1308,m1,1)
		AF('I',union A1308,m2,1)
		AF('J',union A1308,m3,1)
		AF('d',union A1308,m4,1)
		AF('p',union A1308,m5,1)
		AF('B',union A1308,m6,1)
		AF('s',union A1308,m7,1)
		AF('f',union A1308,m8,1)
		AF('i',union A1308,m9,1)
		AF('J',union A1308,m10,1)
		AF('C',union A1308,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JlciLSfs[10]plfI} */
#pragma pack(push,4)
struct A1309 { J m0; l m1; c m2; i m3; L m4; S m5; f m6; s m7[10]; p m8; l m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA1309(const struct A1309 *x, const struct A1309 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1309() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1309));
		AF('J',struct A1309,m0,1)
		AF('l',struct A1309,m1,1)
		AF('c',struct A1309,m2,1)
		AF('i',struct A1309,m3,1)
		AF('L',struct A1309,m4,1)
		AF('S',struct A1309,m5,1)
		AF('f',struct A1309,m6,1)
		AF('s',struct A1309,m7,10)
		AF('p',struct A1309,m8,1)
		AF('l',struct A1309,m9,1)
		AF('f',struct A1309,m10,1)
		AF('I',struct A1309,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldcB} */
#pragma pack(push,4)
struct A1310 { l m0; d m1; c m2; B m3; };
#pragma pack(pop)
int f_cmpA1310(const struct A1310 *x, const struct A1310 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1310() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1310));
		AF('l',struct A1310,m0,1)
		AF('d',struct A1310,m1,1)
		AF('c',struct A1310,m2,1)
		AF('B',struct A1310,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pj[3]dc<BlIJdpBsfiJC>lB{JlciLSfs[10]plfI}{ldcB}fBJ> */
#pragma pack(push,2)
union A1311 { p m0; j m1[3]; d m2; c m3; union A1308 m4; l m5; B m6; struct A1309 m7; struct A1310 m8; f m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA1311(const union A1311 *x, const union A1311 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1308(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1309(&x->m7, &y->m7) && f_cmpA1310(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1311() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1311));
		AF('p',union A1311,m0,1)
		AF('j',union A1311,m1,3)
		AF('d',union A1311,m2,1)
		AF('c',union A1311,m3,1)
		AFa(union A1311,m4,1,A1308)
		AF('l',union A1311,m5,1)
		AF('B',union A1311,m6,1)
		AFa(union A1311,m7,1,A1309)
		AFa(union A1311,m8,1,A1310)
		AF('f',union A1311,m9,1)
		AF('B',union A1311,m10,1)
		AF('J',union A1311,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CSc> */
#pragma pack(push,4)
union A1312 { C m0; S m1; c m2; };
#pragma pack(pop)
int f_cmpA1312(const union A1312 *x, const union A1312 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1312() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1312));
		AF('C',union A1312,m0,1)
		AF('S',union A1312,m1,1)
		AF('c',union A1312,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dfJsJIBC<CSc>[7]} */
#pragma pack(push,4)
struct A1313 { d m0; f m1; J m2; s m3; J m4; I m5; B m6; C m7; union A1312 m8[7]; };
#pragma pack(pop)
int f_cmpA1313(const struct A1313 *x, const struct A1313 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1312(&x->m8[0], &y->m8[0]) && f_cmpA1312(&x->m8[1], &y->m8[1]) && f_cmpA1312(&x->m8[2], &y->m8[2]) && f_cmpA1312(&x->m8[3], &y->m8[3]) && f_cmpA1312(&x->m8[4], &y->m8[4]) && f_cmpA1312(&x->m8[5], &y->m8[5]) && f_cmpA1312(&x->m8[6], &y->m8[6]); };
DCaggr* f_touchA1313() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1313));
		AF('d',struct A1313,m0,1)
		AF('f',struct A1313,m1,1)
		AF('J',struct A1313,m2,1)
		AF('s',struct A1313,m3,1)
		AF('J',struct A1313,m4,1)
		AF('I',struct A1313,m5,1)
		AF('B',struct A1313,m6,1)
		AF('C',struct A1313,m7,1)
		AFa(struct A1313,m8,7,A1312)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLfBspJIfpcB[12]> */
#pragma pack(push,4)
union A1314 { J m0; L m1; f m2; B m3; s m4; p m5; J m6; I m7; f m8; p m9; c m10; B m11[12]; };
#pragma pack(pop)
int f_cmpA1314(const union A1314 *x, const union A1314 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11]; };
DCaggr* f_touchA1314() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1314));
		AF('J',union A1314,m0,1)
		AF('L',union A1314,m1,1)
		AF('f',union A1314,m2,1)
		AF('B',union A1314,m3,1)
		AF('s',union A1314,m4,1)
		AF('p',union A1314,m5,1)
		AF('J',union A1314,m6,1)
		AF('I',union A1314,m7,1)
		AF('f',union A1314,m8,1)
		AF('p',union A1314,m9,1)
		AF('c',union A1314,m10,1)
		AF('B',union A1314,m11,12)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJLIBfBS[9]iSjs> */
#pragma pack(push,4)
union A1315 { S m0; J m1; L m2; I m3; B m4; f m5; B m6; S m7[9]; i m8; S m9; j m10; s m11; };
#pragma pack(pop)
int f_cmpA1315(const union A1315 *x, const union A1315 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1315() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1315));
		AF('S',union A1315,m0,1)
		AF('J',union A1315,m1,1)
		AF('L',union A1315,m2,1)
		AF('I',union A1315,m3,1)
		AF('B',union A1315,m4,1)
		AF('f',union A1315,m5,1)
		AF('B',union A1315,m6,1)
		AF('S',union A1315,m7,9)
		AF('i',union A1315,m8,1)
		AF('S',union A1315,m9,1)
		AF('j',union A1315,m10,1)
		AF('s',union A1315,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IClCIssIpicL} */
#pragma pack(push,1)
struct A1316 { I m0; C m1; l m2; C m3; I m4; s m5; s m6; I m7; p m8; i m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA1316(const struct A1316 *x, const struct A1316 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1316() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1316));
		AF('I',struct A1316,m0,1)
		AF('C',struct A1316,m1,1)
		AF('l',struct A1316,m2,1)
		AF('C',struct A1316,m3,1)
		AF('I',struct A1316,m4,1)
		AF('s',struct A1316,m5,1)
		AF('s',struct A1316,m6,1)
		AF('I',struct A1316,m7,1)
		AF('p',struct A1316,m8,1)
		AF('i',struct A1316,m9,1)
		AF('c',struct A1316,m10,1)
		AF('L',struct A1316,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cdilSidJL} */
#pragma pack(push,2)
struct A1317 { c m0; d m1; i m2; l m3; S m4; i m5; d m6; J m7; L m8; };
#pragma pack(pop)
int f_cmpA1317(const struct A1317 *x, const struct A1317 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1317() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1317));
		AF('c',struct A1317,m0,1)
		AF('d',struct A1317,m1,1)
		AF('i',struct A1317,m2,1)
		AF('l',struct A1317,m3,1)
		AF('S',struct A1317,m4,1)
		AF('i',struct A1317,m5,1)
		AF('d',struct A1317,m6,1)
		AF('J',struct A1317,m7,1)
		AF('L',struct A1317,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICdSlpfIpIcj} */
#pragma pack(push,4)
struct A1318 { I m0; C m1; d m2; S m3; l m4; p m5; f m6; I m7; p m8; I m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA1318(const struct A1318 *x, const struct A1318 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1318() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1318));
		AF('I',struct A1318,m0,1)
		AF('C',struct A1318,m1,1)
		AF('d',struct A1318,m2,1)
		AF('S',struct A1318,m3,1)
		AF('l',struct A1318,m4,1)
		AF('p',struct A1318,m5,1)
		AF('f',struct A1318,m6,1)
		AF('I',struct A1318,m7,1)
		AF('p',struct A1318,m8,1)
		AF('I',struct A1318,m9,1)
		AF('c',struct A1318,m10,1)
		AF('j',struct A1318,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {spi[2]jsjdjipBi} */
#pragma pack(push,4)
struct A1319 { s m0; p m1; i m2[2]; j m3; s m4; j m5; d m6; j m7; i m8; p m9; B m10; i m11; };
#pragma pack(pop)
int f_cmpA1319(const struct A1319 *x, const struct A1319 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1319() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1319));
		AF('s',struct A1319,m0,1)
		AF('p',struct A1319,m1,1)
		AF('i',struct A1319,m2,2)
		AF('j',struct A1319,m3,1)
		AF('s',struct A1319,m4,1)
		AF('j',struct A1319,m5,1)
		AF('d',struct A1319,m6,1)
		AF('j',struct A1319,m7,1)
		AF('i',struct A1319,m8,1)
		AF('p',struct A1319,m9,1)
		AF('B',struct A1319,m10,1)
		AF('i',struct A1319,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JcJ} */
#pragma pack(push,4)
struct A1320 { J m0; c m1; J m2; };
#pragma pack(pop)
int f_cmpA1320(const struct A1320 *x, const struct A1320 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1320() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1320));
		AF('J',struct A1320,m0,1)
		AF('c',struct A1320,m1,1)
		AF('J',struct A1320,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dpsisILdiiif> */
#pragma pack(push,4)
union A1321 { d m0; p m1; s m2; i m3; s m4; I m5; L m6; d m7; i m8; i m9; i m10; f m11; };
#pragma pack(pop)
int f_cmpA1321(const union A1321 *x, const union A1321 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1321() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1321));
		AF('d',union A1321,m0,1)
		AF('p',union A1321,m1,1)
		AF('s',union A1321,m2,1)
		AF('i',union A1321,m3,1)
		AF('s',union A1321,m4,1)
		AF('I',union A1321,m5,1)
		AF('L',union A1321,m6,1)
		AF('d',union A1321,m7,1)
		AF('i',union A1321,m8,1)
		AF('i',union A1321,m9,1)
		AF('i',union A1321,m10,1)
		AF('f',union A1321,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{spi[2]jsjdjipBi}dBCpp{JcJ}Sf<dpsisILdiiif>pI} */
#pragma pack(push,4)
struct A1322 { struct A1319 m0; d m1; B m2; C m3; p m4; p m5; struct A1320 m6; S m7; f m8; union A1321 m9; p m10; I m11; };
#pragma pack(pop)
int f_cmpA1322(const struct A1322 *x, const struct A1322 *y) { return f_cmpA1319(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1320(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1321(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1322() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1322));
		AFa(struct A1322,m0,1,A1319)
		AF('d',struct A1322,m1,1)
		AF('B',struct A1322,m2,1)
		AF('C',struct A1322,m3,1)
		AF('p',struct A1322,m4,1)
		AF('p',struct A1322,m5,1)
		AFa(struct A1322,m6,1,A1320)
		AF('S',struct A1322,m7,1)
		AF('f',struct A1322,m8,1)
		AFa(struct A1322,m9,1,A1321)
		AF('p',struct A1322,m10,1)
		AF('I',struct A1322,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jlsS[10]dccicIjC} */
#pragma pack(push,2)
struct A1323 { j m0; l m1; s m2; S m3[10]; d m4; c m5; c m6; i m7; c m8; I m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA1323(const struct A1323 *x, const struct A1323 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1323() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1323));
		AF('j',struct A1323,m0,1)
		AF('l',struct A1323,m1,1)
		AF('s',struct A1323,m2,1)
		AF('S',struct A1323,m3,10)
		AF('d',struct A1323,m4,1)
		AF('c',struct A1323,m5,1)
		AF('c',struct A1323,m6,1)
		AF('i',struct A1323,m7,1)
		AF('c',struct A1323,m8,1)
		AF('I',struct A1323,m9,1)
		AF('j',struct A1323,m10,1)
		AF('C',struct A1323,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ICJpL{C}L> */
#pragma pack(push,1)
union A1324 { I m0; C m1; J m2; p m3; L m4; struct A289 m5; L m6; };
#pragma pack(pop)
int f_cmpA1324(const union A1324 *x, const union A1324 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA289(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA1324() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1324));
		AF('I',union A1324,m0,1)
		AF('C',union A1324,m1,1)
		AF('J',union A1324,m2,1)
		AF('p',union A1324,m3,1)
		AF('L',union A1324,m4,1)
		AFa(union A1324,m5,1,A289)
		AF('L',union A1324,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <df[16]BfipJILpfs> */
#pragma pack(push,8)
union A1325 { d m0; f m1[16]; B m2; f m3; i m4; p m5; J m6; I m7; L m8; p m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA1325(const union A1325 *x, const union A1325 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m1[15] == y->m1[15] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1325() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1325));
		AF('d',union A1325,m0,1)
		AF('f',union A1325,m1,16)
		AF('B',union A1325,m2,1)
		AF('f',union A1325,m3,1)
		AF('i',union A1325,m4,1)
		AF('p',union A1325,m5,1)
		AF('J',union A1325,m6,1)
		AF('I',union A1325,m7,1)
		AF('L',union A1325,m8,1)
		AF('p',union A1325,m9,1)
		AF('f',union A1325,m10,1)
		AF('s',union A1325,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJpfSlSs[13]f<df[16]BfipJILpfs>> */
#pragma pack(push,4)
union A1326 { C m0; J m1; p m2; f m3; S m4; l m5; S m6; s m7[13]; f m8; union A1325 m9; };
#pragma pack(pop)
int f_cmpA1326(const union A1326 *x, const union A1326 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m8 == y->m8 && f_cmpA1325(&x->m9, &y->m9); };
DCaggr* f_touchA1326() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1326));
		AF('C',union A1326,m0,1)
		AF('J',union A1326,m1,1)
		AF('p',union A1326,m2,1)
		AF('f',union A1326,m3,1)
		AF('S',union A1326,m4,1)
		AF('l',union A1326,m5,1)
		AF('S',union A1326,m6,1)
		AF('s',union A1326,m7,13)
		AF('f',union A1326,m8,1)
		AFa(union A1326,m9,1,A1325)
		dcCloseAggr(a);
	}
	return a;
};
/* <BSiSlffff> */
#pragma pack(push,2)
union A1327 { B m0; S m1; i m2; S m3; l m4; f m5; f m6; f m7; f m8; };
#pragma pack(pop)
int f_cmpA1327(const union A1327 *x, const union A1327 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1327() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1327));
		AF('B',union A1327,m0,1)
		AF('S',union A1327,m1,1)
		AF('i',union A1327,m2,1)
		AF('S',union A1327,m3,1)
		AF('l',union A1327,m4,1)
		AF('f',union A1327,m5,1)
		AF('f',union A1327,m6,1)
		AF('f',union A1327,m7,1)
		AF('f',union A1327,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jLdBcBjIfijl> */
#pragma pack(push,1)
union A1328 { j m0; L m1; d m2; B m3; c m4; B m5; j m6; I m7; f m8; i m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA1328(const union A1328 *x, const union A1328 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1328() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1328));
		AF('j',union A1328,m0,1)
		AF('L',union A1328,m1,1)
		AF('d',union A1328,m2,1)
		AF('B',union A1328,m3,1)
		AF('c',union A1328,m4,1)
		AF('B',union A1328,m5,1)
		AF('j',union A1328,m6,1)
		AF('I',union A1328,m7,1)
		AF('f',union A1328,m8,1)
		AF('i',union A1328,m9,1)
		AF('j',union A1328,m10,1)
		AF('l',union A1328,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fI<BSiSlffff>C{i}fBl<jLdBcBjIfijl>} */
#pragma pack(push,1)
struct A1329 { f m0; I m1; union A1327 m2; C m3; struct A553 m4; f m5; B m6; l m7; union A1328 m8; };
#pragma pack(pop)
int f_cmpA1329(const struct A1329 *x, const struct A1329 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1327(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA553(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1328(&x->m8, &y->m8); };
DCaggr* f_touchA1329() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1329));
		AF('f',struct A1329,m0,1)
		AF('I',struct A1329,m1,1)
		AFa(struct A1329,m2,1,A1327)
		AF('C',struct A1329,m3,1)
		AFa(struct A1329,m4,1,A553)
		AF('f',struct A1329,m5,1)
		AF('B',struct A1329,m6,1)
		AF('l',struct A1329,m7,1)
		AFa(struct A1329,m8,1,A1328)
		dcCloseAggr(a);
	}
	return a;
};
/* {BfSpJi} */
#pragma pack(push,4)
struct A1330 { B m0; f m1; S m2; p m3; J m4; i m5; };
#pragma pack(pop)
int f_cmpA1330(const struct A1330 *x, const struct A1330 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1330() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1330));
		AF('B',struct A1330,m0,1)
		AF('f',struct A1330,m1,1)
		AF('S',struct A1330,m2,1)
		AF('p',struct A1330,m3,1)
		AF('J',struct A1330,m4,1)
		AF('i',struct A1330,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csSjJJ> */
#pragma pack(push,4)
union A1331 { c m0; s m1; S m2; j m3; J m4; J m5; };
#pragma pack(pop)
int f_cmpA1331(const union A1331 *x, const union A1331 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1331() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1331));
		AF('c',union A1331,m0,1)
		AF('s',union A1331,m1,1)
		AF('S',union A1331,m2,1)
		AF('j',union A1331,m3,1)
		AF('J',union A1331,m4,1)
		AF('J',union A1331,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJiBjJcjlIlC} */
#pragma pack(push,2)
struct A1332 { I m0; J m1; i m2; B m3; j m4; J m5; c m6; j m7; l m8; I m9; l m10; C m11; };
#pragma pack(pop)
int f_cmpA1332(const struct A1332 *x, const struct A1332 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1332() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1332));
		AF('I',struct A1332,m0,1)
		AF('J',struct A1332,m1,1)
		AF('i',struct A1332,m2,1)
		AF('B',struct A1332,m3,1)
		AF('j',struct A1332,m4,1)
		AF('J',struct A1332,m5,1)
		AF('c',struct A1332,m6,1)
		AF('j',struct A1332,m7,1)
		AF('l',struct A1332,m8,1)
		AF('I',struct A1332,m9,1)
		AF('l',struct A1332,m10,1)
		AF('C',struct A1332,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ij{IJiBjJcjlIlC}} */
#pragma pack(push,4)
struct A1333 { i m0; j m1; struct A1332 m2; };
#pragma pack(pop)
int f_cmpA1333(const struct A1333 *x, const struct A1333 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1332(&x->m2, &y->m2); };
DCaggr* f_touchA1333() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1333));
		AF('i',struct A1333,m0,1)
		AF('j',struct A1333,m1,1)
		AFa(struct A1333,m2,1,A1332)
		dcCloseAggr(a);
	}
	return a;
};
/* <{BfSpJi}<csSjJJ>jdCCCiCcc{ij{IJiBjJcjlIlC}}> */
#pragma pack(push,2)
union A1334 { struct A1330 m0; union A1331 m1; j m2; d m3; C m4; C m5; C m6; i m7; C m8; c m9; c m10; struct A1333 m11; };
#pragma pack(pop)
int f_cmpA1334(const union A1334 *x, const union A1334 *y) { return f_cmpA1330(&x->m0, &y->m0) && f_cmpA1331(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1333(&x->m11, &y->m11); };
DCaggr* f_touchA1334() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1334));
		AFa(union A1334,m0,1,A1330)
		AFa(union A1334,m1,1,A1331)
		AF('j',union A1334,m2,1)
		AF('d',union A1334,m3,1)
		AF('C',union A1334,m4,1)
		AF('C',union A1334,m5,1)
		AF('C',union A1334,m6,1)
		AF('i',union A1334,m7,1)
		AF('C',union A1334,m8,1)
		AF('c',union A1334,m9,1)
		AF('c',union A1334,m10,1)
		AFa(union A1334,m11,1,A1333)
		dcCloseAggr(a);
	}
	return a;
};
/* {dlCjISs} */
#pragma pack(push,4)
struct A1335 { d m0; l m1; C m2; j m3; I m4; S m5; s m6; };
#pragma pack(pop)
int f_cmpA1335(const struct A1335 *x, const struct A1335 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1335() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1335));
		AF('d',struct A1335,m0,1)
		AF('l',struct A1335,m1,1)
		AF('C',struct A1335,m2,1)
		AF('j',struct A1335,m3,1)
		AF('I',struct A1335,m4,1)
		AF('S',struct A1335,m5,1)
		AF('s',struct A1335,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fjLlsSBlL> */
#pragma pack(push,4)
union A1336 { f m0; j m1; L m2; l m3; s m4; S m5; B m6; l m7; L m8; };
#pragma pack(pop)
int f_cmpA1336(const union A1336 *x, const union A1336 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1336() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1336));
		AF('f',union A1336,m0,1)
		AF('j',union A1336,m1,1)
		AF('L',union A1336,m2,1)
		AF('l',union A1336,m3,1)
		AF('s',union A1336,m4,1)
		AF('S',union A1336,m5,1)
		AF('B',union A1336,m6,1)
		AF('l',union A1336,m7,1)
		AF('L',union A1336,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pcCl[16]jf> */
#pragma pack(push,8)
union A1337 { p m0; c m1; C m2; l m3[16]; j m4; f m5; };
#pragma pack(pop)
int f_cmpA1337(const union A1337 *x, const union A1337 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m3[15] == y->m3[15] && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1337() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1337));
		AF('p',union A1337,m0,1)
		AF('c',union A1337,m1,1)
		AF('C',union A1337,m2,1)
		AF('l',union A1337,m3,16)
		AF('j',union A1337,m4,1)
		AF('f',union A1337,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jfBpdJlsCpsj} */
#pragma pack(push,4)
struct A1338 { j m0; f m1; B m2; p m3; d m4; J m5; l m6; s m7; C m8; p m9; s m10; j m11; };
#pragma pack(pop)
int f_cmpA1338(const struct A1338 *x, const struct A1338 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1338() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1338));
		AF('j',struct A1338,m0,1)
		AF('f',struct A1338,m1,1)
		AF('B',struct A1338,m2,1)
		AF('p',struct A1338,m3,1)
		AF('d',struct A1338,m4,1)
		AF('J',struct A1338,m5,1)
		AF('l',struct A1338,m6,1)
		AF('s',struct A1338,m7,1)
		AF('C',struct A1338,m8,1)
		AF('p',struct A1338,m9,1)
		AF('s',struct A1338,m10,1)
		AF('j',struct A1338,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldl} */
#pragma pack(push,4)
struct A1339 { l m0; d m1; l m2; };
#pragma pack(pop)
int f_cmpA1339(const struct A1339 *x, const struct A1339 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1339() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1339));
		AF('l',struct A1339,m0,1)
		AF('d',struct A1339,m1,1)
		AF('l',struct A1339,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <c<s>J<fjLlsSBlL>iCl<pcCl[16]jf>c{jfBpdJlsCpsj}i{ldl}> */
#pragma pack(push,4)
union A1340 { c m0; union A713 m1; J m2; union A1336 m3; i m4; C m5; l m6; union A1337 m7; c m8; struct A1338 m9; i m10; struct A1339 m11; };
#pragma pack(pop)
int f_cmpA1340(const union A1340 *x, const union A1340 *y) { return x->m0 == y->m0 && f_cmpA713(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA1336(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1337(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA1338(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1339(&x->m11, &y->m11); };
DCaggr* f_touchA1340() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1340));
		AF('c',union A1340,m0,1)
		AFa(union A1340,m1,1,A713)
		AF('J',union A1340,m2,1)
		AFa(union A1340,m3,1,A1336)
		AF('i',union A1340,m4,1)
		AF('C',union A1340,m5,1)
		AF('l',union A1340,m6,1)
		AFa(union A1340,m7,1,A1337)
		AF('c',union A1340,m8,1)
		AFa(union A1340,m9,1,A1338)
		AF('i',union A1340,m10,1)
		AFa(union A1340,m11,1,A1339)
		dcCloseAggr(a);
	}
	return a;
};
/* <BSiBCpfs[6]BS[3]p> */
#pragma pack(push,4)
union A1341 { B m0; S m1; i m2; B m3; C m4; p m5; f m6; s m7[6]; B m8; S m9[3]; p m10; };
#pragma pack(pop)
int f_cmpA1341(const union A1341 *x, const union A1341 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m10 == y->m10; };
DCaggr* f_touchA1341() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1341));
		AF('B',union A1341,m0,1)
		AF('S',union A1341,m1,1)
		AF('i',union A1341,m2,1)
		AF('B',union A1341,m3,1)
		AF('C',union A1341,m4,1)
		AF('p',union A1341,m5,1)
		AF('f',union A1341,m6,1)
		AF('s',union A1341,m7,6)
		AF('B',union A1341,m8,1)
		AF('S',union A1341,m9,3)
		AF('p',union A1341,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CcfSjfLC> */
#pragma pack(push,8)
union A1342 { C m0; c m1; f m2; S m3; j m4; f m5; L m6; C m7; };
#pragma pack(pop)
int f_cmpA1342(const union A1342 *x, const union A1342 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1342() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1342));
		AF('C',union A1342,m0,1)
		AF('c',union A1342,m1,1)
		AF('f',union A1342,m2,1)
		AF('S',union A1342,m3,1)
		AF('j',union A1342,m4,1)
		AF('f',union A1342,m5,1)
		AF('L',union A1342,m6,1)
		AF('C',union A1342,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C[9]lsldjI<CcfSjfLC>LSJI} */
#pragma pack(push,2)
struct A1343 { C m0[9]; l m1; s m2; l m3; d m4; j m5; I m6; union A1342 m7; L m8; S m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA1343(const struct A1343 *x, const struct A1343 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1342(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1343() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1343));
		AF('C',struct A1343,m0,9)
		AF('l',struct A1343,m1,1)
		AF('s',struct A1343,m2,1)
		AF('l',struct A1343,m3,1)
		AF('d',struct A1343,m4,1)
		AF('j',struct A1343,m5,1)
		AF('I',struct A1343,m6,1)
		AFa(struct A1343,m7,1,A1342)
		AF('L',struct A1343,m8,1)
		AF('S',struct A1343,m9,1)
		AF('J',struct A1343,m10,1)
		AF('I',struct A1343,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<BSiBCpfs[6]BS[3]p>{C[9]lsldjI<CcfSjfLC>LSJI}ssIIjBIIpB} */
#pragma pack(push,8)
struct A1344 { union A1341 m0; struct A1343 m1; s m2; s m3; I m4; I m5; j m6; B m7; I m8; I m9; p m10; B m11; };
#pragma pack(pop)
int f_cmpA1344(const struct A1344 *x, const struct A1344 *y) { return f_cmpA1341(&x->m0, &y->m0) && f_cmpA1343(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1344() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1344));
		AFa(struct A1344,m0,1,A1341)
		AFa(struct A1344,m1,1,A1343)
		AF('s',struct A1344,m2,1)
		AF('s',struct A1344,m3,1)
		AF('I',struct A1344,m4,1)
		AF('I',struct A1344,m5,1)
		AF('j',struct A1344,m6,1)
		AF('B',struct A1344,m7,1)
		AF('I',struct A1344,m8,1)
		AF('I',struct A1344,m9,1)
		AF('p',struct A1344,m10,1)
		AF('B',struct A1344,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sslLjJ> */
#pragma pack(push,4)
union A1345 { s m0; s m1; l m2; L m3; j m4; J m5; };
#pragma pack(pop)
int f_cmpA1345(const union A1345 *x, const union A1345 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1345() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1345));
		AF('s',union A1345,m0,1)
		AF('s',union A1345,m1,1)
		AF('l',union A1345,m2,1)
		AF('L',union A1345,m3,1)
		AF('j',union A1345,m4,1)
		AF('J',union A1345,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dB} */
#pragma pack(push,2)
struct A1346 { d m0; B m1; };
#pragma pack(pop)
int f_cmpA1346(const struct A1346 *x, const struct A1346 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1346() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1346));
		AF('d',struct A1346,m0,1)
		AF('B',struct A1346,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jj[15]<sslLjJ>IppCL{dB}BI> */
#pragma pack(push,8)
union A1347 { J m0; j m1[15]; union A1345 m2; I m3; p m4; p m5; C m6; L m7; struct A1346 m8; B m9; I m10; };
#pragma pack(pop)
int f_cmpA1347(const union A1347 *x, const union A1347 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && f_cmpA1345(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1346(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1347() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1347));
		AF('J',union A1347,m0,1)
		AF('j',union A1347,m1,15)
		AFa(union A1347,m2,1,A1345)
		AF('I',union A1347,m3,1)
		AF('p',union A1347,m4,1)
		AF('p',union A1347,m5,1)
		AF('C',union A1347,m6,1)
		AF('L',union A1347,m7,1)
		AFa(union A1347,m8,1,A1346)
		AF('B',union A1347,m9,1)
		AF('I',union A1347,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sj[15]ljIiL} */
#pragma pack(push,1)
struct A1348 { s m0; j m1[15]; l m2; j m3; I m4; i m5; L m6; };
#pragma pack(pop)
int f_cmpA1348(const struct A1348 *x, const struct A1348 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1348() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1348));
		AF('s',struct A1348,m0,1)
		AF('j',struct A1348,m1,15)
		AF('l',struct A1348,m2,1)
		AF('j',struct A1348,m3,1)
		AF('I',struct A1348,m4,1)
		AF('i',struct A1348,m5,1)
		AF('L',struct A1348,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CCIld[3]fppCCJf} */
#pragma pack(push,4)
struct A1349 { C m0; C m1; I m2; l m3; d m4[3]; f m5; p m6; p m7; C m8; C m9; J m10; f m11; };
#pragma pack(pop)
int f_cmpA1349(const struct A1349 *x, const struct A1349 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1349() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1349));
		AF('C',struct A1349,m0,1)
		AF('C',struct A1349,m1,1)
		AF('I',struct A1349,m2,1)
		AF('l',struct A1349,m3,1)
		AF('d',struct A1349,m4,3)
		AF('f',struct A1349,m5,1)
		AF('p',struct A1349,m6,1)
		AF('p',struct A1349,m7,1)
		AF('C',struct A1349,m8,1)
		AF('C',struct A1349,m9,1)
		AF('J',struct A1349,m10,1)
		AF('f',struct A1349,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CjsiSSdJB[15]Bdl> */
#pragma pack(push,2)
union A1350 { C m0; j m1; s m2; i m3; S m4; S m5; d m6; J m7; B m8[15]; B m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA1350(const union A1350 *x, const union A1350 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1350() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1350));
		AF('C',union A1350,m0,1)
		AF('j',union A1350,m1,1)
		AF('s',union A1350,m2,1)
		AF('i',union A1350,m3,1)
		AF('S',union A1350,m4,1)
		AF('S',union A1350,m5,1)
		AF('d',union A1350,m6,1)
		AF('J',union A1350,m7,1)
		AF('B',union A1350,m8,15)
		AF('B',union A1350,m9,1)
		AF('d',union A1350,m10,1)
		AF('l',union A1350,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{sj[15]ljIiL}B{CCIld[3]fppCCJf}I<CjsiSSdJB[15]Bdl>pjLJpCf> */
#pragma pack(push,4)
union A1351 { struct A1348 m0; B m1; struct A1349 m2; I m3; union A1350 m4; p m5; j m6; L m7; J m8; p m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA1351(const union A1351 *x, const union A1351 *y) { return f_cmpA1348(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA1349(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA1350(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1351() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1351));
		AFa(union A1351,m0,1,A1348)
		AF('B',union A1351,m1,1)
		AFa(union A1351,m2,1,A1349)
		AF('I',union A1351,m3,1)
		AFa(union A1351,m4,1,A1350)
		AF('p',union A1351,m5,1)
		AF('j',union A1351,m6,1)
		AF('L',union A1351,m7,1)
		AF('J',union A1351,m8,1)
		AF('p',union A1351,m9,1)
		AF('C',union A1351,m10,1)
		AF('f',union A1351,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pjLiscCdLIjc> */
#pragma pack(push,4)
union A1352 { p m0; j m1; L m2; i m3; s m4; c m5; C m6; d m7; L m8; I m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA1352(const union A1352 *x, const union A1352 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1352() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1352));
		AF('p',union A1352,m0,1)
		AF('j',union A1352,m1,1)
		AF('L',union A1352,m2,1)
		AF('i',union A1352,m3,1)
		AF('s',union A1352,m4,1)
		AF('c',union A1352,m5,1)
		AF('C',union A1352,m6,1)
		AF('d',union A1352,m7,1)
		AF('L',union A1352,m8,1)
		AF('I',union A1352,m9,1)
		AF('j',union A1352,m10,1)
		AF('c',union A1352,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CCLJlc} */
#pragma pack(push,1)
struct A1353 { C m0; C m1; L m2; J m3; l m4; c m5; };
#pragma pack(pop)
int f_cmpA1353(const struct A1353 *x, const struct A1353 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1353() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1353));
		AF('C',struct A1353,m0,1)
		AF('C',struct A1353,m1,1)
		AF('L',struct A1353,m2,1)
		AF('J',struct A1353,m3,1)
		AF('l',struct A1353,m4,1)
		AF('c',struct A1353,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p<pjLiscCdLIjc>SSjspsll{CCLJlc}l} */
#pragma pack(push,8)
struct A1354 { p m0; union A1352 m1; S m2; S m3; j m4; s m5; p m6; s m7; l m8; l m9; struct A1353 m10; l m11; };
#pragma pack(pop)
int f_cmpA1354(const struct A1354 *x, const struct A1354 *y) { return x->m0 == y->m0 && f_cmpA1352(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1353(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1354() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1354));
		AF('p',struct A1354,m0,1)
		AFa(struct A1354,m1,1,A1352)
		AF('S',struct A1354,m2,1)
		AF('S',struct A1354,m3,1)
		AF('j',struct A1354,m4,1)
		AF('s',struct A1354,m5,1)
		AF('p',struct A1354,m6,1)
		AF('s',struct A1354,m7,1)
		AF('l',struct A1354,m8,1)
		AF('l',struct A1354,m9,1)
		AFa(struct A1354,m10,1,A1353)
		AF('l',struct A1354,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pf> */
#pragma pack(push,4)
union A1355 { p m0; f m1; };
#pragma pack(pop)
int f_cmpA1355(const union A1355 *x, const union A1355 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1355() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1355));
		AF('p',union A1355,m0,1)
		AF('f',union A1355,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LCsIfdClLpSC> */
#pragma pack(push,1)
union A1356 { L m0; C m1; s m2; I m3; f m4; d m5; C m6; l m7; L m8; p m9; S m10; C m11; };
#pragma pack(pop)
int f_cmpA1356(const union A1356 *x, const union A1356 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1356() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1356));
		AF('L',union A1356,m0,1)
		AF('C',union A1356,m1,1)
		AF('s',union A1356,m2,1)
		AF('I',union A1356,m3,1)
		AF('f',union A1356,m4,1)
		AF('d',union A1356,m5,1)
		AF('C',union A1356,m6,1)
		AF('l',union A1356,m7,1)
		AF('L',union A1356,m8,1)
		AF('p',union A1356,m9,1)
		AF('S',union A1356,m10,1)
		AF('C',union A1356,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBCBj} */
#pragma pack(push,4)
struct A1357 { s m0; B m1; C m2; B m3; j m4; };
#pragma pack(pop)
int f_cmpA1357(const struct A1357 *x, const struct A1357 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1357() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1357));
		AF('s',struct A1357,m0,1)
		AF('B',struct A1357,m1,1)
		AF('C',struct A1357,m2,1)
		AF('B',struct A1357,m3,1)
		AF('j',struct A1357,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JSS> */
#pragma pack(push,4)
union A1358 { J m0; S m1; S m2; };
#pragma pack(pop)
int f_cmpA1358(const union A1358 *x, const union A1358 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1358() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1358));
		AF('J',union A1358,m0,1)
		AF('S',union A1358,m1,1)
		AF('S',union A1358,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dlcCBpIpCBjS} */
#pragma pack(push,1)
struct A1359 { d m0; l m1; c m2; C m3; B m4; p m5; I m6; p m7; C m8; B m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA1359(const struct A1359 *x, const struct A1359 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1359() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1359));
		AF('d',struct A1359,m0,1)
		AF('l',struct A1359,m1,1)
		AF('c',struct A1359,m2,1)
		AF('C',struct A1359,m3,1)
		AF('B',struct A1359,m4,1)
		AF('p',struct A1359,m5,1)
		AF('I',struct A1359,m6,1)
		AF('p',struct A1359,m7,1)
		AF('C',struct A1359,m8,1)
		AF('B',struct A1359,m9,1)
		AF('j',struct A1359,m10,1)
		AF('S',struct A1359,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pjsLLB<JSS>f{dlcCBpIpCBjS}sBB} */
#pragma pack(push,4)
struct A1360 { p m0; j m1; s m2; L m3; L m4; B m5; union A1358 m6; f m7; struct A1359 m8; s m9; B m10; B m11; };
#pragma pack(pop)
int f_cmpA1360(const struct A1360 *x, const struct A1360 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1358(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA1359(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1360() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1360));
		AF('p',struct A1360,m0,1)
		AF('j',struct A1360,m1,1)
		AF('s',struct A1360,m2,1)
		AF('L',struct A1360,m3,1)
		AF('L',struct A1360,m4,1)
		AF('B',struct A1360,m5,1)
		AFa(struct A1360,m6,1,A1358)
		AF('f',struct A1360,m7,1)
		AFa(struct A1360,m8,1,A1359)
		AF('s',struct A1360,m9,1)
		AF('B',struct A1360,m10,1)
		AF('B',struct A1360,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iidcJs{pjsLLB<JSS>f{dlcCBpIpCBjS}sBB}SSflc} */
#pragma pack(push,2)
struct A1361 { i m0; i m1; d m2; c m3; J m4; s m5; struct A1360 m6; S m7; S m8; f m9; l m10; c m11; };
#pragma pack(pop)
int f_cmpA1361(const struct A1361 *x, const struct A1361 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1360(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1361() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1361));
		AF('i',struct A1361,m0,1)
		AF('i',struct A1361,m1,1)
		AF('d',struct A1361,m2,1)
		AF('c',struct A1361,m3,1)
		AF('J',struct A1361,m4,1)
		AF('s',struct A1361,m5,1)
		AFa(struct A1361,m6,1,A1360)
		AF('S',struct A1361,m7,1)
		AF('S',struct A1361,m8,1)
		AF('f',struct A1361,m9,1)
		AF('l',struct A1361,m10,1)
		AF('c',struct A1361,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BiSdSsISsipC} */
#pragma pack(push,4)
struct A1362 { B m0; i m1; S m2; d m3; S m4; s m5; I m6; S m7; s m8; i m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1362(const struct A1362 *x, const struct A1362 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1362() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1362));
		AF('B',struct A1362,m0,1)
		AF('i',struct A1362,m1,1)
		AF('S',struct A1362,m2,1)
		AF('d',struct A1362,m3,1)
		AF('S',struct A1362,m4,1)
		AF('s',struct A1362,m5,1)
		AF('I',struct A1362,m6,1)
		AF('S',struct A1362,m7,1)
		AF('s',struct A1362,m8,1)
		AF('i',struct A1362,m9,1)
		AF('p',struct A1362,m10,1)
		AF('C',struct A1362,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IfdLiId> */
#pragma pack(push,8)
union A1363 { I m0; f m1; d m2; L m3; i m4; I m5; d m6; };
#pragma pack(pop)
int f_cmpA1363(const union A1363 *x, const union A1363 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1363() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1363));
		AF('I',union A1363,m0,1)
		AF('f',union A1363,m1,1)
		AF('d',union A1363,m2,1)
		AF('L',union A1363,m3,1)
		AF('i',union A1363,m4,1)
		AF('I',union A1363,m5,1)
		AF('d',union A1363,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SfidCscIcpiS} */
#pragma pack(push,4)
struct A1364 { S m0; f m1; i m2; d m3; C m4; s m5; c m6; I m7; c m8; p m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA1364(const struct A1364 *x, const struct A1364 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1364() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1364));
		AF('S',struct A1364,m0,1)
		AF('f',struct A1364,m1,1)
		AF('i',struct A1364,m2,1)
		AF('d',struct A1364,m3,1)
		AF('C',struct A1364,m4,1)
		AF('s',struct A1364,m5,1)
		AF('c',struct A1364,m6,1)
		AF('I',struct A1364,m7,1)
		AF('c',struct A1364,m8,1)
		AF('p',struct A1364,m9,1)
		AF('i',struct A1364,m10,1)
		AF('S',struct A1364,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{BiSdSsISsipC}SS[12]Ccp<IfdLiId>[2]BI{SfidCscIcpiS}sf> */
#pragma pack(push,1)
union A1365 { struct A1362 m0; S m1; S m2[12]; C m3; c m4; p m5; union A1363 m6[2]; B m7; I m8; struct A1364 m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA1365(const union A1365 *x, const union A1365 *y) { return f_cmpA1362(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1363(&x->m6[0], &y->m6[0]) && f_cmpA1363(&x->m6[1], &y->m6[1]) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1364(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1365() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1365));
		AFa(union A1365,m0,1,A1362)
		AF('S',union A1365,m1,1)
		AF('S',union A1365,m2,12)
		AF('C',union A1365,m3,1)
		AF('c',union A1365,m4,1)
		AF('p',union A1365,m5,1)
		AFa(union A1365,m6,2,A1363)
		AF('B',union A1365,m7,1)
		AF('I',union A1365,m8,1)
		AFa(union A1365,m9,1,A1364)
		AF('s',union A1365,m10,1)
		AF('f',union A1365,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <j<{BiSdSsISsipC}SS[12]Ccp<IfdLiId>[2]BI{SfidCscIcpiS}sf>llJJi> */
#pragma pack(push,4)
union A1366 { j m0; union A1365 m1; l m2; l m3; J m4; J m5; i m6; };
#pragma pack(pop)
int f_cmpA1366(const union A1366 *x, const union A1366 *y) { return x->m0 == y->m0 && f_cmpA1365(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1366() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1366));
		AF('j',union A1366,m0,1)
		AFa(union A1366,m1,1,A1365)
		AF('l',union A1366,m2,1)
		AF('l',union A1366,m3,1)
		AF('J',union A1366,m4,1)
		AF('J',union A1366,m5,1)
		AF('i',union A1366,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cidjii} */
#pragma pack(push,2)
struct A1367 { c m0; i m1; d m2; j m3; i m4; i m5; };
#pragma pack(pop)
int f_cmpA1367(const struct A1367 *x, const struct A1367 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1367() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A1367));
		AF('c',struct A1367,m0,1)
		AF('i',struct A1367,m1,1)
		AF('d',struct A1367,m2,1)
		AF('j',struct A1367,m3,1)
		AF('i',struct A1367,m4,1)
		AF('i',struct A1367,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ipCpsjldlsld> */
#pragma pack(push,1)
union A1368 { i m0; p m1; C m2; p m3; s m4; j m5; l m6; d m7; l m8; s m9; l m10; d m11; };
#pragma pack(pop)
int f_cmpA1368(const union A1368 *x, const union A1368 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1368() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1368));
		AF('i',union A1368,m0,1)
		AF('p',union A1368,m1,1)
		AF('C',union A1368,m2,1)
		AF('p',union A1368,m3,1)
		AF('s',union A1368,m4,1)
		AF('j',union A1368,m5,1)
		AF('l',union A1368,m6,1)
		AF('d',union A1368,m7,1)
		AF('l',union A1368,m8,1)
		AF('s',union A1368,m9,1)
		AF('l',union A1368,m10,1)
		AF('d',union A1368,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jSjBdJdBlcBC} */
#pragma pack(push,1)
struct A1369 { j m0; S m1; j m2; B m3; d m4; J m5; d m6; B m7; l m8; c m9; B m10; C m11; };
#pragma pack(pop)
int f_cmpA1369(const struct A1369 *x, const struct A1369 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1369() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1369));
		AF('j',struct A1369,m0,1)
		AF('S',struct A1369,m1,1)
		AF('j',struct A1369,m2,1)
		AF('B',struct A1369,m3,1)
		AF('d',struct A1369,m4,1)
		AF('J',struct A1369,m5,1)
		AF('d',struct A1369,m6,1)
		AF('B',struct A1369,m7,1)
		AF('l',struct A1369,m8,1)
		AF('c',struct A1369,m9,1)
		AF('B',struct A1369,m10,1)
		AF('C',struct A1369,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cIScsSdI[13]dL{jSjBdJdBlcBC}L} */
#pragma pack(push,8)
struct A1370 { c m0; I m1; S m2; c m3; s m4; S m5; d m6; I m7[13]; d m8; L m9; struct A1369 m10; L m11; };
#pragma pack(pop)
int f_cmpA1370(const struct A1370 *x, const struct A1370 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1369(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1370() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1370));
		AF('c',struct A1370,m0,1)
		AF('I',struct A1370,m1,1)
		AF('S',struct A1370,m2,1)
		AF('c',struct A1370,m3,1)
		AF('s',struct A1370,m4,1)
		AF('S',struct A1370,m5,1)
		AF('d',struct A1370,m6,1)
		AF('I',struct A1370,m7,13)
		AF('d',struct A1370,m8,1)
		AF('L',struct A1370,m9,1)
		AFa(struct A1370,m10,1,A1369)
		AF('L',struct A1370,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {s[11]jI} */
#pragma pack(push,4)
struct A1371 { s m0[11]; j m1; I m2; };
#pragma pack(pop)
int f_cmpA1371(const struct A1371 *x, const struct A1371 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1371() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1371));
		AF('s',struct A1371,m0,11)
		AF('j',struct A1371,m1,1)
		AF('I',struct A1371,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IpiSc[10]SJp[12]dJjs> */
#pragma pack(push,4)
union A1372 { I m0; p m1; i m2; S m3; c m4[10]; S m5; J m6; p m7[12]; d m8; J m9; j m10; s m11; };
#pragma pack(pop)
int f_cmpA1372(const union A1372 *x, const union A1372 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1372() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1372));
		AF('I',union A1372,m0,1)
		AF('p',union A1372,m1,1)
		AF('i',union A1372,m2,1)
		AF('S',union A1372,m3,1)
		AF('c',union A1372,m4,10)
		AF('S',union A1372,m5,1)
		AF('J',union A1372,m6,1)
		AF('p',union A1372,m7,12)
		AF('d',union A1372,m8,1)
		AF('J',union A1372,m9,1)
		AF('j',union A1372,m10,1)
		AF('s',union A1372,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ssliICCSCicS} */
#pragma pack(push,8)
struct A1373 { s m0; s m1; l m2; i m3; I m4; C m5; C m6; S m7; C m8; i m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA1373(const struct A1373 *x, const struct A1373 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1373() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1373));
		AF('s',struct A1373,m0,1)
		AF('s',struct A1373,m1,1)
		AF('l',struct A1373,m2,1)
		AF('i',struct A1373,m3,1)
		AF('I',struct A1373,m4,1)
		AF('C',struct A1373,m5,1)
		AF('C',struct A1373,m6,1)
		AF('S',struct A1373,m7,1)
		AF('C',struct A1373,m8,1)
		AF('i',struct A1373,m9,1)
		AF('c',struct A1373,m10,1)
		AF('S',struct A1373,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILjSi[6]fdJCCJ} */
#pragma pack(push,8)
struct A1374 { I m0; L m1; j m2; S m3; i m4[6]; f m5; d m6; J m7; C m8; C m9; J m10; };
#pragma pack(pop)
int f_cmpA1374(const struct A1374 *x, const struct A1374 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1374() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1374));
		AF('I',struct A1374,m0,1)
		AF('L',struct A1374,m1,1)
		AF('j',struct A1374,m2,1)
		AF('S',struct A1374,m3,1)
		AF('i',struct A1374,m4,6)
		AF('f',struct A1374,m5,1)
		AF('d',struct A1374,m6,1)
		AF('J',struct A1374,m7,1)
		AF('C',struct A1374,m8,1)
		AF('C',struct A1374,m9,1)
		AF('J',struct A1374,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ll> */
#pragma pack(push,2)
union A1375 { l m0; l m1; };
#pragma pack(pop)
int f_cmpA1375(const union A1375 *x, const union A1375 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1375() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1375));
		AF('l',union A1375,m0,1)
		AF('l',union A1375,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cC<IpiSc[10]SJp[12]dJjs>Ljsl{ssliICCSCicS}{ILjSi[6]fdJCCJ}p<ll>S} */
#pragma pack(push,4)
struct A1376 { c m0; C m1; union A1372 m2; L m3; j m4; s m5; l m6; struct A1373 m7; struct A1374 m8; p m9; union A1375 m10; S m11; };
#pragma pack(pop)
int f_cmpA1376(const struct A1376 *x, const struct A1376 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1372(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1373(&x->m7, &y->m7) && f_cmpA1374(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA1375(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1376() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1376));
		AF('c',struct A1376,m0,1)
		AF('C',struct A1376,m1,1)
		AFa(struct A1376,m2,1,A1372)
		AF('L',struct A1376,m3,1)
		AF('j',struct A1376,m4,1)
		AF('s',struct A1376,m5,1)
		AF('l',struct A1376,m6,1)
		AFa(struct A1376,m7,1,A1373)
		AFa(struct A1376,m8,1,A1374)
		AF('p',struct A1376,m9,1)
		AFa(struct A1376,m10,1,A1375)
		AF('S',struct A1376,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lsjJcdflJdLl> */
#pragma pack(push,1)
union A1377 { l m0; s m1; j m2; J m3; c m4; d m5; f m6; l m7; J m8; d m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA1377(const union A1377 *x, const union A1377 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1377() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1377));
		AF('l',union A1377,m0,1)
		AF('s',union A1377,m1,1)
		AF('j',union A1377,m2,1)
		AF('J',union A1377,m3,1)
		AF('c',union A1377,m4,1)
		AF('d',union A1377,m5,1)
		AF('f',union A1377,m6,1)
		AF('l',union A1377,m7,1)
		AF('J',union A1377,m8,1)
		AF('d',union A1377,m9,1)
		AF('L',union A1377,m10,1)
		AF('l',union A1377,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBlCssLslijI} */
#pragma pack(push,2)
struct A1378 { s m0; B m1; l m2; C m3; s m4; s m5; L m6; s m7; l m8; i m9; j m10; I m11; };
#pragma pack(pop)
int f_cmpA1378(const struct A1378 *x, const struct A1378 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1378() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1378));
		AF('s',struct A1378,m0,1)
		AF('B',struct A1378,m1,1)
		AF('l',struct A1378,m2,1)
		AF('C',struct A1378,m3,1)
		AF('s',struct A1378,m4,1)
		AF('s',struct A1378,m5,1)
		AF('L',struct A1378,m6,1)
		AF('s',struct A1378,m7,1)
		AF('l',struct A1378,m8,1)
		AF('i',struct A1378,m9,1)
		AF('j',struct A1378,m10,1)
		AF('I',struct A1378,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lpj} */
#pragma pack(push,4)
struct A1379 { L m0; p m1; j m2; };
#pragma pack(pop)
int f_cmpA1379(const struct A1379 *x, const struct A1379 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1379() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1379));
		AF('L',struct A1379,m0,1)
		AF('p',struct A1379,m1,1)
		AF('j',struct A1379,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l{sBlCssLslijI}{Lpj}jpisSs} */
#pragma pack(push,4)
struct A1380 { l m0; struct A1378 m1; struct A1379 m2; j m3; p m4; i m5; s m6; S m7; s m8; };
#pragma pack(pop)
int f_cmpA1380(const struct A1380 *x, const struct A1380 *y) { return x->m0 == y->m0 && f_cmpA1378(&x->m1, &y->m1) && f_cmpA1379(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1380() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1380));
		AF('l',struct A1380,m0,1)
		AFa(struct A1380,m1,1,A1378)
		AFa(struct A1380,m2,1,A1379)
		AF('j',struct A1380,m3,1)
		AF('p',struct A1380,m4,1)
		AF('i',struct A1380,m5,1)
		AF('s',struct A1380,m6,1)
		AF('S',struct A1380,m7,1)
		AF('s',struct A1380,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LJsscLS> */
#pragma pack(push,4)
union A1381 { L m0; J m1; s m2; s m3; c m4; L m5; S m6; };
#pragma pack(pop)
int f_cmpA1381(const union A1381 *x, const union A1381 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1381() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1381));
		AF('L',union A1381,m0,1)
		AF('J',union A1381,m1,1)
		AF('s',union A1381,m2,1)
		AF('s',union A1381,m3,1)
		AF('c',union A1381,m4,1)
		AF('L',union A1381,m5,1)
		AF('S',union A1381,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dS} */
#pragma pack(push,4)
struct A1382 { d m0; S m1; };
#pragma pack(pop)
int f_cmpA1382(const struct A1382 *x, const struct A1382 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1382() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1382));
		AF('d',struct A1382,m0,1)
		AF('S',struct A1382,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CsJ> */
#pragma pack(push,2)
union A1383 { C m0; s m1; J m2; };
#pragma pack(pop)
int f_cmpA1383(const union A1383 *x, const union A1383 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1383() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1383));
		AF('C',union A1383,m0,1)
		AF('s',union A1383,m1,1)
		AF('J',union A1383,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cBiiCss> */
#pragma pack(push,4)
union A1384 { c m0; B m1; i m2; i m3; C m4; s m5; s m6; };
#pragma pack(pop)
int f_cmpA1384(const union A1384 *x, const union A1384 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1384() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1384));
		AF('c',union A1384,m0,1)
		AF('B',union A1384,m1,1)
		AF('i',union A1384,m2,1)
		AF('i',union A1384,m3,1)
		AF('C',union A1384,m4,1)
		AF('s',union A1384,m5,1)
		AF('s',union A1384,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lISfL<cBiiCss>pCCsLS> */
#pragma pack(push,4)
union A1385 { l m0; I m1; S m2; f m3; L m4; union A1384 m5; p m6; C m7; C m8; s m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA1385(const union A1385 *x, const union A1385 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1384(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1385() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1385));
		AF('l',union A1385,m0,1)
		AF('I',union A1385,m1,1)
		AF('S',union A1385,m2,1)
		AF('f',union A1385,m3,1)
		AF('L',union A1385,m4,1)
		AFa(union A1385,m5,1,A1384)
		AF('p',union A1385,m6,1)
		AF('C',union A1385,m7,1)
		AF('C',union A1385,m8,1)
		AF('s',union A1385,m9,1)
		AF('L',union A1385,m10,1)
		AF('S',union A1385,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lCpLBf[13]lclsLJ} */
#pragma pack(push,4)
struct A1386 { l m0; C m1; p m2; L m3; B m4; f m5[13]; l m6; c m7; l m8; s m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA1386(const struct A1386 *x, const struct A1386 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1386() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1386));
		AF('l',struct A1386,m0,1)
		AF('C',struct A1386,m1,1)
		AF('p',struct A1386,m2,1)
		AF('L',struct A1386,m3,1)
		AF('B',struct A1386,m4,1)
		AF('f',struct A1386,m5,13)
		AF('l',struct A1386,m6,1)
		AF('c',struct A1386,m7,1)
		AF('l',struct A1386,m8,1)
		AF('s',struct A1386,m9,1)
		AF('L',struct A1386,m10,1)
		AF('J',struct A1386,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<lISfL<cBiiCss>pCCsLS>JC{lCpLBf[13]lclsLJ}BjSldIfB> */
#pragma pack(push,4)
union A1387 { union A1385 m0; J m1; C m2; struct A1386 m3; B m4; j m5; S m6; l m7; d m8; I m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA1387(const union A1387 *x, const union A1387 *y) { return f_cmpA1385(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1386(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1387() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1387));
		AFa(union A1387,m0,1,A1385)
		AF('J',union A1387,m1,1)
		AF('C',union A1387,m2,1)
		AFa(union A1387,m3,1,A1386)
		AF('B',union A1387,m4,1)
		AF('j',union A1387,m5,1)
		AF('S',union A1387,m6,1)
		AF('l',union A1387,m7,1)
		AF('d',union A1387,m8,1)
		AF('I',union A1387,m9,1)
		AF('f',union A1387,m10,1)
		AF('B',union A1387,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ipSJJBSiSifJ} */
#pragma pack(push,8)
struct A1388 { i m0; p m1; S m2; J m3; J m4; B m5; S m6; i m7; S m8; i m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA1388(const struct A1388 *x, const struct A1388 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1388() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1388));
		AF('i',struct A1388,m0,1)
		AF('p',struct A1388,m1,1)
		AF('S',struct A1388,m2,1)
		AF('J',struct A1388,m3,1)
		AF('J',struct A1388,m4,1)
		AF('B',struct A1388,m5,1)
		AF('S',struct A1388,m6,1)
		AF('i',struct A1388,m7,1)
		AF('S',struct A1388,m8,1)
		AF('i',struct A1388,m9,1)
		AF('f',struct A1388,m10,1)
		AF('J',struct A1388,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdisJsBBsC> */
#pragma pack(push,4)
union A1389 { C m0; d m1; i m2; s m3; J m4; s m5; B m6; B m7; s m8; C m9; };
#pragma pack(pop)
int f_cmpA1389(const union A1389 *x, const union A1389 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1389() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1389));
		AF('C',union A1389,m0,1)
		AF('d',union A1389,m1,1)
		AF('i',union A1389,m2,1)
		AF('s',union A1389,m3,1)
		AF('J',union A1389,m4,1)
		AF('s',union A1389,m5,1)
		AF('B',union A1389,m6,1)
		AF('B',union A1389,m7,1)
		AF('s',union A1389,m8,1)
		AF('C',union A1389,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I{ipSJJBSiSifJ}IpcJlplps<CdisJsBBsC>> */
#pragma pack(push,4)
union A1390 { I m0; struct A1388 m1; I m2; p m3; c m4; J m5; l m6; p m7; l m8; p m9; s m10; union A1389 m11; };
#pragma pack(pop)
int f_cmpA1390(const union A1390 *x, const union A1390 *y) { return x->m0 == y->m0 && f_cmpA1388(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1389(&x->m11, &y->m11); };
DCaggr* f_touchA1390() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1390));
		AF('I',union A1390,m0,1)
		AFa(union A1390,m1,1,A1388)
		AF('I',union A1390,m2,1)
		AF('p',union A1390,m3,1)
		AF('c',union A1390,m4,1)
		AF('J',union A1390,m5,1)
		AF('l',union A1390,m6,1)
		AF('p',union A1390,m7,1)
		AF('l',union A1390,m8,1)
		AF('p',union A1390,m9,1)
		AF('s',union A1390,m10,1)
		AFa(union A1390,m11,1,A1389)
		dcCloseAggr(a);
	}
	return a;
};
/* <SllBSsipssd<I{ipSJJBSiSifJ}IpcJlplps<CdisJsBBsC>>> */
#pragma pack(push,4)
union A1391 { S m0; l m1; l m2; B m3; S m4; s m5; i m6; p m7; s m8; s m9; d m10; union A1390 m11; };
#pragma pack(pop)
int f_cmpA1391(const union A1391 *x, const union A1391 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1390(&x->m11, &y->m11); };
DCaggr* f_touchA1391() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1391));
		AF('S',union A1391,m0,1)
		AF('l',union A1391,m1,1)
		AF('l',union A1391,m2,1)
		AF('B',union A1391,m3,1)
		AF('S',union A1391,m4,1)
		AF('s',union A1391,m5,1)
		AF('i',union A1391,m6,1)
		AF('p',union A1391,m7,1)
		AF('s',union A1391,m8,1)
		AF('s',union A1391,m9,1)
		AF('d',union A1391,m10,1)
		AFa(union A1391,m11,1,A1390)
		dcCloseAggr(a);
	}
	return a;
};
/* {ddSJsCLslBIS} */
#pragma pack(push,4)
struct A1392 { d m0; d m1; S m2; J m3; s m4; C m5; L m6; s m7; l m8; B m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA1392(const struct A1392 *x, const struct A1392 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1392() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1392));
		AF('d',struct A1392,m0,1)
		AF('d',struct A1392,m1,1)
		AF('S',struct A1392,m2,1)
		AF('J',struct A1392,m3,1)
		AF('s',struct A1392,m4,1)
		AF('C',struct A1392,m5,1)
		AF('L',struct A1392,m6,1)
		AF('s',struct A1392,m7,1)
		AF('l',struct A1392,m8,1)
		AF('B',struct A1392,m9,1)
		AF('I',struct A1392,m10,1)
		AF('S',struct A1392,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IJCffs> */
#pragma pack(push,4)
union A1393 { I m0; J m1; C m2; f m3; f m4; s m5; };
#pragma pack(pop)
int f_cmpA1393(const union A1393 *x, const union A1393 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1393() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1393));
		AF('I',union A1393,m0,1)
		AF('J',union A1393,m1,1)
		AF('C',union A1393,m2,1)
		AF('f',union A1393,m3,1)
		AF('f',union A1393,m4,1)
		AF('s',union A1393,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{ddSJsCLslBIS}<IJCffs>} */
#pragma pack(push,4)
struct A1394 { struct A1392 m0; union A1393 m1; };
#pragma pack(pop)
int f_cmpA1394(const struct A1394 *x, const struct A1394 *y) { return f_cmpA1392(&x->m0, &y->m0) && f_cmpA1393(&x->m1, &y->m1); };
DCaggr* f_touchA1394() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1394));
		AFa(struct A1394,m0,1,A1392)
		AFa(struct A1394,m1,1,A1393)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJjSCSIdBiI} */
#pragma pack(push,4)
struct A1395 { S m0; J m1; j m2; S m3; C m4; S m5; I m6; d m7; B m8; i m9; I m10; };
#pragma pack(pop)
int f_cmpA1395(const struct A1395 *x, const struct A1395 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1395() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1395));
		AF('S',struct A1395,m0,1)
		AF('J',struct A1395,m1,1)
		AF('j',struct A1395,m2,1)
		AF('S',struct A1395,m3,1)
		AF('C',struct A1395,m4,1)
		AF('S',struct A1395,m5,1)
		AF('I',struct A1395,m6,1)
		AF('d',struct A1395,m7,1)
		AF('B',struct A1395,m8,1)
		AF('i',struct A1395,m9,1)
		AF('I',struct A1395,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iJppjLl} */
#pragma pack(push,4)
struct A1396 { i m0; J m1; p m2; p m3; j m4; L m5; l m6; };
#pragma pack(pop)
int f_cmpA1396(const struct A1396 *x, const struct A1396 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1396() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1396));
		AF('i',struct A1396,m0,1)
		AF('J',struct A1396,m1,1)
		AF('p',struct A1396,m2,1)
		AF('p',struct A1396,m3,1)
		AF('j',struct A1396,m4,1)
		AF('L',struct A1396,m5,1)
		AF('l',struct A1396,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C{iJppjLl}CcjLS> */
#pragma pack(push,8)
union A1397 { C m0; struct A1396 m1; C m2; c m3; j m4; L m5; S m6; };
#pragma pack(pop)
int f_cmpA1397(const union A1397 *x, const union A1397 *y) { return x->m0 == y->m0 && f_cmpA1396(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1397() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1397));
		AF('C',union A1397,m0,1)
		AFa(union A1397,m1,1,A1396)
		AF('C',union A1397,m2,1)
		AF('c',union A1397,m3,1)
		AF('j',union A1397,m4,1)
		AF('L',union A1397,m5,1)
		AF('S',union A1397,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcIiBCBd[9]Sj} */
#pragma pack(push,8)
struct A1398 { I m0; c m1; I m2; i m3; B m4; C m5; B m6; d m7[9]; S m8; j m9; };
#pragma pack(pop)
int f_cmpA1398(const struct A1398 *x, const struct A1398 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1398() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A1398));
		AF('I',struct A1398,m0,1)
		AF('c',struct A1398,m1,1)
		AF('I',struct A1398,m2,1)
		AF('i',struct A1398,m3,1)
		AF('B',struct A1398,m4,1)
		AF('C',struct A1398,m5,1)
		AF('B',struct A1398,m6,1)
		AF('d',struct A1398,m7,9)
		AF('S',struct A1398,m8,1)
		AF('j',struct A1398,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJJLs} */
#pragma pack(push,4)
struct A1399 { p m0; J m1; J m2; L m3; s m4; };
#pragma pack(pop)
int f_cmpA1399(const struct A1399 *x, const struct A1399 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1399() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1399));
		AF('p',struct A1399,m0,1)
		AF('J',struct A1399,m1,1)
		AF('J',struct A1399,m2,1)
		AF('L',struct A1399,m3,1)
		AF('s',struct A1399,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BLBcCJSS} */
#pragma pack(push,1)
struct A1400 { B m0; L m1; B m2; c m3; C m4; J m5; S m6; S m7; };
#pragma pack(pop)
int f_cmpA1400(const struct A1400 *x, const struct A1400 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1400() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A1400));
		AF('B',struct A1400,m0,1)
		AF('L',struct A1400,m1,1)
		AF('B',struct A1400,m2,1)
		AF('c',struct A1400,m3,1)
		AF('C',struct A1400,m4,1)
		AF('J',struct A1400,m5,1)
		AF('S',struct A1400,m6,1)
		AF('S',struct A1400,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jIIjdicpCcLl> */
#pragma pack(push,8)
union A1401 { j m0; I m1; I m2; j m3; d m4; i m5; c m6; p m7; C m8; c m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA1401(const union A1401 *x, const union A1401 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1401() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1401));
		AF('j',union A1401,m0,1)
		AF('I',union A1401,m1,1)
		AF('I',union A1401,m2,1)
		AF('j',union A1401,m3,1)
		AF('d',union A1401,m4,1)
		AF('i',union A1401,m5,1)
		AF('c',union A1401,m6,1)
		AF('p',union A1401,m7,1)
		AF('C',union A1401,m8,1)
		AF('c',union A1401,m9,1)
		AF('L',union A1401,m10,1)
		AF('l',union A1401,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJd{BLBcCJSS}silSi<jIIjdicpCcLl>JL> */
#pragma pack(push,2)
union A1402 { C m0; J m1; d m2; struct A1400 m3; s m4; i m5; l m6; S m7; i m8; union A1401 m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA1402(const union A1402 *x, const union A1402 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1400(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1401(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1402() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1402));
		AF('C',union A1402,m0,1)
		AF('J',union A1402,m1,1)
		AF('d',union A1402,m2,1)
		AFa(union A1402,m3,1,A1400)
		AF('s',union A1402,m4,1)
		AF('i',union A1402,m5,1)
		AF('l',union A1402,m6,1)
		AF('S',union A1402,m7,1)
		AF('i',union A1402,m8,1)
		AFa(union A1402,m9,1,A1401)
		AF('J',union A1402,m10,1)
		AF('L',union A1402,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SpllSpJpSis} */
#pragma pack(push,4)
struct A1403 { S m0; p m1; l m2; l m3; S m4; p m5; J m6; p m7; S m8; i m9; s m10; };
#pragma pack(pop)
int f_cmpA1403(const struct A1403 *x, const struct A1403 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1403() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1403));
		AF('S',struct A1403,m0,1)
		AF('p',struct A1403,m1,1)
		AF('l',struct A1403,m2,1)
		AF('l',struct A1403,m3,1)
		AF('S',struct A1403,m4,1)
		AF('p',struct A1403,m5,1)
		AF('J',struct A1403,m6,1)
		AF('p',struct A1403,m7,1)
		AF('S',struct A1403,m8,1)
		AF('i',struct A1403,m9,1)
		AF('s',struct A1403,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <clLcsiljLBjL> */
#pragma pack(push,4)
union A1404 { c m0; l m1; L m2; c m3; s m4; i m5; l m6; j m7; L m8; B m9; j m10; L m11; };
#pragma pack(pop)
int f_cmpA1404(const union A1404 *x, const union A1404 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1404() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1404));
		AF('c',union A1404,m0,1)
		AF('l',union A1404,m1,1)
		AF('L',union A1404,m2,1)
		AF('c',union A1404,m3,1)
		AF('s',union A1404,m4,1)
		AF('i',union A1404,m5,1)
		AF('l',union A1404,m6,1)
		AF('j',union A1404,m7,1)
		AF('L',union A1404,m8,1)
		AF('B',union A1404,m9,1)
		AF('j',union A1404,m10,1)
		AF('L',union A1404,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I{SpllSpJpSis}BIsIjd<clLcsiljLBjL>ssC> */
#pragma pack(push,2)
union A1405 { I m0; struct A1403 m1; B m2; I m3; s m4; I m5; j m6; d m7; union A1404 m8; s m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA1405(const union A1405 *x, const union A1405 *y) { return x->m0 == y->m0 && f_cmpA1403(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1404(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1405() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1405));
		AF('I',union A1405,m0,1)
		AFa(union A1405,m1,1,A1403)
		AF('B',union A1405,m2,1)
		AF('I',union A1405,m3,1)
		AF('s',union A1405,m4,1)
		AF('I',union A1405,m5,1)
		AF('j',union A1405,m6,1)
		AF('d',union A1405,m7,1)
		AFa(union A1405,m8,1,A1404)
		AF('s',union A1405,m9,1)
		AF('s',union A1405,m10,1)
		AF('C',union A1405,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sJciJpjssjCi} */
#pragma pack(push,4)
struct A1406 { s m0; J m1; c m2; i m3; J m4; p m5; j m6; s m7; s m8; j m9; C m10; i m11; };
#pragma pack(pop)
int f_cmpA1406(const struct A1406 *x, const struct A1406 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1406() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1406));
		AF('s',struct A1406,m0,1)
		AF('J',struct A1406,m1,1)
		AF('c',struct A1406,m2,1)
		AF('i',struct A1406,m3,1)
		AF('J',struct A1406,m4,1)
		AF('p',struct A1406,m5,1)
		AF('j',struct A1406,m6,1)
		AF('s',struct A1406,m7,1)
		AF('s',struct A1406,m8,1)
		AF('j',struct A1406,m9,1)
		AF('C',struct A1406,m10,1)
		AF('i',struct A1406,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCB> */
#pragma pack(push,4)
union A1407 { C m0; C m1; B m2; };
#pragma pack(pop)
int f_cmpA1407(const union A1407 *x, const union A1407 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1407() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1407));
		AF('C',union A1407,m0,1)
		AF('C',union A1407,m1,1)
		AF('B',union A1407,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cIiJsjJsCBjl} */
#pragma pack(push,2)
struct A1408 { c m0; I m1; i m2; J m3; s m4; j m5; J m6; s m7; C m8; B m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA1408(const struct A1408 *x, const struct A1408 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1408() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1408));
		AF('c',struct A1408,m0,1)
		AF('I',struct A1408,m1,1)
		AF('i',struct A1408,m2,1)
		AF('J',struct A1408,m3,1)
		AF('s',struct A1408,m4,1)
		AF('j',struct A1408,m5,1)
		AF('J',struct A1408,m6,1)
		AF('s',struct A1408,m7,1)
		AF('C',struct A1408,m8,1)
		AF('B',struct A1408,m9,1)
		AF('j',struct A1408,m10,1)
		AF('l',struct A1408,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sclLBdpLISCp} */
#pragma pack(push,2)
struct A1409 { s m0; c m1; l m2; L m3; B m4; d m5; p m6; L m7; I m8; S m9; C m10; p m11; };
#pragma pack(pop)
int f_cmpA1409(const struct A1409 *x, const struct A1409 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1409() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1409));
		AF('s',struct A1409,m0,1)
		AF('c',struct A1409,m1,1)
		AF('l',struct A1409,m2,1)
		AF('L',struct A1409,m3,1)
		AF('B',struct A1409,m4,1)
		AF('d',struct A1409,m5,1)
		AF('p',struct A1409,m6,1)
		AF('L',struct A1409,m7,1)
		AF('I',struct A1409,m8,1)
		AF('S',struct A1409,m9,1)
		AF('C',struct A1409,m10,1)
		AF('p',struct A1409,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LB{sJciJpjssjCi}<CCB>{cIiJsjJsCBjl}Jcd{sclLBdpLISCp}dIS> */
#pragma pack(push,2)
union A1410 { L m0; B m1; struct A1406 m2; union A1407 m3; struct A1408 m4; J m5; c m6; d m7; struct A1409 m8; d m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA1410(const union A1410 *x, const union A1410 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1406(&x->m2, &y->m2) && f_cmpA1407(&x->m3, &y->m3) && f_cmpA1408(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1409(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1410() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1410));
		AF('L',union A1410,m0,1)
		AF('B',union A1410,m1,1)
		AFa(union A1410,m2,1,A1406)
		AFa(union A1410,m3,1,A1407)
		AFa(union A1410,m4,1,A1408)
		AF('J',union A1410,m5,1)
		AF('c',union A1410,m6,1)
		AF('d',union A1410,m7,1)
		AFa(union A1410,m8,1,A1409)
		AF('d',union A1410,m9,1)
		AF('I',union A1410,m10,1)
		AF('S',union A1410,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<CJd{BLBcCJSS}silSi<jIIjdicpCcLl>JL>cill<I{SpllSpJpSis}BIsIjd<clLcsiljLBjL>ssC>lI<LB{sJciJpjssjCi}<CCB>{cIiJsjJsCBjl}Jcd{sclLBdpLISCp}dIS>Bp[3]C} */
#pragma pack(push,1)
struct A1411 { union A1402 m0; c m1; i m2; l m3; l m4; union A1405 m5; l m6; I m7; union A1410 m8; B m9; p m10[3]; C m11; };
#pragma pack(pop)
int f_cmpA1411(const struct A1411 *x, const struct A1411 *y) { return f_cmpA1402(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1405(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1410(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m11 == y->m11; };
DCaggr* f_touchA1411() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1411));
		AFa(struct A1411,m0,1,A1402)
		AF('c',struct A1411,m1,1)
		AF('i',struct A1411,m2,1)
		AF('l',struct A1411,m3,1)
		AF('l',struct A1411,m4,1)
		AFa(struct A1411,m5,1,A1405)
		AF('l',struct A1411,m6,1)
		AF('I',struct A1411,m7,1)
		AFa(struct A1411,m8,1,A1410)
		AF('B',struct A1411,m9,1)
		AF('p',struct A1411,m10,3)
		AF('C',struct A1411,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdJ[6]JCfISSJLc} */
#pragma pack(push,4)
struct A1412 { C m0; d m1; J m2[6]; J m3; C m4; f m5; I m6; S m7; S m8; J m9; L m10; c m11; };
#pragma pack(pop)
int f_cmpA1412(const struct A1412 *x, const struct A1412 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1412() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1412));
		AF('C',struct A1412,m0,1)
		AF('d',struct A1412,m1,1)
		AF('J',struct A1412,m2,6)
		AF('J',struct A1412,m3,1)
		AF('C',struct A1412,m4,1)
		AF('f',struct A1412,m5,1)
		AF('I',struct A1412,m6,1)
		AF('S',struct A1412,m7,1)
		AF('S',struct A1412,m8,1)
		AF('J',struct A1412,m9,1)
		AF('L',struct A1412,m10,1)
		AF('c',struct A1412,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <spSSJLiJSCpC> */
#pragma pack(push,4)
union A1413 { s m0; p m1; S m2; S m3; J m4; L m5; i m6; J m7; S m8; C m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1413(const union A1413 *x, const union A1413 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1413() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1413));
		AF('s',union A1413,m0,1)
		AF('p',union A1413,m1,1)
		AF('S',union A1413,m2,1)
		AF('S',union A1413,m3,1)
		AF('J',union A1413,m4,1)
		AF('L',union A1413,m5,1)
		AF('i',union A1413,m6,1)
		AF('J',union A1413,m7,1)
		AF('S',union A1413,m8,1)
		AF('C',union A1413,m9,1)
		AF('p',union A1413,m10,1)
		AF('C',union A1413,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ICiCiidj{CdJ[6]JCfISSJLc}<spSSJLiJSCpC>I[4]S> */
#pragma pack(push,2)
union A1414 { I m0; C m1; i m2; C m3; i m4; i m5; d m6; j m7; struct A1412 m8; union A1413 m9; I m10[4]; S m11; };
#pragma pack(pop)
int f_cmpA1414(const union A1414 *x, const union A1414 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1412(&x->m8, &y->m8) && f_cmpA1413(&x->m9, &y->m9) && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA1414() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1414));
		AF('I',union A1414,m0,1)
		AF('C',union A1414,m1,1)
		AF('i',union A1414,m2,1)
		AF('C',union A1414,m3,1)
		AF('i',union A1414,m4,1)
		AF('i',union A1414,m5,1)
		AF('d',union A1414,m6,1)
		AF('j',union A1414,m7,1)
		AFa(union A1414,m8,1,A1412)
		AFa(union A1414,m9,1,A1413)
		AF('I',union A1414,m10,4)
		AF('S',union A1414,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lILj<ICiCiidj{CdJ[6]JCfISSJLc}<spSSJLiJSCpC>I[4]S>BlfssBS} */
#pragma pack(push,2)
struct A1415 { l m0; I m1; L m2; j m3; union A1414 m4; B m5; l m6; f m7; s m8; s m9; B m10; S m11; };
#pragma pack(pop)
int f_cmpA1415(const struct A1415 *x, const struct A1415 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1414(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1415() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1415));
		AF('l',struct A1415,m0,1)
		AF('I',struct A1415,m1,1)
		AF('L',struct A1415,m2,1)
		AF('j',struct A1415,m3,1)
		AFa(struct A1415,m4,1,A1414)
		AF('B',struct A1415,m5,1)
		AF('l',struct A1415,m6,1)
		AF('f',struct A1415,m7,1)
		AF('s',struct A1415,m8,1)
		AF('s',struct A1415,m9,1)
		AF('B',struct A1415,m10,1)
		AF('S',struct A1415,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dfIIp} */
#pragma pack(push,1)
struct A1416 { d m0; f m1; I m2; I m3; p m4; };
#pragma pack(pop)
int f_cmpA1416(const struct A1416 *x, const struct A1416 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1416() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1416));
		AF('d',struct A1416,m0,1)
		AF('f',struct A1416,m1,1)
		AF('I',struct A1416,m2,1)
		AF('I',struct A1416,m3,1)
		AF('p',struct A1416,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ssIBicliddBc} */
#pragma pack(push,1)
struct A1417 { s m0; s m1; I m2; B m3; i m4; c m5; l m6; i m7; d m8; d m9; B m10; c m11; };
#pragma pack(pop)
int f_cmpA1417(const struct A1417 *x, const struct A1417 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1417() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1417));
		AF('s',struct A1417,m0,1)
		AF('s',struct A1417,m1,1)
		AF('I',struct A1417,m2,1)
		AF('B',struct A1417,m3,1)
		AF('i',struct A1417,m4,1)
		AF('c',struct A1417,m5,1)
		AF('l',struct A1417,m6,1)
		AF('i',struct A1417,m7,1)
		AF('d',struct A1417,m8,1)
		AF('d',struct A1417,m9,1)
		AF('B',struct A1417,m10,1)
		AF('c',struct A1417,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* 0:{iCIlsBCSBisd}lIIJ)d */ void f0(void* addr) { write_V_d(5, (( d(*)(struct A1,l,I,I,J))addr)(*(struct A1*)K_a[0],K_l[1],K_I[2],K_I[3],K_J[4]));}
/* 1:i{lcBcpBLl}<BpScJBSjJsil>lpCpcI)v */ void f1(void* addr) { write_V_v(9, (( v(*)(i,struct A2,union A3,l,p,C,p,c,I))addr)(K_i[0],*(struct A2*)K_a[1],*(union A3*)K_a[2],K_l[3],K_p[4],K_C[5],K_p[6],K_c[7],K_I[8]));}
/* 2:BsCIJdJidCB<lI>)I */ void f2(void* addr) { write_V_I(12, (( I(*)(B,s,C,I,J,d,J,i,d,C,B,union A4))addr)(K_B[0],K_s[1],K_C[2],K_I[3],K_J[4],K_d[5],K_J[6],K_i[7],K_d[8],K_C[9],K_B[10],*(union A4*)K_a[11]));}
/* 3:BClCcli<BSJJ[6]BCpdfffC>sliiLd)<lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI> */ void f3(void* addr) { write_V_a(14, (( union A11(*)(B,C,l,C,c,l,i,union A12,s,l,i,i,L,d))addr)(K_B[0],K_C[1],K_l[2],K_C[3],K_c[4],K_l[5],K_i[6],*(union A12*)K_a[7],K_s[8],K_l[9],K_i[10],K_i[11],K_L[12],K_d[13]), union A11);}
/* 4:ffIcL<SpSJJpjcfs>sJB)p */ void f4(void* addr) { write_V_p(9, (( p(*)(f,f,I,c,L,union A13,s,J,B))addr)(K_f[0],K_f[1],K_I[2],K_c[3],K_L[4],*(union A13*)K_a[5],K_s[6],K_J[7],K_B[8]));}
/* 5:dLBLpipS)<IB> */ void f5(void* addr) { write_V_a(8, (( union A14(*)(d,L,B,L,p,i,p,S))addr)(K_d[0],K_L[1],K_B[2],K_L[3],K_p[4],K_i[5],K_p[6],K_S[7]), union A14);}
/* 6:IiB<dJpcddCdClCj>lflJS){ILLl} */ void f6(void* addr) { write_V_a(9, (( struct A15(*)(I,i,B,union A16,l,f,l,J,S))addr)(K_I[0],K_i[1],K_B[2],*(union A16*)K_a[3],K_l[4],K_f[5],K_l[6],K_J[7],K_S[8]), struct A15);}
/* 7:f<ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{dLl}c<i<CSicIjs>fLL[9]>Cli>)f */ void f7(void* addr) { write_V_f(2, (( f(*)(f,union A26))addr)(K_f[0],*(union A26*)K_a[1]));}
/* 8:CL<j>ppj<{sdiljLsCcBl[10]j}sid{sfCs{jiJp}c<IBLpijIIpJIB>JL<ClLpBsSIBBLB>CL}[7]p>)c */ void f8(void* addr) { write_V_c(7, (( c(*)(C,L,union A19,p,p,j,union A32))addr)(K_C[0],K_L[1],*(union A19*)K_a[2],K_p[3],K_p[4],K_j[5],*(union A32*)K_a[6]));}
/* 9:sCspl<ilj><LispcdpldB><J>i<LLss><pl{j[7]ji<sfBdBscSlCdJ>J}{d{BiCcdfCpLCCC}Lc}Spp[10]LSCcI>)I */ void f9(void* addr) { write_V_I(11, (( I(*)(s,C,s,p,l,union A33,union A34,union A35,i,union A36,union A41))addr)(K_s[0],K_C[1],K_s[2],K_p[3],K_l[4],*(union A33*)K_a[5],*(union A34*)K_a[6],*(union A35*)K_a[7],K_i[8],*(union A36*)K_a[9],*(union A41*)K_a[10]));}
/* 10:<dd<sLciSBjljpIl><SC[5]IJjpLcjfdf>diILLlSf>Il<dcIpijfCCjlI>BJ<ldd>Sl)v */ void f10(void* addr) { write_V_v(9, (( v(*)(union A44,I,l,union A45,B,J,union A46,S,l))addr)(*(union A44*)K_a[0],K_I[1],K_l[2],*(union A45*)K_a[3],K_B[4],K_J[5],*(union A46*)K_a[6],K_S[7],K_l[8]));}
/* 11:lS<pCI[5]JpdBIcpCs>SJpsc)j */ void f11(void* addr) { write_V_j(8, (( j(*)(l,S,union A47,S,J,p,s,c))addr)(K_l[0],K_S[1],*(union A47*)K_a[2],K_S[3],K_J[4],K_p[5],K_s[6],K_c[7]));}
/* 12:BJIsl<Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c>p<ILi[15]ljj>)d */ void f12(void* addr) { write_V_d(8, (( d(*)(B,J,I,s,l,union A50,p,union A51))addr)(K_B[0],K_J[1],K_I[2],K_s[3],K_l[4],*(union A50*)K_a[5],K_p[6],*(union A51*)K_a[7]));}
/* 13:BCj<flpl{JflcfdjdjBSJ}B[4]JpSids>ifpJ)i */ void f13(void* addr) { write_V_i(8, (( i(*)(B,C,j,union A53,i,f,p,J))addr)(K_B[0],K_C[1],K_j[2],*(union A53*)K_a[3],K_i[4],K_f[5],K_p[6],K_J[7]));}
/* 14:dCs<clCipl>{fBILiCJLsCL}ljp)J */ void f14(void* addr) { write_V_J(8, (( J(*)(d,C,s,union A54,struct A55,l,j,p))addr)(K_d[0],K_C[1],K_s[2],*(union A54*)K_a[3],*(struct A55*)K_a[4],K_l[5],K_j[6],K_p[7]));}
/* 15:BpB<ciIpCSJI{JpIdlcipIIJc}J>IpJL)<p> */ void f15(void* addr) { write_V_a(8, (( union A56(*)(B,p,B,union A58,I,p,J,L))addr)(K_B[0],K_p[1],K_B[2],*(union A58*)K_a[3],K_I[4],K_p[5],K_J[6],K_L[7]), union A56);}
/* 16:{Ljsi{iljL}flcJ<ljIfBiS[3]cCpCp>pl}iCJ)d */ void f16(void* addr) { write_V_d(4, (( d(*)(struct A61,i,C,J))addr)(*(struct A61*)K_a[0],K_i[1],K_C[2],K_J[3]));}
/* 17:BddCIpljf)<cil<S>JLBiS<ljC>CI> */ void f17(void* addr) { write_V_a(9, (( union A64(*)(B,d,d,C,I,p,l,j,f))addr)(K_B[0],K_d[1],K_d[2],K_C[3],K_I[4],K_p[5],K_l[6],K_j[7],K_f[8]), union A64);}
/* 18:pjL<fllBJLiILjcl>j<lJ{LlSd<ifdIij>CscISS<LLBljdfljCd>}LCsijIlIL>icfIp)C */ void f18(void* addr) { write_V_C(11, (( C(*)(p,j,L,union A65,j,union A69,i,c,f,I,p))addr)(K_p[0],K_j[1],K_L[2],*(union A65*)K_a[3],K_j[4],*(union A69*)K_a[5],K_i[6],K_c[7],K_f[8],K_I[9],K_p[10]));}
/* 19:LjdfICJ{dSS[16]Cj[2]piJf[10]Bsf})<sfSilfLs> */ void f19(void* addr) { write_V_a(8, (( union A70(*)(L,j,d,f,I,C,J,struct A71))addr)(K_L[0],K_j[1],K_d[2],K_f[3],K_I[4],K_C[5],K_J[6],*(struct A71*)K_a[7]), union A70);}
/* 20:cCI<J>Sssdsf)j */ void f20(void* addr) { write_V_j(10, (( j(*)(c,C,I,union A35,S,s,s,d,s,f))addr)(K_c[0],K_C[1],K_I[2],*(union A35*)K_a[3],K_S[4],K_s[5],K_s[6],K_d[7],K_s[8],K_f[9]));}
/* 21:<cJcJJ{psflfjLIdppd}ClJLiL>fpIc)v */ void f21(void* addr) { write_V_v(5, (( v(*)(union A73,f,p,I,c))addr)(*(union A73*)K_a[0],K_f[1],K_p[2],K_I[3],K_c[4]));}
/* 22:cldj<fc>d)B */ void f22(void* addr) { write_V_B(6, (( B(*)(c,l,d,j,union A74,d))addr)(K_c[0],K_l[1],K_d[2],K_j[3],*(union A74*)K_a[4],K_d[5]));}
/* 23:Ic{lc}dd<{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL>{j}d<jsjssdIfBlpl>Sflci)J */ void f23(void* addr) { write_V_J(14, (( J(*)(I,c,struct A75,d,d,union A82,struct A83,d,union A84,S,f,l,c,i))addr)(K_I[0],K_c[1],*(struct A75*)K_a[2],K_d[3],K_d[4],*(union A82*)K_a[5],*(struct A83*)K_a[6],K_d[7],*(union A84*)K_a[8],K_S[9],K_f[10],K_l[11],K_c[12],K_i[13]));}
/* 24:l<LiLISc>LsJ)j */ void f24(void* addr) { write_V_j(5, (( j(*)(l,union A85,L,s,J))addr)(K_l[0],*(union A85*)K_a[1],K_L[2],K_s[3],K_J[4]));}
/* 25:{BfcjcLClBIId}cJjcI)L */ void f25(void* addr) { write_V_L(6, (( L(*)(struct A86,c,J,j,c,I))addr)(*(struct A86*)K_a[0],K_c[1],K_J[2],K_j[3],K_c[4],K_I[5]));}
/* 26:SpIspjCC{fjcI{fLiBd{ScCciffp}}pJ<lpS{ssISpjLSjCic}ICp{LplcfJSSjpJl}BSJI>Il<dl<jSBISfdidCsB>{dCldCSfpdfJi}jjJS>s}{cJfLSscIIBif})S */ void f26(void* addr) { write_V_S(10, (( S(*)(S,p,I,s,p,j,C,C,struct A95,struct A96))addr)(K_S[0],K_p[1],K_I[2],K_s[3],K_p[4],K_j[5],K_C[6],K_C[7],*(struct A95*)K_a[8],*(struct A96*)K_a[9]));}
/* 27:CJcdpcSSJJ{dBLf}j<Is{jLpjBiICcsBs}>I)i */ void f27(void* addr) { write_V_i(14, (( i(*)(C,J,c,d,p,c,S,S,J,J,struct A97,j,union A99,I))addr)(K_C[0],K_J[1],K_c[2],K_d[3],K_p[4],K_c[5],K_S[6],K_S[7],K_J[8],K_J[9],*(struct A97*)K_a[10],K_j[11],*(union A99*)K_a[12],K_I[13]));}
/* 28:<BC>ScsjSsi)<lsdSfsCjCdci[16]> */ void f28(void* addr) { write_V_a(8, (( union A100(*)(union A101,S,c,s,j,S,s,i))addr)(*(union A101*)K_a[0],K_S[1],K_c[2],K_s[3],K_j[4],K_S[5],K_s[6],K_i[7]), union A100);}
/* 29:{BSfslBcjLdCJ}SIlJ{{I<l>cpBdl{djCflIdcCjsI}j<LdIIJJ[10]Jf>lp}<dI{pjlj[11]dCiScs[4]iC[5]}{LcIi}<isJpBiijJ[1]>>j<c{lJLsSfB}{IifCIfSSdCId}JCiIJ{CIS}SCB>JCcssdjB}Bid)L */ void f29(void* addr) { write_V_L(9, (( L(*)(struct A102,S,I,l,J,struct A115,B,i,d))addr)(*(struct A102*)K_a[0],K_S[1],K_I[2],K_l[3],K_J[4],*(struct A115*)K_a[5],K_B[6],K_i[7],K_d[8]));}
/* 30:dcJ{iI{dICcIll[10]BfcLI}Bs}p)J */ void f30(void* addr) { write_V_J(5, (( J(*)(d,c,J,struct A117,p))addr)(K_d[0],K_c[1],K_J[2],*(struct A117*)K_a[3],K_p[4]));}
/* 31:ss<{BBj}JlJssp>jflLfjSIj)s */ void f31(void* addr) { write_V_s(12, (( s(*)(s,s,union A119,j,f,l,L,f,j,S,I,j))addr)(K_s[0],K_s[1],*(union A119*)K_a[2],K_j[3],K_f[4],K_l[5],K_L[6],K_f[7],K_j[8],K_S[9],K_I[10],K_j[11]));}
/* 32:ljSfllC<lCcL>BjB)<SdjI[4]flBdS<SspdS[11]BJsSiIJ>fC> */ void f32(void* addr) { write_V_a(11, (( union A121(*)(l,j,S,f,l,l,C,union A122,B,j,B))addr)(K_l[0],K_j[1],K_S[2],K_f[3],K_l[4],K_l[5],K_C[6],*(union A122*)K_a[7],K_B[8],K_j[9],K_B[10]), union A121);}
/* 33:fC<CdJlfJsJd[16]pLc>Cc{IcLCBjB{cSJJj[13]}SSdS})<c> */ void f33(void* addr) { write_V_a(6, (( union A123(*)(f,C,union A124,C,c,struct A126))addr)(K_f[0],K_C[1],*(union A124*)K_a[2],K_C[3],K_c[4],*(struct A126*)K_a[5]), union A123);}
/* 34:{dJLdCd}ilcfsB)L */ void f34(void* addr) { write_V_L(7, (( L(*)(struct A127,i,l,c,f,s,B))addr)(*(struct A127*)K_a[0],K_i[1],K_l[2],K_c[3],K_f[4],K_s[5],K_B[6]));}
/* 35:psijlSdlpsicS){sjjfLJIdLISJ} */ void f35(void* addr) { write_V_a(13, (( struct A128(*)(p,s,i,j,l,S,d,l,p,s,i,c,S))addr)(K_p[0],K_s[1],K_i[2],K_j[3],K_l[4],K_S[5],K_d[6],K_l[7],K_p[8],K_s[9],K_i[10],K_c[11],K_S[12]), struct A128);}
/* 36:IjfIJlLBCcClCjjJ){IL} */ void f36(void* addr) { write_V_a(16, (( struct A129(*)(I,j,f,I,J,l,L,B,C,c,C,l,C,j,j,J))addr)(K_I[0],K_j[1],K_f[2],K_I[3],K_J[4],K_l[5],K_L[6],K_B[7],K_C[8],K_c[9],K_C[10],K_l[11],K_C[12],K_j[13],K_j[14],K_J[15]), struct A129);}
/* 37:LlCpCJp{lslSlj}LI{fJ{j{LBJp[6]ilIc}}{spIli}Cdff<{cicCiIJjj}pclslCiJjpf><iS<lLJj[16]Jil>cjf[12]<sSlj>cScj{JBBBBLClI}>lp}d<pLlBpsd<pLBpdj>><LpsdjLl>)f */ void f37(void* addr) { write_V_f(14, (( f(*)(L,l,C,p,C,J,p,struct A130,L,I,struct A140,d,union A142,union A143))addr)(K_L[0],K_l[1],K_C[2],K_p[3],K_C[4],K_J[5],K_p[6],*(struct A130*)K_a[7],K_L[8],K_I[9],*(struct A140*)K_a[10],K_d[11],*(union A142*)K_a[12],*(union A143*)K_a[13]));}
/* 38:I{lscf[10]jisijpij}pCLS{pJ}d)c */ void f38(void* addr) { write_V_c(8, (( c(*)(I,struct A144,p,C,L,S,struct A145,d))addr)(K_I[0],*(struct A144*)K_a[1],K_p[2],K_C[3],K_L[4],K_S[5],*(struct A145*)K_a[6],K_d[7]));}
/* 39:CLpIJlfBB{dcdiILcdCdLS}sBLl)p */ void f39(void* addr) { write_V_p(14, (( p(*)(C,L,p,I,J,l,f,B,B,struct A146,s,B,L,l))addr)(K_C[0],K_L[1],K_p[2],K_I[3],K_J[4],K_l[5],K_f[6],K_B[7],K_B[8],*(struct A146*)K_a[9],K_s[10],K_B[11],K_L[12],K_l[13]));}
/* 40:{sl[12]IIBpIi}lJjjCdC)c */ void f40(void* addr) { write_V_c(8, (( c(*)(struct A147,l,J,j,j,C,d,C))addr)(*(struct A147*)K_a[0],K_l[1],K_J[2],K_j[3],K_j[4],K_C[5],K_d[6],K_C[7]));}
/* 41:S{jciLpfidcdCC}CcS{L[14]sI{pdCIfC[3]dISpdl}IIfsJlpj}dfpJ{diIClc}dcJ)J */ void f41(void* addr) { write_V_J(14, (( J(*)(S,struct A148,C,c,S,struct A150,d,f,p,J,struct A151,d,c,J))addr)(K_S[0],*(struct A148*)K_a[1],K_C[2],K_c[3],K_S[4],*(struct A150*)K_a[5],K_d[6],K_f[7],K_p[8],K_J[9],*(struct A151*)K_a[10],K_d[11],K_c[12],K_J[13]));}
/* 42:Jc<<psLijl<BBCdjsIBfJfd>{jdBsipScLfjd}JcBi>s[16]dSddJfsLf>)i */ void f42(void* addr) { write_V_i(3, (( i(*)(J,c,union A155))addr)(K_J[0],K_c[1],*(union A155*)K_a[2]));}
/* 43:L<jIC>lBdLf)<jL<sJlpfLpdpjJd>[5]Sjl> */ void f43(void* addr) { write_V_a(7, (( union A157(*)(L,union A158,l,B,d,L,f))addr)(K_L[0],*(union A158*)K_a[1],K_l[2],K_B[3],K_d[4],K_L[5],K_f[6]), union A157);}
/* 44:BJJClJIC<dCdSlssjpJcc[15]>){l{<fCdfLflddLfp>liiC{iLpcpBIspSid}LJp}ILfjjif<lISs>{<iifJIilIsBBl>I}I} */ void f44(void* addr) { write_V_a(9, (( struct A165(*)(B,J,J,C,l,J,I,C,union A166))addr)(K_B[0],K_J[1],K_J[2],K_C[3],K_l[4],K_J[5],K_I[6],K_C[7],*(union A166*)K_a[8]), struct A165);}
/* 45:iliClL{JI<BSjSfJfI>Sd<JlfBLld[9]IL>[13]ffc[5]{ifSsIslpSpij}jc})S */ void f45(void* addr) { write_V_S(7, (( S(*)(i,l,i,C,l,L,struct A170))addr)(K_i[0],K_l[1],K_i[2],K_C[3],K_l[4],K_L[5],*(struct A170*)K_a[6]));}
/* 46:i{sSf<CCLC[2]dBcdBjfc>Ccs<iddd>cp}fll)v */ void f46(void* addr) { write_V_v(5, (( v(*)(i,struct A173,f,l,l))addr)(K_i[0],*(struct A173*)K_a[1],K_f[2],K_l[3],K_l[4]));}
/* 47:sCp<p{LJCS}Ji[4]cBSf{LjijcLCcpiCJ}cjl>Jciilc<Ijl{LCCBSd}j[11]JdSLjpj>Jj)I */ void f47(void* addr) { write_V_I(13, (( I(*)(s,C,p,union A176,J,c,i,i,l,c,union A178,J,j))addr)(K_s[0],K_C[1],K_p[2],*(union A176*)K_a[3],K_J[4],K_c[5],K_i[6],K_i[7],K_l[8],K_c[9],*(union A178*)K_a[10],K_J[11],K_j[12]));}
/* 48:BpS{BisSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}CCcfBp{f[15]<<SCLspcCissIl>[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJspC<ldSSdpLJsdld>I>i<CSJ>j[12]fBl[6]S{dBiSlISjfdci}IC})J */ void f48(void* addr) { write_V_J(11, (( J(*)(B,p,S,struct A181,C,C,c,f,B,p,struct A189))addr)(K_B[0],K_p[1],K_S[2],*(struct A181*)K_a[3],K_C[4],K_C[5],K_c[6],K_f[7],K_B[8],K_p[9],*(struct A189*)K_a[10]));}
/* 49:sssIdBfCS)<JcljLpilj<BICcC[2]dLCsBjl>CC> */ void f49(void* addr) { write_V_a(9, (( union A191(*)(s,s,s,I,d,B,f,C,S))addr)(K_s[0],K_s[1],K_s[2],K_I[3],K_d[4],K_B[5],K_f[6],K_C[7],K_S[8]), union A191);}
/* 50:Si<csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf>lC)i */ void f50(void* addr) { write_V_i(5, (( i(*)(S,i,union A198,l,C))addr)(K_S[0],K_i[1],*(union A198*)K_a[2],K_l[3],K_C[4]));}
/* 51:J<pfifSilBCsBi>dpIl<pjc[7]pii>)l */ void f51(void* addr) { write_V_l(7, (( l(*)(J,union A199,d,p,I,l,union A200))addr)(K_J[0],*(union A199*)K_a[1],K_d[2],K_p[3],K_I[4],K_l[5],*(union A200*)K_a[6]));}
/* 52:Is{LLCfJ<JCCdLBCsJSip>cClI{IfsCcpjdd}p}LpfLSdflC)L */ void f52(void* addr) { write_V_L(12, (( L(*)(I,s,struct A203,L,p,f,L,S,d,f,l,C))addr)(K_I[0],K_s[1],*(struct A203*)K_a[2],K_L[3],K_p[4],K_f[5],K_L[6],K_S[7],K_d[8],K_f[9],K_l[10],K_C[11]));}
/* 53:{siJjBLiSIIj<lldfS>}dSIs)f */ void f53(void* addr) { write_V_f(5, (( f(*)(struct A205,d,S,I,s))addr)(*(struct A205*)K_a[0],K_d[1],K_S[2],K_I[3],K_s[4]));}
/* 54:IBllLL<iBJLCIlBCJlI>jI{l[5]l{ILJffLfpIifl[16]}lSjI{dIJpCsSJ}C}ds)C */ void f54(void* addr) { write_V_C(12, (( C(*)(I,B,l,l,L,L,union A206,j,I,struct A209,d,s))addr)(K_I[0],K_B[1],K_l[2],K_l[3],K_L[4],K_L[5],*(union A206*)K_a[6],K_j[7],K_I[8],*(struct A209*)K_a[9],K_d[10],K_s[11]));}
/* 55:CI{dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI}BL)C */ void f55(void* addr) { write_V_C(5, (( C(*)(C,I,struct A212,B,L))addr)(K_C[0],K_I[1],*(struct A212*)K_a[2],K_B[3],K_L[4]));}
/* 56:JiSjJSBSC<LJLdd{Bls}BdiJsi>L)<IffIppICjJiC> */ void f56(void* addr) { write_V_a(11, (( union A213(*)(J,i,S,j,J,S,B,S,C,union A215,L))addr)(K_J[0],K_i[1],K_S[2],K_j[3],K_J[4],K_S[5],K_B[6],K_S[7],K_C[8],*(union A215*)K_a[9],K_L[10]), union A213);}
/* 57:{idfCfSSCILjC})j */ void f57(void* addr) { write_V_j(1, (( j(*)(struct A216))addr)(*(struct A216*)K_a[0]));}
/* 58:{sf}pSf)I */ void f58(void* addr) { write_V_I(4, (( I(*)(struct A217,p,S,f))addr)(*(struct A217*)K_a[0],K_p[1],K_S[2],K_f[3]));}
/* 59:SjJJpISJC{{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>}plp)c */ void f59(void* addr) { write_V_c(13, (( c(*)(S,j,J,J,p,I,S,J,C,struct A227,p,l,p))addr)(K_S[0],K_j[1],K_J[2],K_J[3],K_p[4],K_I[5],K_S[6],K_J[7],K_C[8],*(struct A227*)K_a[9],K_p[10],K_l[11],K_p[12]));}
/* 60:B)<BIpcssdfJSc> */ void f60(void* addr) { write_V_a(1, (( union A228(*)(B))addr)(K_B[0]), union A228);}
/* 61:l<sdSffIssSpCL>{j}ssl{B}{Ifd{cSid{p}<sdsSssfBd>[13]}LI}LSppf)J */ void f61(void* addr) { write_V_J(13, (( J(*)(l,union A229,struct A83,s,s,l,struct A230,struct A234,L,S,p,p,f))addr)(K_l[0],*(union A229*)K_a[1],*(struct A83*)K_a[2],K_s[3],K_s[4],K_l[5],*(struct A230*)K_a[6],*(struct A234*)K_a[7],K_L[8],K_S[9],K_p[10],K_p[11],K_f[12]));}
/* 62:f){sBBfLBd} */ void f62(void* addr) { write_V_a(1, (( struct A235(*)(f))addr)(K_f[0]), struct A235);}
/* 63:CcIBlplCBS{i<lSsL[8]ji{csfCLcsjplSi}j><dLsfidCfIBJ>CCSiBj}SpI)C */ void f63(void* addr) { write_V_C(14, (( C(*)(C,c,I,B,l,p,l,C,B,S,struct A239,S,p,I))addr)(K_C[0],K_c[1],K_I[2],K_B[3],K_l[4],K_p[5],K_l[6],K_C[7],K_B[8],K_S[9],*(struct A239*)K_a[10],K_S[11],K_p[12],K_I[13]));}
/* 64:j{sSBpLSIcLfiL}lfLB<lf>sBi<SSlBdLfcBfJs>fi)f */ void f64(void* addr) { write_V_f(13, (( f(*)(j,struct A240,l,f,L,B,union A241,s,B,i,union A242,f,i))addr)(K_j[0],*(struct A240*)K_a[1],K_l[2],K_f[3],K_L[4],K_B[5],*(union A241*)K_a[6],K_s[7],K_B[8],K_i[9],*(union A242*)K_a[10],K_f[11],K_i[12]));}
/* 65:Bf{SliccIjifBl[7]s}lBcC)B */ void f65(void* addr) { write_V_B(7, (( B(*)(B,f,struct A243,l,B,c,C))addr)(K_B[0],K_f[1],*(struct A243*)K_a[2],K_l[3],K_B[4],K_c[5],K_C[6]));}
/* 66:sf{ppI<pdisdi>S})J */ void f66(void* addr) { write_V_J(3, (( J(*)(s,f,struct A245))addr)(K_s[0],K_f[1],*(struct A245*)K_a[2]));}
/* 67:<<JLpCdj[7]>JdBSCBdjIjc>jc{jJifB[13]BLiILfL}c<lCJ<c>><cSlCCiflJ<sdspdCCCpCLp>{CBidJp[13]Lsp[4]sBi}S>J)d */ void f67(void* addr) { write_V_d(8, (( d(*)(union A247,j,c,struct A248,c,union A249,union A252,J))addr)(*(union A247*)K_a[0],K_j[1],K_c[2],*(struct A248*)K_a[3],K_c[4],*(union A249*)K_a[5],*(union A252*)K_a[6],K_J[7]));}
/* 68:CpCC{I[2]iLc{lcSJp}iJpLllj}SJiBIc)f */ void f68(void* addr) { write_V_f(11, (( f(*)(C,p,C,C,struct A254,S,J,i,B,I,c))addr)(K_C[0],K_p[1],K_C[2],K_C[3],*(struct A254*)K_a[4],K_S[5],K_J[6],K_i[7],K_B[8],K_I[9],K_c[10]));}
/* 69:LBJSisi<sdic<IBSpCB>{LIISCCd}pLSjsj>iJCii)v */ void f69(void* addr) { write_V_v(13, (( v(*)(L,B,J,S,i,s,i,union A257,i,J,C,i,i))addr)(K_L[0],K_B[1],K_J[2],K_S[3],K_i[4],K_s[5],K_i[6],*(union A257*)K_a[7],K_i[8],K_J[9],K_C[10],K_i[11],K_i[12]));}
/* 70:II{L[3]pp}sCIiCjSi)i */ void f70(void* addr) { write_V_i(11, (( i(*)(I,I,struct A258,s,C,I,i,C,j,S,i))addr)(K_I[0],K_I[1],*(struct A258*)K_a[2],K_s[3],K_C[4],K_I[5],K_i[6],K_C[7],K_j[8],K_S[9],K_i[10]));}
/* 71:S<pIcjjpsSsssL>lBC<<Bsljii<i[1]Ci>LJlfc>jISc{dCBliBLpl<LCIfJSBlcSCJ><lBijCBdIlfs[13]I>j}ISpSpJ>){LJSsfficlCB} */ void f71(void* addr) { write_V_a(6, (( struct A259(*)(S,union A260,l,B,C,union A266))addr)(K_S[0],*(union A260*)K_a[1],K_l[2],K_B[3],K_C[4],*(union A266*)K_a[5]), struct A259);}
/* 72:Cpffjdfl<IS{jCd[3]CL[14]jJCCBBJ}fsSLJj>c)B */ void f72(void* addr) { write_V_B(10, (( B(*)(C,p,f,f,j,d,f,l,union A268,c))addr)(K_C[0],K_p[1],K_f[2],K_f[3],K_j[4],K_d[5],K_f[6],K_l[7],*(union A268*)K_a[8],K_c[9]));}
/* 73:Sl<sSJcfJ<cSpB{cdlpjfLIjdcL}cLlplSp>cpfBc>djdidjIL<clpfd{JciljBd[9]<jIdfds>pdIS}iJ<c{ljLJsslJL}pS>jid>S{l<I<dLjIJjBlIsps>Ss{fcijsLISLlSI}ipcifiL>iLJsIJfss}c)S */ void f73(void* addr) { write_V_S(15, (( S(*)(S,l,union A271,d,j,d,i,d,j,I,L,union A276,S,struct A280,c))addr)(K_S[0],K_l[1],*(union A271*)K_a[2],K_d[3],K_j[4],K_d[5],K_i[6],K_d[7],K_j[8],K_I[9],K_L[10],*(union A276*)K_a[11],K_S[12],*(struct A280*)K_a[13],K_c[14]));}
/* 74:dIi{JC<dLIds<SlsfcLj>{CdpSpp}ipsjc>Il}J)S */ void f74(void* addr) { write_V_S(5, (( S(*)(d,I,i,struct A284,J))addr)(K_d[0],K_I[1],K_i[2],*(struct A284*)K_a[3],K_J[4]));}
/* 75:c{SsjJdpiLpSSI}d)C */ void f75(void* addr) { write_V_C(3, (( C(*)(c,struct A285,d))addr)(K_c[0],*(struct A285*)K_a[1],K_d[2]));}
/* 76:{Lij<l>lsISiIfj}{dLIJslc{B<SsfBcfcSlpcc>SsCI}<pCBlf{C}J{LpSliS}J<ljcS>jj>{Lsd<sILcs[11]cppBjlp>fis{SfScSiJSCBCJ}ClLi}fL}spSS)L */ void f76(void* addr) { write_V_L(6, (( L(*)(struct A286,struct A296,s,p,S,S))addr)(*(struct A286*)K_a[0],*(struct A296*)K_a[1],K_s[2],K_p[3],K_S[4],K_S[5]));}
/* 77:siiL<cIBBcflcpLss>jjpCisLp){IJsLIdiliCSC} */ void f77(void* addr) { write_V_a(13, (( struct A297(*)(s,i,i,L,union A298,j,j,p,C,i,s,L,p))addr)(K_s[0],K_i[1],K_i[2],K_L[3],*(union A298*)K_a[4],K_j[5],K_j[6],K_p[7],K_C[8],K_i[9],K_s[10],K_L[11],K_p[12]), struct A297);}
/* 78:{dJ{Cf}Ss[12]p<Bfci>}{jcf}S)f */ void f78(void* addr) { write_V_f(3, (( f(*)(struct A301,struct A302,S))addr)(*(struct A301*)K_a[0],*(struct A302*)K_a[1],K_S[2]));}
/* 79:d){sBiSJBJjcCjd} */ void f79(void* addr) { write_V_a(1, (( struct A303(*)(d))addr)(K_d[0]), struct A303);}
/* 80:j<fLlflcCfJISI>{C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl}d)B */ void f80(void* addr) { write_V_B(4, (( B(*)(j,union A304,struct A307,d))addr)(K_j[0],*(union A304*)K_a[1],*(struct A307*)K_a[2],K_d[3]));}
/* 81:ldcBpJs{{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ})I */ void f81(void* addr) { write_V_I(8, (( I(*)(l,d,c,B,p,J,s,struct A310))addr)(K_l[0],K_d[1],K_c[2],K_B[3],K_p[4],K_J[5],K_s[6],*(struct A310*)K_a[7]));}
/* 82:JcplCdi{lsJfJjpBCI}CBll)f */ void f82(void* addr) { write_V_f(12, (( f(*)(J,c,p,l,C,d,i,struct A311,C,B,l,l))addr)(K_J[0],K_c[1],K_p[2],K_l[3],K_C[4],K_d[5],K_i[6],*(struct A311*)K_a[7],K_C[8],K_B[9],K_l[10],K_l[11]));}
/* 83:c){f{fsS}dCl<LsspJC>Ip<SpBdSpCJISll>dLi} */ void f83(void* addr) { write_V_a(1, (( struct A315(*)(c))addr)(K_c[0]), struct A315);}
/* 84:Iis{IBCB}c<JLJ>d)S */ void f84(void* addr) { write_V_S(7, (( S(*)(I,i,s,struct A316,c,union A317,d))addr)(K_I[0],K_i[1],K_s[2],*(struct A316*)K_a[3],K_c[4],*(union A317*)K_a[5],K_d[6]));}
/* 85:dpCLjI<f>Cs{pjC[3]jBj[9]}L)v */ void f85(void* addr) { write_V_v(11, (( v(*)(d,p,C,L,j,I,union A318,C,s,struct A319,L))addr)(K_d[0],K_p[1],K_C[2],K_L[3],K_j[4],K_I[5],*(union A318*)K_a[6],K_C[7],K_s[8],*(struct A319*)K_a[9],K_L[10]));}
/* 86:{d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj})L */ void f86(void* addr) { write_V_L(1, (( L(*)(struct A322))addr)(*(struct A322*)K_a[0]));}
/* 87:IJBjJBs{dJBs}jILsl)s */ void f87(void* addr) { write_V_s(13, (( s(*)(I,J,B,j,J,B,s,struct A323,j,I,L,s,l))addr)(K_I[0],K_J[1],K_B[2],K_j[3],K_J[4],K_B[5],K_s[6],*(struct A323*)K_a[7],K_j[8],K_I[9],K_L[10],K_s[11],K_l[12]));}
/* 88:iLfL{Llfp[13]CpLjcpiL}SS)B */ void f88(void* addr) { write_V_B(7, (( B(*)(i,L,f,L,struct A324,S,S))addr)(K_i[0],K_L[1],K_f[2],K_L[3],*(struct A324*)K_a[4],K_S[5],K_S[6]));}
/* 89:If{C}L{<S>}LclidII)p */ void f89(void* addr) { write_V_p(12, (( p(*)(I,f,struct A289,L,struct A325,L,c,l,i,d,I,I))addr)(K_I[0],K_f[1],*(struct A289*)K_a[2],K_L[3],*(struct A325*)K_a[4],K_L[5],K_c[6],K_l[7],K_i[8],K_d[9],K_I[10],K_I[11]));}
/* 90:ljB{LslB<SJCcJjdLLfsf>llfLC<LSLjSJj>L}BpJSCp)L */ void f90(void* addr) { write_V_L(10, (( L(*)(l,j,B,struct A328,B,p,J,S,C,p))addr)(K_l[0],K_j[1],K_B[2],*(struct A328*)K_a[3],K_B[4],K_p[5],K_J[6],K_S[7],K_C[8],K_p[9]));}
/* 91:jLpCfId{pc{p}sB[4]dI}JCSfB)<jI<L>CjcfppppC> */ void f91(void* addr) { write_V_a(13, (( union A330(*)(j,L,p,C,f,I,d,struct A331,J,C,S,f,B))addr)(K_j[0],K_L[1],K_p[2],K_C[3],K_f[4],K_I[5],K_d[6],*(struct A331*)K_a[7],K_J[8],K_C[9],K_S[10],K_f[11],K_B[12]), union A330);}
/* 92:SlsJlcsC){<jpLpBBBcCjlI>dScpdsjlfl} */ void f92(void* addr) { write_V_a(8, (( struct A333(*)(S,l,s,J,l,c,s,C))addr)(K_S[0],K_l[1],K_s[2],K_J[3],K_l[4],K_c[5],K_s[6],K_C[7]), struct A333);}
/* 93:s<sILJsJJLiBCI>ipLsfpBL)v */ void f93(void* addr) { write_V_v(10, (( v(*)(s,union A334,i,p,L,s,f,p,B,L))addr)(K_s[0],*(union A334*)K_a[1],K_i[2],K_p[3],K_L[4],K_s[5],K_f[6],K_p[7],K_B[8],K_L[9]));}
/* 94:i{JIp}iSsdffl<LLJCjlJ{<cISSdIC[5]plljc>slll[4]pLI}I>ll)f */ void f94(void* addr) { write_V_f(12, (( f(*)(i,struct A335,i,S,s,d,f,f,l,union A338,l,l))addr)(K_i[0],*(struct A335*)K_a[1],K_i[2],K_S[3],K_s[4],K_d[5],K_f[6],K_f[7],K_l[8],*(union A338*)K_a[9],K_l[10],K_l[11]));}
/* 95:LcfpjldJfCJSfB)<f> */ void f95(void* addr) { write_V_a(14, (( union A318(*)(L,c,f,p,j,l,d,J,f,C,J,S,f,B))addr)(K_L[0],K_c[1],K_f[2],K_p[3],K_j[4],K_l[5],K_d[6],K_J[7],K_f[8],K_C[9],K_J[10],K_S[11],K_f[12],K_B[13]), union A318);}
/* 96:<fJ[6]jLdsscddsc>ci)L */ void f96(void* addr) { write_V_L(3, (( L(*)(union A339,c,i))addr)(*(union A339*)K_a[0],K_c[1],K_i[2]));}
/* 97:{i[13]}CCsIjcilSs)C */ void f97(void* addr) { write_V_C(11, (( C(*)(struct A340,C,C,s,I,j,c,i,l,S,s))addr)(*(struct A340*)K_a[0],K_C[1],K_C[2],K_s[3],K_I[4],K_j[5],K_c[6],K_i[7],K_l[8],K_S[9],K_s[10]));}
/* 98:Lj{llBIp}JSC)c */ void f98(void* addr) { write_V_c(6, (( c(*)(L,j,struct A341,J,S,C))addr)(K_L[0],K_j[1],*(struct A341*)K_a[2],K_J[3],K_S[4],K_C[5]));}
/* 99:jCBcidc{jCslIIlIssIi})d */ void f99(void* addr) { write_V_d(8, (( d(*)(j,C,B,c,i,d,c,struct A342))addr)(K_j[0],K_C[1],K_B[2],K_c[3],K_i[4],K_d[5],K_c[6],*(struct A342*)K_a[7]));}
/* 100:C<sfiipfpfCBlc>p<Bpp<Ipffi>LBLs[2]fsLd>{<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<LIJL>sBcl><ff<p[8]dc>IiiJ<fcfjSijCSLd>i>IdB}IBi)p */ void f100(void* addr) { write_V_p(8, (( p(*)(C,union A343,p,union A345,struct A353,I,B,i))addr)(K_C[0],*(union A343*)K_a[1],K_p[2],*(union A345*)K_a[3],*(struct A353*)K_a[4],K_I[5],K_B[6],K_i[7]));}
/* 101:<iIpp><f>pSd{Bl<L{Sdc[12]fsdjfiCLJ}[6]LccBI>pclB<pScCjls[5]d><L[1]<liBCSjBlBipL>Jf<l>s>fIB}L)B */ void f101(void* addr) { write_V_B(7, (( B(*)(union A354,union A318,p,S,d,struct A360,L))addr)(*(union A354*)K_a[0],*(union A318*)K_a[1],K_p[2],K_S[3],K_d[4],*(struct A360*)K_a[5],K_L[6]));}
/* 102:lsI<{p[1]pfpLdJpls}<ldiiJBCIB{Ji[1]IsijJsclSf}Ld>pl{JLfllIiIj}S<sdLfs[6]C>S{plLLC[1]J}{BCLf}<JCsplIBIJCfC>l>{pLSfLdCSddcd}){spd<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>iflLid{d{BfpdfB}ISf}d} */ void f102(void* addr) { write_V_a(5, (( struct A366(*)(l,s,I,union A375,struct A376))addr)(K_l[0],K_s[1],K_I[2],*(union A375*)K_a[3],*(struct A376*)K_a[4]), struct A366);}
/* 103:I{JdcLSl}LiI<SijsL<LLI[14]ddjLSfjs>icpC[10]dL>iCIsf)<<pdLBjdLfslId>IspSsJljciL> */ void f103(void* addr) { write_V_a(11, (( union A378(*)(I,struct A379,L,i,I,union A381,i,C,I,s,f))addr)(K_I[0],*(struct A379*)K_a[1],K_L[2],K_i[3],K_I[4],*(union A381*)K_a[5],K_i[6],K_C[7],K_I[8],K_s[9],K_f[10]), union A378);}
/* 104:iLsJsiLfcl<jj>s)l */ void f104(void* addr) { write_V_l(12, (( l(*)(i,L,s,J,s,i,L,f,c,l,union A382,s))addr)(K_i[0],K_L[1],K_s[2],K_J[3],K_s[4],K_i[5],K_L[6],K_f[7],K_c[8],K_l[9],*(union A382*)K_a[10],K_s[11]));}
/* 105:{dcpl}BfJj<i[9]JLCf>dpBjJ<ilcjC{cJSjCBIIj}[14]lfBCdS>)p */ void f105(void* addr) { write_V_p(12, (( p(*)(struct A383,B,f,J,j,union A384,d,p,B,j,J,union A386))addr)(*(struct A383*)K_a[0],K_B[1],K_f[2],K_J[3],K_j[4],*(union A384*)K_a[5],K_d[6],K_p[7],K_B[8],K_j[9],K_J[10],*(union A386*)K_a[11]));}
/* 106:dBdcC<lJIpi[4]ldjJl>{jpC}<Cl>lldip)C */ void f106(void* addr) { write_V_C(13, (( C(*)(d,B,d,c,C,union A387,struct A388,union A389,l,l,d,i,p))addr)(K_d[0],K_B[1],K_d[2],K_c[3],K_C[4],*(union A387*)K_a[5],*(struct A388*)K_a[6],*(union A389*)K_a[7],K_l[8],K_l[9],K_d[10],K_i[11],K_p[12]));}
/* 107:LlL<pdJ>jjL{jpiisIfilBfS})v */ void f107(void* addr) { write_V_v(8, (( v(*)(L,l,L,union A390,j,j,L,struct A391))addr)(K_L[0],K_l[1],K_L[2],*(union A390*)K_a[3],K_j[4],K_j[5],K_L[6],*(struct A391*)K_a[7]));}
/* 108:{JC})l */ void f108(void* addr) { write_V_l(1, (( l(*)(struct A392))addr)(*(struct A392*)K_a[0]));}
/* 109:c<di[13]>CjLBjcfBdCS)s */ void f109(void* addr) { write_V_s(13, (( s(*)(c,union A393,C,j,L,B,j,c,f,B,d,C,S))addr)(K_c[0],*(union A393*)K_a[1],K_C[2],K_j[3],K_L[4],K_B[5],K_j[6],K_c[7],K_f[8],K_B[9],K_d[10],K_C[11],K_S[12]));}
/* 110:SSBLC{BLS}SpJi)s */ void f110(void* addr) { write_V_s(10, (( s(*)(S,S,B,L,C,struct A394,S,p,J,i))addr)(K_S[0],K_S[1],K_B[2],K_L[3],K_C[4],*(struct A394*)K_a[5],K_S[6],K_p[7],K_J[8],K_i[9]));}
/* 111:CSSJLjd{IcIdcdjJCsJC}L)p */ void f111(void* addr) { write_V_p(9, (( p(*)(C,S,S,J,L,j,d,struct A395,L))addr)(K_C[0],K_S[1],K_S[2],K_J[3],K_L[4],K_j[5],K_d[6],*(struct A395*)K_a[7],K_L[8]));}
/* 112:{LCcs[7]dBL[6]iiiJC}dicilj{d[3]dC[9]f}jjspf<CISl[16]lfJjSlIJ>L)c */ void f112(void* addr) { write_V_c(15, (( c(*)(struct A396,d,i,c,i,l,j,struct A397,j,j,s,p,f,union A398,L))addr)(*(struct A396*)K_a[0],K_d[1],K_i[2],K_c[3],K_i[4],K_l[5],K_j[6],*(struct A397*)K_a[7],K_j[8],K_j[9],K_s[10],K_p[11],K_f[12],*(union A398*)K_a[13],K_L[14]));}
/* 113:){Ll[1]pLSsJs} */ void f113(void* addr) { write_V_a(0, (( struct A399(*)())addr)(), struct A399);}
/* 114:l<ILIcpCj>SLS<sBldCiBisi>cL)i */ void f114(void* addr) { write_V_i(8, (( i(*)(l,union A400,S,L,S,union A401,c,L))addr)(K_l[0],*(union A400*)K_a[1],K_S[2],K_L[3],K_S[4],*(union A401*)K_a[5],K_c[6],K_L[7]));}
/* 115:pdd<BcBJSJ>if)L */ void f115(void* addr) { write_V_L(6, (( L(*)(p,d,d,union A402,i,f))addr)(K_p[0],K_d[1],K_d[2],*(union A402*)K_a[3],K_i[4],K_f[5]));}
/* 116:pJ<J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs>IjIiLl{JjIfJljIIIjL}lI)p */ void f116(void* addr) { write_V_p(12, (( p(*)(p,J,union A405,I,j,I,i,L,l,struct A406,l,I))addr)(K_p[0],K_J[1],*(union A405*)K_a[2],K_I[3],K_j[4],K_I[5],K_i[6],K_L[7],K_l[8],*(struct A406*)K_a[9],K_l[10],K_I[11]));}
/* 117:<siBB[5]i<lSBiIjIdI>scl<I>sd>LdJC<dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI>BIcIdl)i */ void f117(void* addr) { write_V_i(12, (( i(*)(union A409,L,d,J,C,union A412,B,I,c,I,d,l))addr)(*(union A409*)K_a[0],K_L[1],K_d[2],K_J[3],K_C[4],*(union A412*)K_a[5],K_B[6],K_I[7],K_c[8],K_I[9],K_d[10],K_l[11]));}
/* 118:pJflidlp<SJJpJlCI>d)s */ void f118(void* addr) { write_V_s(10, (( s(*)(p,J,f,l,i,d,l,p,union A413,d))addr)(K_p[0],K_J[1],K_f[2],K_l[3],K_i[4],K_d[5],K_l[6],K_p[7],*(union A413*)K_a[8],K_d[9]));}
/* 119:LLjcic{LScCJJLdsBJj}<is<dCLjLLfilpsS>SCSfSLlBl>ji<BjpJ[11]>)j */ void f119(void* addr) { write_V_j(11, (( j(*)(L,L,j,c,i,c,struct A414,union A416,j,i,union A417))addr)(K_L[0],K_L[1],K_j[2],K_c[3],K_i[4],K_c[5],*(struct A414*)K_a[6],*(union A416*)K_a[7],K_j[8],K_i[9],*(union A417*)K_a[10]));}
/* 120:dfSCc{psCpSjcI}JpSj)B */ void f120(void* addr) { write_V_B(10, (( B(*)(d,f,S,C,c,struct A418,J,p,S,j))addr)(K_d[0],K_f[1],K_S[2],K_C[3],K_c[4],*(struct A418*)K_a[5],K_J[6],K_p[7],K_S[8],K_j[9]));}
/* 121:jjd{Cslc[8]SBifsjIJ}s)S */ void f121(void* addr) { write_V_S(5, (( S(*)(j,j,d,struct A419,s))addr)(K_j[0],K_j[1],K_d[2],*(struct A419*)K_a[3],K_s[4]));}
/* 122:dB)<BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ> */ void f122(void* addr) { write_V_a(2, (( union A422(*)(d,B))addr)(K_d[0],K_B[1]), union A422);}
/* 123:{JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p}lS<SLlSlcpc>fccId{SSLpIdfjL}I)s */ void f123(void* addr) { write_V_s(11, (( s(*)(struct A431,l,S,union A432,f,c,c,I,d,struct A433,I))addr)(*(struct A431*)K_a[0],K_l[1],K_S[2],*(union A432*)K_a[3],K_f[4],K_c[5],K_c[6],K_I[7],K_d[8],*(struct A433*)K_a[9],K_I[10]));}
/* 124:lcj)<IS{SJB}ccsiiJJfJ> */ void f124(void* addr) { write_V_a(3, (( union A435(*)(l,c,j))addr)(K_l[0],K_c[1],K_j[2]), union A435);}
/* 125:J{I}SiLC)L */ void f125(void* addr) { write_V_L(6, (( L(*)(J,struct A436,S,i,L,C))addr)(K_J[0],*(struct A436*)K_a[1],K_S[2],K_i[3],K_L[4],K_C[5]));}
/* 126:{pdpfjBfipLB[9]}BscJc)<flBd<fpflL>{BCffldlBBdL[5]j}{pJJ{lIljBspBC}pCifp[5]cLj}{dSdiSJjlCpCp}J<I<SfCcdcpC>cd[16]LCLBpip{p[4]jplLpIBLlfl}>II> */ void f126(void* addr) { write_V_a(6, (( union A445(*)(struct A446,B,s,c,J,c))addr)(*(struct A446*)K_a[0],K_B[1],K_s[2],K_c[3],K_J[4],K_c[5]), union A445);}
/* 127:J{jdlJdC{j}{SpjBIll}ijl{fpsI<dSSpiJjjSIjs>cSdsB[2]jJ}}jcs<Lpi{JJcCfcdjCSJB}C<csjj>{fc[12]}iCj{jisdiipfSCpC}>fdcL)<idiJ> */ void f127(void* addr) { write_V_a(10, (( union A447(*)(J,struct A451,j,c,s,union A456,f,d,c,L))addr)(K_J[0],*(struct A451*)K_a[1],K_j[2],K_c[3],K_s[4],*(union A456*)K_a[5],K_f[6],K_d[7],K_c[8],K_L[9]), union A447);}
/* 128:j{s}jSSSSBjfpc<fdiIdfdL>)L */ void f128(void* addr) { write_V_L(13, (( L(*)(j,struct A457,j,S,S,S,S,B,j,f,p,c,union A458))addr)(K_j[0],*(struct A457*)K_a[1],K_j[2],K_S[3],K_S[4],K_S[5],K_S[6],K_B[7],K_j[8],K_f[9],K_p[10],K_c[11],*(union A458*)K_a[12]));}
/* 129:c{pi}<pdBfBppj{IJlsf[7]l[10]Blip}liI>)j */ void f129(void* addr) { write_V_j(3, (( j(*)(c,struct A459,union A461))addr)(K_c[0],*(struct A459*)K_a[1],*(union A461*)K_a[2]));}
/* 130:Lc<JfiJLJs[11]clc>BcccpcCill)L */ void f130(void* addr) { write_V_L(13, (( L(*)(L,c,union A462,B,c,c,c,p,c,C,i,l,l))addr)(K_L[0],K_c[1],*(union A462*)K_a[2],K_B[3],K_c[4],K_c[5],K_c[6],K_p[7],K_c[8],K_C[9],K_i[10],K_l[11],K_l[12]));}
/* 131:Bj<csdIdjBcCBsS>I<iCBlJ>li)S */ void f131(void* addr) { write_V_S(7, (( S(*)(B,j,union A463,I,union A464,l,i))addr)(K_B[0],K_j[1],*(union A463*)K_a[2],K_I[3],*(union A464*)K_a[4],K_l[5],K_i[6]));}
/* 132:i{S{idslfBfdpfcs}cldCdfjdsC}jCj)f */ void f132(void* addr) { write_V_f(5, (( f(*)(i,struct A466,j,C,j))addr)(K_i[0],*(struct A466*)K_a[1],K_j[2],K_C[3],K_j[4]));}
/* 133:dd{fSifsIijdSIf}jIlI)C */ void f133(void* addr) { write_V_C(7, (( C(*)(d,d,struct A467,j,I,l,I))addr)(K_d[0],K_d[1],*(struct A467*)K_a[2],K_j[3],K_I[4],K_l[5],K_I[6]));}
/* 134:J{IIjcsl[14]j{d[9]<LfSCCsC>[10]jSl<c>B<flBppjCBlCsf>iBL}}dC{fccdspslJIji}Ls<fffjfCCL>sSLf)p */ void f134(void* addr) { write_V_p(12, (( p(*)(J,struct A471,d,C,struct A472,L,s,union A473,s,S,L,f))addr)(K_J[0],*(struct A471*)K_a[1],K_d[2],K_C[3],*(struct A472*)K_a[4],K_L[5],K_s[6],*(union A473*)K_a[7],K_s[8],K_S[9],K_L[10],K_f[11]));}
/* 135:Is<iICjIjIJsSdp>BpfLi)c */ void f135(void* addr) { write_V_c(8, (( c(*)(I,s,union A474,B,p,f,L,i))addr)(K_I[0],K_s[1],*(union A474*)K_a[2],K_B[3],K_p[4],K_f[5],K_L[6],K_i[7]));}
/* 136:pl{<IILijS[15]{SllspICIcJIl}jCI<lB>c>CB<sS>{lcpB}<sJ<pSjcdjsLfs[1]Cf>CplIIId<BI>i>[9]<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}}<BlsjIISJf[8]ssS>{fj<pB{SlII}ciLI<IJpjf[7]JCBj>i{LJJdL}{CsSLCSsLlfcI}{fjdJiJJspsJJ}>jI{fLLIji}SC{{fCBBCBBCllLj}pl}LSJ}Sfd)C */ void f136(void* addr) { write_V_C(8, (( C(*)(p,l,struct A486,union A487,struct A497,S,f,d))addr)(K_p[0],K_l[1],*(struct A486*)K_a[2],*(union A487*)K_a[3],*(struct A497*)K_a[4],K_S[5],K_f[6],K_d[7]));}
/* 137:IfccI<lJLcJLIsj>Cj<L{Sp}lssCJdclCJ>C)<ficL> */ void f137(void* addr) { write_V_a(10, (( union A498(*)(I,f,c,c,I,union A499,C,j,union A501,C))addr)(K_I[0],K_f[1],K_c[2],K_c[3],K_I[4],*(union A499*)K_a[5],K_C[6],K_j[7],*(union A501*)K_a[8],K_C[9]), union A498);}
/* 138:B){f{Jcfcj}jfjfdLIC[14]IL} */ void f138(void* addr) { write_V_a(1, (( struct A503(*)(B))addr)(K_B[0]), struct A503);}
/* 139:ISjiSp<ScpdisJpcddf>){fj{IICldsBSpBsJ}Cdicc{dCJ}pII} */ void f139(void* addr) { write_V_a(7, (( struct A506(*)(I,S,j,i,S,p,union A507))addr)(K_I[0],K_S[1],K_j[2],K_i[3],K_S[4],K_p[5],*(union A507*)K_a[6]), struct A506);}
/* 140:CSis<BdBcjssfcLJI>BJJ{CB<cic>ScfLBLBjJ}j{{ClBsSI[15]cs[12]CJBc}JdJpLSIciss}f)l */ void f140(void* addr) { write_V_l(12, (( l(*)(C,S,i,s,union A508,B,J,J,struct A510,j,struct A512,f))addr)(K_C[0],K_S[1],K_i[2],K_s[3],*(union A508*)K_a[4],K_B[5],K_J[6],K_J[7],*(struct A510*)K_a[8],K_j[9],*(struct A512*)K_a[10],K_f[11]));}
/* 141:ppL{iBiBifJ[9]C{fsJiccif}CCl})B */ void f141(void* addr) { write_V_B(4, (( B(*)(p,p,L,struct A514))addr)(K_p[0],K_p[1],K_L[2],*(struct A514*)K_a[3]));}
/* 142:<CiffBcCdIfj>lfL)i */ void f142(void* addr) { write_V_i(4, (( i(*)(union A515,l,f,L))addr)(*(union A515*)K_a[0],K_l[1],K_f[2],K_L[3]));}
/* 143:df<cJ>jiiIcjS)C */ void f143(void* addr) { write_V_C(10, (( C(*)(d,f,union A516,j,i,i,I,c,j,S))addr)(K_d[0],K_f[1],*(union A516*)K_a[2],K_j[3],K_i[4],K_i[5],K_I[6],K_c[7],K_j[8],K_S[9]));}
/* 144:dSSdp{cjLCfpSJcfsp}Ji)l */ void f144(void* addr) { write_V_l(8, (( l(*)(d,S,S,d,p,struct A517,J,i))addr)(K_d[0],K_S[1],K_S[2],K_d[3],K_p[4],*(struct A517*)K_a[5],K_J[6],K_i[7]));}
/* 145:LjLpLJliCd<BJlLiLcCjIcS>)S */ void f145(void* addr) { write_V_S(11, (( S(*)(L,j,L,p,L,J,l,i,C,d,union A518))addr)(K_L[0],K_j[1],K_L[2],K_p[3],K_L[4],K_J[5],K_l[6],K_i[7],K_C[8],K_d[9],*(union A518*)K_a[10]));}
/* 146:iICBcs{cSpJppd}Jc)c */ void f146(void* addr) { write_V_c(9, (( c(*)(i,I,C,B,c,s,struct A519,J,c))addr)(K_i[0],K_I[1],K_C[2],K_B[3],K_c[4],K_s[5],*(struct A519*)K_a[6],K_J[7],K_c[8]));}
/* 147:diCijfdIJ{c})L */ void f147(void* addr) { write_V_L(10, (( L(*)(d,i,C,i,j,f,d,I,J,struct A520))addr)(K_d[0],K_i[1],K_C[2],K_i[3],K_j[4],K_f[5],K_d[6],K_I[7],K_J[8],*(struct A520*)K_a[9]));}
/* 148:L{JipLS{lclpSLfcIffC[14]}{sBIsJjBIJ}IIplB}fpcsLSl)d */ void f148(void* addr) { write_V_d(9, (( d(*)(L,struct A523,f,p,c,s,L,S,l))addr)(K_L[0],*(struct A523*)K_a[1],K_f[2],K_p[3],K_c[4],K_s[5],K_L[6],K_S[7],K_l[8]));}
/* 149:BBlLB{s}IB{jfJICIscS}pCpJ)p */ void f149(void* addr) { write_V_p(13, (( p(*)(B,B,l,L,B,struct A457,I,B,struct A524,p,C,p,J))addr)(K_B[0],K_B[1],K_l[2],K_L[3],K_B[4],*(struct A457*)K_a[5],K_I[6],K_B[7],*(struct A524*)K_a[8],K_p[9],K_C[10],K_p[11],K_J[12]));}
/* 150:SpCddf{lcC}dl){SBcL} */ void f150(void* addr) { write_V_a(9, (( struct A525(*)(S,p,C,d,d,f,struct A526,d,l))addr)(K_S[0],K_p[1],K_C[2],K_d[3],K_d[4],K_f[5],*(struct A526*)K_a[6],K_d[7],K_l[8]), struct A525);}
/* 151:LCidlciili{BdJdjssIJLpC}sBB){dsiISSpdL<jjCcSC{pCdsjdIcj[4]lpI}lLfIJ>j<d<Li><Lsd[8]SppL><JILl>lIcLLSfp>} */ void f151(void* addr) { write_V_a(14, (( struct A533(*)(L,C,i,d,l,c,i,i,l,i,struct A534,s,B,B))addr)(K_L[0],K_C[1],K_i[2],K_d[3],K_l[4],K_c[5],K_i[6],K_i[7],K_l[8],K_i[9],*(struct A534*)K_a[10],K_s[11],K_B[12],K_B[13]), struct A533);}
/* 152:scfLc{JBL<i<cpllJljssS[13]f>jJBCsdpC[13]li>Bc<ci<sScSJdLL>BjcCCcjpl>fdI{IfJi{lsLC}JsjB[1]I{JCLBSi[13]LpILdJ}C}}pccjC)f */ void f152(void* addr) { write_V_f(11, (( f(*)(s,c,f,L,c,struct A542,p,c,c,j,C))addr)(K_s[0],K_c[1],K_f[2],K_L[3],K_c[4],*(struct A542*)K_a[5],K_p[6],K_c[7],K_c[8],K_j[9],K_C[10]));}
/* 153:SJCjJjiSi<fJpCfcBICBfi>{sSJlJC}S)l */ void f153(void* addr) { write_V_l(12, (( l(*)(S,J,C,j,J,j,i,S,i,union A543,struct A544,S))addr)(K_S[0],K_J[1],K_C[2],K_j[3],K_J[4],K_j[5],K_i[6],K_S[7],K_i[8],*(union A543*)K_a[9],*(struct A544*)K_a[10],K_S[11]));}
/* 154:cJj{p{cfpijijBJifi}}{<JL[9]dcfp>LJsff}Lic<ip>jLs)p */ void f154(void* addr) { write_V_p(12, (( p(*)(c,J,j,struct A546,struct A548,L,i,c,union A549,j,L,s))addr)(K_c[0],K_J[1],K_j[2],*(struct A546*)K_a[3],*(struct A548*)K_a[4],K_L[5],K_i[6],K_c[7],*(union A549*)K_a[8],K_j[9],K_L[10],K_s[11]));}
/* 155:{jdlclLiBjCjd}sCCCJJ)c */ void f155(void* addr) { write_V_c(7, (( c(*)(struct A550,s,C,C,C,J,J))addr)(*(struct A550*)K_a[0],K_s[1],K_C[2],K_C[3],K_C[4],K_J[5],K_J[6]));}
/* 156:B{Jc<jC>dCIjlIddd}SBIC{i}f)f */ void f156(void* addr) { write_V_f(8, (( f(*)(B,struct A552,S,B,I,C,struct A553,f))addr)(K_B[0],*(struct A552*)K_a[1],K_S[2],K_B[3],K_I[4],K_C[5],*(struct A553*)K_a[6],K_f[7]));}
/* 157:BjI<BCfipdS>LCjJSSSf)C */ void f157(void* addr) { write_V_C(12, (( C(*)(B,j,I,union A554,L,C,j,J,S,S,S,f))addr)(K_B[0],K_j[1],K_I[2],*(union A554*)K_a[3],K_L[4],K_C[5],K_j[6],K_J[7],K_S[8],K_S[9],K_S[10],K_f[11]));}
/* 158:LdcLIpCS{<l>SJCLjSJ<C>LCc})S */ void f158(void* addr) { write_V_S(9, (( S(*)(L,d,c,L,I,p,C,S,struct A556))addr)(K_L[0],K_d[1],K_c[2],K_L[3],K_I[4],K_p[5],K_C[6],K_S[7],*(struct A556*)K_a[8]));}
/* 159:dLLfsflSlScI{cIIdp})j */ void f159(void* addr) { write_V_j(13, (( j(*)(d,L,L,f,s,f,l,S,l,S,c,I,struct A557))addr)(K_d[0],K_L[1],K_L[2],K_f[3],K_s[4],K_f[5],K_l[6],K_S[7],K_l[8],K_S[9],K_c[10],K_I[11],*(struct A557*)K_a[12]));}
/* 160:dipij{djci{cS{iIifcBsiiisp}lJJLlBf{SlIc}S}dSfI<jLIdJsLLScj[10]C>c[15]c}sJL)I */ void f160(void* addr) { write_V_I(9, (( I(*)(d,i,p,i,j,struct A562,s,J,L))addr)(K_d[0],K_i[1],K_p[2],K_i[3],K_j[4],*(struct A562*)K_a[5],K_s[6],K_J[7],K_L[8]));}
/* 161:Cj{CJ<sCBJjjfllJil>iSJISpcdi}L<iCc><iB{SJlIfBJBJsfL}JLlcfclfj>JCL)l */ void f161(void* addr) { write_V_l(9, (( l(*)(C,j,struct A564,L,union A565,union A567,J,C,L))addr)(K_C[0],K_j[1],*(struct A564*)K_a[2],K_L[3],*(union A565*)K_a[4],*(union A567*)K_a[5],K_J[6],K_C[7],K_L[8]));}
/* 162:IlpfILscsB<Cc[5]lLfSIipipp>d)L */ void f162(void* addr) { write_V_L(12, (( L(*)(I,l,p,f,I,L,s,c,s,B,union A568,d))addr)(K_I[0],K_l[1],K_p[2],K_f[3],K_I[4],K_L[5],K_s[6],K_c[7],K_s[8],K_B[9],*(union A568*)K_a[10],K_d[11]));}
/* 163:sIClCsI{<BIs<dS>Ip{cllslcjijIiB}lBpLi>pIsCCj{c<B[5]CfLjfLBdsIi>L[7]LfcSCJIp{clISCSLSIsff}}SdSd}dCi<sJf>S<LSjdscBIs>IL)C */ void f163(void* addr) { write_V_C(16, (( C(*)(s,I,C,l,C,s,I,struct A575,d,C,i,union A576,S,union A577,I,L))addr)(K_s[0],K_I[1],K_C[2],K_l[3],K_C[4],K_s[5],K_I[6],*(struct A575*)K_a[7],K_d[8],K_C[9],K_i[10],*(union A576*)K_a[11],K_S[12],*(union A577*)K_a[13],K_I[14],K_L[15]));}
/* 164:jp{CS[8]}ipi{ilIiSjfS{CpjLsCf<pfslSijiLlii><sSJlJssIfCJs>pL[6]B}<ip{LBdJB[8]LBBSjfB}JiJp[12]sjsfj>fs}sJ)I */ void f164(void* addr) { write_V_I(9, (( I(*)(j,p,struct A578,i,p,i,struct A584,s,J))addr)(K_j[0],K_p[1],*(struct A578*)K_a[2],K_i[3],K_p[4],K_i[5],*(struct A584*)K_a[6],K_s[7],K_J[8]));}
/* 165:BLfjC{I{icBjSLCCcljC}BdB<dsIBLpiBjdBp>di<BlsISSJLj>{pLI}})B */ void f165(void* addr) { write_V_B(6, (( B(*)(B,L,f,j,C,struct A589))addr)(K_B[0],K_L[1],K_f[2],K_j[3],K_C[4],*(struct A589*)K_a[5]));}
/* 166:j<lSdIclBdILdd>cBlj)B */ void f166(void* addr) { write_V_B(6, (( B(*)(j,union A590,c,B,l,j))addr)(K_j[0],*(union A590*)K_a[1],K_c[2],K_B[3],K_l[4],K_j[5]));}
/* 167:I{Bl})p */ void f167(void* addr) { write_V_p(2, (( p(*)(I,struct A591))addr)(K_I[0],*(struct A591*)K_a[1]));}
/* 168:lcp{LfCS}j)l */ void f168(void* addr) { write_V_l(5, (( l(*)(l,c,p,struct A592,j))addr)(K_l[0],K_c[1],K_p[2],*(struct A592*)K_a[3],K_j[4]));}
/* 169:{fisLS}f{dcC}jjJ){l} */ void f169(void* addr) { write_V_a(6, (( struct A593(*)(struct A594,f,struct A595,j,j,J))addr)(*(struct A594*)K_a[0],K_f[1],*(struct A595*)K_a[2],K_j[3],K_j[4],K_J[5]), struct A593);}
/* 170:JLSdf{fp}sSsLl)v */ void f170(void* addr) { write_V_v(11, (( v(*)(J,L,S,d,f,struct A596,s,S,s,L,l))addr)(K_J[0],K_L[1],K_S[2],K_d[3],K_f[4],*(struct A596*)K_a[5],K_s[6],K_S[7],K_s[8],K_L[9],K_l[10]));}
/* 171:){iC{BS{lidclCLBpdC}JdpSBddCC}C} */ void f171(void* addr) { write_V_a(0, (( struct A599(*)())addr)(), struct A599);}
/* 172:Sciplsd<f>JBj)d */ void f172(void* addr) { write_V_d(11, (( d(*)(S,c,i,p,l,s,d,union A318,J,B,j))addr)(K_S[0],K_c[1],K_i[2],K_p[3],K_l[4],K_s[5],K_d[6],*(union A318*)K_a[7],K_J[8],K_B[9],K_j[10]));}
/* 173:Ifs<id>pp){iciIIJBslJfs} */ void f173(void* addr) { write_V_a(6, (( struct A600(*)(I,f,s,union A601,p,p))addr)(K_I[0],K_f[1],K_s[2],*(union A601*)K_a[3],K_p[4],K_p[5]), struct A600);}
/* 174:L<S{IBsjCjdpLJJs}psBIj><B>jdijS)f */ void f174(void* addr) { write_V_f(8, (( f(*)(L,union A603,union A604,j,d,i,j,S))addr)(K_L[0],*(union A603*)K_a[1],*(union A604*)K_a[2],K_j[3],K_d[4],K_i[5],K_j[6],K_S[7]));}
/* 175:{iiSsfipICpIp}ISIflBlf)l */ void f175(void* addr) { write_V_l(9, (( l(*)(struct A605,I,S,I,f,l,B,l,f))addr)(*(struct A605*)K_a[0],K_I[1],K_S[2],K_I[3],K_f[4],K_l[5],K_B[6],K_l[7],K_f[8]));}
/* 176:jiSllLsiJB)<pCLij> */ void f176(void* addr) { write_V_a(10, (( union A606(*)(j,i,S,l,l,L,s,i,J,B))addr)(K_j[0],K_i[1],K_S[2],K_l[3],K_l[4],K_L[5],K_s[6],K_i[7],K_J[8],K_B[9]), union A606);}
/* 177:iI<ffBdLlBCIl>LLiS<{BJcSsidIlSIL}ilSfCCB<Jp[9]>Sff>)v */ void f177(void* addr) { write_V_v(8, (( v(*)(i,I,union A607,L,L,i,S,union A610))addr)(K_i[0],K_I[1],*(union A607*)K_a[2],K_L[3],K_L[4],K_i[5],K_S[6],*(union A610*)K_a[7]));}
/* 178:sJIL<BfpCCB>CfISL{if{fIsLLScIILjf[13]}{SjpIfss[4]}pIJpB<sSfCCflj[10]ICJI>I{issJicL}}p<sBcL>{iSll{CCCBBslC}CCB<C>isc}J)l */ void f178(void* addr) { write_V_l(15, (( l(*)(s,J,I,L,union A611,C,f,I,S,L,struct A616,p,union A617,struct A619,J))addr)(K_s[0],K_J[1],K_I[2],K_L[3],*(union A611*)K_a[4],K_C[5],K_f[6],K_I[7],K_S[8],K_L[9],*(struct A616*)K_a[10],K_p[11],*(union A617*)K_a[12],*(struct A619*)K_a[13],K_J[14]));}
/* 179:JSC<JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL>ds{lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C}jLlJlfpL)s */ void f179(void* addr) { write_V_s(15, (( s(*)(J,S,C,union A623,d,s,struct A629,j,L,l,J,l,f,p,L))addr)(K_J[0],K_S[1],K_C[2],*(union A623*)K_a[3],K_d[4],K_s[5],*(struct A629*)K_a[6],K_j[7],K_L[8],K_l[9],K_J[10],K_l[11],K_f[12],K_p[13],K_L[14]));}
/* 180:Bs{CjJdJ}CBBCJdS)f */ void f180(void* addr) { write_V_f(10, (( f(*)(B,s,struct A630,C,B,B,C,J,d,S))addr)(K_B[0],K_s[1],*(struct A630*)K_a[2],K_C[3],K_B[4],K_B[5],K_C[6],K_J[7],K_d[8],K_S[9]));}
/* 181:i{cpd}dj)p */ void f181(void* addr) { write_V_p(4, (( p(*)(i,struct A631,d,j))addr)(K_i[0],*(struct A631*)K_a[1],K_d[2],K_j[3]));}
/* 182:L{CflBdLSB<diJl>SLc}pffip)d */ void f182(void* addr) { write_V_d(7, (( d(*)(L,struct A633,p,f,f,i,p))addr)(K_L[0],*(struct A633*)K_a[1],K_p[2],K_f[3],K_f[4],K_i[5],K_p[6]));}
/* 183:jfs{csB}sL)p */ void f183(void* addr) { write_V_p(6, (( p(*)(j,f,s,struct A634,s,L))addr)(K_j[0],K_f[1],K_s[2],*(struct A634*)K_a[3],K_s[4],K_L[5]));}
/* 184:pjddlC<ClIjIpfcISji>{<cCcJ>s}Ic)d */ void f184(void* addr) { write_V_d(10, (( d(*)(p,j,d,d,l,C,union A635,struct A637,I,c))addr)(K_p[0],K_j[1],K_d[2],K_d[3],K_l[4],K_C[5],*(union A635*)K_a[6],*(struct A637*)K_a[7],K_I[8],K_c[9]));}
/* 185:ffIijdIll{fdfLB{IcdlflsCpSS}fisIpc})C */ void f185(void* addr) { write_V_C(10, (( C(*)(f,f,I,i,j,d,I,l,l,struct A639))addr)(K_f[0],K_f[1],K_I[2],K_i[3],K_j[4],K_d[5],K_I[6],K_l[7],K_l[8],*(struct A639*)K_a[9]));}
/* 186:iscSsiLj{Jlsf<cclScj{IsSLSic}pJpcJ>CslC{cC<JB[12]jfpfBBLLdI[8]>dI{JlsLdiCpi[14]I[11]Js}}li}BfCJl)J */ void f186(void* addr) { write_V_J(14, (( J(*)(i,s,c,S,s,i,L,j,struct A645,B,f,C,J,l))addr)(K_i[0],K_s[1],K_c[2],K_S[3],K_s[4],K_i[5],K_L[6],K_j[7],*(struct A645*)K_a[8],K_B[9],K_f[10],K_C[11],K_J[12],K_l[13]));}
/* 187:CBC<<ljjJ[7]llsBc>p{ilisciSdLl}csBJpfCld>{SJ}CiL)l */ void f187(void* addr) { write_V_l(8, (( l(*)(C,B,C,union A648,struct A649,C,i,L))addr)(K_C[0],K_B[1],K_C[2],*(union A648*)K_a[3],*(struct A649*)K_a[4],K_C[5],K_i[6],K_L[7]));}
/* 188:SLLdijsjpliI<is[1]LLcSd{p<jdcjJllfBlsi>}LIJi>l)v */ void f188(void* addr) { write_V_v(14, (( v(*)(S,L,L,d,i,j,s,j,p,l,i,I,union A652,l))addr)(K_S[0],K_L[1],K_L[2],K_d[3],K_i[4],K_j[5],K_s[6],K_j[7],K_p[8],K_l[9],K_i[10],K_I[11],*(union A652*)K_a[12],K_l[13]));}
/* 189:)<JI[15]JdLd<lIJjCcljCjBL>sSlCL> */ void f189(void* addr) { write_V_a(0, (( union A654(*)())addr)(), union A654);}
/* 190:S{cs<fsiCLiCBlcss>ls}lL{jIC<Sf{ccfIJBIB}BjJlBspiS>}{IciBBiL<cfcSBidCipsC>[15]}sL<{ip<SliSSIBdljfd>c}LjLils>)v */ void f190(void* addr) { write_V_v(9, (( v(*)(S,struct A656,l,L,struct A659,struct A661,s,L,union A664))addr)(K_S[0],*(struct A656*)K_a[1],K_l[2],K_L[3],*(struct A659*)K_a[4],*(struct A661*)K_a[5],K_s[6],K_L[7],*(union A664*)K_a[8]));}
/* 191:jdfBCfjds{fC}SsJ)S */ void f191(void* addr) { write_V_S(13, (( S(*)(j,d,f,B,C,f,j,d,s,struct A665,S,s,J))addr)(K_j[0],K_d[1],K_f[2],K_B[3],K_C[4],K_f[5],K_j[6],K_d[7],K_s[8],*(struct A665*)K_a[9],K_S[10],K_s[11],K_J[12]));}
/* 192:L<s{psjLfcCpSSJB}<I[2]lfBSfJpBfBj>lIjclcfsI>jSIi)S */ void f192(void* addr) { write_V_S(6, (( S(*)(L,union A668,j,S,I,i))addr)(K_L[0],*(union A668*)K_a[1],K_j[2],K_S[3],K_I[4],K_i[5]));}
/* 193:<pS[7]jB>fjSSpC{dsdSBsllsdJi}C<lfCJlJCppJff><idLsfdpC[5]BljC>)i */ void f193(void* addr) { write_V_i(11, (( i(*)(union A669,f,j,S,S,p,C,struct A670,C,union A671,union A672))addr)(*(union A669*)K_a[0],K_f[1],K_j[2],K_S[3],K_S[4],K_p[5],K_C[6],*(struct A670*)K_a[7],K_C[8],*(union A671*)K_a[9],*(union A672*)K_a[10]));}
/* 194:{IdjpfIlcpC<djLj>c}{ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS}JsjsIlsIfBs)c */ void f194(void* addr) { write_V_c(13, (( c(*)(struct A674,struct A677,J,s,j,s,I,l,s,I,f,B,s))addr)(*(struct A674*)K_a[0],*(struct A677*)K_a[1],K_J[2],K_s[3],K_j[4],K_s[5],K_I[6],K_l[7],K_s[8],K_I[9],K_f[10],K_B[11],K_s[12]));}
/* 195:fsl<B{JclL}LdpSI{<SJs>Blllip{Bf}}ip>B<ldCJcCjLfsJs>JdcL{iJScJI}B<jBlf<fjB>c>)v */ void f195(void* addr) { write_V_v(13, (( v(*)(f,s,l,union A682,B,union A683,J,d,c,L,struct A684,B,union A686))addr)(K_f[0],K_s[1],K_l[2],*(union A682*)K_a[3],K_B[4],*(union A683*)K_a[5],K_J[6],K_d[7],K_c[8],K_L[9],*(struct A684*)K_a[10],K_B[11],*(union A686*)K_a[12]));}
/* 196:lLfsBjsc){Ldd} */ void f196(void* addr) { write_V_a(8, (( struct A687(*)(l,L,f,s,B,j,s,c))addr)(K_l[0],K_L[1],K_f[2],K_s[3],K_B[4],K_j[5],K_s[6],K_c[7]), struct A687);}
/* 197:j{CJdl}S<plfIpJsLIffJ>lJp<pCJdIfJJSdsL>B)S */ void f197(void* addr) { write_V_S(9, (( S(*)(j,struct A688,S,union A689,l,J,p,union A690,B))addr)(K_j[0],*(struct A688*)K_a[1],K_S[2],*(union A689*)K_a[3],K_l[4],K_J[5],K_p[6],*(union A690*)K_a[7],K_B[8]));}
/* 198:id<CdIdC>{pfcSdpBS<fs{dCCcBf}d<cpI>Ljcflsj>cls}Csfiic{SccpL[4]fJCfs}pSIs)C */ void f198(void* addr) { write_V_C(15, (( C(*)(i,d,union A691,struct A695,C,s,f,i,i,c,struct A696,p,S,I,s))addr)(K_i[0],K_d[1],*(union A691*)K_a[2],*(struct A695*)K_a[3],K_C[4],K_s[5],K_f[6],K_i[7],K_i[8],K_c[9],*(struct A696*)K_a[10],K_p[11],K_S[12],K_I[13],K_s[14]));}
/* 199:JLJ<lCSiJC>IBJiS{iLpCLLIclLBL}i<jp<LLsLjp{LJlccIiiffcj}<pJpJBpd>CdpS>dLij<fBccJpLljCC{djiBpiJIIpfp}>Cil<<ipSj>C{iddcsBsjBBLd}LJsBIJJ{dpCJliL[11]JS}j>>B)p */ void f199(void* addr) { write_V_p(13, (( p(*)(J,L,J,union A697,I,B,J,i,S,struct A698,i,union A708,B))addr)(K_J[0],K_L[1],K_J[2],*(union A697*)K_a[3],K_I[4],K_B[5],K_J[6],K_i[7],K_S[8],*(struct A698*)K_a[9],K_i[10],*(union A708*)K_a[11],K_B[12]));}
/* 200:LijJcpsJ{sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj}i)v */ void f200(void* addr) { write_V_v(10, (( v(*)(L,i,j,J,c,p,s,J,struct A711,i))addr)(K_L[0],K_i[1],K_j[2],K_J[3],K_c[4],K_p[5],K_s[6],K_J[7],*(struct A711*)K_a[8],K_i[9]));}
/* 201:s<<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff>BIdp){IspBfiLI[7]J} */ void f201(void* addr) { write_V_a(6, (( struct A712(*)(s,union A716,B,I,d,p))addr)(K_s[0],*(union A716*)K_a[1],K_B[2],K_I[3],K_d[4],K_p[5]), struct A712);}
/* 202:cjjBdlSl<piJjCfLCSI>)j */ void f202(void* addr) { write_V_j(9, (( j(*)(c,j,j,B,d,l,S,l,union A717))addr)(K_c[0],K_j[1],K_j[2],K_B[3],K_d[4],K_l[5],K_S[6],K_l[7],*(union A717*)K_a[8]));}
/* 203:Jlcjjjp){p{pISICSs[4]p[13]Icl}sCJfs} */ void f203(void* addr) { write_V_a(7, (( struct A719(*)(J,l,c,j,j,j,p))addr)(K_J[0],K_l[1],K_c[2],K_j[3],K_j[4],K_j[5],K_p[6]), struct A719);}
/* 204:{<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<ISIjIi[5]IILjds><jdSBpSJds>iCIcIfSLJL>lSjpLBi}jsjLB)c */ void f204(void* addr) { write_V_c(6, (( c(*)(struct A726,j,s,j,L,B))addr)(*(struct A726*)K_a[0],K_j[1],K_s[2],K_j[3],K_L[4],K_B[5]));}
/* 205:J<diS{pJlCjjsBjcfB}jIiCdJSd>CclICspslL{dcSlsBf<ccdBBlSlisc<sBIJBjfIidjl>>J<ISdipLlC<BjBI>[5]>jl}S)C */ void f205(void* addr) { write_V_C(14, (( C(*)(J,union A728,C,c,l,I,C,s,p,s,l,L,struct A733,S))addr)(K_J[0],*(union A728*)K_a[1],K_C[2],K_c[3],K_l[4],K_I[5],K_C[6],K_s[7],K_p[8],K_s[9],K_l[10],K_L[11],*(struct A733*)K_a[12],K_S[13]));}
/* 206:BISjccJB{C<BlIjLJCfSC[5]LC>dpLCJBfl{cilCsi[8]ffLJSd}I}dp{<cl[5]>j<<sIsspcIjLCI>L<IcpjjicJjdSJ>dS<JCLicLCJlLLL>>Llp})j */ void f206(void* addr) { write_V_j(12, (( j(*)(B,I,S,j,c,c,J,B,struct A736,d,p,struct A742))addr)(K_B[0],K_I[1],K_S[2],K_j[3],K_c[4],K_c[5],K_J[6],K_B[7],*(struct A736*)K_a[8],K_d[9],K_p[10],*(struct A742*)K_a[11]));}
/* 207:icJj<Cpjpcds>d{ciLLC}SjSs)s */ void f207(void* addr) { write_V_s(11, (( s(*)(i,c,J,j,union A743,d,struct A744,S,j,S,s))addr)(K_i[0],K_c[1],K_J[2],K_j[3],*(union A743*)K_a[4],K_d[5],*(struct A744*)K_a[6],K_S[7],K_j[8],K_S[9],K_s[10]));}
/* 208:plC<IdJjjCpscIdI>sfJd{<sLc{ppJJf}[7]{lCpSdIjL}SpIji>SJC}L{Jldld[4]I{dlcc[7]Jf{Lll}[11]csj}}S)B */ void f208(void* addr) { write_V_B(12, (( B(*)(p,l,C,union A745,s,f,J,d,struct A749,L,struct A752,S))addr)(K_p[0],K_l[1],K_C[2],*(union A745*)K_a[3],K_s[4],K_f[5],K_J[6],K_d[7],*(struct A749*)K_a[8],K_L[9],*(struct A752*)K_a[10],K_S[11]));}
/* 209:CLi<f{fpl}Sds>JJcf{IjsIfJJfdfsS})d */ void f209(void* addr) { write_V_d(9, (( d(*)(C,L,i,union A754,J,J,c,f,struct A755))addr)(K_C[0],K_L[1],K_i[2],*(union A754*)K_a[3],K_J[4],K_J[5],K_c[6],K_f[7],*(struct A755*)K_a[8]));}
/* 210:CpIBpSICC){jfsljijdlSfC} */ void f210(void* addr) { write_V_a(9, (( struct A756(*)(C,p,I,B,p,S,I,C,C))addr)(K_C[0],K_p[1],K_I[2],K_B[3],K_p[4],K_S[5],K_I[6],K_C[7],K_C[8]), struct A756);}
/* 211:dI<LBlJpjSjjsCC>fcBcJI)<Lp[2]fJClfSIdfJ> */ void f211(void* addr) { write_V_a(9, (( union A757(*)(d,I,union A758,f,c,B,c,J,I))addr)(K_d[0],K_I[1],*(union A758*)K_a[2],K_f[3],K_c[4],K_B[5],K_c[6],K_J[7],K_I[8]), union A757);}
/* 212:spff{jpLpjpJdidBc}B<Idc>CLBf)I */ void f212(void* addr) { write_V_I(11, (( I(*)(s,p,f,f,struct A759,B,union A760,C,L,B,f))addr)(K_s[0],K_p[1],K_f[2],K_f[3],*(struct A759*)K_a[4],K_B[5],*(union A760*)K_a[6],K_C[7],K_L[8],K_B[9],K_f[10]));}
/* 213:<lfJ{SjIclCfSslBJ}lfSjdLCS>{S{cl}jB<siLilSidcLS><pL>{IJjsfifIssJI}ssjSB}I{dps<iIc[6]J<fBBLjj[12]fCcLsl>SfB{BsjSdIIppS}JIB>ssL{<fpcsiIIiIfCJ>lBddCCj{LfISIfjfBicC}S{pLcs}J}[13]L<pssLf[6]IiC{ifiI}<JBCC>{SB}s>{JB[13]}f}IsBjS)B */ void f213(void* addr) { write_V_B(9, (( B(*)(union A762,struct A767,I,struct A780,I,s,B,j,S))addr)(*(union A762*)K_a[0],*(struct A767*)K_a[1],K_I[2],*(struct A780*)K_a[3],K_I[4],K_s[5],K_B[6],K_j[7],K_S[8]));}
/* 214:Sd{liCipBdScs{Bffpi[9]J}s}SfijpJ{SSjcsS[8]L<CCis>L}Cl)p */ void f214(void* addr) { write_V_p(12, (( p(*)(S,d,struct A782,S,f,i,j,p,J,struct A784,C,l))addr)(K_S[0],K_d[1],*(struct A782*)K_a[2],K_S[3],K_f[4],K_i[5],K_j[6],K_p[7],K_J[8],*(struct A784*)K_a[9],K_C[10],K_l[11]));}
/* 215:lI{IIjCCjSLfCdp}L)c */ void f215(void* addr) { write_V_c(4, (( c(*)(l,I,struct A785,L))addr)(K_l[0],K_I[1],*(struct A785*)K_a[2],K_L[3]));}
/* 216:JJ{fSdCscBi[4]cd}c)v */ void f216(void* addr) { write_V_v(4, (( v(*)(J,J,struct A786,c))addr)(K_J[0],K_J[1],*(struct A786*)K_a[2],K_c[3]));}
/* 217:SJdSS<pB{i{SsjjBlcJcfSI}lSsjCLjjd[4]J}C<BiJ{iJLC}{cJJjSf}pf{LiLJciScl}c<CpiC>cf>dL<SlSjjliBBspp>jSlB>SjBlff)<B<<fJj>d<siIj>jip>fJdIdijJic> */ void f217(void* addr) { write_V_a(12, (( union A790(*)(S,J,d,S,S,union A799,S,j,B,l,f,f))addr)(K_S[0],K_J[1],K_d[2],K_S[3],K_S[4],*(union A799*)K_a[5],K_S[6],K_j[7],K_B[8],K_l[9],K_f[10],K_f[11]), union A790);}
/* 218:CsJpCl<CIpCpIBdIIcd><jsdBBdIIBfIp>pBICj)v */ void f218(void* addr) { write_V_v(13, (( v(*)(C,s,J,p,C,l,union A800,union A801,p,B,I,C,j))addr)(K_C[0],K_s[1],K_J[2],K_p[3],K_C[4],K_l[5],*(union A800*)K_a[6],*(union A801*)K_a[7],K_p[8],K_B[9],K_I[10],K_C[11],K_j[12]));}
/* 219:ccfjl<cJjIcBddijfi>){{p}sB} */ void f219(void* addr) { write_V_a(6, (( struct A802(*)(c,c,f,j,l,union A803))addr)(K_c[0],K_c[1],K_f[2],K_j[3],K_l[4],*(union A803*)K_a[5]), struct A802);}
/* 220:sSJpc{dIpLlCc[13]SjBiS})l */ void f220(void* addr) { write_V_l(6, (( l(*)(s,S,J,p,c,struct A804))addr)(K_s[0],K_S[1],K_J[2],K_p[3],K_c[4],*(struct A804*)K_a[5]));}
/* 221:lc<ccfclcLCjpLi>jd)l */ void f221(void* addr) { write_V_l(5, (( l(*)(l,c,union A805,j,d))addr)(K_l[0],K_c[1],*(union A805*)K_a[2],K_j[3],K_d[4]));}
/* 222:IJ)<d[15]CjII<Cdc>i[13]CjfsL> */ void f222(void* addr) { write_V_a(2, (( union A807(*)(I,J))addr)(K_I[0],K_J[1]), union A807);}
/* 223:<L{ipissifiBBp}JlSIc>jsfs)B */ void f223(void* addr) { write_V_B(5, (( B(*)(union A809,j,s,f,s))addr)(*(union A809*)K_a[0],K_j[1],K_s[2],K_f[3],K_s[4]));}
/* 224:ppS{ILSIfJCfSiSj}cdC)<j<djLcslBBSSSp>ji> */ void f224(void* addr) { write_V_a(7, (( union A811(*)(p,p,S,struct A812,c,d,C))addr)(K_p[0],K_p[1],K_S[2],*(struct A812*)K_a[3],K_c[4],K_d[5],K_C[6]), union A811);}
/* 225:fJBii{sClcd<BcJ{CfcfIScjl}iclc{dfpSjS}J<j[11]c>l>BClSil}d{BSdCclIC})p */ void f225(void* addr) { write_V_p(8, (( p(*)(f,J,B,i,i,struct A817,d,struct A818))addr)(K_f[0],K_J[1],K_B[2],K_i[3],K_i[4],*(struct A817*)K_a[5],K_d[6],*(struct A818*)K_a[7]));}
/* 226:L{jiCJdc<CSJpsf[3]S<fcSIBjciIdlL>j<ipS>S{i}>IlCcB})<d> */ void f226(void* addr) { write_V_a(2, (( union A819(*)(L,struct A823))addr)(K_L[0],*(struct A823*)K_a[1]), union A819);}
/* 227:dJ{<L{IJBpCfdsIiJp}Js<sdSJ[15]CcIS[8]Lppd>j{L}dJdif>p}fSiC)S */ void f227(void* addr) { write_V_S(7, (( S(*)(d,J,struct A827,f,S,i,C))addr)(K_d[0],K_J[1],*(struct A827*)K_a[2],K_f[3],K_S[4],K_i[5],K_C[6]));}
/* 228:BdBSBds{IIdic[14]spipp[13]B}dJ<SsLsIjJslCBC>J)d */ void f228(void* addr) { write_V_d(12, (( d(*)(B,d,B,S,B,d,s,struct A828,d,J,union A829,J))addr)(K_B[0],K_d[1],K_B[2],K_S[3],K_B[4],K_d[5],K_s[6],*(struct A828*)K_a[7],K_d[8],K_J[9],*(union A829*)K_a[10],K_J[11]));}
/* 229:p{LfcJLCjlf}pCd)I */ void f229(void* addr) { write_V_I(5, (( I(*)(p,struct A830,p,C,d))addr)(K_p[0],*(struct A830*)K_a[1],K_p[2],K_C[3],K_d[4]));}
/* 230:<p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl>LLpCddLJ)v */ void f230(void* addr) { write_V_v(9, (( v(*)(union A834,L,L,p,C,d,d,L,J))addr)(*(union A834*)K_a[0],K_L[1],K_L[2],K_p[3],K_C[4],K_d[5],K_d[6],K_L[7],K_J[8]));}
/* 231:lfcJpi<fpjcfIpBsjd[2]C>JL{sssjidL[12]Idjcj}jcSLlI)j */ void f231(void* addr) { write_V_j(16, (( j(*)(l,f,c,J,p,i,union A835,J,L,struct A836,j,c,S,L,l,I))addr)(K_l[0],K_f[1],K_c[2],K_J[3],K_p[4],K_i[5],*(union A835*)K_a[6],K_J[7],K_L[8],*(struct A836*)K_a[9],K_j[10],K_c[11],K_S[12],K_L[13],K_l[14],K_I[15]));}
/* 232:LdBfislcdl{{BpdJppipssfC}C{j[8]BcdJijdIdif}flpjCL<SCfjL>sS}iL)v */ void f232(void* addr) { write_V_v(13, (( v(*)(L,d,B,f,i,s,l,c,d,l,struct A840,i,L))addr)(K_L[0],K_d[1],K_B[2],K_f[3],K_i[4],K_s[5],K_l[6],K_c[7],K_d[8],K_l[9],*(struct A840*)K_a[10],K_i[11],K_L[12]));}
/* 233:dj{jdIB}C)v */ void f233(void* addr) { write_V_v(4, (( v(*)(d,j,struct A841,C))addr)(K_d[0],K_j[1],*(struct A841*)K_a[2],K_C[3]));}
/* 234:pIJp<JjCsSJ<f[14]fCBI>[7]pCJdL>di)i */ void f234(void* addr) { write_V_i(7, (( i(*)(p,I,J,p,union A843,d,i))addr)(K_p[0],K_I[1],K_J[2],K_p[3],*(union A843*)K_a[4],K_d[5],K_i[6]));}
/* 235:<dB<cSCSBJLilSC>cBsfJi>sJiBfCiIJJI)j */ void f235(void* addr) { write_V_j(12, (( j(*)(union A845,s,J,i,B,f,C,i,I,J,J,I))addr)(*(union A845*)K_a[0],K_s[1],K_J[2],K_i[3],K_B[4],K_f[5],K_C[6],K_i[7],K_I[8],K_J[9],K_J[10],K_I[11]));}
/* 236:{Cf{CfISddBpllIs}S<jic>sB<cLCSIsCsCCiC>Ipp}<SJjLccJjCdcB>cIpCScBCfcI<<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf>c)p */ void f236(void* addr) { write_V_p(15, (( p(*)(struct A849,union A850,c,I,p,C,S,c,B,C,f,c,I,union A857,c))addr)(*(struct A849*)K_a[0],*(union A850*)K_a[1],K_c[2],K_I[3],K_p[4],K_C[5],K_S[6],K_c[7],K_B[8],K_C[9],K_f[10],K_c[11],K_I[12],*(union A857*)K_a[13],K_c[14]));}
/* 237:jiC)<dIjS> */ void f237(void* addr) { write_V_a(3, (( union A858(*)(j,i,C))addr)(K_j[0],K_i[1],K_C[2]), union A858);}
/* 238:iL<IlJfjl[3]l[12]Lcj[4]dj><BCjJpCfIsI{IJjCfiLiSJpd}J>sp{LfCBfcsCiII{jdidfBJf}}c)d */ void f238(void* addr) { write_V_d(8, (( d(*)(i,L,union A859,union A861,s,p,struct A863,c))addr)(K_i[0],K_L[1],*(union A859*)K_a[2],*(union A861*)K_a[3],K_s[4],K_p[5],*(struct A863*)K_a[6],K_c[7]));}
/* 239:ijS{f}J<dIffIl[1]JjLffI><<pjidISjlfBdj>pIjSBISi<plL>>)c */ void f239(void* addr) { write_V_c(7, (( c(*)(i,j,S,struct A864,J,union A865,union A868))addr)(K_i[0],K_j[1],K_S[2],*(struct A864*)K_a[3],K_J[4],*(union A865*)K_a[5],*(union A868*)K_a[6]));}
/* 240:L{IB{sBifSJSILLd<iSdI[6]JicIJL[12]IJ>[4]}jS<CljCBLSILsds>ICSBli}jjCCLjI{cfS[4]}lIp<cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd>)s */ void f240(void* addr) { write_V_s(14, (( s(*)(L,struct A872,j,j,C,C,L,j,I,struct A873,l,I,p,union A879))addr)(K_L[0],*(struct A872*)K_a[1],K_j[2],K_j[3],K_C[4],K_C[5],K_L[6],K_j[7],K_I[8],*(struct A873*)K_a[9],K_l[10],K_I[11],K_p[12],*(union A879*)K_a[13]));}
/* 241:<B[6]{CSpspfCLpLI}JCSJj>SpljSjI<<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC>c)l */ void f241(void* addr) { write_V_l(10, (( l(*)(union A881,S,p,l,j,S,j,I,union A885,c))addr)(*(union A881*)K_a[0],K_S[1],K_p[2],K_l[3],K_j[4],K_S[5],K_j[6],K_I[7],*(union A885*)K_a[8],K_c[9]));}
/* 242:Cc{df}JLcSS)c */ void f242(void* addr) { write_V_c(8, (( c(*)(C,c,struct A886,J,L,c,S,S))addr)(K_C[0],K_c[1],*(struct A886*)K_a[2],K_J[3],K_L[4],K_c[5],K_S[6],K_S[7]));}
/* 243:d{<sLSCcspIjsfC>sBj<sBfJBpJCpBpi>ldLf}{lfflBp<jsLlIC>cIClf}spcfJ<<{sLBdfsJiJdLC}{liL}JiIfJ[12]fL<Sldsf>>spiIjiccf>Jf<lplLlfsdfdCL>)s */ void f243(void* addr) { write_V_s(12, (( s(*)(d,struct A889,struct A891,s,p,c,f,J,union A896,J,f,union A897))addr)(K_d[0],*(struct A889*)K_a[1],*(struct A891*)K_a[2],K_s[3],K_p[4],K_c[5],K_f[6],K_J[7],*(union A896*)K_a[8],K_J[9],K_f[10],*(union A897*)K_a[11]));}
/* 244:sBJLjCLJpBL){{jCBS[9]CjcILiJC}BLf} */ void f244(void* addr) { write_V_a(11, (( struct A899(*)(s,B,J,L,j,C,L,J,p,B,L))addr)(K_s[0],K_B[1],K_J[2],K_L[3],K_j[4],K_C[5],K_L[6],K_J[7],K_p[8],K_B[9],K_L[10]), struct A899);}
/* 245:<fd{SfJBsdsicscp}LscLIBICC>)d */ void f245(void* addr) { write_V_d(1, (( d(*)(union A901))addr)(*(union A901*)K_a[0]));}
/* 246:Sc{LccBfBjJBdBS[6]}{SIIjIldSicIB}is{ic}Li<jId{LjJ}ffiS{BdJcBi}B{sp}I>Sscj){pSSJLfclLLc<<fLjfcs>dJIJLBsl{picis}fJ>} */ void f246(void* addr) { write_V_a(14, (( struct A905(*)(S,c,struct A906,struct A907,i,s,struct A908,L,i,union A912,S,s,c,j))addr)(K_S[0],K_c[1],*(struct A906*)K_a[2],*(struct A907*)K_a[3],K_i[4],K_s[5],*(struct A908*)K_a[6],K_L[7],K_i[8],*(union A912*)K_a[9],K_S[10],K_s[11],K_c[12],K_j[13]), struct A905);}
/* 247:fIfCf<cjBcidCs{lLpLCilJCSfJ}iiS>fc)d */ void f247(void* addr) { write_V_d(8, (( d(*)(f,I,f,C,f,union A914,f,c))addr)(K_f[0],K_I[1],K_f[2],K_C[3],K_f[4],*(union A914*)K_a[5],K_f[6],K_c[7]));}
/* 248:I{sILC}jBssIfLBlI)l */ void f248(void* addr) { write_V_l(12, (( l(*)(I,struct A915,j,B,s,s,I,f,L,B,l,I))addr)(K_I[0],*(struct A915*)K_a[1],K_j[2],K_B[3],K_s[4],K_s[5],K_I[6],K_f[7],K_L[8],K_B[9],K_l[10],K_I[11]));}
/* 249:J<<IBdId>JJ{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls>{BS{f<sCii>jsiL}CsCBjll<i{fCddCfdCpdJI}s>p}JfICf)S */ void f249(void* addr) { write_V_S(8, (( S(*)(J,union A921,struct A926,J,f,I,C,f))addr)(K_J[0],*(union A921*)K_a[1],*(struct A926*)K_a[2],K_J[3],K_f[4],K_I[5],K_C[6],K_f[7]));}
/* 250:LCJiiJIIiscBjp){BsI} */ void f250(void* addr) { write_V_a(14, (( struct A927(*)(L,C,J,i,i,J,I,I,i,s,c,B,j,p))addr)(K_L[0],K_C[1],K_J[2],K_i[3],K_i[4],K_J[5],K_I[6],K_I[7],K_i[8],K_s[9],K_c[10],K_B[11],K_j[12],K_p[13]), struct A927);}
/* 251:{I{plpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}Jj}S<jBSjlI>cifJBfjJ)c */ void f251(void* addr) { write_V_c(11, (( c(*)(struct A931,S,union A932,c,i,f,J,B,f,j,J))addr)(*(struct A931*)K_a[0],K_S[1],*(union A932*)K_a[2],K_c[3],K_i[4],K_f[5],K_J[6],K_B[7],K_f[8],K_j[9],K_J[10]));}
/* 252:LJSSCL<SsdjclSssfCl>SJC<{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji>J){psilCdLCSdIs} */ void f252(void* addr) { write_V_a(12, (( struct A933(*)(L,J,S,S,C,L,union A934,S,J,C,union A938,J))addr)(K_L[0],K_J[1],K_S[2],K_S[3],K_C[4],K_L[5],*(union A934*)K_a[6],K_S[7],K_J[8],K_C[9],*(union A938*)K_a[10],K_J[11]), struct A933);}
/* 253:pfIBLJ{lS{pCds{lfC}dclfl[6]ds}J}pBipl)<J> */ void f253(void* addr) { write_V_a(12, (( union A35(*)(p,f,I,B,L,J,struct A941,p,B,i,p,l))addr)(K_p[0],K_f[1],K_I[2],K_B[3],K_L[4],K_J[5],*(struct A941*)K_a[6],K_p[7],K_B[8],K_i[9],K_p[10],K_l[11]), union A35);}
/* 254:CLICCpi{ldjiSfj}LSSsdc)J */ void f254(void* addr) { write_V_J(14, (( J(*)(C,L,I,C,C,p,i,struct A942,L,S,S,s,d,c))addr)(K_C[0],K_L[1],K_I[2],K_C[3],K_C[4],K_p[5],K_i[6],*(struct A942*)K_a[7],K_L[8],K_S[9],K_S[10],K_s[11],K_d[12],K_c[13]));}
/* 255:fSpi{J<plClJLjf>ls}fcf{j<IJdsiiBpScIC>BllddBfBJs}LsJlp)B */ void f255(void* addr) { write_V_B(14, (( B(*)(f,S,p,i,struct A944,f,c,f,struct A946,L,s,J,l,p))addr)(K_f[0],K_S[1],K_p[2],K_i[3],*(struct A944*)K_a[4],K_f[5],K_c[6],K_f[7],*(struct A946*)K_a[8],K_L[9],K_s[10],K_J[11],K_l[12],K_p[13]));}
/* 256:{piBIBjc}Ildipdscjcp)p */ void f256(void* addr) { write_V_p(12, (( p(*)(struct A947,I,l,d,i,p,d,s,c,j,c,p))addr)(*(struct A947*)K_a[0],K_I[1],K_l[2],K_d[3],K_i[4],K_p[5],K_d[6],K_s[7],K_c[8],K_j[9],K_c[10],K_p[11]));}
/* 257:ldiSdpp<ijdiSCJBIiLS>BJ)<d> */ void f257(void* addr) { write_V_a(10, (( union A819(*)(l,d,i,S,d,p,p,union A948,B,J))addr)(K_l[0],K_d[1],K_i[2],K_S[3],K_d[4],K_p[5],K_p[6],*(union A948*)K_a[7],K_B[8],K_J[9]), union A819);}
/* 258:LJL<flpSdJiJcsdd>cfi)j */ void f258(void* addr) { write_V_j(7, (( j(*)(L,J,L,union A949,c,f,i))addr)(K_L[0],K_J[1],K_L[2],*(union A949*)K_a[3],K_c[4],K_f[5],K_i[6]));}
/* 259:iCSdCpIjf<dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj>Cji)d */ void f259(void* addr) { write_V_d(13, (( d(*)(i,C,S,d,C,p,I,j,f,union A955,C,j,i))addr)(K_i[0],K_C[1],K_S[2],K_d[3],K_C[4],K_p[5],K_I[6],K_j[7],K_f[8],*(union A955*)K_a[9],K_C[10],K_j[11],K_i[12]));}
/* 260:scfcJISjll<L>pL)<BC> */ void f260(void* addr) { write_V_a(13, (( union A101(*)(s,c,f,c,J,I,S,j,l,l,union A329,p,L))addr)(K_s[0],K_c[1],K_f[2],K_c[3],K_J[4],K_I[5],K_S[6],K_j[7],K_l[8],K_l[9],*(union A329*)K_a[10],K_p[11],K_L[12]), union A101);}
/* 261:sJfdpBS<Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc>BiBjC)v */ void f261(void* addr) { write_V_v(13, (( v(*)(s,J,f,d,p,B,S,union A958,B,i,B,j,C))addr)(K_s[0],K_J[1],K_f[2],K_d[3],K_p[4],K_B[5],K_S[6],*(union A958*)K_a[7],K_B[8],K_i[9],K_B[10],K_j[11],K_C[12]));}
/* 262:<jcspSIfIfCdJ>S{dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S}L)J */ void f262(void* addr) { write_V_J(4, (( J(*)(union A959,S,struct A962,L))addr)(*(union A959*)K_a[0],K_S[1],*(struct A962*)K_a[2],K_L[3]));}
/* 263:<flfpldsjdCI[2]f>pLLSdCId)i */ void f263(void* addr) { write_V_i(9, (( i(*)(union A963,p,L,L,S,d,C,I,d))addr)(*(union A963*)K_a[0],K_p[1],K_L[2],K_L[3],K_S[4],K_d[5],K_C[6],K_I[7],K_d[8]));}
/* 264:fBIBid{ICIdcLsl}sCi<jl>ls{Sl[2]SCijBIpJfC})<Sdd{LcIB}lICLdsj> */ void f264(void* addr) { write_V_a(14, (( union A965(*)(f,B,I,B,i,d,struct A966,s,C,i,union A967,l,s,struct A968))addr)(K_f[0],K_B[1],K_I[2],K_B[3],K_i[4],K_d[5],*(struct A966*)K_a[6],K_s[7],K_C[8],K_i[9],*(union A967*)K_a[10],K_l[11],K_s[12],*(struct A968*)K_a[13]), union A965);}
/* 265:Bl{IISI<C[5]LJISS>CC})j */ void f265(void* addr) { write_V_j(3, (( j(*)(B,l,struct A970))addr)(K_B[0],K_l[1],*(struct A970*)K_a[2]));}
/* 266:dds<I{pllI}SsLssfc[13]dpI>i{fsiiLIpsc[12]cIS})B */ void f266(void* addr) { write_V_B(6, (( B(*)(d,d,s,union A972,i,struct A973))addr)(K_d[0],K_d[1],K_s[2],*(union A972*)K_a[3],K_i[4],*(struct A973*)K_a[5]));}
/* 267:s<BLcdsCjSBSsi>sSLlf)S */ void f267(void* addr) { write_V_S(7, (( S(*)(s,union A974,s,S,L,l,f))addr)(K_s[0],*(union A974*)K_a[1],K_s[2],K_S[3],K_L[4],K_l[5],K_f[6]));}
/* 268:I)<CfjBSJdBpJJC[4]> */ void f268(void* addr) { write_V_a(1, (( union A975(*)(I))addr)(K_I[0]), union A975);}
/* 269:IB<iLdjj>IiilssCd)j */ void f269(void* addr) { write_V_j(11, (( j(*)(I,B,union A976,I,i,i,l,s,s,C,d))addr)(K_I[0],K_B[1],*(union A976*)K_a[2],K_I[3],K_i[4],K_i[5],K_l[6],K_s[7],K_s[8],K_C[9],K_d[10]));}
/* 270:jB<fCpjCJJdclSd>Jd<icB{SCpsi}<Jil>lsdIBiI>)l */ void f270(void* addr) { write_V_l(6, (( l(*)(j,B,union A977,J,d,union A980))addr)(K_j[0],K_B[1],*(union A977*)K_a[2],K_J[3],K_d[4],*(union A980*)K_a[5]));}
/* 271:JBCIIlflclcC){isipjdlsSjlS} */ void f271(void* addr) { write_V_a(12, (( struct A981(*)(J,B,C,I,I,l,f,l,c,l,c,C))addr)(K_J[0],K_B[1],K_C[2],K_I[3],K_I[4],K_l[5],K_f[6],K_l[7],K_c[8],K_l[9],K_c[10],K_C[11]), struct A981);}
/* 272:Jj{sjdci}SiJcddI)J */ void f272(void* addr) { write_V_J(10, (( J(*)(J,j,struct A982,S,i,J,c,d,d,I))addr)(K_J[0],K_j[1],*(struct A982*)K_a[2],K_S[3],K_i[4],K_J[5],K_c[6],K_d[7],K_d[8],K_I[9]));}
/* 273:<f{BpfscIcLdCLd}c>JCcJ{pfiiCdBj<pBpCspifsjlf>jfJ}icfLC)j */ void f273(void* addr) { write_V_j(11, (( j(*)(union A984,J,C,c,J,struct A986,i,c,f,L,C))addr)(*(union A984*)K_a[0],K_J[1],K_C[2],K_c[3],K_J[4],*(struct A986*)K_a[5],K_i[6],K_c[7],K_f[8],K_L[9],K_C[10]));}
/* 274:jSSl{llfffsddlcjf}){CcLCfpCj} */ void f274(void* addr) { write_V_a(5, (( struct A987(*)(j,S,S,l,struct A988))addr)(K_j[0],K_S[1],K_S[2],K_l[3],*(struct A988*)K_a[4]), struct A987);}
/* 275:Ip{SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps}pB)c */ void f275(void* addr) { write_V_c(5, (( c(*)(I,p,struct A993,p,B))addr)(K_I[0],K_p[1],*(struct A993*)K_a[2],K_p[3],K_B[4]));}
/* 276:<pIjp>f{i})L */ void f276(void* addr) { write_V_L(3, (( L(*)(union A994,f,struct A553))addr)(*(union A994*)K_a[0],K_f[1],*(struct A553*)K_a[2]));}
/* 277:clf<fscfSBc[8]>LLLcf){<{BJiidBSciJlI}fd>fLI[8]Sp{L<ijjCJl>i[7]pcS}cIBLC} */ void f277(void* addr) { write_V_a(9, (( struct A999(*)(c,l,f,union A1000,L,L,L,c,f))addr)(K_c[0],K_l[1],K_f[2],*(union A1000*)K_a[3],K_L[4],K_L[5],K_L[6],K_c[7],K_f[8]), struct A999);}
/* 278:B{JIJIcJcJ<fd[5]SJpiSILpBp>JLj}dC){lsI{Cd}LpSdI<Cc<SiffijcIiIs>Ls[3]cCjii{p}L>di} */ void f278(void* addr) { write_V_a(4, (( struct A1004(*)(B,struct A1006,d,C))addr)(K_B[0],*(struct A1006*)K_a[1],K_d[2],K_C[3]), struct A1004);}
/* 279:c<BBjL{ddCiclSBBCcs}sCjsCfL>J{BjfL}dC{Jjl}Sps)d */ void f279(void* addr) { write_V_d(10, (( d(*)(c,union A1008,J,struct A1009,d,C,struct A1010,S,p,s))addr)(K_c[0],*(union A1008*)K_a[1],K_J[2],*(struct A1009*)K_a[3],K_d[4],K_C[5],*(struct A1010*)K_a[6],K_S[7],K_p[8],K_s[9]));}
/* 280:B<SpidpfIjJidd>)C */ void f280(void* addr) { write_V_C(2, (( C(*)(B,union A1011))addr)(K_B[0],*(union A1011*)K_a[1]));}
/* 281:fLBCC<s>idsdB)J */ void f281(void* addr) { write_V_J(11, (( J(*)(f,L,B,C,C,union A713,i,d,s,d,B))addr)(K_f[0],K_L[1],K_B[2],K_C[3],K_C[4],*(union A713*)K_a[5],K_i[6],K_d[7],K_s[8],K_d[9],K_B[10]));}
/* 282:BLddCIdJ<Bjdljps>dfcL)S */ void f282(void* addr) { write_V_S(13, (( S(*)(B,L,d,d,C,I,d,J,union A1012,d,f,c,L))addr)(K_B[0],K_L[1],K_d[2],K_d[3],K_C[4],K_I[5],K_d[6],K_J[7],*(union A1012*)K_a[8],K_d[9],K_f[10],K_c[11],K_L[12]));}
/* 283:sIBf<i<sLdliddddJI>dLSffI>{sL{{JJ}dII{jLcjdCCcjpCS}c<JfdJIijddBCB>CBdLJ}Jd{LBcjJ}SSIjfJ})l */ void f283(void* addr) { write_V_l(6, (( l(*)(s,I,B,f,union A1014,struct A1020))addr)(K_s[0],K_I[1],K_B[2],K_f[3],*(union A1014*)K_a[4],*(struct A1020*)K_a[5]));}
/* 284:SB{lcfdCSiLIf[1]BJ}lsCcc<jpLLSIdsJpii>)p */ void f284(void* addr) { write_V_p(9, (( p(*)(S,B,struct A1021,l,s,C,c,c,union A1022))addr)(K_S[0],K_B[1],*(struct A1021*)K_a[2],K_l[3],K_s[4],K_C[5],K_c[6],K_c[7],*(union A1022*)K_a[8]));}
/* 285:sfJp<jC>lji)p */ void f285(void* addr) { write_V_p(8, (( p(*)(s,f,J,p,union A551,l,j,i))addr)(K_s[0],K_f[1],K_J[2],K_p[3],*(union A551*)K_a[4],K_l[5],K_j[6],K_i[7]));}
/* 286:{Lf}ii)c */ void f286(void* addr) { write_V_c(3, (( c(*)(struct A1023,i,i))addr)(*(struct A1023*)K_a[0],K_i[1],K_i[2]));}
/* 287:cCL{lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j}fBSJCp<CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI>d)j */ void f287(void* addr) { write_V_j(12, (( j(*)(c,C,L,struct A1027,f,B,S,J,C,p,union A1031,d))addr)(K_c[0],K_C[1],K_L[2],*(struct A1027*)K_a[3],K_f[4],K_B[5],K_S[6],K_J[7],K_C[8],K_p[9],*(union A1031*)K_a[10],K_d[11]));}
/* 288:lcSfl{jIScpBCCdIJ})i */ void f288(void* addr) { write_V_i(6, (( i(*)(l,c,S,f,l,struct A1032))addr)(K_l[0],K_c[1],K_S[2],K_f[3],K_l[4],*(struct A1032*)K_a[5]));}
/* 289:Sj)<CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is> */ void f289(void* addr) { write_V_a(2, (( union A1037(*)(S,j))addr)(K_S[0],K_j[1]), union A1037);}
/* 290:jLi){i{IislccIiIiIl}Cd<f[15]f>fIji} */ void f290(void* addr) { write_V_a(3, (( struct A1040(*)(j,L,i))addr)(K_j[0],K_L[1],K_i[2]), struct A1040);}
/* 291:BBsp<LlI[4]I<B>i<fplpclLIiJLd>IBSBf>{dSldj}CJi{ff<SBdddLBI>SIjJ<LpdfcLssLfs>jf<C>L}d)i */ void f291(void* addr) { write_V_i(11, (( i(*)(B,B,s,p,union A1042,struct A1043,C,J,i,struct A1046,d))addr)(K_B[0],K_B[1],K_s[2],K_p[3],*(union A1042*)K_a[4],*(struct A1043*)K_a[5],K_C[6],K_J[7],K_i[8],*(struct A1046*)K_a[9],K_d[10]));}
/* 292:c{lIpSjjplsifI}j<SslspCBcpScS>LIp)i */ void f292(void* addr) { write_V_i(7, (( i(*)(c,struct A1047,j,union A1048,L,I,p))addr)(K_c[0],*(struct A1047*)K_a[1],K_j[2],*(union A1048*)K_a[3],K_L[4],K_I[5],K_p[6]));}
/* 293:SCIilBJ<Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf><<pIBsBBJccSJB>CISjiJ>dBS)v */ void f293(void* addr) { write_V_v(12, (( v(*)(S,C,I,i,l,B,J,union A1051,union A1053,d,B,S))addr)(K_S[0],K_C[1],K_I[2],K_i[3],K_l[4],K_B[5],K_J[6],*(union A1051*)K_a[7],*(union A1053*)K_a[8],K_d[9],K_B[10],K_S[11]));}
/* 294:cC{SBcdfjJ[5]dcflp}LJJidfIijLl)p */ void f294(void* addr) { write_V_p(14, (( p(*)(c,C,struct A1054,L,J,J,i,d,f,I,i,j,L,l))addr)(K_c[0],K_C[1],*(struct A1054*)K_a[2],K_L[3],K_J[4],K_J[5],K_i[6],K_d[7],K_f[8],K_I[9],K_i[10],K_j[11],K_L[12],K_l[13]));}
/* 295:<BciIsp>pSdJfl)f */ void f295(void* addr) { write_V_f(7, (( f(*)(union A1055,p,S,d,J,f,l))addr)(*(union A1055*)K_a[0],K_p[1],K_S[2],K_d[3],K_J[4],K_f[5],K_l[6]));}
/* 296:sILcIS{sdscC[8]IIjCfp}jSdLdI)f */ void f296(void* addr) { write_V_f(13, (( f(*)(s,I,L,c,I,S,struct A1056,j,S,d,L,d,I))addr)(K_s[0],K_I[1],K_L[2],K_c[3],K_I[4],K_S[5],*(struct A1056*)K_a[6],K_j[7],K_S[8],K_d[9],K_L[10],K_d[11],K_I[12]));}
/* 297:ic)<sCBBIpJJCJc> */ void f297(void* addr) { write_V_a(2, (( union A1057(*)(i,c))addr)(K_i[0],K_c[1]), union A1057);}
/* 298:Si){icSiBljfcps} */ void f298(void* addr) { write_V_a(2, (( struct A1058(*)(S,i))addr)(K_S[0],K_i[1]), struct A1058);}
/* 299:J{iBj}{pJBSiJjcIcSp}cIIpl)j */ void f299(void* addr) { write_V_j(8, (( j(*)(J,struct A1059,struct A1060,c,I,I,p,l))addr)(K_J[0],*(struct A1059*)K_a[1],*(struct A1060*)K_a[2],K_c[3],K_I[4],K_I[5],K_p[6],K_l[7]));}
/* 300:Jp{S}c<lcddCJ>ifLjildd)I */ void f300(void* addr) { write_V_I(13, (( I(*)(J,p,struct A1061,c,union A1062,i,f,L,j,i,l,d,d))addr)(K_J[0],K_p[1],*(struct A1061*)K_a[2],K_c[3],*(union A1062*)K_a[4],K_i[5],K_f[6],K_L[7],K_j[8],K_i[9],K_l[10],K_d[11],K_d[12]));}
/* 301:<JBspd{IBi}BlBpf>C{IpC}CcfI)i */ void f301(void* addr) { write_V_i(7, (( i(*)(union A1064,C,struct A1065,C,c,f,I))addr)(*(union A1064*)K_a[0],K_C[1],*(struct A1065*)K_a[2],K_C[3],K_c[4],K_f[5],K_I[6]));}
/* 302:B<J<JiSflJpjsciS>>){j} */ void f302(void* addr) { write_V_a(2, (( struct A83(*)(B,union A1067))addr)(K_B[0],*(union A1067*)K_a[1]), struct A83);}
/* 303:IiCLI{fsBLCdspJs<IdcipJLcilpi[5]>s}dcjSC)L */ void f303(void* addr) { write_V_L(11, (( L(*)(I,i,C,L,I,struct A1069,d,c,j,S,C))addr)(K_I[0],K_i[1],K_C[2],K_L[3],K_I[4],*(struct A1069*)K_a[5],K_d[6],K_c[7],K_j[8],K_S[9],K_C[10]));}
/* 304:i{B<Jp>JcBJBpLC<c>i}CIsLIlSfi)S */ void f304(void* addr) { write_V_S(11, (( S(*)(i,struct A1071,C,I,s,L,I,l,S,f,i))addr)(K_i[0],*(struct A1071*)K_a[1],K_C[2],K_I[3],K_s[4],K_L[5],K_I[6],K_l[7],K_S[8],K_f[9],K_i[10]));}
/* 305:LSJpL<ljiScBj[16]fLdfi>fiJ<SBscfIC<<I>J>jllB>)i */ void f305(void* addr) { write_V_i(10, (( i(*)(L,S,J,p,L,union A1072,f,i,J,union A1074))addr)(K_L[0],K_S[1],K_J[2],K_p[3],K_L[4],*(union A1072*)K_a[5],K_f[6],K_i[7],K_J[8],*(union A1074*)K_a[9]));}
/* 306:fclC<<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B>lljfpc<LIfBLcc>)C */ void f306(void* addr) { write_V_C(12, (( C(*)(f,c,l,C,union A1078,l,l,j,f,p,c,union A1079))addr)(K_f[0],K_c[1],K_l[2],K_C[3],*(union A1078*)K_a[4],K_l[5],K_l[6],K_j[7],K_f[8],K_p[9],K_c[10],*(union A1079*)K_a[11]));}
/* 307:jI{iciLIC}flI)s */ void f307(void* addr) { write_V_s(6, (( s(*)(j,I,struct A1080,f,l,I))addr)(K_j[0],K_I[1],*(struct A1080*)K_a[2],K_f[3],K_l[4],K_I[5]));}
/* 308:Scj<fISIspfJl>JJCi)B */ void f308(void* addr) { write_V_B(8, (( B(*)(S,c,j,union A1081,J,J,C,i))addr)(K_S[0],K_c[1],K_j[2],*(union A1081*)K_a[3],K_J[4],K_J[5],K_C[6],K_i[7]));}
/* 309:j{js{fJJCcidJSjpC}JBS}LfIILjB)c */ void f309(void* addr) { write_V_c(9, (( c(*)(j,struct A1083,L,f,I,I,L,j,B))addr)(K_j[0],*(struct A1083*)K_a[1],K_L[2],K_f[3],K_I[4],K_I[5],K_L[6],K_j[7],K_B[8]));}
/* 310:Ljd<s<SBiCfCcLBSpc>cSBjB>)<<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<IfpCS>LLcfl}i> */ void f310(void* addr) { write_V_a(4, (( union A1090(*)(L,j,d,union A1092))addr)(K_L[0],K_j[1],K_d[2],*(union A1092*)K_a[3]), union A1090);}
/* 311:iL{LCpf<fJJpfpcIj>Cc<BpJdsJCIJfSc>disj}pspC)J */ void f311(void* addr) { write_V_J(7, (( J(*)(i,L,struct A1095,p,s,p,C))addr)(K_i[0],K_L[1],*(struct A1095*)K_a[2],K_p[3],K_s[4],K_p[5],K_C[6]));}
/* 312:jjB<IlJ>Lji)<LiI> */ void f312(void* addr) { write_V_a(7, (( union A1096(*)(j,j,B,union A1097,L,j,i))addr)(K_j[0],K_j[1],K_B[2],*(union A1097*)K_a[3],K_L[4],K_j[5],K_i[6]), union A1096);}
/* 313:sdfILc{SBCc}Ldl)L */ void f313(void* addr) { write_V_L(10, (( L(*)(s,d,f,I,L,c,struct A1098,L,d,l))addr)(K_s[0],K_d[1],K_f[2],K_I[3],K_L[4],K_c[5],*(struct A1098*)K_a[6],K_L[7],K_d[8],K_l[9]));}
/* 314:I{cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc}l{IfiilBJIB}cIj{cSSsjS[15]BJc}<{ccfdBdl[5]SCIBj}llpddjis<Jlcijcf[12]pLLlC>[10]fs>f<cC>{SlsdI}{SifC<IlC>J<ppfBIlI>{sIijdS}pLi[7]})I */ void f314(void* addr) { write_V_I(13, (( I(*)(I,struct A1102,l,struct A1103,c,I,j,struct A1104,union A1107,f,union A1108,struct A1109,struct A1113))addr)(K_I[0],*(struct A1102*)K_a[1],K_l[2],*(struct A1103*)K_a[3],K_c[4],K_I[5],K_j[6],*(struct A1104*)K_a[7],*(union A1107*)K_a[8],K_f[9],*(union A1108*)K_a[10],*(struct A1109*)K_a[11],*(struct A1113*)K_a[12]));}
/* 315:lsISf{<lScp<fiJSj>SLSC>JfICSL}cjiCiJSL)I */ void f315(void* addr) { write_V_I(14, (( I(*)(l,s,I,S,f,struct A1116,c,j,i,C,i,J,S,L))addr)(K_l[0],K_s[1],K_I[2],K_S[3],K_f[4],*(struct A1116*)K_a[5],K_c[6],K_j[7],K_i[8],K_C[9],K_i[10],K_J[11],K_S[12],K_L[13]));}
/* 316:Bdf{sjScLpcCLipf}CLCLBl)s */ void f316(void* addr) { write_V_s(10, (( s(*)(B,d,f,struct A1117,C,L,C,L,B,l))addr)(K_B[0],K_d[1],K_f[2],*(struct A1117*)K_a[3],K_C[4],K_L[5],K_C[6],K_L[7],K_B[8],K_l[9]));}
/* 317:Js<cJL{ICdidcl}pcLlJ{<fpJ>ICICpS}I<lfc<iliflIjjBcJp>Liji<CiJ[8]B>cC[10]S>>CiSslj)p */ void f317(void* addr) { write_V_p(9, (( p(*)(J,s,union A1124,C,i,S,s,l,j))addr)(K_J[0],K_s[1],*(union A1124*)K_a[2],K_C[3],K_i[4],K_S[5],K_s[6],K_l[7],K_j[8]));}
/* 318:ilIBCLiJ<fcLj<JCSdSSdssIjB>JdS{{IjdclcC}fC{d[10]LdIlSjIs}JLcffIic}Jl<<SCLCdiifLpcB>>>iJ)B */ void f318(void* addr) { write_V_B(11, (( B(*)(i,l,I,B,C,L,i,J,union A1131,i,J))addr)(K_i[0],K_l[1],K_I[2],K_B[3],K_C[4],K_L[5],K_i[6],K_J[7],*(union A1131*)K_a[8],K_i[9],K_J[10]));}
/* 319:sSSL{dL})C */ void f319(void* addr) { write_V_C(5, (( C(*)(s,S,S,L,struct A1132))addr)(K_s[0],K_S[1],K_S[2],K_L[3],*(struct A1132*)K_a[4]));}
/* 320:LIsCppiSi<ipIiIlBsi<{d}ipC{slcfdJLdiCcC}IBdJ{lcj}{SJIs}><S<fdILpSjpL>>J>C{LCcpIisfjSci}l<<dJcS[4]sfl{BBlCBcCfJSpf}JScd>IJdl>{CIcciLSc{SlIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>I}Sld})l */ void f320(void* addr) { write_V_l(15, (( l(*)(L,I,s,C,p,p,i,S,i,union A1140,C,struct A1141,l,union A1144,struct A1148))addr)(K_L[0],K_I[1],K_s[2],K_C[3],K_p[4],K_p[5],K_i[6],K_S[7],K_i[8],*(union A1140*)K_a[9],K_C[10],*(struct A1141*)K_a[11],K_l[12],*(union A1144*)K_a[13],*(struct A1148*)K_a[14]));}
/* 321:sillJ{LCfiLLpfJf}si{JLjJJIjJs}Ldip{Sj{sCdIcLiillId}d}LC)S */ void f321(void* addr) { write_V_S(16, (( S(*)(s,i,l,l,J,struct A1149,s,i,struct A1150,L,d,i,p,struct A1152,L,C))addr)(K_s[0],K_i[1],K_l[2],K_l[3],K_J[4],*(struct A1149*)K_a[5],K_s[6],K_i[7],*(struct A1150*)K_a[8],K_L[9],K_d[10],K_i[11],K_p[12],*(struct A1152*)K_a[13],K_L[14],K_C[15]));}
/* 322:<flscjdJpLL>B<{fcjSLfiiIi[3]sJ}si>pLJslpsjf)l */ void f322(void* addr) { write_V_l(12, (( l(*)(union A1153,B,union A1155,p,L,J,s,l,p,s,j,f))addr)(*(union A1153*)K_a[0],K_B[1],*(union A1155*)K_a[2],K_p[3],K_L[4],K_J[5],K_s[6],K_l[7],K_p[8],K_s[9],K_j[10],K_f[11]));}
/* 323:cd<LLS{BBISl<BidlICcCip>LSS}<sC>Id[12]><iBid<CJd>LBLSjjC>Sp{JjSSBSsi{fjBLjLiLfIf{dScSlsj}}cBp}lssllp)c */ void f323(void* addr) { write_V_c(13, (( c(*)(c,d,union A1159,union A1161,S,p,struct A1164,l,s,s,l,l,p))addr)(K_c[0],K_d[1],*(union A1159*)K_a[2],*(union A1161*)K_a[3],K_S[4],K_p[5],*(struct A1164*)K_a[6],K_l[7],K_s[8],K_s[9],K_l[10],K_l[11],K_p[12]));}
/* 324:jdJSfBdCip){fIfjBjpfCidf} */ void f324(void* addr) { write_V_a(10, (( struct A1165(*)(j,d,J,S,f,B,d,C,i,p))addr)(K_j[0],K_d[1],K_J[2],K_S[3],K_f[4],K_B[5],K_d[6],K_C[7],K_i[8],K_p[9]), struct A1165);}
/* 325:jSScflJ){<Sl>i} */ void f325(void* addr) { write_V_a(7, (( struct A1167(*)(j,S,S,c,f,l,J))addr)(K_j[0],K_S[1],K_S[2],K_c[3],K_f[4],K_l[5],K_J[6]), struct A1167);}
/* 326:<lLdj>ic)I */ void f326(void* addr) { write_V_I(3, (( I(*)(union A1168,i,c))addr)(*(union A1168*)K_a[0],K_i[1],K_c[2]));}
/* 327:lCLiSpp<LCiBlj>)J */ void f327(void* addr) { write_V_J(8, (( J(*)(l,C,L,i,S,p,p,union A1169))addr)(K_l[0],K_C[1],K_L[2],K_i[3],K_S[4],K_p[5],K_p[6],*(union A1169*)K_a[7]));}
/* 328:BiBLlJp)<ScJ> */ void f328(void* addr) { write_V_a(7, (( union A1170(*)(B,i,B,L,l,J,p))addr)(K_B[0],K_i[1],K_B[2],K_L[3],K_l[4],K_J[5],K_p[6]), union A1170);}
/* 329:<d><I>I)I */ void f329(void* addr) { write_V_I(3, (( I(*)(union A819,union A408,I))addr)(*(union A819*)K_a[0],*(union A408*)K_a[1],K_I[2]));}
/* 330:lLjifIf{ILBSBJ[15]{JccSBc[12]LJSfSs}BJpjs})<c> */ void f330(void* addr) { write_V_a(8, (( union A123(*)(l,L,j,i,f,I,f,struct A1172))addr)(K_l[0],K_L[1],K_j[2],K_i[3],K_f[4],K_I[5],K_f[6],*(struct A1172*)K_a[7]), union A123);}
/* 331:Il<jj<i<iLdilssflJLC>JcScCBpcl>BLc<CILpcsLliSf<fJL>>S<s>lIf>iil<lcf[8]lLf[6]LcJSis>dLl{jI}{fcssCCLdlfCl[9]})c */ void f331(void* addr) { write_V_c(12, (( c(*)(I,l,union A1177,i,i,l,union A1178,d,L,l,struct A1179,struct A1180))addr)(K_I[0],K_l[1],*(union A1177*)K_a[2],K_i[3],K_i[4],K_l[5],*(union A1178*)K_a[6],K_d[7],K_L[8],K_l[9],*(struct A1179*)K_a[10],*(struct A1180*)K_a[11]));}
/* 332:BSBSBd{i<lscdSJ>JIJplB<CcBBlJBLsJ[7]Bj>lpC}<iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f>iL<lfLiJj>S)p */ void f332(void* addr) { write_V_p(12, (( p(*)(B,S,B,S,B,d,struct A1183,union A1185,i,L,union A1186,S))addr)(K_B[0],K_S[1],K_B[2],K_S[3],K_B[4],K_d[5],*(struct A1183*)K_a[6],*(union A1185*)K_a[7],K_i[8],K_L[9],*(union A1186*)K_a[10],K_S[11]));}
/* 333:LIsJj<B<Cs[1]fSssJcBJJ>IjifBSCBpB>CpBsp{dSfpjdCdSidp})L */ void f333(void* addr) { write_V_L(12, (( L(*)(L,I,s,J,j,union A1188,C,p,B,s,p,struct A1189))addr)(K_L[0],K_I[1],K_s[2],K_J[3],K_j[4],*(union A1188*)K_a[5],K_C[6],K_p[7],K_B[8],K_s[9],K_p[10],*(struct A1189*)K_a[11]));}
/* 334:lSCp{I[3]sfcs}C)d */ void f334(void* addr) { write_V_d(6, (( d(*)(l,S,C,p,struct A1190,C))addr)(K_l[0],K_S[1],K_C[2],K_p[3],*(struct A1190*)K_a[4],K_C[5]));}
/* 335:Lj{<lSfSjsB>IdfJCifILsC}jCj)s */ void f335(void* addr) { write_V_s(6, (( s(*)(L,j,struct A1192,j,C,j))addr)(K_L[0],K_j[1],*(struct A1192*)K_a[2],K_j[3],K_C[4],K_j[5]));}
/* 336:C{{dICicfildfJL}LBfSLlid{pCSdlBsSd[13]SCS}})J */ void f336(void* addr) { write_V_J(2, (( J(*)(C,struct A1195))addr)(K_C[0],*(struct A1195*)K_a[1]));}
/* 337:pSfBJidJcLcI)<jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>> */ void f337(void* addr) { write_V_a(12, (( union A1201(*)(p,S,f,B,J,i,d,J,c,L,c,I))addr)(K_p[0],K_S[1],K_f[2],K_B[3],K_J[4],K_i[5],K_d[6],K_J[7],K_c[8],K_L[9],K_c[10],K_I[11]), union A1201);}
/* 338:dsLd<ifJ>disc<si>{{ldCSLjLsIdsp}SljBcjCdBj}s{jSCliJLc})J */ void f338(void* addr) { write_V_J(13, (( J(*)(d,s,L,d,union A1202,d,i,s,c,union A1203,struct A1205,s,struct A1206))addr)(K_d[0],K_s[1],K_L[2],K_d[3],*(union A1202*)K_a[4],K_d[5],K_i[6],K_s[7],K_c[8],*(union A1203*)K_a[9],*(struct A1205*)K_a[10],K_s[11],*(struct A1206*)K_a[12]));}
/* 339:Si{iCs}lSsC)i */ void f339(void* addr) { write_V_i(7, (( i(*)(S,i,struct A1207,l,S,s,C))addr)(K_S[0],K_i[1],*(struct A1207*)K_a[2],K_l[3],K_S[4],K_s[5],K_C[6]));}
/* 340:{fIpCcfscsSiI}B){pJBpBfsspd} */ void f340(void* addr) { write_V_a(2, (( struct A1208(*)(struct A1209,B))addr)(*(struct A1209*)K_a[0],K_B[1]), struct A1208);}
/* 341:){Bd<LcLJfdLliLBp>BpdjpLISp} */ void f341(void* addr) { write_V_a(0, (( struct A1211(*)())addr)(), struct A1211);}
/* 342:lC<{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}>{BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi}liBlB)c */ void f342(void* addr) { write_V_c(9, (( c(*)(l,C,union A1217,struct A1222,l,i,B,l,B))addr)(K_l[0],K_C[1],*(union A1217*)K_a[2],*(struct A1222*)K_a[3],K_l[4],K_i[5],K_B[6],K_l[7],K_B[8]));}
/* 343:CIfs<p>dsdsCCJ)B */ void f343(void* addr) { write_V_B(12, (( B(*)(C,I,f,s,union A56,d,s,d,s,C,C,J))addr)(K_C[0],K_I[1],K_f[2],K_s[3],*(union A56*)K_a[4],K_d[5],K_s[6],K_d[7],K_s[8],K_C[9],K_C[10],K_J[11]));}
/* 344:sidJLJ{jJlji}Ii)<C{li}fjJ> */ void f344(void* addr) { write_V_a(9, (( union A1223(*)(s,i,d,J,L,J,struct A1224,I,i))addr)(K_s[0],K_i[1],K_d[2],K_J[3],K_L[4],K_J[5],*(struct A1224*)K_a[6],K_I[7],K_i[8]), union A1223);}
/* 345:CLlIdSsflL){cSLfcSIBfjJf} */ void f345(void* addr) { write_V_a(10, (( struct A1225(*)(C,L,l,I,d,S,s,f,l,L))addr)(K_C[0],K_L[1],K_l[2],K_I[3],K_d[4],K_S[5],K_s[6],K_f[7],K_l[8],K_L[9]), struct A1225);}
/* 346:{LjsJcSI[4]lCCl}BLdd)<L<BCdcpf[7]Bj<jILjcI>IJB>pBBffIcsi[5]j> */ void f346(void* addr) { write_V_a(5, (( union A1228(*)(struct A1229,B,L,d,d))addr)(*(struct A1229*)K_a[0],K_B[1],K_L[2],K_d[3],K_d[4]), union A1228);}
/* 347:jICJL{BBdLppBjiSil}ijSCiCL)C */ void f347(void* addr) { write_V_C(13, (( C(*)(j,I,C,J,L,struct A1230,i,j,S,C,i,C,L))addr)(K_j[0],K_I[1],K_C[2],K_J[3],K_L[4],*(struct A1230*)K_a[5],K_i[6],K_j[7],K_S[8],K_C[9],K_i[10],K_C[11],K_L[12]));}
/* 348:LdcI{psi[12]ssIIIi})J */ void f348(void* addr) { write_V_J(5, (( J(*)(L,d,c,I,struct A1231))addr)(K_L[0],K_d[1],K_c[2],K_I[3],*(struct A1231*)K_a[4]));}
/* 349:{{flCisdlcBIps}<CdLCI[8]jfL>LjS[4]jfSILji}LlBjLlidf)s */ void f349(void* addr) { write_V_s(10, (( s(*)(struct A1234,L,l,B,j,L,l,i,d,f))addr)(*(struct A1234*)K_a[0],K_L[1],K_l[2],K_B[3],K_j[4],K_L[5],K_l[6],K_i[7],K_d[8],K_f[9]));}
/* 350:{sCCJfifBi{CLICc}lj}iciBC)J */ void f350(void* addr) { write_V_J(6, (( J(*)(struct A1236,i,c,i,B,C))addr)(*(struct A1236*)K_a[0],K_i[1],K_c[2],K_i[3],K_B[4],K_C[5]));}
/* 351:<s<jBBLcffSILdC[5]>s{sfdSCjjCjfsi}>jILLS<sLdcCdIifcjL>)<{fsiLjBBILpLl}BcBL{fJcsBfJdfics}L{lL}JlfS> */ void f351(void* addr) { write_V_a(7, (( union A1240(*)(union A1243,j,I,L,L,S,union A1244))addr)(*(union A1243*)K_a[0],K_j[1],K_I[2],K_L[3],K_L[4],K_S[5],*(union A1244*)K_a[6]), union A1240);}
/* 352:cfJsB<JCLc{IjcfjBIIssdl}dlSSlJS>)B */ void f352(void* addr) { write_V_B(6, (( B(*)(c,f,J,s,B,union A1246))addr)(K_c[0],K_f[1],K_J[2],K_s[3],K_B[4],*(union A1246*)K_a[5]));}
/* 353:ISdLpiffpS{fpBLij{fdJijijLI{iIcC}cL}[13]jCCSd}cI)C */ void f353(void* addr) { write_V_C(13, (( C(*)(I,S,d,L,p,i,f,f,p,S,struct A1249,c,I))addr)(K_I[0],K_S[1],K_d[2],K_L[3],K_p[4],K_i[5],K_f[6],K_f[7],K_p[8],K_S[9],*(struct A1249*)K_a[10],K_c[11],K_I[12]));}
/* 354:LfCld<CS{fBdjdCBIJdLB}dJdipJSip>c)<dS> */ void f354(void* addr) { write_V_a(7, (( union A569(*)(L,f,C,l,d,union A1251,c))addr)(K_L[0],K_f[1],K_C[2],K_l[3],K_d[4],*(union A1251*)K_a[5],K_c[6]), union A569);}
/* 355:JCfCSc{fIBIfsI<lLsJlJCcfJcp>CCiJ}cjCC)i */ void f355(void* addr) { write_V_i(11, (( i(*)(J,C,f,C,S,c,struct A1253,c,j,C,C))addr)(K_J[0],K_C[1],K_f[2],K_C[3],K_S[4],K_c[5],*(struct A1253*)K_a[6],K_c[7],K_j[8],K_C[9],K_C[10]));}
/* 356:lJsf{pcssisscllcp}fc{JIBidBBSf}<<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS><s>c<d<BBidSJlclJf>jfBddIpCdI>)l */ void f356(void* addr) { write_V_l(12, (( l(*)(l,J,s,f,struct A1254,f,c,struct A1255,union A1264,union A713,c,union A1266))addr)(K_l[0],K_J[1],K_s[2],K_f[3],*(struct A1254*)K_a[4],K_f[5],K_c[6],*(struct A1255*)K_a[7],*(union A1264*)K_a[8],*(union A713*)K_a[9],K_c[10],*(union A1266*)K_a[11]));}
/* 357:ilSBsB{LpBJdfL}CS<sCLlJCcLBLj>pS)c */ void f357(void* addr) { write_V_c(12, (( c(*)(i,l,S,B,s,B,struct A1267,C,S,union A1268,p,S))addr)(K_i[0],K_l[1],K_S[2],K_B[3],K_s[4],K_B[5],*(struct A1267*)K_a[6],K_C[7],K_S[8],*(union A1268*)K_a[9],K_p[10],K_S[11]));}
/* 358:ll<BCCsciillfii>SI<lSiSJjLIlc[1]li>sCfds{ISdsJc[8]SsijpC}piL)L */ void f358(void* addr) { write_V_L(15, (( L(*)(l,l,union A1269,S,I,union A1270,s,C,f,d,s,struct A1271,p,i,L))addr)(K_l[0],K_l[1],*(union A1269*)K_a[2],K_S[3],K_I[4],*(union A1270*)K_a[5],K_s[6],K_C[7],K_f[8],K_d[9],K_s[10],*(struct A1271*)K_a[11],K_p[12],K_i[13],K_L[14]));}
/* 359:di{LpjpiJLsIfj<IfBLCJslC>}i){LjiliLiscSSj} */ void f359(void* addr) { write_V_a(4, (( struct A1272(*)(d,i,struct A1274,i))addr)(K_d[0],K_i[1],*(struct A1274*)K_a[2],K_i[3]), struct A1272);}
/* 360:i<l{d[9]cdilcIli[15]sis}f[8]SfSILLSiS>IiJjlCpSsS)c */ void f360(void* addr) { write_V_c(12, (( c(*)(i,union A1276,I,i,J,j,l,C,p,S,s,S))addr)(K_i[0],*(union A1276*)K_a[1],K_I[2],K_i[3],K_J[4],K_j[5],K_l[6],K_C[7],K_p[8],K_S[9],K_s[10],K_S[11]));}
/* 361:diIdBI{fSJICjIJJLdi}ssd{lCdSsJs}s)c */ void f361(void* addr) { write_V_c(12, (( c(*)(d,i,I,d,B,I,struct A1277,s,s,d,struct A1278,s))addr)(K_d[0],K_i[1],K_I[2],K_d[3],K_B[4],K_I[5],*(struct A1277*)K_a[6],K_s[7],K_s[8],K_d[9],*(struct A1278*)K_a[10],K_s[11]));}
/* 362:C<p>JCcJ<s>l{sll{CLScspdjfcdd}sId}Bsc)f */ void f362(void* addr) { write_V_f(12, (( f(*)(C,union A56,J,C,c,J,union A713,l,struct A1280,B,s,c))addr)(K_C[0],*(union A56*)K_a[1],K_J[2],K_C[3],K_c[4],K_J[5],*(union A713*)K_a[6],K_l[7],*(struct A1280*)K_a[8],K_B[9],K_s[10],K_c[11]));}
/* 363:<LsLsjIlLJ>JBBjsSlfICf)f */ void f363(void* addr) { write_V_f(12, (( f(*)(union A1281,J,B,B,j,s,S,l,f,I,C,f))addr)(*(union A1281*)K_a[0],K_J[1],K_B[2],K_B[3],K_j[4],K_s[5],K_S[6],K_l[7],K_f[8],K_I[9],K_C[10],K_f[11]));}
/* 364:BBIj{BJ}jL{SpIiSsIsJpsJ}i)B */ void f364(void* addr) { write_V_B(9, (( B(*)(B,B,I,j,struct A1282,j,L,struct A1283,i))addr)(K_B[0],K_B[1],K_I[2],K_j[3],*(struct A1282*)K_a[4],K_j[5],K_L[6],*(struct A1283*)K_a[7],K_i[8]));}
/* 365:<J[5]BfLiBjJjdIc>)I */ void f365(void* addr) { write_V_I(1, (( I(*)(union A1284))addr)(*(union A1284*)K_a[0]));}
/* 366:s<fs>ldIdLc{d<jdd{IBLLd[13]JCip}dccJscCf>ipij[7]f{S}LLss}df<ljp><CCBBSpsL{ifJIllsJflLL}Jjp>)C */ void f366(void* addr) { write_V_C(13, (( C(*)(s,union A1285,l,d,I,d,L,c,struct A1288,d,f,union A1289,union A1291))addr)(K_s[0],*(union A1285*)K_a[1],K_l[2],K_d[3],K_I[4],K_d[5],K_L[6],K_c[7],*(struct A1288*)K_a[8],K_d[9],K_f[10],*(union A1289*)K_a[11],*(union A1291*)K_a[12]));}
/* 367:<di[15]sBpJiiIJ><d{ILLC}CBdJCjipfs>{sf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC}cjiicjss)J */ void f367(void* addr) { write_V_J(11, (( J(*)(union A1292,union A1294,struct A1298,c,j,i,i,c,j,s,s))addr)(*(union A1292*)K_a[0],*(union A1294*)K_a[1],*(struct A1298*)K_a[2],K_c[3],K_j[4],K_i[5],K_i[6],K_c[7],K_j[8],K_s[9],K_s[10]));}
/* 368:dJIspdpsICpsS{cp{sjBiLljIddpI}isBi}B)J */ void f368(void* addr) { write_V_J(15, (( J(*)(d,J,I,s,p,d,p,s,I,C,p,s,S,struct A1300,B))addr)(K_d[0],K_J[1],K_I[2],K_s[3],K_p[4],K_d[5],K_p[6],K_s[7],K_I[8],K_C[9],K_p[10],K_s[11],K_S[12],*(struct A1300*)K_a[13],K_B[14]));}
/* 369:ccBjJpIcJ<C<SLBpjcB[5]JifiB>{S}lCB{pCfsisJlcdBB}dcLCi>)s */ void f369(void* addr) { write_V_s(10, (( s(*)(c,c,B,j,J,p,I,c,J,union A1303))addr)(K_c[0],K_c[1],K_B[2],K_j[3],K_J[4],K_p[5],K_I[6],K_c[7],K_J[8],*(union A1303*)K_a[9]));}
/* 370:scji<f>f)p */ void f370(void* addr) { write_V_p(6, (( p(*)(s,c,j,i,union A318,f))addr)(K_s[0],K_c[1],K_j[2],K_i[3],*(union A318*)K_a[4],K_f[5]));}
/* 371:fspd{CClcs[12]{pJffdcSCjjjj}Cdfs<JSCdlBiSJffB>L}cSp{iLJicdIISI<c>C})L */ void f371(void* addr) { write_V_L(9, (( L(*)(f,s,p,d,struct A1306,c,S,p,struct A1307))addr)(K_f[0],K_s[1],K_p[2],K_d[3],*(struct A1306*)K_a[4],K_c[5],K_S[6],K_p[7],*(struct A1307*)K_a[8]));}
/* 372:<pj[3]dc<BlIJdpBsfiJC>lB{JlciLSfs[10]plfI}{ldcB}fBJ>cJf)s */ void f372(void* addr) { write_V_s(4, (( s(*)(union A1311,c,J,f))addr)(*(union A1311*)K_a[0],K_c[1],K_J[2],K_f[3]));}
/* 373:jBBl{dfJsJIBC<CSc>[7]}pcjcS)f */ void f373(void* addr) { write_V_f(10, (( f(*)(j,B,B,l,struct A1313,p,c,j,c,S))addr)(K_j[0],K_B[1],K_B[2],K_l[3],*(struct A1313*)K_a[4],K_p[5],K_c[6],K_j[7],K_c[8],K_S[9]));}
/* 374:<JLfBspJIfpcB[12]>ISfIff)v */ void f374(void* addr) { write_V_v(7, (( v(*)(union A1314,I,S,f,I,f,f))addr)(*(union A1314*)K_a[0],K_I[1],K_S[2],K_f[3],K_I[4],K_f[5],K_f[6]));}
/* 375:js)<SJLIBfBS[9]iSjs> */ void f375(void* addr) { write_V_a(2, (( union A1315(*)(j,s))addr)(K_j[0],K_s[1]), union A1315);}
/* 376:{IClCIssIpicL}ij{cdilSidJL}sBp{ICdSlpfIpIcj}dS)f */ void f376(void* addr) { write_V_f(10, (( f(*)(struct A1316,i,j,struct A1317,s,B,p,struct A1318,d,S))addr)(*(struct A1316*)K_a[0],K_i[1],K_j[2],*(struct A1317*)K_a[3],K_s[4],K_B[5],K_p[6],*(struct A1318*)K_a[7],K_d[8],K_S[9]));}
/* 377:CBcSpBiBBcL{{spi[2]jsjdjipBi}dBCpp{JcJ}Sf<dpsisILdiiif>pI}lJ)B */ void f377(void* addr) { write_V_B(14, (( B(*)(C,B,c,S,p,B,i,B,B,c,L,struct A1322,l,J))addr)(K_C[0],K_B[1],K_c[2],K_S[3],K_p[4],K_B[5],K_i[6],K_B[7],K_B[8],K_c[9],K_L[10],*(struct A1322*)K_a[11],K_l[12],K_J[13]));}
/* 378:l{jlsS[10]dccicIjC}<ICJpL{C}L>siff)S */ void f378(void* addr) { write_V_S(7, (( S(*)(l,struct A1323,union A1324,s,i,f,f))addr)(K_l[0],*(struct A1323*)K_a[1],*(union A1324*)K_a[2],K_s[3],K_i[4],K_f[5],K_f[6]));}
/* 379:Jsfjif<CJpfSlSs[13]f<df[16]BfipJILpfs>>L)f */ void f379(void* addr) { write_V_f(8, (( f(*)(J,s,f,j,i,f,union A1326,L))addr)(K_J[0],K_s[1],K_f[2],K_j[3],K_i[4],K_f[5],*(union A1326*)K_a[6],K_L[7]));}
/* 380:pCiI){f} */ void f380(void* addr) { write_V_a(4, (( struct A864(*)(p,C,i,I))addr)(K_p[0],K_C[1],K_i[2],K_I[3]), struct A864);}
/* 381:Cs{fI<BSiSlffff>C{i}fBl<jLdBcBjIfijl>}LBBjfLl<{BfSpJi}<csSjJJ>jdCCCiCcc{ij{IJiBjJcjlIlC}}>iB)B */ void f381(void* addr) { write_V_B(13, (( B(*)(C,s,struct A1329,L,B,B,j,f,L,l,union A1334,i,B))addr)(K_C[0],K_s[1],*(struct A1329*)K_a[2],K_L[3],K_B[4],K_B[5],K_j[6],K_f[7],K_L[8],K_l[9],*(union A1334*)K_a[10],K_i[11],K_B[12]));}
/* 382:{dlCjISs}cLSBBIIC)C */ void f382(void* addr) { write_V_C(9, (( C(*)(struct A1335,c,L,S,B,B,I,I,C))addr)(*(struct A1335*)K_a[0],K_c[1],K_L[2],K_S[3],K_B[4],K_B[5],K_I[6],K_I[7],K_C[8]));}
/* 383:JSBIJLid<c<s>J<fjLlsSBlL>iCl<pcCl[16]jf>c{jfBpdJlsCpsj}i{ldl}>c)c */ void f383(void* addr) { write_V_c(10, (( c(*)(J,S,B,I,J,L,i,d,union A1340,c))addr)(K_J[0],K_S[1],K_B[2],K_I[3],K_J[4],K_L[5],K_i[6],K_d[7],*(union A1340*)K_a[8],K_c[9]));}
/* 384:p{<BSiBCpfs[6]BS[3]p>{C[9]lsldjI<CcfSjfLC>LSJI}ssIIjBIIpB}dpsjfc)i */ void f384(void* addr) { write_V_i(8, (( i(*)(p,struct A1344,d,p,s,j,f,c))addr)(K_p[0],*(struct A1344*)K_a[1],K_d[2],K_p[3],K_s[4],K_j[5],K_f[6],K_c[7]));}
/* 385:J<Jj[15]<sslLjJ>IppCL{dB}BI>iIcjSSBiLsSl)J */ void f385(void* addr) { write_V_J(14, (( J(*)(J,union A1347,i,I,c,j,S,S,B,i,L,s,S,l))addr)(K_J[0],*(union A1347*)K_a[1],K_i[2],K_I[3],K_c[4],K_j[5],K_S[6],K_S[7],K_B[8],K_i[9],K_L[10],K_s[11],K_S[12],K_l[13]));}
/* 386:<{sj[15]ljIiL}B{CCIld[3]fppCCJf}I<CjsiSSdJB[15]Bdl>pjLJpCf>{p<pjLiscCdLIjc>SSjspsll{CCLJlc}l}ddI<pf>c)l */ void f386(void* addr) { write_V_l(7, (( l(*)(union A1351,struct A1354,d,d,I,union A1355,c))addr)(*(union A1351*)K_a[0],*(struct A1354*)K_a[1],K_d[2],K_d[3],K_I[4],*(union A1355*)K_a[5],K_c[6]));}
/* 387:<LCsIfdClLpSC>Sfp{sBCBj}scjcl{iidcJs{pjsLLB<JSS>f{dlcCBpIpCBjS}sBB}SSflc}Jjj)f */ void f387(void* addr) { write_V_f(14, (( f(*)(union A1356,S,f,p,struct A1357,s,c,j,c,l,struct A1361,J,j,j))addr)(*(union A1356*)K_a[0],K_S[1],K_f[2],K_p[3],*(struct A1357*)K_a[4],K_s[5],K_c[6],K_j[7],K_c[8],K_l[9],*(struct A1361*)K_a[10],K_J[11],K_j[12],K_j[13]));}
/* 388:JfiBlpi{cidjii}L<ipCpsjldlsld>{cIScsSdI[13]dL{jSjBdJdBlcBC}L}{s[11]jI}cp)<j<{BiSdSsISsipC}SS[12]Ccp<IfdLiId>[2]BI{SfidCscIcpiS}sf>llJJi> */ void f388(void* addr) { write_V_a(14, (( union A1366(*)(J,f,i,B,l,p,i,struct A1367,L,union A1368,struct A1370,struct A1371,c,p))addr)(K_J[0],K_f[1],K_i[2],K_B[3],K_l[4],K_p[5],K_i[6],*(struct A1367*)K_a[7],K_L[8],*(union A1368*)K_a[9],*(struct A1370*)K_a[10],*(struct A1371*)K_a[11],K_c[12],K_p[13]), union A1366);}
/* 389:ldspfJ<lsjJcdflJdLl>jc){cC<IpiSc[10]SJp[12]dJjs>Ljsl{ssliICCSCicS}{ILjSi[6]fdJCCJ}p<ll>S} */ void f389(void* addr) { write_V_a(9, (( struct A1376(*)(l,d,s,p,f,J,union A1377,j,c))addr)(K_l[0],K_d[1],K_s[2],K_p[3],K_f[4],K_J[5],*(union A1377*)K_a[6],K_j[7],K_c[8]), struct A1376);}
/* 390:{l{sBlCssLslijI}{Lpj}jpisSs})S */ void f390(void* addr) { write_V_S(1, (( S(*)(struct A1380))addr)(*(struct A1380*)K_a[0]));}
/* 391:IsC{I}I)c */ void f391(void* addr) { write_V_c(5, (( c(*)(I,s,C,struct A436,I))addr)(K_I[0],K_s[1],K_C[2],*(struct A436*)K_a[3],K_I[4]));}
/* 392:JfBIfppsp<LJsscLS>J)<j> */ void f392(void* addr) { write_V_a(11, (( union A19(*)(J,f,B,I,f,p,p,s,p,union A1381,J))addr)(K_J[0],K_f[1],K_B[2],K_I[3],K_f[4],K_p[5],K_p[6],K_s[7],K_p[8],*(union A1381*)K_a[9],K_J[10]), union A19);}
/* 393:fll{dS}iJsldiCslpI)l */ void f393(void* addr) { write_V_l(15, (( l(*)(f,l,l,struct A1382,i,J,s,l,d,i,C,s,l,p,I))addr)(K_f[0],K_l[1],K_l[2],*(struct A1382*)K_a[3],K_i[4],K_J[5],K_s[6],K_l[7],K_d[8],K_i[9],K_C[10],K_s[11],K_l[12],K_p[13],K_I[14]));}
/* 394:S)<CsJ> */ void f394(void* addr) { write_V_a(1, (( union A1383(*)(S))addr)(K_S[0]), union A1383);}
/* 395:d<<lISfL<cBiiCss>pCCsLS>JC{lCpLBf[13]lclsLJ}BjSldIfB>Ifp<SllBSsipssd<I{ipSJJBSiSifJ}IpcJlplps<CdisJsBBsC>>>iI{{ddSJsCLslBIS}<IJCffs>}L)l */ void f395(void* addr) { write_V_l(10, (( l(*)(d,union A1387,I,f,p,union A1391,i,I,struct A1394,L))addr)(K_d[0],*(union A1387*)K_a[1],K_I[2],K_f[3],K_p[4],*(union A1391*)K_a[5],K_i[6],K_I[7],*(struct A1394*)K_a[8],K_L[9]));}
/* 396:IBf{SJjSCSIdBiI}<C{iJppjLl}CcjLS>SJ<I>dLB)i */ void f396(void* addr) { write_V_i(11, (( i(*)(I,B,f,struct A1395,union A1397,S,J,union A408,d,L,B))addr)(K_I[0],K_B[1],K_f[2],*(struct A1395*)K_a[3],*(union A1397*)K_a[4],K_S[5],K_J[6],*(union A408*)K_a[7],K_d[8],K_L[9],K_B[10]));}
/* 397:dcj{IcIiBCBd[9]Sj}J{pJJLs}sdJIBl)C */ void f397(void* addr) { write_V_C(12, (( C(*)(d,c,j,struct A1398,J,struct A1399,s,d,J,I,B,l))addr)(K_d[0],K_c[1],K_j[2],*(struct A1398*)K_a[3],K_J[4],*(struct A1399*)K_a[5],K_s[6],K_d[7],K_J[8],K_I[9],K_B[10],K_l[11]));}
/* 398:cil{<CJd{BLBcCJSS}silSi<jIIjdicpCcLl>JL>cill<I{SpllSpJpSis}BIsIjd<clLcsiljLBjL>ssC>lI<LB{sJciJpjssjCi}<CCB>{cIiJsjJsCBjl}Jcd{sclLBdpLISCp}dIS>Bp[3]C}sB{lILj<ICiCiidj{CdJ[6]JCfISSJLc}<spSSJLiJSCpC>I[4]S>BlfssBS}cJSjdJI)L */ void f398(void* addr) { write_V_L(14, (( L(*)(c,i,l,struct A1411,s,B,struct A1415,c,J,S,j,d,J,I))addr)(K_c[0],K_i[1],K_l[2],*(struct A1411*)K_a[3],K_s[4],K_B[5],*(struct A1415*)K_a[6],K_c[7],K_J[8],K_S[9],K_j[10],K_d[11],K_J[12],K_I[13]));}
/* 399:f{ssIBicliddBc}){dfIIp} */ void f399(void* addr) { write_V_a(2, (( struct A1416(*)(f,struct A1417))addr)(K_f[0],*(struct A1417*)K_a[1]), struct A1416);}
funptr G_funtab[] = {
	(funptr)&f0,
	(funptr)&f1,
	(funptr)&f2,
	(funptr)&f3,
	(funptr)&f4,
	(funptr)&f5,
	(funptr)&f6,
	(funptr)&f7,
	(funptr)&f8,
	(funptr)&f9,
	(funptr)&f10,
	(funptr)&f11,
	(funptr)&f12,
	(funptr)&f13,
	(funptr)&f14,
	(funptr)&f15,
	(funptr)&f16,
	(funptr)&f17,
	(funptr)&f18,
	(funptr)&f19,
	(funptr)&f20,
	(funptr)&f21,
	(funptr)&f22,
	(funptr)&f23,
	(funptr)&f24,
	(funptr)&f25,
	(funptr)&f26,
	(funptr)&f27,
	(funptr)&f28,
	(funptr)&f29,
	(funptr)&f30,
	(funptr)&f31,
	(funptr)&f32,
	(funptr)&f33,
	(funptr)&f34,
	(funptr)&f35,
	(funptr)&f36,
	(funptr)&f37,
	(funptr)&f38,
	(funptr)&f39,
	(funptr)&f40,
	(funptr)&f41,
	(funptr)&f42,
	(funptr)&f43,
	(funptr)&f44,
	(funptr)&f45,
	(funptr)&f46,
	(funptr)&f47,
	(funptr)&f48,
	(funptr)&f49,
	(funptr)&f50,
	(funptr)&f51,
	(funptr)&f52,
	(funptr)&f53,
	(funptr)&f54,
	(funptr)&f55,
	(funptr)&f56,
	(funptr)&f57,
	(funptr)&f58,
	(funptr)&f59,
	(funptr)&f60,
	(funptr)&f61,
	(funptr)&f62,
	(funptr)&f63,
	(funptr)&f64,
	(funptr)&f65,
	(funptr)&f66,
	(funptr)&f67,
	(funptr)&f68,
	(funptr)&f69,
	(funptr)&f70,
	(funptr)&f71,
	(funptr)&f72,
	(funptr)&f73,
	(funptr)&f74,
	(funptr)&f75,
	(funptr)&f76,
	(funptr)&f77,
	(funptr)&f78,
	(funptr)&f79,
	(funptr)&f80,
	(funptr)&f81,
	(funptr)&f82,
	(funptr)&f83,
	(funptr)&f84,
	(funptr)&f85,
	(funptr)&f86,
	(funptr)&f87,
	(funptr)&f88,
	(funptr)&f89,
	(funptr)&f90,
	(funptr)&f91,
	(funptr)&f92,
	(funptr)&f93,
	(funptr)&f94,
	(funptr)&f95,
	(funptr)&f96,
	(funptr)&f97,
	(funptr)&f98,
	(funptr)&f99,
	(funptr)&f100,
	(funptr)&f101,
	(funptr)&f102,
	(funptr)&f103,
	(funptr)&f104,
	(funptr)&f105,
	(funptr)&f106,
	(funptr)&f107,
	(funptr)&f108,
	(funptr)&f109,
	(funptr)&f110,
	(funptr)&f111,
	(funptr)&f112,
	(funptr)&f113,
	(funptr)&f114,
	(funptr)&f115,
	(funptr)&f116,
	(funptr)&f117,
	(funptr)&f118,
	(funptr)&f119,
	(funptr)&f120,
	(funptr)&f121,
	(funptr)&f122,
	(funptr)&f123,
	(funptr)&f124,
	(funptr)&f125,
	(funptr)&f126,
	(funptr)&f127,
	(funptr)&f128,
	(funptr)&f129,
	(funptr)&f130,
	(funptr)&f131,
	(funptr)&f132,
	(funptr)&f133,
	(funptr)&f134,
	(funptr)&f135,
	(funptr)&f136,
	(funptr)&f137,
	(funptr)&f138,
	(funptr)&f139,
	(funptr)&f140,
	(funptr)&f141,
	(funptr)&f142,
	(funptr)&f143,
	(funptr)&f144,
	(funptr)&f145,
	(funptr)&f146,
	(funptr)&f147,
	(funptr)&f148,
	(funptr)&f149,
	(funptr)&f150,
	(funptr)&f151,
	(funptr)&f152,
	(funptr)&f153,
	(funptr)&f154,
	(funptr)&f155,
	(funptr)&f156,
	(funptr)&f157,
	(funptr)&f158,
	(funptr)&f159,
	(funptr)&f160,
	(funptr)&f161,
	(funptr)&f162,
	(funptr)&f163,
	(funptr)&f164,
	(funptr)&f165,
	(funptr)&f166,
	(funptr)&f167,
	(funptr)&f168,
	(funptr)&f169,
	(funptr)&f170,
	(funptr)&f171,
	(funptr)&f172,
	(funptr)&f173,
	(funptr)&f174,
	(funptr)&f175,
	(funptr)&f176,
	(funptr)&f177,
	(funptr)&f178,
	(funptr)&f179,
	(funptr)&f180,
	(funptr)&f181,
	(funptr)&f182,
	(funptr)&f183,
	(funptr)&f184,
	(funptr)&f185,
	(funptr)&f186,
	(funptr)&f187,
	(funptr)&f188,
	(funptr)&f189,
	(funptr)&f190,
	(funptr)&f191,
	(funptr)&f192,
	(funptr)&f193,
	(funptr)&f194,
	(funptr)&f195,
	(funptr)&f196,
	(funptr)&f197,
	(funptr)&f198,
	(funptr)&f199,
	(funptr)&f200,
	(funptr)&f201,
	(funptr)&f202,
	(funptr)&f203,
	(funptr)&f204,
	(funptr)&f205,
	(funptr)&f206,
	(funptr)&f207,
	(funptr)&f208,
	(funptr)&f209,
	(funptr)&f210,
	(funptr)&f211,
	(funptr)&f212,
	(funptr)&f213,
	(funptr)&f214,
	(funptr)&f215,
	(funptr)&f216,
	(funptr)&f217,
	(funptr)&f218,
	(funptr)&f219,
	(funptr)&f220,
	(funptr)&f221,
	(funptr)&f222,
	(funptr)&f223,
	(funptr)&f224,
	(funptr)&f225,
	(funptr)&f226,
	(funptr)&f227,
	(funptr)&f228,
	(funptr)&f229,
	(funptr)&f230,
	(funptr)&f231,
	(funptr)&f232,
	(funptr)&f233,
	(funptr)&f234,
	(funptr)&f235,
	(funptr)&f236,
	(funptr)&f237,
	(funptr)&f238,
	(funptr)&f239,
	(funptr)&f240,
	(funptr)&f241,
	(funptr)&f242,
	(funptr)&f243,
	(funptr)&f244,
	(funptr)&f245,
	(funptr)&f246,
	(funptr)&f247,
	(funptr)&f248,
	(funptr)&f249,
	(funptr)&f250,
	(funptr)&f251,
	(funptr)&f252,
	(funptr)&f253,
	(funptr)&f254,
	(funptr)&f255,
	(funptr)&f256,
	(funptr)&f257,
	(funptr)&f258,
	(funptr)&f259,
	(funptr)&f260,
	(funptr)&f261,
	(funptr)&f262,
	(funptr)&f263,
	(funptr)&f264,
	(funptr)&f265,
	(funptr)&f266,
	(funptr)&f267,
	(funptr)&f268,
	(funptr)&f269,
	(funptr)&f270,
	(funptr)&f271,
	(funptr)&f272,
	(funptr)&f273,
	(funptr)&f274,
	(funptr)&f275,
	(funptr)&f276,
	(funptr)&f277,
	(funptr)&f278,
	(funptr)&f279,
	(funptr)&f280,
	(funptr)&f281,
	(funptr)&f282,
	(funptr)&f283,
	(funptr)&f284,
	(funptr)&f285,
	(funptr)&f286,
	(funptr)&f287,
	(funptr)&f288,
	(funptr)&f289,
	(funptr)&f290,
	(funptr)&f291,
	(funptr)&f292,
	(funptr)&f293,
	(funptr)&f294,
	(funptr)&f295,
	(funptr)&f296,
	(funptr)&f297,
	(funptr)&f298,
	(funptr)&f299,
	(funptr)&f300,
	(funptr)&f301,
	(funptr)&f302,
	(funptr)&f303,
	(funptr)&f304,
	(funptr)&f305,
	(funptr)&f306,
	(funptr)&f307,
	(funptr)&f308,
	(funptr)&f309,
	(funptr)&f310,
	(funptr)&f311,
	(funptr)&f312,
	(funptr)&f313,
	(funptr)&f314,
	(funptr)&f315,
	(funptr)&f316,
	(funptr)&f317,
	(funptr)&f318,
	(funptr)&f319,
	(funptr)&f320,
	(funptr)&f321,
	(funptr)&f322,
	(funptr)&f323,
	(funptr)&f324,
	(funptr)&f325,
	(funptr)&f326,
	(funptr)&f327,
	(funptr)&f328,
	(funptr)&f329,
	(funptr)&f330,
	(funptr)&f331,
	(funptr)&f332,
	(funptr)&f333,
	(funptr)&f334,
	(funptr)&f335,
	(funptr)&f336,
	(funptr)&f337,
	(funptr)&f338,
	(funptr)&f339,
	(funptr)&f340,
	(funptr)&f341,
	(funptr)&f342,
	(funptr)&f343,
	(funptr)&f344,
	(funptr)&f345,
	(funptr)&f346,
	(funptr)&f347,
	(funptr)&f348,
	(funptr)&f349,
	(funptr)&f350,
	(funptr)&f351,
	(funptr)&f352,
	(funptr)&f353,
	(funptr)&f354,
	(funptr)&f355,
	(funptr)&f356,
	(funptr)&f357,
	(funptr)&f358,
	(funptr)&f359,
	(funptr)&f360,
	(funptr)&f361,
	(funptr)&f362,
	(funptr)&f363,
	(funptr)&f364,
	(funptr)&f365,
	(funptr)&f366,
	(funptr)&f367,
	(funptr)&f368,
	(funptr)&f369,
	(funptr)&f370,
	(funptr)&f371,
	(funptr)&f372,
	(funptr)&f373,
	(funptr)&f374,
	(funptr)&f375,
	(funptr)&f376,
	(funptr)&f377,
	(funptr)&f378,
	(funptr)&f379,
	(funptr)&f380,
	(funptr)&f381,
	(funptr)&f382,
	(funptr)&f383,
	(funptr)&f384,
	(funptr)&f385,
	(funptr)&f386,
	(funptr)&f387,
	(funptr)&f388,
	(funptr)&f389,
	(funptr)&f390,
	(funptr)&f391,
	(funptr)&f392,
	(funptr)&f393,
	(funptr)&f394,
	(funptr)&f395,
	(funptr)&f396,
	(funptr)&f397,
	(funptr)&f398,
	(funptr)&f399,
};
const char * G_sigtab[] = {
	"{iCIlsBCSBisd}lIIJ)d",
	"i{lcBcpBLl}<BpScJBSjJsil>lpCpcI)v",
	"BsCIJdJidCB<lI>)I",
	"BClCcli<BSJJ[6]BCpdfffC>sliiLd)<lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI>",
	"ffIcL<SpSJJpjcfs>sJB)p",
	"dLBLpipS)<IB>",
	"IiB<dJpcddCdClCj>lflJS){ILLl}",
	"f<ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{dLl}c<i<CSicIjs>fLL[9]>Cli>)f",
	"CL<j>ppj<{sdiljLsCcBl[10]j}sid{sfCs{jiJp}c<IBLpijIIpJIB>JL<ClLpBsSIBBLB>CL}[7]p>)c",
	"sCspl<ilj><LispcdpldB><J>i<LLss><pl{j[7]ji<sfBdBscSlCdJ>J}{d{BiCcdfCpLCCC}Lc}Spp[10]LSCcI>)I",
	"<dd<sLciSBjljpIl><SC[5]IJjpLcjfdf>diILLlSf>Il<dcIpijfCCjlI>BJ<ldd>Sl)v",
	"lS<pCI[5]JpdBIcpCs>SJpsc)j",
	"BJIsl<Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c>p<ILi[15]ljj>)d",
	"BCj<flpl{JflcfdjdjBSJ}B[4]JpSids>ifpJ)i",
	"dCs<clCipl>{fBILiCJLsCL}ljp)J",
	"BpB<ciIpCSJI{JpIdlcipIIJc}J>IpJL)<p>",
	"{Ljsi{iljL}flcJ<ljIfBiS[3]cCpCp>pl}iCJ)d",
	"BddCIpljf)<cil<S>JLBiS<ljC>CI>",
	"pjL<fllBJLiILjcl>j<lJ{LlSd<ifdIij>CscISS<LLBljdfljCd>}LCsijIlIL>icfIp)C",
	"LjdfICJ{dSS[16]Cj[2]piJf[10]Bsf})<sfSilfLs>",
	"cCI<J>Sssdsf)j",
	"<cJcJJ{psflfjLIdppd}ClJLiL>fpIc)v",
	"cldj<fc>d)B",
	"Ic{lc}dd<{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL>{j}d<jsjssdIfBlpl>Sflci)J",
	"l<LiLISc>LsJ)j",
	"{BfcjcLClBIId}cJjcI)L",
	"SpIspjCC{fjcI{fLiBd{ScCciffp}}pJ<lpS{ssISpjLSjCic}ICp{LplcfJSSjpJl}BSJI>Il<dl<jSBISfdidCsB>{dCldCSfpdfJi}jjJS>s}{cJfLSscIIBif})S",
	"CJcdpcSSJJ{dBLf}j<Is{jLpjBiICcsBs}>I)i",
	"<BC>ScsjSsi)<lsdSfsCjCdci[16]>",
	"{BSfslBcjLdCJ}SIlJ{{I<l>cpBdl{djCflIdcCjsI}j<LdIIJJ[10]Jf>lp}<dI{pjlj[11]dCiScs[4]iC[5]}{LcIi}<isJpBiijJ[1]>>j<c{lJLsSfB}{IifCIfSSdCId}JCiIJ{CIS}SCB>JCcssdjB}Bid)L",
	"dcJ{iI{dICcIll[10]BfcLI}Bs}p)J",
	"ss<{BBj}JlJssp>jflLfjSIj)s",
	"ljSfllC<lCcL>BjB)<SdjI[4]flBdS<SspdS[11]BJsSiIJ>fC>",
	"fC<CdJlfJsJd[16]pLc>Cc{IcLCBjB{cSJJj[13]}SSdS})<c>",
	"{dJLdCd}ilcfsB)L",
	"psijlSdlpsicS){sjjfLJIdLISJ}",
	"IjfIJlLBCcClCjjJ){IL}",
	"LlCpCJp{lslSlj}LI{fJ{j{LBJp[6]ilIc}}{spIli}Cdff<{cicCiIJjj}pclslCiJjpf><iS<lLJj[16]Jil>cjf[12]<sSlj>cScj{JBBBBLClI}>lp}d<pLlBpsd<pLBpdj>><LpsdjLl>)f",
	"I{lscf[10]jisijpij}pCLS{pJ}d)c",
	"CLpIJlfBB{dcdiILcdCdLS}sBLl)p",
	"{sl[12]IIBpIi}lJjjCdC)c",
	"S{jciLpfidcdCC}CcS{L[14]sI{pdCIfC[3]dISpdl}IIfsJlpj}dfpJ{diIClc}dcJ)J",
	"Jc<<psLijl<BBCdjsIBfJfd>{jdBsipScLfjd}JcBi>s[16]dSddJfsLf>)i",
	"L<jIC>lBdLf)<jL<sJlpfLpdpjJd>[5]Sjl>",
	"BJJClJIC<dCdSlssjpJcc[15]>){l{<fCdfLflddLfp>liiC{iLpcpBIspSid}LJp}ILfjjif<lISs>{<iifJIilIsBBl>I}I}",
	"iliClL{JI<BSjSfJfI>Sd<JlfBLld[9]IL>[13]ffc[5]{ifSsIslpSpij}jc})S",
	"i{sSf<CCLC[2]dBcdBjfc>Ccs<iddd>cp}fll)v",
	"sCp<p{LJCS}Ji[4]cBSf{LjijcLCcpiCJ}cjl>Jciilc<Ijl{LCCBSd}j[11]JdSLjpj>Jj)I",
	"BpS{BisSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}CCcfBp{f[15]<<SCLspcCissIl>[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJspC<ldSSdpLJsdld>I>i<CSJ>j[12]fBl[6]S{dBiSlISjfdci}IC})J",
	"sssIdBfCS)<JcljLpilj<BICcC[2]dLCsBjl>CC>",
	"Si<csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf>lC)i",
	"J<pfifSilBCsBi>dpIl<pjc[7]pii>)l",
	"Is{LLCfJ<JCCdLBCsJSip>cClI{IfsCcpjdd}p}LpfLSdflC)L",
	"{siJjBLiSIIj<lldfS>}dSIs)f",
	"IBllLL<iBJLCIlBCJlI>jI{l[5]l{ILJffLfpIifl[16]}lSjI{dIJpCsSJ}C}ds)C",
	"CI{dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI}BL)C",
	"JiSjJSBSC<LJLdd{Bls}BdiJsi>L)<IffIppICjJiC>",
	"{idfCfSSCILjC})j",
	"{sf}pSf)I",
	"SjJJpISJC{{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>}plp)c",
	"B)<BIpcssdfJSc>",
	"l<sdSffIssSpCL>{j}ssl{B}{Ifd{cSid{p}<sdsSssfBd>[13]}LI}LSppf)J",
	"f){sBBfLBd}",
	"CcIBlplCBS{i<lSsL[8]ji{csfCLcsjplSi}j><dLsfidCfIBJ>CCSiBj}SpI)C",
	"j{sSBpLSIcLfiL}lfLB<lf>sBi<SSlBdLfcBfJs>fi)f",
	"Bf{SliccIjifBl[7]s}lBcC)B",
	"sf{ppI<pdisdi>S})J",
	"<<JLpCdj[7]>JdBSCBdjIjc>jc{jJifB[13]BLiILfL}c<lCJ<c>><cSlCCiflJ<sdspdCCCpCLp>{CBidJp[13]Lsp[4]sBi}S>J)d",
	"CpCC{I[2]iLc{lcSJp}iJpLllj}SJiBIc)f",
	"LBJSisi<sdic<IBSpCB>{LIISCCd}pLSjsj>iJCii)v",
	"II{L[3]pp}sCIiCjSi)i",
	"S<pIcjjpsSsssL>lBC<<Bsljii<i[1]Ci>LJlfc>jISc{dCBliBLpl<LCIfJSBlcSCJ><lBijCBdIlfs[13]I>j}ISpSpJ>){LJSsfficlCB}",
	"Cpffjdfl<IS{jCd[3]CL[14]jJCCBBJ}fsSLJj>c)B",
	"Sl<sSJcfJ<cSpB{cdlpjfLIjdcL}cLlplSp>cpfBc>djdidjIL<clpfd{JciljBd[9]<jIdfds>pdIS}iJ<c{ljLJsslJL}pS>jid>S{l<I<dLjIJjBlIsps>Ss{fcijsLISLlSI}ipcifiL>iLJsIJfss}c)S",
	"dIi{JC<dLIds<SlsfcLj>{CdpSpp}ipsjc>Il}J)S",
	"c{SsjJdpiLpSSI}d)C",
	"{Lij<l>lsISiIfj}{dLIJslc{B<SsfBcfcSlpcc>SsCI}<pCBlf{C}J{LpSliS}J<ljcS>jj>{Lsd<sILcs[11]cppBjlp>fis{SfScSiJSCBCJ}ClLi}fL}spSS)L",
	"siiL<cIBBcflcpLss>jjpCisLp){IJsLIdiliCSC}",
	"{dJ{Cf}Ss[12]p<Bfci>}{jcf}S)f",
	"d){sBiSJBJjcCjd}",
	"j<fLlflcCfJISI>{C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl}d)B",
	"ldcBpJs{{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ})I",
	"JcplCdi{lsJfJjpBCI}CBll)f",
	"c){f{fsS}dCl<LsspJC>Ip<SpBdSpCJISll>dLi}",
	"Iis{IBCB}c<JLJ>d)S",
	"dpCLjI<f>Cs{pjC[3]jBj[9]}L)v",
	"{d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj})L",
	"IJBjJBs{dJBs}jILsl)s",
	"iLfL{Llfp[13]CpLjcpiL}SS)B",
	"If{C}L{<S>}LclidII)p",
	"ljB{LslB<SJCcJjdLLfsf>llfLC<LSLjSJj>L}BpJSCp)L",
	"jLpCfId{pc{p}sB[4]dI}JCSfB)<jI<L>CjcfppppC>",
	"SlsJlcsC){<jpLpBBBcCjlI>dScpdsjlfl}",
	"s<sILJsJJLiBCI>ipLsfpBL)v",
	"i{JIp}iSsdffl<LLJCjlJ{<cISSdIC[5]plljc>slll[4]pLI}I>ll)f",
	"LcfpjldJfCJSfB)<f>",
	"<fJ[6]jLdsscddsc>ci)L",
	"{i[13]}CCsIjcilSs)C",
	"Lj{llBIp}JSC)c",
	"jCBcidc{jCslIIlIssIi})d",
	"C<sfiipfpfCBlc>p<Bpp<Ipffi>LBLs[2]fsLd>{<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<LIJL>sBcl><ff<p[8]dc>IiiJ<fcfjSijCSLd>i>IdB}IBi)p",
	"<iIpp><f>pSd{Bl<L{Sdc[12]fsdjfiCLJ}[6]LccBI>pclB<pScCjls[5]d><L[1]<liBCSjBlBipL>Jf<l>s>fIB}L)B",
	"lsI<{p[1]pfpLdJpls}<ldiiJBCIB{Ji[1]IsijJsclSf}Ld>pl{JLfllIiIj}S<sdLfs[6]C>S{plLLC[1]J}{BCLf}<JCsplIBIJCfC>l>{pLSfLdCSddcd}){spd<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>iflLid{d{BfpdfB}ISf}d}",
	"I{JdcLSl}LiI<SijsL<LLI[14]ddjLSfjs>icpC[10]dL>iCIsf)<<pdLBjdLfslId>IspSsJljciL>",
	"iLsJsiLfcl<jj>s)l",
	"{dcpl}BfJj<i[9]JLCf>dpBjJ<ilcjC{cJSjCBIIj}[14]lfBCdS>)p",
	"dBdcC<lJIpi[4]ldjJl>{jpC}<Cl>lldip)C",
	"LlL<pdJ>jjL{jpiisIfilBfS})v",
	"{JC})l",
	"c<di[13]>CjLBjcfBdCS)s",
	"SSBLC{BLS}SpJi)s",
	"CSSJLjd{IcIdcdjJCsJC}L)p",
	"{LCcs[7]dBL[6]iiiJC}dicilj{d[3]dC[9]f}jjspf<CISl[16]lfJjSlIJ>L)c",
	"){Ll[1]pLSsJs}",
	"l<ILIcpCj>SLS<sBldCiBisi>cL)i",
	"pdd<BcBJSJ>if)L",
	"pJ<J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs>IjIiLl{JjIfJljIIIjL}lI)p",
	"<siBB[5]i<lSBiIjIdI>scl<I>sd>LdJC<dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI>BIcIdl)i",
	"pJflidlp<SJJpJlCI>d)s",
	"LLjcic{LScCJJLdsBJj}<is<dCLjLLfilpsS>SCSfSLlBl>ji<BjpJ[11]>)j",
	"dfSCc{psCpSjcI}JpSj)B",
	"jjd{Cslc[8]SBifsjIJ}s)S",
	"dB)<BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ>",
	"{JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p}lS<SLlSlcpc>fccId{SSLpIdfjL}I)s",
	"lcj)<IS{SJB}ccsiiJJfJ>",
	"J{I}SiLC)L",
	"{pdpfjBfipLB[9]}BscJc)<flBd<fpflL>{BCffldlBBdL[5]j}{pJJ{lIljBspBC}pCifp[5]cLj}{dSdiSJjlCpCp}J<I<SfCcdcpC>cd[16]LCLBpip{p[4]jplLpIBLlfl}>II>",
	"J{jdlJdC{j}{SpjBIll}ijl{fpsI<dSSpiJjjSIjs>cSdsB[2]jJ}}jcs<Lpi{JJcCfcdjCSJB}C<csjj>{fc[12]}iCj{jisdiipfSCpC}>fdcL)<idiJ>",
	"j{s}jSSSSBjfpc<fdiIdfdL>)L",
	"c{pi}<pdBfBppj{IJlsf[7]l[10]Blip}liI>)j",
	"Lc<JfiJLJs[11]clc>BcccpcCill)L",
	"Bj<csdIdjBcCBsS>I<iCBlJ>li)S",
	"i{S{idslfBfdpfcs}cldCdfjdsC}jCj)f",
	"dd{fSifsIijdSIf}jIlI)C",
	"J{IIjcsl[14]j{d[9]<LfSCCsC>[10]jSl<c>B<flBppjCBlCsf>iBL}}dC{fccdspslJIji}Ls<fffjfCCL>sSLf)p",
	"Is<iICjIjIJsSdp>BpfLi)c",
	"pl{<IILijS[15]{SllspICIcJIl}jCI<lB>c>CB<sS>{lcpB}<sJ<pSjcdjsLfs[1]Cf>CplIIId<BI>i>[9]<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}}<BlsjIISJf[8]ssS>{fj<pB{SlII}ciLI<IJpjf[7]JCBj>i{LJJdL}{CsSLCSsLlfcI}{fjdJiJJspsJJ}>jI{fLLIji}SC{{fCBBCBBCllLj}pl}LSJ}Sfd)C",
	"IfccI<lJLcJLIsj>Cj<L{Sp}lssCJdclCJ>C)<ficL>",
	"B){f{Jcfcj}jfjfdLIC[14]IL}",
	"ISjiSp<ScpdisJpcddf>){fj{IICldsBSpBsJ}Cdicc{dCJ}pII}",
	"CSis<BdBcjssfcLJI>BJJ{CB<cic>ScfLBLBjJ}j{{ClBsSI[15]cs[12]CJBc}JdJpLSIciss}f)l",
	"ppL{iBiBifJ[9]C{fsJiccif}CCl})B",
	"<CiffBcCdIfj>lfL)i",
	"df<cJ>jiiIcjS)C",
	"dSSdp{cjLCfpSJcfsp}Ji)l",
	"LjLpLJliCd<BJlLiLcCjIcS>)S",
	"iICBcs{cSpJppd}Jc)c",
	"diCijfdIJ{c})L",
	"L{JipLS{lclpSLfcIffC[14]}{sBIsJjBIJ}IIplB}fpcsLSl)d",
	"BBlLB{s}IB{jfJICIscS}pCpJ)p",
	"SpCddf{lcC}dl){SBcL}",
	"LCidlciili{BdJdjssIJLpC}sBB){dsiISSpdL<jjCcSC{pCdsjdIcj[4]lpI}lLfIJ>j<d<Li><Lsd[8]SppL><JILl>lIcLLSfp>}",
	"scfLc{JBL<i<cpllJljssS[13]f>jJBCsdpC[13]li>Bc<ci<sScSJdLL>BjcCCcjpl>fdI{IfJi{lsLC}JsjB[1]I{JCLBSi[13]LpILdJ}C}}pccjC)f",
	"SJCjJjiSi<fJpCfcBICBfi>{sSJlJC}S)l",
	"cJj{p{cfpijijBJifi}}{<JL[9]dcfp>LJsff}Lic<ip>jLs)p",
	"{jdlclLiBjCjd}sCCCJJ)c",
	"B{Jc<jC>dCIjlIddd}SBIC{i}f)f",
	"BjI<BCfipdS>LCjJSSSf)C",
	"LdcLIpCS{<l>SJCLjSJ<C>LCc})S",
	"dLLfsflSlScI{cIIdp})j",
	"dipij{djci{cS{iIifcBsiiisp}lJJLlBf{SlIc}S}dSfI<jLIdJsLLScj[10]C>c[15]c}sJL)I",
	"Cj{CJ<sCBJjjfllJil>iSJISpcdi}L<iCc><iB{SJlIfBJBJsfL}JLlcfclfj>JCL)l",
	"IlpfILscsB<Cc[5]lLfSIipipp>d)L",
	"sIClCsI{<BIs<dS>Ip{cllslcjijIiB}lBpLi>pIsCCj{c<B[5]CfLjfLBdsIi>L[7]LfcSCJIp{clISCSLSIsff}}SdSd}dCi<sJf>S<LSjdscBIs>IL)C",
	"jp{CS[8]}ipi{ilIiSjfS{CpjLsCf<pfslSijiLlii><sSJlJssIfCJs>pL[6]B}<ip{LBdJB[8]LBBSjfB}JiJp[12]sjsfj>fs}sJ)I",
	"BLfjC{I{icBjSLCCcljC}BdB<dsIBLpiBjdBp>di<BlsISSJLj>{pLI}})B",
	"j<lSdIclBdILdd>cBlj)B",
	"I{Bl})p",
	"lcp{LfCS}j)l",
	"{fisLS}f{dcC}jjJ){l}",
	"JLSdf{fp}sSsLl)v",
	"){iC{BS{lidclCLBpdC}JdpSBddCC}C}",
	"Sciplsd<f>JBj)d",
	"Ifs<id>pp){iciIIJBslJfs}",
	"L<S{IBsjCjdpLJJs}psBIj><B>jdijS)f",
	"{iiSsfipICpIp}ISIflBlf)l",
	"jiSllLsiJB)<pCLij>",
	"iI<ffBdLlBCIl>LLiS<{BJcSsidIlSIL}ilSfCCB<Jp[9]>Sff>)v",
	"sJIL<BfpCCB>CfISL{if{fIsLLScIILjf[13]}{SjpIfss[4]}pIJpB<sSfCCflj[10]ICJI>I{issJicL}}p<sBcL>{iSll{CCCBBslC}CCB<C>isc}J)l",
	"JSC<JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL>ds{lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C}jLlJlfpL)s",
	"Bs{CjJdJ}CBBCJdS)f",
	"i{cpd}dj)p",
	"L{CflBdLSB<diJl>SLc}pffip)d",
	"jfs{csB}sL)p",
	"pjddlC<ClIjIpfcISji>{<cCcJ>s}Ic)d",
	"ffIijdIll{fdfLB{IcdlflsCpSS}fisIpc})C",
	"iscSsiLj{Jlsf<cclScj{IsSLSic}pJpcJ>CslC{cC<JB[12]jfpfBBLLdI[8]>dI{JlsLdiCpi[14]I[11]Js}}li}BfCJl)J",
	"CBC<<ljjJ[7]llsBc>p{ilisciSdLl}csBJpfCld>{SJ}CiL)l",
	"SLLdijsjpliI<is[1]LLcSd{p<jdcjJllfBlsi>}LIJi>l)v",
	")<JI[15]JdLd<lIJjCcljCjBL>sSlCL>",
	"S{cs<fsiCLiCBlcss>ls}lL{jIC<Sf{ccfIJBIB}BjJlBspiS>}{IciBBiL<cfcSBidCipsC>[15]}sL<{ip<SliSSIBdljfd>c}LjLils>)v",
	"jdfBCfjds{fC}SsJ)S",
	"L<s{psjLfcCpSSJB}<I[2]lfBSfJpBfBj>lIjclcfsI>jSIi)S",
	"<pS[7]jB>fjSSpC{dsdSBsllsdJi}C<lfCJlJCppJff><idLsfdpC[5]BljC>)i",
	"{IdjpfIlcpC<djLj>c}{ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS}JsjsIlsIfBs)c",
	"fsl<B{JclL}LdpSI{<SJs>Blllip{Bf}}ip>B<ldCJcCjLfsJs>JdcL{iJScJI}B<jBlf<fjB>c>)v",
	"lLfsBjsc){Ldd}",
	"j{CJdl}S<plfIpJsLIffJ>lJp<pCJdIfJJSdsL>B)S",
	"id<CdIdC>{pfcSdpBS<fs{dCCcBf}d<cpI>Ljcflsj>cls}Csfiic{SccpL[4]fJCfs}pSIs)C",
	"JLJ<lCSiJC>IBJiS{iLpCLLIclLBL}i<jp<LLsLjp{LJlccIiiffcj}<pJpJBpd>CdpS>dLij<fBccJpLljCC{djiBpiJIIpfp}>Cil<<ipSj>C{iddcsBsjBBLd}LJsBIJJ{dpCJliL[11]JS}j>>B)p",
	"LijJcpsJ{sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj}i)v",
	"s<<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff>BIdp){IspBfiLI[7]J}",
	"cjjBdlSl<piJjCfLCSI>)j",
	"Jlcjjjp){p{pISICSs[4]p[13]Icl}sCJfs}",
	"{<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<ISIjIi[5]IILjds><jdSBpSJds>iCIcIfSLJL>lSjpLBi}jsjLB)c",
	"J<diS{pJlCjjsBjcfB}jIiCdJSd>CclICspslL{dcSlsBf<ccdBBlSlisc<sBIJBjfIidjl>>J<ISdipLlC<BjBI>[5]>jl}S)C",
	"BISjccJB{C<BlIjLJCfSC[5]LC>dpLCJBfl{cilCsi[8]ffLJSd}I}dp{<cl[5]>j<<sIsspcIjLCI>L<IcpjjicJjdSJ>dS<JCLicLCJlLLL>>Llp})j",
	"icJj<Cpjpcds>d{ciLLC}SjSs)s",
	"plC<IdJjjCpscIdI>sfJd{<sLc{ppJJf}[7]{lCpSdIjL}SpIji>SJC}L{Jldld[4]I{dlcc[7]Jf{Lll}[11]csj}}S)B",
	"CLi<f{fpl}Sds>JJcf{IjsIfJJfdfsS})d",
	"CpIBpSICC){jfsljijdlSfC}",
	"dI<LBlJpjSjjsCC>fcBcJI)<Lp[2]fJClfSIdfJ>",
	"spff{jpLpjpJdidBc}B<Idc>CLBf)I",
	"<lfJ{SjIclCfSslBJ}lfSjdLCS>{S{cl}jB<siLilSidcLS><pL>{IJjsfifIssJI}ssjSB}I{dps<iIc[6]J<fBBLjj[12]fCcLsl>SfB{BsjSdIIppS}JIB>ssL{<fpcsiIIiIfCJ>lBddCCj{LfISIfjfBicC}S{pLcs}J}[13]L<pssLf[6]IiC{ifiI}<JBCC>{SB}s>{JB[13]}f}IsBjS)B",
	"Sd{liCipBdScs{Bffpi[9]J}s}SfijpJ{SSjcsS[8]L<CCis>L}Cl)p",
	"lI{IIjCCjSLfCdp}L)c",
	"JJ{fSdCscBi[4]cd}c)v",
	"SJdSS<pB{i{SsjjBlcJcfSI}lSsjCLjjd[4]J}C<BiJ{iJLC}{cJJjSf}pf{LiLJciScl}c<CpiC>cf>dL<SlSjjliBBspp>jSlB>SjBlff)<B<<fJj>d<siIj>jip>fJdIdijJic>",
	"CsJpCl<CIpCpIBdIIcd><jsdBBdIIBfIp>pBICj)v",
	"ccfjl<cJjIcBddijfi>){{p}sB}",
	"sSJpc{dIpLlCc[13]SjBiS})l",
	"lc<ccfclcLCjpLi>jd)l",
	"IJ)<d[15]CjII<Cdc>i[13]CjfsL>",
	"<L{ipissifiBBp}JlSIc>jsfs)B",
	"ppS{ILSIfJCfSiSj}cdC)<j<djLcslBBSSSp>ji>",
	"fJBii{sClcd<BcJ{CfcfIScjl}iclc{dfpSjS}J<j[11]c>l>BClSil}d{BSdCclIC})p",
	"L{jiCJdc<CSJpsf[3]S<fcSIBjciIdlL>j<ipS>S{i}>IlCcB})<d>",
	"dJ{<L{IJBpCfdsIiJp}Js<sdSJ[15]CcIS[8]Lppd>j{L}dJdif>p}fSiC)S",
	"BdBSBds{IIdic[14]spipp[13]B}dJ<SsLsIjJslCBC>J)d",
	"p{LfcJLCjlf}pCd)I",
	"<p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl>LLpCddLJ)v",
	"lfcJpi<fpjcfIpBsjd[2]C>JL{sssjidL[12]Idjcj}jcSLlI)j",
	"LdBfislcdl{{BpdJppipssfC}C{j[8]BcdJijdIdif}flpjCL<SCfjL>sS}iL)v",
	"dj{jdIB}C)v",
	"pIJp<JjCsSJ<f[14]fCBI>[7]pCJdL>di)i",
	"<dB<cSCSBJLilSC>cBsfJi>sJiBfCiIJJI)j",
	"{Cf{CfISddBpllIs}S<jic>sB<cLCSIsCsCCiC>Ipp}<SJjLccJjCdcB>cIpCScBCfcI<<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf>c)p",
	"jiC)<dIjS>",
	"iL<IlJfjl[3]l[12]Lcj[4]dj><BCjJpCfIsI{IJjCfiLiSJpd}J>sp{LfCBfcsCiII{jdidfBJf}}c)d",
	"ijS{f}J<dIffIl[1]JjLffI><<pjidISjlfBdj>pIjSBISi<plL>>)c",
	"L{IB{sBifSJSILLd<iSdI[6]JicIJL[12]IJ>[4]}jS<CljCBLSILsds>ICSBli}jjCCLjI{cfS[4]}lIp<cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd>)s",
	"<B[6]{CSpspfCLpLI}JCSJj>SpljSjI<<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC>c)l",
	"Cc{df}JLcSS)c",
	"d{<sLSCcspIjsfC>sBj<sBfJBpJCpBpi>ldLf}{lfflBp<jsLlIC>cIClf}spcfJ<<{sLBdfsJiJdLC}{liL}JiIfJ[12]fL<Sldsf>>spiIjiccf>Jf<lplLlfsdfdCL>)s",
	"sBJLjCLJpBL){{jCBS[9]CjcILiJC}BLf}",
	"<fd{SfJBsdsicscp}LscLIBICC>)d",
	"Sc{LccBfBjJBdBS[6]}{SIIjIldSicIB}is{ic}Li<jId{LjJ}ffiS{BdJcBi}B{sp}I>Sscj){pSSJLfclLLc<<fLjfcs>dJIJLBsl{picis}fJ>}",
	"fIfCf<cjBcidCs{lLpLCilJCSfJ}iiS>fc)d",
	"I{sILC}jBssIfLBlI)l",
	"J<<IBdId>JJ{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls>{BS{f<sCii>jsiL}CsCBjll<i{fCddCfdCpdJI}s>p}JfICf)S",
	"LCJiiJIIiscBjp){BsI}",
	"{I{plpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}Jj}S<jBSjlI>cifJBfjJ)c",
	"LJSSCL<SsdjclSssfCl>SJC<{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji>J){psilCdLCSdIs}",
	"pfIBLJ{lS{pCds{lfC}dclfl[6]ds}J}pBipl)<J>",
	"CLICCpi{ldjiSfj}LSSsdc)J",
	"fSpi{J<plClJLjf>ls}fcf{j<IJdsiiBpScIC>BllddBfBJs}LsJlp)B",
	"{piBIBjc}Ildipdscjcp)p",
	"ldiSdpp<ijdiSCJBIiLS>BJ)<d>",
	"LJL<flpSdJiJcsdd>cfi)j",
	"iCSdCpIjf<dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj>Cji)d",
	"scfcJISjll<L>pL)<BC>",
	"sJfdpBS<Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc>BiBjC)v",
	"<jcspSIfIfCdJ>S{dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S}L)J",
	"<flfpldsjdCI[2]f>pLLSdCId)i",
	"fBIBid{ICIdcLsl}sCi<jl>ls{Sl[2]SCijBIpJfC})<Sdd{LcIB}lICLdsj>",
	"Bl{IISI<C[5]LJISS>CC})j",
	"dds<I{pllI}SsLssfc[13]dpI>i{fsiiLIpsc[12]cIS})B",
	"s<BLcdsCjSBSsi>sSLlf)S",
	"I)<CfjBSJdBpJJC[4]>",
	"IB<iLdjj>IiilssCd)j",
	"jB<fCpjCJJdclSd>Jd<icB{SCpsi}<Jil>lsdIBiI>)l",
	"JBCIIlflclcC){isipjdlsSjlS}",
	"Jj{sjdci}SiJcddI)J",
	"<f{BpfscIcLdCLd}c>JCcJ{pfiiCdBj<pBpCspifsjlf>jfJ}icfLC)j",
	"jSSl{llfffsddlcjf}){CcLCfpCj}",
	"Ip{SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps}pB)c",
	"<pIjp>f{i})L",
	"clf<fscfSBc[8]>LLLcf){<{BJiidBSciJlI}fd>fLI[8]Sp{L<ijjCJl>i[7]pcS}cIBLC}",
	"B{JIJIcJcJ<fd[5]SJpiSILpBp>JLj}dC){lsI{Cd}LpSdI<Cc<SiffijcIiIs>Ls[3]cCjii{p}L>di}",
	"c<BBjL{ddCiclSBBCcs}sCjsCfL>J{BjfL}dC{Jjl}Sps)d",
	"B<SpidpfIjJidd>)C",
	"fLBCC<s>idsdB)J",
	"BLddCIdJ<Bjdljps>dfcL)S",
	"sIBf<i<sLdliddddJI>dLSffI>{sL{{JJ}dII{jLcjdCCcjpCS}c<JfdJIijddBCB>CBdLJ}Jd{LBcjJ}SSIjfJ})l",
	"SB{lcfdCSiLIf[1]BJ}lsCcc<jpLLSIdsJpii>)p",
	"sfJp<jC>lji)p",
	"{Lf}ii)c",
	"cCL{lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j}fBSJCp<CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI>d)j",
	"lcSfl{jIScpBCCdIJ})i",
	"Sj)<CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is>",
	"jLi){i{IislccIiIiIl}Cd<f[15]f>fIji}",
	"BBsp<LlI[4]I<B>i<fplpclLIiJLd>IBSBf>{dSldj}CJi{ff<SBdddLBI>SIjJ<LpdfcLssLfs>jf<C>L}d)i",
	"c{lIpSjjplsifI}j<SslspCBcpScS>LIp)i",
	"SCIilBJ<Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf><<pIBsBBJccSJB>CISjiJ>dBS)v",
	"cC{SBcdfjJ[5]dcflp}LJJidfIijLl)p",
	"<BciIsp>pSdJfl)f",
	"sILcIS{sdscC[8]IIjCfp}jSdLdI)f",
	"ic)<sCBBIpJJCJc>",
	"Si){icSiBljfcps}",
	"J{iBj}{pJBSiJjcIcSp}cIIpl)j",
	"Jp{S}c<lcddCJ>ifLjildd)I",
	"<JBspd{IBi}BlBpf>C{IpC}CcfI)i",
	"B<J<JiSflJpjsciS>>){j}",
	"IiCLI{fsBLCdspJs<IdcipJLcilpi[5]>s}dcjSC)L",
	"i{B<Jp>JcBJBpLC<c>i}CIsLIlSfi)S",
	"LSJpL<ljiScBj[16]fLdfi>fiJ<SBscfIC<<I>J>jllB>)i",
	"fclC<<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B>lljfpc<LIfBLcc>)C",
	"jI{iciLIC}flI)s",
	"Scj<fISIspfJl>JJCi)B",
	"j{js{fJJCcidJSjpC}JBS}LfIILjB)c",
	"Ljd<s<SBiCfCcLBSpc>cSBjB>)<<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<IfpCS>LLcfl}i>",
	"iL{LCpf<fJJpfpcIj>Cc<BpJdsJCIJfSc>disj}pspC)J",
	"jjB<IlJ>Lji)<LiI>",
	"sdfILc{SBCc}Ldl)L",
	"I{cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc}l{IfiilBJIB}cIj{cSSsjS[15]BJc}<{ccfdBdl[5]SCIBj}llpddjis<Jlcijcf[12]pLLlC>[10]fs>f<cC>{SlsdI}{SifC<IlC>J<ppfBIlI>{sIijdS}pLi[7]})I",
	"lsISf{<lScp<fiJSj>SLSC>JfICSL}cjiCiJSL)I",
	"Bdf{sjScLpcCLipf}CLCLBl)s",
	"Js<cJL{ICdidcl}pcLlJ{<fpJ>ICICpS}I<lfc<iliflIjjBcJp>Liji<CiJ[8]B>cC[10]S>>CiSslj)p",
	"ilIBCLiJ<fcLj<JCSdSSdssIjB>JdS{{IjdclcC}fC{d[10]LdIlSjIs}JLcffIic}Jl<<SCLCdiifLpcB>>>iJ)B",
	"sSSL{dL})C",
	"LIsCppiSi<ipIiIlBsi<{d}ipC{slcfdJLdiCcC}IBdJ{lcj}{SJIs}><S<fdILpSjpL>>J>C{LCcpIisfjSci}l<<dJcS[4]sfl{BBlCBcCfJSpf}JScd>IJdl>{CIcciLSc{SlIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>I}Sld})l",
	"sillJ{LCfiLLpfJf}si{JLjJJIjJs}Ldip{Sj{sCdIcLiillId}d}LC)S",
	"<flscjdJpLL>B<{fcjSLfiiIi[3]sJ}si>pLJslpsjf)l",
	"cd<LLS{BBISl<BidlICcCip>LSS}<sC>Id[12]><iBid<CJd>LBLSjjC>Sp{JjSSBSsi{fjBLjLiLfIf{dScSlsj}}cBp}lssllp)c",
	"jdJSfBdCip){fIfjBjpfCidf}",
	"jSScflJ){<Sl>i}",
	"<lLdj>ic)I",
	"lCLiSpp<LCiBlj>)J",
	"BiBLlJp)<ScJ>",
	"<d><I>I)I",
	"lLjifIf{ILBSBJ[15]{JccSBc[12]LJSfSs}BJpjs})<c>",
	"Il<jj<i<iLdilssflJLC>JcScCBpcl>BLc<CILpcsLliSf<fJL>>S<s>lIf>iil<lcf[8]lLf[6]LcJSis>dLl{jI}{fcssCCLdlfCl[9]})c",
	"BSBSBd{i<lscdSJ>JIJplB<CcBBlJBLsJ[7]Bj>lpC}<iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f>iL<lfLiJj>S)p",
	"LIsJj<B<Cs[1]fSssJcBJJ>IjifBSCBpB>CpBsp{dSfpjdCdSidp})L",
	"lSCp{I[3]sfcs}C)d",
	"Lj{<lSfSjsB>IdfJCifILsC}jCj)s",
	"C{{dICicfildfJL}LBfSLlid{pCSdlBsSd[13]SCS}})J",
	"pSfBJidJcLcI)<jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>>",
	"dsLd<ifJ>disc<si>{{ldCSLjLsIdsp}SljBcjCdBj}s{jSCliJLc})J",
	"Si{iCs}lSsC)i",
	"{fIpCcfscsSiI}B){pJBpBfsspd}",
	"){Bd<LcLJfdLliLBp>BpdjpLISp}",
	"lC<{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}>{BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi}liBlB)c",
	"CIfs<p>dsdsCCJ)B",
	"sidJLJ{jJlji}Ii)<C{li}fjJ>",
	"CLlIdSsflL){cSLfcSIBfjJf}",
	"{LjsJcSI[4]lCCl}BLdd)<L<BCdcpf[7]Bj<jILjcI>IJB>pBBffIcsi[5]j>",
	"jICJL{BBdLppBjiSil}ijSCiCL)C",
	"LdcI{psi[12]ssIIIi})J",
	"{{flCisdlcBIps}<CdLCI[8]jfL>LjS[4]jfSILji}LlBjLlidf)s",
	"{sCCJfifBi{CLICc}lj}iciBC)J",
	"<s<jBBLcffSILdC[5]>s{sfdSCjjCjfsi}>jILLS<sLdcCdIifcjL>)<{fsiLjBBILpLl}BcBL{fJcsBfJdfics}L{lL}JlfS>",
	"cfJsB<JCLc{IjcfjBIIssdl}dlSSlJS>)B",
	"ISdLpiffpS{fpBLij{fdJijijLI{iIcC}cL}[13]jCCSd}cI)C",
	"LfCld<CS{fBdjdCBIJdLB}dJdipJSip>c)<dS>",
	"JCfCSc{fIBIfsI<lLsJlJCcfJcp>CCiJ}cjCC)i",
	"lJsf{pcssisscllcp}fc{JIBidBBSf}<<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS><s>c<d<BBidSJlclJf>jfBddIpCdI>)l",
	"ilSBsB{LpBJdfL}CS<sCLlJCcLBLj>pS)c",
	"ll<BCCsciillfii>SI<lSiSJjLIlc[1]li>sCfds{ISdsJc[8]SsijpC}piL)L",
	"di{LpjpiJLsIfj<IfBLCJslC>}i){LjiliLiscSSj}",
	"i<l{d[9]cdilcIli[15]sis}f[8]SfSILLSiS>IiJjlCpSsS)c",
	"diIdBI{fSJICjIJJLdi}ssd{lCdSsJs}s)c",
	"C<p>JCcJ<s>l{sll{CLScspdjfcdd}sId}Bsc)f",
	"<LsLsjIlLJ>JBBjsSlfICf)f",
	"BBIj{BJ}jL{SpIiSsIsJpsJ}i)B",
	"<J[5]BfLiBjJjdIc>)I",
	"s<fs>ldIdLc{d<jdd{IBLLd[13]JCip}dccJscCf>ipij[7]f{S}LLss}df<ljp><CCBBSpsL{ifJIllsJflLL}Jjp>)C",
	"<di[15]sBpJiiIJ><d{ILLC}CBdJCjipfs>{sf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC}cjiicjss)J",
	"dJIspdpsICpsS{cp{sjBiLljIddpI}isBi}B)J",
	"ccBjJpIcJ<C<SLBpjcB[5]JifiB>{S}lCB{pCfsisJlcdBB}dcLCi>)s",
	"scji<f>f)p",
	"fspd{CClcs[12]{pJffdcSCjjjj}Cdfs<JSCdlBiSJffB>L}cSp{iLJicdIISI<c>C})L",
	"<pj[3]dc<BlIJdpBsfiJC>lB{JlciLSfs[10]plfI}{ldcB}fBJ>cJf)s",
	"jBBl{dfJsJIBC<CSc>[7]}pcjcS)f",
	"<JLfBspJIfpcB[12]>ISfIff)v",
	"js)<SJLIBfBS[9]iSjs>",
	"{IClCIssIpicL}ij{cdilSidJL}sBp{ICdSlpfIpIcj}dS)f",
	"CBcSpBiBBcL{{spi[2]jsjdjipBi}dBCpp{JcJ}Sf<dpsisILdiiif>pI}lJ)B",
	"l{jlsS[10]dccicIjC}<ICJpL{C}L>siff)S",
	"Jsfjif<CJpfSlSs[13]f<df[16]BfipJILpfs>>L)f",
	"pCiI){f}",
	"Cs{fI<BSiSlffff>C{i}fBl<jLdBcBjIfijl>}LBBjfLl<{BfSpJi}<csSjJJ>jdCCCiCcc{ij{IJiBjJcjlIlC}}>iB)B",
	"{dlCjISs}cLSBBIIC)C",
	"JSBIJLid<c<s>J<fjLlsSBlL>iCl<pcCl[16]jf>c{jfBpdJlsCpsj}i{ldl}>c)c",
	"p{<BSiBCpfs[6]BS[3]p>{C[9]lsldjI<CcfSjfLC>LSJI}ssIIjBIIpB}dpsjfc)i",
	"J<Jj[15]<sslLjJ>IppCL{dB}BI>iIcjSSBiLsSl)J",
	"<{sj[15]ljIiL}B{CCIld[3]fppCCJf}I<CjsiSSdJB[15]Bdl>pjLJpCf>{p<pjLiscCdLIjc>SSjspsll{CCLJlc}l}ddI<pf>c)l",
	"<LCsIfdClLpSC>Sfp{sBCBj}scjcl{iidcJs{pjsLLB<JSS>f{dlcCBpIpCBjS}sBB}SSflc}Jjj)f",
	"JfiBlpi{cidjii}L<ipCpsjldlsld>{cIScsSdI[13]dL{jSjBdJdBlcBC}L}{s[11]jI}cp)<j<{BiSdSsISsipC}SS[12]Ccp<IfdLiId>[2]BI{SfidCscIcpiS}sf>llJJi>",
	"ldspfJ<lsjJcdflJdLl>jc){cC<IpiSc[10]SJp[12]dJjs>Ljsl{ssliICCSCicS}{ILjSi[6]fdJCCJ}p<ll>S}",
	"{l{sBlCssLslijI}{Lpj}jpisSs})S",
	"IsC{I}I)c",
	"JfBIfppsp<LJsscLS>J)<j>",
	"fll{dS}iJsldiCslpI)l",
	"S)<CsJ>",
	"d<<lISfL<cBiiCss>pCCsLS>JC{lCpLBf[13]lclsLJ}BjSldIfB>Ifp<SllBSsipssd<I{ipSJJBSiSifJ}IpcJlplps<CdisJsBBsC>>>iI{{ddSJsCLslBIS}<IJCffs>}L)l",
	"IBf{SJjSCSIdBiI}<C{iJppjLl}CcjLS>SJ<I>dLB)i",
	"dcj{IcIiBCBd[9]Sj}J{pJJLs}sdJIBl)C",
	"cil{<CJd{BLBcCJSS}silSi<jIIjdicpCcLl>JL>cill<I{SpllSpJpSis}BIsIjd<clLcsiljLBjL>ssC>lI<LB{sJciJpjssjCi}<CCB>{cIiJsjJsCBjl}Jcd{sclLBdpLISCp}dIS>Bp[3]C}sB{lILj<ICiCiidj{CdJ[6]JCfISSJLc}<spSSJLiJSCpC>I[4]S>BlfssBS}cJSjdJI)L",
	"f{ssIBicliddBc}){dfIIp}",
};
const char* G_agg_sigs[]  = {
	"{iCIlsBCSBisd}",
	"{lcBcpBLl}",
	"<BpScJBSjJsil>",
	"<lI>",
	"{f[6]jLIjCCLjSIS}",
	"{JLsjjfLJsJIL}",
	"{BS}",
	"<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>",
	"<lljCplLiLJBj>",
	"{dS<lljCplLiLJBj>LCIS}",
	"<lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI>",
	"<BSJJ[6]BCpdfffC>",
	"<SpSJJpjcfs>",
	"<IB>",
	"{ILLl}",
	"<dJpcddCdClCj>",
	"{BjJL}",
	"<sfBid[9]Ldfjdcj>",
	"<j>",
	"<BjjLs[13]SicJic>",
	"<flLJJJLLJiJs>",
	"<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>",
	"{dLl}",
	"<CSicIjs>",
	"<i<CSicIjs>fLL[9]>",
	"<ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{dLl}c<i<CSicIjs>fLL[9]>Cli>",
	"{sdiljLsCcBl[10]j}",
	"{jiJp}",
	"<IBLpijIIpJIB>",
	"<ClLpBsSIBBLB>",
	"{sfCs{jiJp}c<IBLpijIIpJIB>JL<ClLpBsSIBBLB>CL}",
	"<{sdiljLsCcBl[10]j}sid{sfCs{jiJp}c<IBLpijIIpJIB>JL<ClLpBsSIBBLB>CL}[7]p>",
	"<ilj>",
	"<LispcdpldB>",
	"<J>",
	"<LLss>",
	"<sfBdBscSlCdJ>",
	"{j[7]ji<sfBdBscSlCdJ>J}",
	"{BiCcdfCpLCCC}",
	"{d{BiCcdfCpLCCC}Lc}",
	"<pl{j[7]ji<sfBdBscSlCdJ>J}{d{BiCcdfCpLCCC}Lc}Spp[10]LSCcI>",
	"<sLciSBjljpIl>",
	"<SC[5]IJjpLcjfdf>",
	"<dd<sLciSBjljpIl><SC[5]IJjpLcjfdf>diILLlSf>",
	"<dcIpijfCCjlI>",
	"<ldd>",
	"<pCI[5]JpdBIcpCs>",
	"<CcdJjILIIJpL[15]>",
	"<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>",
	"<Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c>",
	"<ILi[15]ljj>",
	"{JflcfdjdjBSJ}",
	"<flpl{JflcfdjdjBSJ}B[4]JpSids>",
	"<clCipl>",
	"{fBILiCJLsCL}",
	"<p>",
	"{JpIdlcipIIJc}",
	"<ciIpCSJI{JpIdlcipIIJc}J>",
	"{iljL}",
	"<ljIfBiS[3]cCpCp>",
	"{Ljsi{iljL}flcJ<ljIfBiS[3]cCpCp>pl}",
	"<S>",
	"<ljC>",
	"<cil<S>JLBiS<ljC>CI>",
	"<fllBJLiILjcl>",
	"<ifdIij>",
	"<LLBljdfljCd>",
	"{LlSd<ifdIij>CscISS<LLBljdfljCd>}",
	"<lJ{LlSd<ifdIij>CscISS<LLBljdfljCd>}LCsijIlIL>",
	"<sfSilfLs>",
	"{dSS[16]Cj[2]piJf[10]Bsf}",
	"{psflfjLIdppd}",
	"<cJcJJ{psflfjLIdppd}ClJLiL>",
	"<fc>",
	"{lc}",
	"{L}",
	"<pBfddsiIJBsI>",
	"<jsSil<pBfddsiIJBsI>Bld>",
	"<djcBpBClfjJS>",
	"<cLJCSCjspliB>",
	"<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>",
	"<{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL>",
	"{j}",
	"<jsjssdIfBlpl>",
	"<LiLISc>",
	"{BfcjcLClBIId}",
	"{ScCciffp}",
	"{fLiBd{ScCciffp}}",
	"{ssISpjLSjCic}",
	"{LplcfJSSjpJl}",
	"<lpS{ssISpjLSjCic}ICp{LplcfJSSjpJl}BSJI>",
	"<jSBISfdidCsB>",
	"{dCldCSfpdfJi}",
	"<dl<jSBISfdidCsB>{dCldCSfpdfJi}jjJS>",
	"{fjcI{fLiBd{ScCciffp}}pJ<lpS{ssISpjLSjCic}ICp{LplcfJSSjpJl}BSJI>Il<dl<jSBISfdidCsB>{dCldCSfpdfJi}jjJS>s}",
	"{cJfLSscIIBif}",
	"{dBLf}",
	"{jLpjBiICcsBs}",
	"<Is{jLpjBiICcsBs}>",
	"<lsdSfsCjCdci[16]>",
	"<BC>",
	"{BSfslBcjLdCJ}",
	"<l>",
	"{djCflIdcCjsI}",
	"<LdIIJJ[10]Jf>",
	"{I<l>cpBdl{djCflIdcCjsI}j<LdIIJJ[10]Jf>lp}",
	"{pjlj[11]dCiScs[4]iC[5]}",
	"{LcIi}",
	"<isJpBiijJ[1]>",
	"<dI{pjlj[11]dCiScs[4]iC[5]}{LcIi}<isJpBiijJ[1]>>",
	"{lJLsSfB}",
	"{IifCIfSSdCId}",
	"{CIS}",
	"<c{lJLsSfB}{IifCIfSSdCId}JCiIJ{CIS}SCB>",
	"{{I<l>cpBdl{djCflIdcCjsI}j<LdIIJJ[10]Jf>lp}<dI{pjlj[11]dCiScs[4]iC[5]}{LcIi}<isJpBiijJ[1]>>j<c{lJLsSfB}{IifCIfSSdCId}JCiIJ{CIS}SCB>JCcssdjB}",
	"{dICcIll[10]BfcLI}",
	"{iI{dICcIll[10]BfcLI}Bs}",
	"{BBj}",
	"<{BBj}JlJssp>",
	"<SspdS[11]BJsSiIJ>",
	"<SdjI[4]flBdS<SspdS[11]BJsSiIJ>fC>",
	"<lCcL>",
	"<c>",
	"<CdJlfJsJd[16]pLc>",
	"{cSJJj[13]}",
	"{IcLCBjB{cSJJj[13]}SSdS}",
	"{dJLdCd}",
	"{sjjfLJIdLISJ}",
	"{IL}",
	"{lslSlj}",
	"{LBJp[6]ilIc}",
	"{j{LBJp[6]ilIc}}",
	"{spIli}",
	"{cicCiIJjj}",
	"<{cicCiIJjj}pclslCiJjpf>",
	"<lLJj[16]Jil>",
	"<sSlj>",
	"{JBBBBLClI}",
	"<iS<lLJj[16]Jil>cjf[12]<sSlj>cScj{JBBBBLClI}>",
	"{fJ{j{LBJp[6]ilIc}}{spIli}Cdff<{cicCiIJjj}pclslCiJjpf><iS<lLJj[16]Jil>cjf[12]<sSlj>cScj{JBBBBLClI}>lp}",
	"<pLBpdj>",
	"<pLlBpsd<pLBpdj>>",
	"<LpsdjLl>",
	"{lscf[10]jisijpij}",
	"{pJ}",
	"{dcdiILcdCdLS}",
	"{sl[12]IIBpIi}",
	"{jciLpfidcdCC}",
	"{pdCIfC[3]dISpdl}",
	"{L[14]sI{pdCIfC[3]dISpdl}IIfsJlpj}",
	"{diIClc}",
	"<BBCdjsIBfJfd>",
	"{jdBsipScLfjd}",
	"<psLijl<BBCdjsIBfJfd>{jdBsipScLfjd}JcBi>",
	"<<psLijl<BBCdjsIBfJfd>{jdBsipScLfjd}JcBi>s[16]dSddJfsLf>",
	"<sJlpfLpdpjJd>",
	"<jL<sJlpfLpdpjJd>[5]Sjl>",
	"<jIC>",
	"<fCdfLflddLfp>",
	"{iLpcpBIspSid}",
	"{<fCdfLflddLfp>liiC{iLpcpBIspSid}LJp}",
	"<lISs>",
	"<iifJIilIsBBl>",
	"{<iifJIilIsBBl>I}",
	"{l{<fCdfLflddLfp>liiC{iLpcpBIspSid}LJp}ILfjjif<lISs>{<iifJIilIsBBl>I}I}",
	"<dCdSlssjpJcc[15]>",
	"<BSjSfJfI>",
	"<JlfBLld[9]IL>",
	"{ifSsIslpSpij}",
	"{JI<BSjSfJfI>Sd<JlfBLld[9]IL>[13]ffc[5]{ifSsIslpSpij}jc}",
	"<CCLC[2]dBcdBjfc>",
	"<iddd>",
	"{sSf<CCLC[2]dBcdBjfc>Ccs<iddd>cp}",
	"{LJCS}",
	"{LjijcLCcpiCJ}",
	"<p{LJCS}Ji[4]cBSf{LjijcLCcpiCJ}cjl>",
	"{LCCBSd}",
	"<Ijl{LCCBSd}j[11]JdSLjpj>",
	"<JifCfBidlLpC>",
	"<iBILBJfJ[10]Bcli>",
	"{BisSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}",
	"<SCLspcCissIl>",
	"<CdJBSdIf[16]ijss>",
	"{jJdCspdffpfl}",
	"<ldSSdpLJsdld>",
	"<<SCLspcCissIl>[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJspC<ldSSdpLJsdld>I>",
	"<CSJ>",
	"{dBiSlISjfdci}",
	"{f[15]<<SCLspcCissIl>[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJspC<ldSSdpLJsdld>I>i<CSJ>j[12]fBl[6]S{dBiSlISjfdci}IC}",
	"<BICcC[2]dLCsBjl>",
	"<JcljLpilj<BICcC[2]dLCsBjl>CC>",
	"<i>",
	"<CLs>",
	"<JspLpIp>",
	"<jf<CLs>iBB<JspLpIp>JIB>",
	"<BpSisiiBscfI>",
	"<iS<BpSisiiBscfI>JSIBIJSjB>",
	"<csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf>",
	"<pfifSilBCsBi>",
	"<pjc[7]pii>",
	"<JCCdLBCsJSip>",
	"{IfsCcpjdd}",
	"{LLCfJ<JCCdLBCsJSip>cClI{IfsCcpjdd}p}",
	"<lldfS>",
	"{siJjBLiSIIj<lldfS>}",
	"<iBJLCIlBCJlI>",
	"{ILJffLfpIifl[16]}",
	"{dIJpCsSJ}",
	"{l[5]l{ILJffLfpIifl[16]}lSjI{dIJpCsSJ}C}",
	"<sfsdBJdBliLf>",
	"{jjjCljidi<sfsdBJdBliLf>}",
	"{dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI}",
	"<IffIppICjJiC>",
	"{Bls}",
	"<LJLdd{Bls}BdiJsi>",
	"{idfCfSSCILjC}",
	"{sf}",
	"{SdIIpBSlIISB}",
	"{JLsJLSfJ[14]lj}",
	"{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}",
	"<CBLlfScjLpLJ>",
	"{SCsciCp}",
	"<S<CBLlfScjLpLJ>I{SCsciCp}Cf>",
	"<slIlpIppcCfc>",
	"{S<slIlpIppcCfc>C}",
	"<cS>",
	"{{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>}",
	"<BIpcssdfJSc>",
	"<sdSffIssSpCL>",
	"{B}",
	"{p}",
	"<sdsSssfBd>",
	"{cSid{p}<sdsSssfBd>[13]}",
	"{Ifd{cSid{p}<sdsSssfBd>[13]}LI}",
	"{sBBfLBd}",
	"{csfCLcsjplSi}",
	"<lSsL[8]ji{csfCLcsjplSi}j>",
	"<dLsfidCfIBJ>",
	"{i<lSsL[8]ji{csfCLcsjplSi}j><dLsfidCfIBJ>CCSiBj}",
	"{sSBpLSIcLfiL}",
	"<lf>",
	"<SSlBdLfcBfJs>",
	"{SliccIjifBl[7]s}",
	"<pdisdi>",
	"{ppI<pdisdi>S}",
	"<JLpCdj[7]>",
	"<<JLpCdj[7]>JdBSCBdjIjc>",
	"{jJifB[13]BLiILfL}",
	"<lCJ<c>>",
	"<sdspdCCCpCLp>",
	"{CBidJp[13]Lsp[4]sBi}",
	"<cSlCCiflJ<sdspdCCCpCLp>{CBidJp[13]Lsp[4]sBi}S>",
	"{lcSJp}",
	"{I[2]iLc{lcSJp}iJpLllj}",
	"<IBSpCB>",
	"{LIISCCd}",
	"<sdic<IBSpCB>{LIISCCd}pLSjsj>",
	"{L[3]pp}",
	"{LJSsfficlCB}",
	"<pIcjjpsSsssL>",
	"<i[1]Ci>",
	"<Bsljii<i[1]Ci>LJlfc>",
	"<LCIfJSBlcSCJ>",
	"<lBijCBdIlfs[13]I>",
	"{dCBliBLpl<LCIfJSBlcSCJ><lBijCBdIlfs[13]I>j}",
	"<<Bsljii<i[1]Ci>LJlfc>jISc{dCBliBLpl<LCIfJSBlcSCJ><lBijCBdIlfs[13]I>j}ISpSpJ>",
	"{jCd[3]CL[14]jJCCBBJ}",
	"<IS{jCd[3]CL[14]jJCCBBJ}fsSLJj>",
	"{cdlpjfLIjdcL}",
	"<cSpB{cdlpjfLIjdcL}cLlplSp>",
	"<sSJcfJ<cSpB{cdlpjfLIjdcL}cLlplSp>cpfBc>",
	"<jIdfds>",
	"{JciljBd[9]<jIdfds>pdIS}",
	"{ljLJsslJL}",
	"<c{ljLJsslJL}pS>",
	"<clpfd{JciljBd[9]<jIdfds>pdIS}iJ<c{ljLJsslJL}pS>jid>",
	"<dLjIJjBlIsps>",
	"{fcijsLISLlSI}",
	"<I<dLjIJjBlIsps>Ss{fcijsLISLlSI}ipcifiL>",
	"{l<I<dLjIJjBlIsps>Ss{fcijsLISLlSI}ipcifiL>iLJsIJfss}",
	"<SlsfcLj>",
	"{CdpSpp}",
	"<dLIds<SlsfcLj>{CdpSpp}ipsjc>",
	"{JC<dLIds<SlsfcLj>{CdpSpp}ipsjc>Il}",
	"{SsjJdpiLpSSI}",
	"{Lij<l>lsISiIfj}",
	"<SsfBcfcSlpcc>",
	"{B<SsfBcfcSlpcc>SsCI}",
	"{C}",
	"{LpSliS}",
	"<ljcS>",
	"<pCBlf{C}J{LpSliS}J<ljcS>jj>",
	"<sILcs[11]cppBjlp>",
	"{SfScSiJSCBCJ}",
	"{Lsd<sILcs[11]cppBjlp>fis{SfScSiJSCBCJ}ClLi}",
	"{dLIJslc{B<SsfBcfcSlpcc>SsCI}<pCBlf{C}J{LpSliS}J<ljcS>jj>{Lsd<sILcs[11]cppBjlp>fis{SfScSiJSCBCJ}ClLi}fL}",
	"{IJsLIdiliCSC}",
	"<cIBBcflcpLss>",
	"{Cf}",
	"<Bfci>",
	"{dJ{Cf}Ss[12]p<Bfci>}",
	"{jcf}",
	"{sBiSJBJjcCjd}",
	"<fLlflcCfJISI>",
	"<lLfCcS[2]JIB>",
	"{BfSpffpSijB[5]B}",
	"{C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl}",
	"<IiC>",
	"{<IiC>[14]iJCSfcdSiJL}",
	"{{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ}",
	"{lsJfJjpBCI}",
	"{fsS}",
	"<LsspJC>",
	"<SpBdSpCJISll>",
	"{f{fsS}dCl<LsspJC>Ip<SpBdSpCJISll>dLi}",
	"{IBCB}",
	"<JLJ>",
	"<f>",
	"{pjC[3]jBj[9]}",
	"{BsfBdlfpp[4]fpj}",
	"<djcjiCi>",
	"{d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj}",
	"{dJBs}",
	"{Llfp[13]CpLjcpiL}",
	"{<S>}",
	"<SJCcJjdLLfsf>",
	"<LSLjSJj>",
	"{LslB<SJCcJjdLLfsf>llfLC<LSLjSJj>L}",
	"<L>",
	"<jI<L>CjcfppppC>",
	"{pc{p}sB[4]dI}",
	"<jpLpBBBcCjlI>",
	"{<jpLpBBBcCjlI>dScpdsjlfl}",
	"<sILJsJJLiBCI>",
	"{JIp}",
	"<cISSdIC[5]plljc>",
	"{<cISSdIC[5]plljc>slll[4]pLI}",
	"<LLJCjlJ{<cISSdIC[5]plljc>slll[4]pLI}I>",
	"<fJ[6]jLdsscddsc>",
	"{i[13]}",
	"{llBIp}",
	"{jCslIIlIssIi}",
	"<sfiipfpfCBlc>",
	"<Ipffi>",
	"<Bpp<Ipffi>LBLs[2]fsLd>",
	"<SLpIfdldSJdj>",
	"{SISsCI}",
	"<LIJL>",
	"<SplLfBs<LIJL>sBcl>",
	"<p[8]dc>",
	"<fcfjSijCSLd>",
	"<ff<p[8]dc>IiiJ<fcfjSijCSLd>i>",
	"{<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<LIJL>sBcl><ff<p[8]dc>IiiJ<fcfjSijCSLd>i>IdB}",
	"<iIpp>",
	"{Sdc[12]fsdjfiCLJ}",
	"<L{Sdc[12]fsdjfiCLJ}[6]LccBI>",
	"<pScCjls[5]d>",
	"<liBCSjBlBipL>",
	"<L[1]<liBCSjBlBipL>Jf<l>s>",
	"{Bl<L{Sdc[12]fsdjfiCLJ}[6]LccBI>pclB<pScCjls[5]d><L[1]<liBCSjBlBipL>Jf<l>s>fIB}",
	"{CIdCss[6]}",
	"<pJcBJjB[6]BJCcB>",
	"<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>",
	"{BfpdfB}",
	"{d{BfpdfB}ISf}",
	"{spd<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>iflLid{d{BfpdfB}ISf}d}",
	"{p[1]pfpLdJpls}",
	"{Ji[1]IsijJsclSf}",
	"<ldiiJBCIB{Ji[1]IsijJsclSf}Ld>",
	"{JLfllIiIj}",
	"<sdLfs[6]C>",
	"{plLLC[1]J}",
	"{BCLf}",
	"<JCsplIBIJCfC>",
	"<{p[1]pfpLdJpls}<ldiiJBCIB{Ji[1]IsijJsclSf}Ld>pl{JLfllIiIj}S<sdLfs[6]C>S{plLLC[1]J}{BCLf}<JCsplIBIJCfC>l>",
	"{pLSfLdCSddcd}",
	"<pdLBjdLfslId>",
	"<<pdLBjdLfslId>IspSsJljciL>",
	"{JdcLSl}",
	"<LLI[14]ddjLSfjs>",
	"<SijsL<LLI[14]ddjLSfjs>icpC[10]dL>",
	"<jj>",
	"{dcpl}",
	"<i[9]JLCf>",
	"{cJSjCBIIj}",
	"<ilcjC{cJSjCBIIj}[14]lfBCdS>",
	"<lJIpi[4]ldjJl>",
	"{jpC}",
	"<Cl>",
	"<pdJ>",
	"{jpiisIfilBfS}",
	"{JC}",
	"<di[13]>",
	"{BLS}",
	"{IcIdcdjJCsJC}",
	"{LCcs[7]dBL[6]iiiJC}",
	"{d[3]dC[9]f}",
	"<CISl[16]lfJjSlIJ>",
	"{Ll[1]pLSsJs}",
	"<ILIcpCj>",
	"<sBldCiBisi>",
	"<BcBJSJ>",
	"{JpBdpCiLCflJ}",
	"<pS[6]LC[5]IjSfiBIp>",
	"<J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs>",
	"{JjIfJljIIIjL}",
	"<lSBiIjIdI>",
	"<I>",
	"<siBB[5]i<lSBiIjIdI>scl<I>sd>",
	"{BjiiBLdiJSd[9]J}",
	"<CBCIIpdfJiSS>",
	"<dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI>",
	"<SJJpJlCI>",
	"{LScCJJLdsBJj}",
	"<dCLjLLfilpsS>",
	"<is<dCLjLLfilpsS>SCSfSLlBl>",
	"<BjpJ[11]>",
	"{psCpSjcI}",
	"{Cslc[8]SBifsjIJ}",
	"<pILSIplCLLcL>",
	"<iBldliiL<pILSIplCLLcL>jii>",
	"<BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ>",
	"<IC[15]pSCCCJjdId>",
	"<<IC[15]pSCCCJjdId>>",
	"<jclpJppSILds>",
	"{iBpdpJdcliBL}",
	"<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>",
	"<dCCf>",
	"<CLSBIisfJI>",
	"<LpdsdJcp<dCCf>l<CLSBIisfJI>s>",
	"{JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p}",
	"<SLlSlcpc>",
	"{SSLpIdfjL}",
	"{SJB}",
	"<IS{SJB}ccsiiJJfJ>",
	"{I}",
	"<fpflL>",
	"{BCffldlBBdL[5]j}",
	"{lIljBspBC}",
	"{pJJ{lIljBspBC}pCifp[5]cLj}",
	"{dSdiSJjlCpCp}",
	"<SfCcdcpC>",
	"{p[4]jplLpIBLlfl}",
	"<I<SfCcdcpC>cd[16]LCLBpip{p[4]jplLpIBLlfl}>",
	"<flBd<fpflL>{BCffldlBBdL[5]j}{pJJ{lIljBspBC}pCifp[5]cLj}{dSdiSJjlCpCp}J<I<SfCcdcpC>cd[16]LCLBpip{p[4]jplLpIBLlfl}>II>",
	"{pdpfjBfipLB[9]}",
	"<idiJ>",
	"{SpjBIll}",
	"<dSSpiJjjSIjs>",
	"{fpsI<dSSpiJjjSIjs>cSdsB[2]jJ}",
	"{jdlJdC{j}{SpjBIll}ijl{fpsI<dSSpiJjjSIjs>cSdsB[2]jJ}}",
	"{JJcCfcdjCSJB}",
	"<csjj>",
	"{fc[12]}",
	"{jisdiipfSCpC}",
	"<Lpi{JJcCfcdjCSJB}C<csjj>{fc[12]}iCj{jisdiipfSCpC}>",
	"{s}",
	"<fdiIdfdL>",
	"{pi}",
	"{IJlsf[7]l[10]Blip}",
	"<pdBfBppj{IJlsf[7]l[10]Blip}liI>",
	"<JfiJLJs[11]clc>",
	"<csdIdjBcCBsS>",
	"<iCBlJ>",
	"{idslfBfdpfcs}",
	"{S{idslfBfdpfcs}cldCdfjdsC}",
	"{fSifsIijdSIf}",
	"<LfSCCsC>",
	"<flBppjCBlCsf>",
	"{d[9]<LfSCCsC>[10]jSl<c>B<flBppjCBlCsf>iBL}",
	"{IIjcsl[14]j{d[9]<LfSCCsC>[10]jSl<c>B<flBppjCBlCsf>iBL}}",
	"{fccdspslJIji}",
	"<fffjfCCL>",
	"<iICjIjIJsSdp>",
	"{SllspICIcJIl}",
	"<lB>",
	"<IILijS[15]{SllspICIcJIl}jCI<lB>c>",
	"<sS>",
	"{lcpB}",
	"<pSjcdjsLfs[1]Cf>",
	"<BI>",
	"<sJ<pSjcdjsLfs[1]Cf>CplIIId<BI>i>",
	"{Ssfd}",
	"<fd{Ssfd}Bc>",
	"{sliljsCSSLIf}",
	"{<IILijS[15]{SllspICIcJIl}jCI<lB>c>CB<sS>{lcpB}<sJ<pSjcdjsLfs[1]Cf>CplIIId<BI>i>[9]<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}}",
	"<BlsjIISJf[8]ssS>",
	"{SlII}",
	"<IJpjf[7]JCBj>",
	"{LJJdL}",
	"{CsSLCSsLlfcI}",
	"{fjdJiJJspsJJ}",
	"<pB{SlII}ciLI<IJpjf[7]JCBj>i{LJJdL}{CsSLCSsLlfcI}{fjdJiJJspsJJ}>",
	"{fLLIji}",
	"{fCBBCBBCllLj}",
	"{{fCBBCBBCllLj}pl}",
	"{fj<pB{SlII}ciLI<IJpjf[7]JCBj>i{LJJdL}{CsSLCSsLlfcI}{fjdJiJJspsJJ}>jI{fLLIji}SC{{fCBBCBBCllLj}pl}LSJ}",
	"<ficL>",
	"<lJLcJLIsj>",
	"{Sp}",
	"<L{Sp}lssCJdclCJ>",
	"{Jcfcj}",
	"{f{Jcfcj}jfjfdLIC[14]IL}",
	"{IICldsBSpBsJ}",
	"{dCJ}",
	"{fj{IICldsBSpBsJ}Cdicc{dCJ}pII}",
	"<ScpdisJpcddf>",
	"<BdBcjssfcLJI>",
	"<cic>",
	"{CB<cic>ScfLBLBjJ}",
	"{ClBsSI[15]cs[12]CJBc}",
	"{{ClBsSI[15]cs[12]CJBc}JdJpLSIciss}",
	"{fsJiccif}",
	"{iBiBifJ[9]C{fsJiccif}CCl}",
	"<CiffBcCdIfj>",
	"<cJ>",
	"{cjLCfpSJcfsp}",
	"<BJlLiLcCjIcS>",
	"{cSpJppd}",
	"{c}",
	"{lclpSLfcIffC[14]}",
	"{sBIsJjBIJ}",
	"{JipLS{lclpSLfcIffC[14]}{sBIsJjBIJ}IIplB}",
	"{jfJICIscS}",
	"{SBcL}",
	"{lcC}",
	"{pCdsjdIcj[4]lpI}",
	"<jjCcSC{pCdsjdIcj[4]lpI}lLfIJ>",
	"<Li>",
	"<Lsd[8]SppL>",
	"<JILl>",
	"<d<Li><Lsd[8]SppL><JILl>lIcLLSfp>",
	"{dsiISSpdL<jjCcSC{pCdsjdIcj[4]lpI}lLfIJ>j<d<Li><Lsd[8]SppL><JILl>lIcLLSfp>}",
	"{BdJdjssIJLpC}",
	"<cpllJljssS[13]f>",
	"<i<cpllJljssS[13]f>jJBCsdpC[13]li>",
	"<sScSJdLL>",
	"<ci<sScSJdLL>BjcCCcjpl>",
	"{lsLC}",
	"{JCLBSi[13]LpILdJ}",
	"{IfJi{lsLC}JsjB[1]I{JCLBSi[13]LpILdJ}C}",
	"{JBL<i<cpllJljssS[13]f>jJBCsdpC[13]li>Bc<ci<sScSJdLL>BjcCCcjpl>fdI{IfJi{lsLC}JsjB[1]I{JCLBSi[13]LpILdJ}C}}",
	"<fJpCfcBICBfi>",
	"{sSJlJC}",
	"{cfpijijBJifi}",
	"{p{cfpijijBJifi}}",
	"<JL[9]dcfp>",
	"{<JL[9]dcfp>LJsff}",
	"<ip>",
	"{jdlclLiBjCjd}",
	"<jC>",
	"{Jc<jC>dCIjlIddd}",
	"{i}",
	"<BCfipdS>",
	"<C>",
	"{<l>SJCLjSJ<C>LCc}",
	"{cIIdp}",
	"{iIifcBsiiisp}",
	"{SlIc}",
	"{cS{iIifcBsiiisp}lJJLlBf{SlIc}S}",
	"<jLIdJsLLScj[10]C>",
	"{djci{cS{iIifcBsiiisp}lJJLlBf{SlIc}S}dSfI<jLIdJsLLScj[10]C>c[15]c}",
	"<sCBJjjfllJil>",
	"{CJ<sCBJjjfllJil>iSJISpcdi}",
	"<iCc>",
	"{SJlIfBJBJsfL}",
	"<iB{SJlIfBJBJsfL}JLlcfclfj>",
	"<Cc[5]lLfSIipipp>",
	"<dS>",
	"{cllslcjijIiB}",
	"<BIs<dS>Ip{cllslcjijIiB}lBpLi>",
	"<B[5]CfLjfLBdsIi>",
	"{clISCSLSIsff}",
	"{c<B[5]CfLjfLBdsIi>L[7]LfcSCJIp{clISCSLSIsff}}",
	"{<BIs<dS>Ip{cllslcjijIiB}lBpLi>pIsCCj{c<B[5]CfLjfLBdsIi>L[7]LfcSCJIp{clISCSLSIsff}}SdSd}",
	"<sJf>",
	"<LSjdscBIs>",
	"{CS[8]}",
	"<pfslSijiLlii>",
	"<sSJlJssIfCJs>",
	"{CpjLsCf<pfslSijiLlii><sSJlJssIfCJs>pL[6]B}",
	"{LBdJB[8]LBBSjfB}",
	"<ip{LBdJB[8]LBBSjfB}JiJp[12]sjsfj>",
	"{ilIiSjfS{CpjLsCf<pfslSijiLlii><sSJlJssIfCJs>pL[6]B}<ip{LBdJB[8]LBBSjfB}JiJp[12]sjsfj>fs}",
	"{icBjSLCCcljC}",
	"<dsIBLpiBjdBp>",
	"<BlsISSJLj>",
	"{pLI}",
	"{I{icBjSLCCcljC}BdB<dsIBLpiBjdBp>di<BlsISSJLj>{pLI}}",
	"<lSdIclBdILdd>",
	"{Bl}",
	"{LfCS}",
	"{l}",
	"{fisLS}",
	"{dcC}",
	"{fp}",
	"{lidclCLBpdC}",
	"{BS{lidclCLBpdC}JdpSBddCC}",
	"{iC{BS{lidclCLBpdC}JdpSBddCC}C}",
	"{iciIIJBslJfs}",
	"<id>",
	"{IBsjCjdpLJJs}",
	"<S{IBsjCjdpLJJs}psBIj>",
	"<B>",
	"{iiSsfipICpIp}",
	"<pCLij>",
	"<ffBdLlBCIl>",
	"{BJcSsidIlSIL}",
	"<Jp[9]>",
	"<{BJcSsidIlSIL}ilSfCCB<Jp[9]>Sff>",
	"<BfpCCB>",
	"{fIsLLScIILjf[13]}",
	"{SjpIfss[4]}",
	"<sSfCCflj[10]ICJI>",
	"{issJicL}",
	"{if{fIsLLScIILjf[13]}{SjpIfss[4]}pIJpB<sSfCCflj[10]ICJI>I{issJicL}}",
	"<sBcL>",
	"{CCCBBslC}",
	"{iSll{CCCBBslC}CCB<C>isc}",
	"{ciSIJsLfid}",
	"<cdJsL{ciSIJsLfid}f>",
	"{LSfdIif[7]Idslj}",
	"<JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL>",
	"<dCf[12]Jfpd>",
	"<CJilSIdcJsC>",
	"<CdJBpcfBIiBS>",
	"{illCJldj}",
	"{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}",
	"{lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C}",
	"{CjJdJ}",
	"{cpd}",
	"<diJl>",
	"{CflBdLSB<diJl>SLc}",
	"{csB}",
	"<ClIjIpfcISji>",
	"<cCcJ>",
	"{<cCcJ>s}",
	"{IcdlflsCpSS}",
	"{fdfLB{IcdlflsCpSS}fisIpc}",
	"{IsSLSic}",
	"<cclScj{IsSLSic}pJpcJ>",
	"<JB[12]jfpfBBLLdI[8]>",
	"{JlsLdiCpi[14]I[11]Js}",
	"{cC<JB[12]jfpfBBLLdI[8]>dI{JlsLdiCpi[14]I[11]Js}}",
	"{Jlsf<cclScj{IsSLSic}pJpcJ>CslC{cC<JB[12]jfpfBBLLdI[8]>dI{JlsLdiCpi[14]I[11]Js}}li}",
	"<ljjJ[7]llsBc>",
	"{ilisciSdLl}",
	"<<ljjJ[7]llsBc>p{ilisciSdLl}csBJpfCld>",
	"{SJ}",
	"<jdcjJllfBlsi>",
	"{p<jdcjJllfBlsi>}",
	"<is[1]LLcSd{p<jdcjJllfBlsi>}LIJi>",
	"<lIJjCcljCjBL>",
	"<JI[15]JdLd<lIJjCcljCjBL>sSlCL>",
	"<fsiCLiCBlcss>",
	"{cs<fsiCLiCBlcss>ls}",
	"{ccfIJBIB}",
	"<Sf{ccfIJBIB}BjJlBspiS>",
	"{jIC<Sf{ccfIJBIB}BjJlBspiS>}",
	"<cfcSBidCipsC>",
	"{IciBBiL<cfcSBidCipsC>[15]}",
	"<SliSSIBdljfd>",
	"{ip<SliSSIBdljfd>c}",
	"<{ip<SliSSIBdljfd>c}LjLils>",
	"{fC}",
	"{psjLfcCpSSJB}",
	"<I[2]lfBSfJpBfBj>",
	"<s{psjLfcCpSSJB}<I[2]lfBSfJpBfBj>lIjclcfsI>",
	"<pS[7]jB>",
	"{dsdSBsllsdJi}",
	"<lfCJlJCppJff>",
	"<idLsfdpC[5]BljC>",
	"<djLj>",
	"{IdjpfIlcpC<djLj>c}",
	"<BBcJsiiCLljS>",
	"{Sp[16]lICcSjJpBS}",
	"{ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS}",
	"{JclL}",
	"<SJs>",
	"{Bf}",
	"{<SJs>Blllip{Bf}}",
	"<B{JclL}LdpSI{<SJs>Blllip{Bf}}ip>",
	"<ldCJcCjLfsJs>",
	"{iJScJI}",
	"<fjB>",
	"<jBlf<fjB>c>",
	"{Ldd}",
	"{CJdl}",
	"<plfIpJsLIffJ>",
	"<pCJdIfJJSdsL>",
	"<CdIdC>",
	"{dCCcBf}",
	"<cpI>",
	"<fs{dCCcBf}d<cpI>Ljcflsj>",
	"{pfcSdpBS<fs{dCCcBf}d<cpI>Ljcflsj>cls}",
	"{SccpL[4]fJCfs}",
	"<lCSiJC>",
	"{iLpCLLIclLBL}",
	"{LJlccIiiffcj}",
	"<pJpJBpd>",
	"<LLsLjp{LJlccIiiffcj}<pJpJBpd>CdpS>",
	"{djiBpiJIIpfp}",
	"<fBccJpLljCC{djiBpiJIIpfp}>",
	"<ipSj>",
	"{iddcsBsjBBLd}",
	"{dpCJliL[11]JS}",
	"<<ipSj>C{iddcsBsjBBLd}LJsBIJJ{dpCJliL[11]JS}j>",
	"<jp<LLsLjp{LJlccIiiffcj}<pJpJBpd>CdpS>dLij<fBccJpLljCC{djiBpiJIIpfp}>Cil<<ipSj>C{iddcsBsjBBLd}LJsBIJJ{dpCJliL[11]JS}j>>",
	"<sJdLJIdLLiJ[6]C>",
	"{<sJdLJIdLLiJ[6]C>cLJflfc}",
	"{sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj}",
	"{IspBfiLI[7]J}",
	"<s>",
	"<fBdCICLJfICL>",
	"{jpIdplcjd[12]l<fBdCICLJfICL>C}",
	"<<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff>",
	"<piJjCfLCSI>",
	"{pISICSs[4]p[13]Icl}",
	"{p{pISICSs[4]p[13]Icl}sCJfs}",
	"<ldCjiS>",
	"<Lflf<ldCjiS>SfSiBIL>",
	"<JLpdsljpfI[4]p[2]s>",
	"<ISIjIi[5]IILjds>",
	"<jdSBpSJds>",
	"<<ISIjIi[5]IILjds><jdSBpSJds>iCIcIfSLJL>",
	"{<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<ISIjIi[5]IILjds><jdSBpSJds>iCIcIfSLJL>lSjpLBi}",
	"{pJlCjjsBjcfB}",
	"<diS{pJlCjjsBjcfB}jIiCdJSd>",
	"<sBIJBjfIidjl>",
	"<ccdBBlSlisc<sBIJBjfIidjl>>",
	"<BjBI>",
	"<ISdipLlC<BjBI>[5]>",
	"{dcSlsBf<ccdBBlSlisc<sBIJBjfIidjl>>J<ISdipLlC<BjBI>[5]>jl}",
	"<BlIjLJCfSC[5]LC>",
	"{cilCsi[8]ffLJSd}",
	"{C<BlIjLJCfSC[5]LC>dpLCJBfl{cilCsi[8]ffLJSd}I}",
	"<cl[5]>",
	"<sIsspcIjLCI>",
	"<IcpjjicJjdSJ>",
	"<JCLicLCJlLLL>",
	"<<sIsspcIjLCI>L<IcpjjicJjdSJ>dS<JCLicLCJlLLL>>",
	"{<cl[5]>j<<sIsspcIjLCI>L<IcpjjicJjdSJ>dS<JCLicLCJlLLL>>Llp}",
	"<Cpjpcds>",
	"{ciLLC}",
	"<IdJjjCpscIdI>",
	"{ppJJf}",
	"{lCpSdIjL}",
	"<sLc{ppJJf}[7]{lCpSdIjL}SpIji>",
	"{<sLc{ppJJf}[7]{lCpSdIjL}SpIji>SJC}",
	"{Lll}",
	"{dlcc[7]Jf{Lll}[11]csj}",
	"{Jldld[4]I{dlcc[7]Jf{Lll}[11]csj}}",
	"{fpl}",
	"<f{fpl}Sds>",
	"{IjsIfJJfdfsS}",
	"{jfsljijdlSfC}",
	"<Lp[2]fJClfSIdfJ>",
	"<LBlJpjSjjsCC>",
	"{jpLpjpJdidBc}",
	"<Idc>",
	"{SjIclCfSslBJ}",
	"<lfJ{SjIclCfSslBJ}lfSjdLCS>",
	"{cl}",
	"<siLilSidcLS>",
	"<pL>",
	"{IJjsfifIssJI}",
	"{S{cl}jB<siLilSidcLS><pL>{IJjsfifIssJI}ssjSB}",
	"<fBBLjj[12]fCcLsl>",
	"{BsjSdIIppS}",
	"<iIc[6]J<fBBLjj[12]fCcLsl>SfB{BsjSdIIppS}JIB>",
	"<fpcsiIIiIfCJ>",
	"{LfISIfjfBicC}",
	"{pLcs}",
	"{<fpcsiIIiIfCJ>lBddCCj{LfISIfjfBicC}S{pLcs}J}",
	"{ifiI}",
	"<JBCC>",
	"{SB}",
	"<pssLf[6]IiC{ifiI}<JBCC>{SB}s>",
	"{JB[13]}",
	"{dps<iIc[6]J<fBBLjj[12]fCcLsl>SfB{BsjSdIIppS}JIB>ssL{<fpcsiIIiIfCJ>lBddCCj{LfISIfjfBicC}S{pLcs}J}[13]L<pssLf[6]IiC{ifiI}<JBCC>{SB}s>{JB[13]}f}",
	"{Bffpi[9]J}",
	"{liCipBdScs{Bffpi[9]J}s}",
	"<CCis>",
	"{SSjcsS[8]L<CCis>L}",
	"{IIjCCjSLfCdp}",
	"{fSdCscBi[4]cd}",
	"<fJj>",
	"<siIj>",
	"<<fJj>d<siIj>jip>",
	"<B<<fJj>d<siIj>jip>fJdIdijJic>",
	"{SsjjBlcJcfSI}",
	"{i{SsjjBlcJcfSI}lSsjCLjjd[4]J}",
	"{iJLC}",
	"{cJJjSf}",
	"{LiLJciScl}",
	"<CpiC>",
	"<BiJ{iJLC}{cJJjSf}pf{LiLJciScl}c<CpiC>cf>",
	"<SlSjjliBBspp>",
	"<pB{i{SsjjBlcJcfSI}lSsjCLjjd[4]J}C<BiJ{iJLC}{cJJjSf}pf{LiLJciScl}c<CpiC>cf>dL<SlSjjliBBspp>jSlB>",
	"<CIpCpIBdIIcd>",
	"<jsdBBdIIBfIp>",
	"{{p}sB}",
	"<cJjIcBddijfi>",
	"{dIpLlCc[13]SjBiS}",
	"<ccfclcLCjpLi>",
	"<Cdc>",
	"<d[15]CjII<Cdc>i[13]CjfsL>",
	"{ipissifiBBp}",
	"<L{ipissifiBBp}JlSIc>",
	"<djLcslBBSSSp>",
	"<j<djLcslBBSSSp>ji>",
	"{ILSIfJCfSiSj}",
	"{CfcfIScjl}",
	"{dfpSjS}",
	"<j[11]c>",
	"<BcJ{CfcfIScjl}iclc{dfpSjS}J<j[11]c>l>",
	"{sClcd<BcJ{CfcfIScjl}iclc{dfpSjS}J<j[11]c>l>BClSil}",
	"{BSdCclIC}",
	"<d>",
	"<fcSIBjciIdlL>",
	"<ipS>",
	"<CSJpsf[3]S<fcSIBjciIdlL>j<ipS>S{i}>",
	"{jiCJdc<CSJpsf[3]S<fcSIBjciIdlL>j<ipS>S{i}>IlCcB}",
	"{IJBpCfdsIiJp}",
	"<sdSJ[15]CcIS[8]Lppd>",
	"<L{IJBpCfdsIiJp}Js<sdSJ[15]CcIS[8]Lppd>j{L}dJdif>",
	"{<L{IJBpCfdsIiJp}Js<sdSJ[15]CcIS[8]Lppd>j{L}dJdif>p}",
	"{IIdic[14]spipp[13]B}",
	"<SsLsIjJslCBC>",
	"{LfcJLCjlf}",
	"<pI[5]jifpcfsIfl>",
	"{CfLCjLdsJcLi}",
	"<Idjd[13]IfpIifcI[2]>",
	"<p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl>",
	"<fpjcfIpBsjd[2]C>",
	"{sssjidL[12]Idjcj}",
	"{BpdJppipssfC}",
	"{j[8]BcdJijdIdif}",
	"<SCfjL>",
	"{{BpdJppipssfC}C{j[8]BcdJijdIdif}flpjCL<SCfjL>sS}",
	"{jdIB}",
	"<f[14]fCBI>",
	"<JjCsSJ<f[14]fCBI>[7]pCJdL>",
	"<cSCSBJLilSC>",
	"<dB<cSCSBJLilSC>cBsfJi>",
	"{CfISddBpllIs}",
	"<jic>",
	"<cLCSIsCsCCiC>",
	"{Cf{CfISddBpllIs}S<jic>sB<cLCSIsCsCCiC>Ipp}",
	"<SJjLccJjCdcB>",
	"{SC}",
	"<pBlssJJS{SC}djS>",
	"{fiiiC[15]cSiJSBJ}",
	"<Bf{fiiiC[15]cSiJSBJ}lcfs>",
	"{JijCilIscp}",
	"<LlCLSL{JijCilIscp}cLJjp>",
	"<<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf>",
	"<dIjS>",
	"<IlJfjl[3]l[12]Lcj[4]dj>",
	"{IJjCfiLiSJpd}",
	"<BCjJpCfIsI{IJjCfiLiSJpd}J>",
	"{jdidfBJf}",
	"{LfCBfcsCiII{jdidfBJf}}",
	"{f}",
	"<dIffIl[1]JjLffI>",
	"<pjidISjlfBdj>",
	"<plL>",
	"<<pjidISjlfBdj>pIjSBISi<plL>>",
	"<iSdI[6]JicIJL[12]IJ>",
	"{sBifSJSILLd<iSdI[6]JicIJL[12]IJ>[4]}",
	"<CljCBLSILsds>",
	"{IB{sBifSJSILLd<iSdI[6]JicIJL[12]IJ>[4]}jS<CljCBLSILsds>ICSBli}",
	"{cfS[4]}",
	"{sIcjBiCJfcjL}",
	"<LICfSS>",
	"<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>",
	"{IlLppBSpiCpp}",
	"<{IlLppBSpiCpp}>",
	"<cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd>",
	"{CSpspfCLpLI}",
	"<B[6]{CSpspfCLpLI}JCSJj>",
	"<csjdjsJcL[4]cfJ>",
	"{pJ[9]sdfIlsjjLL}",
	"{sfBfjSc[2]pcJBf}",
	"<<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC>",
	"{df}",
	"<sLSCcspIjsfC>",
	"<sBfJBpJCpBpi>",
	"{<sLSCcspIjsfC>sBj<sBfJBpJCpBpi>ldLf}",
	"<jsLlIC>",
	"{lfflBp<jsLlIC>cIClf}",
	"{sLBdfsJiJdLC}",
	"{liL}",
	"<Sldsf>",
	"<{sLBdfsJiJdLC}{liL}JiIfJ[12]fL<Sldsf>>",
	"<<{sLBdfsJiJdLC}{liL}JiIfJ[12]fL<Sldsf>>spiIjiccf>",
	"<lplLlfsdfdCL>",
	"{jCBS[9]CjcILiJC}",
	"{{jCBS[9]CjcILiJC}BLf}",
	"{SfJBsdsicscp}",
	"<fd{SfJBsdsicscp}LscLIBICC>",
	"<fLjfcs>",
	"{picis}",
	"<<fLjfcs>dJIJLBsl{picis}fJ>",
	"{pSSJLfclLLc<<fLjfcs>dJIJLBsl{picis}fJ>}",
	"{LccBfBjJBdBS[6]}",
	"{SIIjIldSicIB}",
	"{ic}",
	"{LjJ}",
	"{BdJcBi}",
	"{sp}",
	"<jId{LjJ}ffiS{BdJcBi}B{sp}I>",
	"{lLpLCilJCSfJ}",
	"<cjBcidCs{lLpLCilJCSfJ}iiS>",
	"{sILC}",
	"<IBdId>",
	"{IsidcssLIBIc}",
	"{ldlsCS}",
	"{sLdCpsiiflis}",
	"{BjlpcijfLjpL}",
	"<<IBdId>JJ{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls>",
	"<sCii>",
	"{f<sCii>jsiL}",
	"{fCddCfdCpdJI}",
	"<i{fCddCfdCpdJI}s>",
	"{BS{f<sCii>jsiL}CsCBjll<i{fCddCfdCpdJI}s>p}",
	"{BsI}",
	"{plpiBB}",
	"<cJiJsdsLSsdl>",
	"{dljLiS}",
	"{I{plpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}Jj}",
	"<jBSjlI>",
	"{psilCdLCSdIs}",
	"<SsdjclSssfCl>",
	"{CBC}",
	"{CspdsjL}",
	"{lL[6]sIIcLC{CBC}jS{CspdsjL}}",
	"<{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji>",
	"{lfC}",
	"{pCds{lfC}dclfl[6]ds}",
	"{lS{pCds{lfC}dclfl[6]ds}J}",
	"{ldjiSfj}",
	"<plClJLjf>",
	"{J<plClJLjf>ls}",
	"<IJdsiiBpScIC>",
	"{j<IJdsiiBpScIC>BllddBfBJs}",
	"{piBIBjc}",
	"<ijdiSCJBIiLS>",
	"<flpSdJiJcsdd>",
	"{J}",
	"<CpS>",
	"<JJLsS[10]JjlIsBf>",
	"<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>",
	"{Bi[5]dsJIsdlIds}",
	"<dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj>",
	"{ILfBdBSf}",
	"{lsJJsfBdIiiB}",
	"<Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc>",
	"<jcspSIfIfCdJ>",
	"{Bdjssi}",
	"<iBlsdjdS>",
	"{dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S}",
	"<flfpldsjdCI[2]f>",
	"{LcIB}",
	"<Sdd{LcIB}lICLdsj>",
	"{ICIdcLsl}",
	"<jl>",
	"{Sl[2]SCijBIpJfC}",
	"<C[5]LJISS>",
	"{IISI<C[5]LJISS>CC}",
	"{pllI}",
	"<I{pllI}SsLssfc[13]dpI>",
	"{fsiiLIpsc[12]cIS}",
	"<BLcdsCjSBSsi>",
	"<CfjBSJdBpJJC[4]>",
	"<iLdjj>",
	"<fCpjCJJdclSd>",
	"{SCpsi}",
	"<Jil>",
	"<icB{SCpsi}<Jil>lsdIBiI>",
	"{isipjdlsSjlS}",
	"{sjdci}",
	"{BpfscIcLdCLd}",
	"<f{BpfscIcLdCLd}c>",
	"<pBpCspifsjlf>",
	"{pfiiCdBj<pBpCspifsjlf>jfJ}",
	"{CcLCfpCj}",
	"{llfffsddlcjf}",
	"{Sp[7]s}",
	"<cSCJJcSSjjiJ>",
	"{ifcBjsdcCsjj}",
	"{SLfCsLSIISIS}",
	"{SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps}",
	"<pIjp>",
	"{BJiidBSciJlI}",
	"<{BJiidBSciJlI}fd>",
	"<ijjCJl>",
	"{L<ijjCJl>i[7]pcS}",
	"{<{BJiidBSciJlI}fd>fLI[8]Sp{L<ijjCJl>i[7]pcS}cIBLC}",
	"<fscfSBc[8]>",
	"{Cd}",
	"<SiffijcIiIs>",
	"<Cc<SiffijcIiIs>Ls[3]cCjii{p}L>",
	"{lsI{Cd}LpSdI<Cc<SiffijcIiIs>Ls[3]cCjii{p}L>di}",
	"<fd[5]SJpiSILpBp>",
	"{JIJIcJcJ<fd[5]SJpiSILpBp>JLj}",
	"{ddCiclSBBCcs}",
	"<BBjL{ddCiclSBBCcs}sCjsCfL>",
	"{BjfL}",
	"{Jjl}",
	"<SpidpfIjJidd>",
	"<Bjdljps>",
	"<sLdliddddJI>",
	"<i<sLdliddddJI>dLSffI>",
	"{JJ}",
	"{jLcjdCCcjpCS}",
	"<JfdJIijddBCB>",
	"{{JJ}dII{jLcjdCCcjpCS}c<JfdJIijddBCB>CBdLJ}",
	"{LBcjJ}",
	"{sL{{JJ}dII{jLcjdCCcjpCS}c<JfdJIijddBCB>CBdLJ}Jd{LBcjJ}SSIjfJ}",
	"{lcfdCSiLIf[1]BJ}",
	"<jpLLSIdsJpii>",
	"{Lf}",
	"{Sp[11]}",
	"{{Sp[11]}}",
	"<Bpifl{s}lIcfJL>",
	"{lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j}",
	"{li}",
	"<iLlsiBljIJS[8]c>",
	"<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>",
	"<CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI>",
	"{jIScpBCCdIJ}",
	"<CjjBClii>",
	"<LjciSBjJfp<CjjBClii>J>",
	"<BssijcJdsjid>",
	"<fJd<BssijcJdsjid>dSCcIfcl>",
	"<CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is>",
	"{IislccIiIiIl}",
	"<f[15]f>",
	"{i{IislccIiIiIl}Cd<f[15]f>fIji}",
	"<fplpclLIiJLd>",
	"<LlI[4]I<B>i<fplpclLIiJLd>IBSBf>",
	"{dSldj}",
	"<SBdddLBI>",
	"<LpdfcLssLfs>",
	"{ff<SBdddLBI>SIjJ<LpdfcLssLfs>jf<C>L}",
	"{lIpSjjplsifI}",
	"<SslspCBcpScS>",
	"{fdCILSCdffJi}",
	"{piCfIsp{sf}Lf{fdCILSCdffJi}p}",
	"<Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf>",
	"<pIBsBBJccSJB>",
	"<<pIBsBBJccSJB>CISjiJ>",
	"{SBcdfjJ[5]dcflp}",
	"<BciIsp>",
	"{sdscC[8]IIjCfp}",
	"<sCBBIpJJCJc>",
	"{icSiBljfcps}",
	"{iBj}",
	"{pJBSiJjcIcSp}",
	"{S}",
	"<lcddCJ>",
	"{IBi}",
	"<JBspd{IBi}BlBpf>",
	"{IpC}",
	"<JiSflJpjsciS>",
	"<J<JiSflJpjsciS>>",
	"<IdcipJLcilpi[5]>",
	"{fsBLCdspJs<IdcipJLcilpi[5]>s}",
	"<Jp>",
	"{B<Jp>JcBJBpLC<c>i}",
	"<ljiScBj[16]fLdfi>",
	"<<I>J>",
	"<SBscfIC<<I>J>jllB>",
	"<cL[13]IBBsdLLcLI>",
	"<iBLjBSCjL>",
	"<jL>",
	"<<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B>",
	"<LIfBLcc>",
	"{iciLIC}",
	"<fISIspfJl>",
	"{fJJCcidJSjpC}",
	"{js{fJJCcidJSjpC}JBS}",
	"<ijC>",
	"<Bj[11]iLBISJS>",
	"<pJiLd>",
	"<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>",
	"<IfpCS>",
	"{cpddcC<IfpCS>LLcfl}",
	"<<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<IfpCS>LLcfl}i>",
	"<SBiCfCcLBSpc>",
	"<s<SBiCfCcLBSpc>cSBjB>",
	"<fJJpfpcIj>",
	"<BpJdsJCIJfSc>",
	"{LCpf<fJJpfpcIj>Cc<BpJdsJCIJfSc>disj}",
	"<LiI>",
	"<IlJ>",
	"{SBCc}",
	"{Ss}",
	"<cfJlScdI>",
	"<BcS<cfJlScdI>BpBdJSSd>",
	"{cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc}",
	"{IfiilBJIB}",
	"{cSSsjS[15]BJc}",
	"{ccfdBdl[5]SCIBj}",
	"<Jlcijcf[12]pLLlC>",
	"<{ccfdBdl[5]SCIBj}llpddjis<Jlcijcf[12]pLLlC>[10]fs>",
	"<cC>",
	"{SlsdI}",
	"<IlC>",
	"<ppfBIlI>",
	"{sIijdS}",
	"{SifC<IlC>J<ppfBIlI>{sIijdS}pLi[7]}",
	"<fiJSj>",
	"<lScp<fiJSj>SLSC>",
	"{<lScp<fiJSj>SLSC>JfICSL}",
	"{sjScLpcCLipf}",
	"{ICdidcl}",
	"<fpJ>",
	"{<fpJ>ICICpS}",
	"<iliflIjjBcJp>",
	"<CiJ[8]B>",
	"<lfc<iliflIjjBcJp>Liji<CiJ[8]B>cC[10]S>",
	"<cJL{ICdidcl}pcLlJ{<fpJ>ICICpS}I<lfc<iliflIjjBcJp>Liji<CiJ[8]B>cC[10]S>>",
	"<JCSdSSdssIjB>",
	"{IjdclcC}",
	"{d[10]LdIlSjIs}",
	"{{IjdclcC}fC{d[10]LdIlSjIs}JLcffIic}",
	"<SCLCdiifLpcB>",
	"<<SCLCdiifLpcB>>",
	"<fcLj<JCSdSSdssIjB>JdS{{IjdclcC}fC{d[10]LdIlSjIs}JLcffIic}Jl<<SCLCdiifLpcB>>>",
	"{dL}",
	"{d}",
	"{slcfdJLdiCcC}",
	"{lcj}",
	"{SJIs}",
	"<{d}ipC{slcfdJLdiCcC}IBdJ{lcj}{SJIs}>",
	"<fdILpSjpL>",
	"<S<fdILpSjpL>>",
	"<ipIiIlBsi<{d}ipC{slcfdJLdiCcC}IBdJ{lcj}{SJIs}><S<fdILpSjpL>>J>",
	"{LCcpIisfjSci}",
	"{BBlCBcCfJSpf}",
	"<dJcS[4]sfl{BBlCBcCfJSpf}JScd>",
	"<<dJcS[4]sfl{BBlCBcCfJSpf}JScd>IJdl>",
	"{SIifjBpCSiCB}",
	"<IjdpiLssldjC>",
	"{SlIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>I}",
	"{CIcciLSc{SlIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>I}Sld}",
	"{LCfiLLpfJf}",
	"{JLjJJIjJs}",
	"{sCdIcLiillId}",
	"{Sj{sCdIcLiillId}d}",
	"<flscjdJpLL>",
	"{fcjSLfiiIi[3]sJ}",
	"<{fcjSLfiiIi[3]sJ}si>",
	"<BidlICcCip>",
	"{BBISl<BidlICcCip>LSS}",
	"<sC>",
	"<LLS{BBISl<BidlICcCip>LSS}<sC>Id[12]>",
	"<CJd>",
	"<iBid<CJd>LBLSjjC>",
	"{dScSlsj}",
	"{fjBLjLiLfIf{dScSlsj}}",
	"{JjSSBSsi{fjBLjLiLfIf{dScSlsj}}cBp}",
	"{fIfjBjpfCidf}",
	"<Sl>",
	"{<Sl>i}",
	"<lLdj>",
	"<LCiBlj>",
	"<ScJ>",
	"{JccSBc[12]LJSfSs}",
	"{ILBSBJ[15]{JccSBc[12]LJSfSs}BJpjs}",
	"<iLdilssflJLC>",
	"<i<iLdilssflJLC>JcScCBpcl>",
	"<fJL>",
	"<CILpcsLliSf<fJL>>",
	"<jj<i<iLdilssflJLC>JcScCBpcl>BLc<CILpcsLliSf<fJL>>S<s>lIf>",
	"<lcf[8]lLf[6]LcJSis>",
	"{jI}",
	"{fcssCCLdlfCl[9]}",
	"<lscdSJ>",
	"<CcBBlJBLsJ[7]Bj>",
	"{i<lscdSJ>JIJplB<CcBBlJBLsJ[7]Bj>lpC}",
	"<Bjl[14]jf[14]BBSBfpC>",
	"<iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f>",
	"<lfLiJj>",
	"<Cs[1]fSssJcBJJ>",
	"<B<Cs[1]fSssJcBJJ>IjifBSCBpB>",
	"{dSfpjdCdSidp}",
	"{I[3]sfcs}",
	"<lSfSjsB>",
	"{<lSfSjsB>IdfJCifILsC}",
	"{dICicfildfJL}",
	"{pCSdlBsSd[13]SCS}",
	"{{dICicfildfJL}LBfSLlid{pCSdlBsSd[13]SCS}}",
	"<JcSfSJB>",
	"{diScIiiisdBC}",
	"{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}",
	"{IiccSICJjic}",
	"<JClcSd>",
	"<jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>>",
	"<ifJ>",
	"<si>",
	"{ldCSLjLsIdsp}",
	"{{ldCSLjLsIdsp}SljBcjCdBj}",
	"{jSCliJLc}",
	"{iCs}",
	"{pJBpBfsspd}",
	"{fIpCcfscsSiI}",
	"<LcLJfdLliLBp>",
	"{Bd<LcLJfdLliLBp>BpdjpLISp}",
	"<ISJ[3]ffCCl>",
	"{dLiLC<ISJ[3]ffCCl>lliSjp}",
	"{BcsfcCCCB}",
	"<fLlipc>",
	"{Iff{BcsfcCCCB}c<fLlipc>SsiClj}",
	"<{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}>",
	"<dfI[16]djjS>",
	"{sLfS<dfI[16]djjS>BfspIcc}",
	"<IlSdlLlBIpSC>",
	"<LL<IlSdlLlBIpSC>iJpLiIsfL>",
	"{BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi}",
	"<C{li}fjJ>",
	"{jJlji}",
	"{cSLfcSIBfjJf}",
	"<jILjcI>",
	"<BCdcpf[7]Bj<jILjcI>IJB>",
	"<L<BCdcpf[7]Bj<jILjcI>IJB>pBBffIcsi[5]j>",
	"{LjsJcSI[4]lCCl}",
	"{BBdLppBjiSil}",
	"{psi[12]ssIIIi}",
	"{flCisdlcBIps}",
	"<CdLCI[8]jfL>",
	"{{flCisdlcBIps}<CdLCI[8]jfL>LjS[4]jfSILji}",
	"{CLICc}",
	"{sCCJfifBi{CLICc}lj}",
	"{fsiLjBBILpLl}",
	"{fJcsBfJdfics}",
	"{lL}",
	"<{fsiLjBBILpLl}BcBL{fJcsBfJdfics}L{lL}JlfS>",
	"<jBBLcffSILdC[5]>",
	"{sfdSCjjCjfsi}",
	"<s<jBBLcffSILdC[5]>s{sfdSCjjCjfsi}>",
	"<sLdcCdIifcjL>",
	"{IjcfjBIIssdl}",
	"<JCLc{IjcfjBIIssdl}dlSSlJS>",
	"{iIcC}",
	"{fdJijijLI{iIcC}cL}",
	"{fpBLij{fdJijijLI{iIcC}cL}[13]jCCSd}",
	"{fBdjdCBIJdLB}",
	"<CS{fBdjdCBIJdLB}dJdipJSip>",
	"<lLsJlJCcfJcp>",
	"{fIBIfsI<lLsJlJCcfJcp>CCiJ}",
	"{pcssisscllcp}",
	"{JIBidBBSf}",
	"<p[7]l[14]JLiBBLBsIl>",
	"<IdjJpsIlfJcc[6]>",
	"{jCcBd[4]JlcBSsp}",
	"<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>",
	"<l[6]fBfJpsBicBf>",
	"{jfILC}",
	"<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis>",
	"<ldlsBddf>",
	"<<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS>",
	"<BBidSJlclJf>",
	"<d<BBidSJlclJf>jfBddIpCdI>",
	"{LpBJdfL}",
	"<sCLlJCcLBLj>",
	"<BCCsciillfii>",
	"<lSiSJjLIlc[1]li>",
	"{ISdsJc[8]SsijpC}",
	"{LjiliLiscSSj}",
	"<IfBLCJslC>",
	"{LpjpiJLsIfj<IfBLCJslC>}",
	"{d[9]cdilcIli[15]sis}",
	"<l{d[9]cdilcIli[15]sis}f[8]SfSILLSiS>",
	"{fSJICjIJJLdi}",
	"{lCdSsJs}",
	"{CLScspdjfcdd}",
	"{sll{CLScspdjfcdd}sId}",
	"<LsLsjIlLJ>",
	"{BJ}",
	"{SpIiSsIsJpsJ}",
	"<J[5]BfLiBjJjdIc>",
	"<fs>",
	"{IBLLd[13]JCip}",
	"<jdd{IBLLd[13]JCip}dccJscCf>",
	"{d<jdd{IBLLd[13]JCip}dccJscCf>ipij[7]f{S}LLss}",
	"<ljp>",
	"{ifJIllsJflLL}",
	"<CCBBSpsL{ifJIllsJflLL}Jjp>",
	"<di[15]sBpJiiIJ>",
	"{ILLC}",
	"<d{ILLC}CBdJCjipfs>",
	"{SBdcLSpCiBJJ}",
	"<cJiJj[3]cfSsISj>",
	"{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}",
	"{sf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC}",
	"{sjBiLljIddpI}",
	"{cp{sjBiLljIddpI}isBi}",
	"<SLBpjcB[5]JifiB>",
	"{pCfsisJlcdBB}",
	"<C<SLBpjcB[5]JifiB>{S}lCB{pCfsisJlcdBB}dcLCi>",
	"{pJffdcSCjjjj}",
	"<JSCdlBiSJffB>",
	"{CClcs[12]{pJffdcSCjjjj}Cdfs<JSCdlBiSJffB>L}",
	"{iLJicdIISI<c>C}",
	"<BlIJdpBsfiJC>",
	"{JlciLSfs[10]plfI}",
	"{ldcB}",
	"<pj[3]dc<BlIJdpBsfiJC>lB{JlciLSfs[10]plfI}{ldcB}fBJ>",
	"<CSc>",
	"{dfJsJIBC<CSc>[7]}",
	"<JLfBspJIfpcB[12]>",
	"<SJLIBfBS[9]iSjs>",
	"{IClCIssIpicL}",
	"{cdilSidJL}",
	"{ICdSlpfIpIcj}",
	"{spi[2]jsjdjipBi}",
	"{JcJ}",
	"<dpsisILdiiif>",
	"{{spi[2]jsjdjipBi}dBCpp{JcJ}Sf<dpsisILdiiif>pI}",
	"{jlsS[10]dccicIjC}",
	"<ICJpL{C}L>",
	"<df[16]BfipJILpfs>",
	"<CJpfSlSs[13]f<df[16]BfipJILpfs>>",
	"<BSiSlffff>",
	"<jLdBcBjIfijl>",
	"{fI<BSiSlffff>C{i}fBl<jLdBcBjIfijl>}",
	"{BfSpJi}",
	"<csSjJJ>",
	"{IJiBjJcjlIlC}",
	"{ij{IJiBjJcjlIlC}}",
	"<{BfSpJi}<csSjJJ>jdCCCiCcc{ij{IJiBjJcjlIlC}}>",
	"{dlCjISs}",
	"<fjLlsSBlL>",
	"<pcCl[16]jf>",
	"{jfBpdJlsCpsj}",
	"{ldl}",
	"<c<s>J<fjLlsSBlL>iCl<pcCl[16]jf>c{jfBpdJlsCpsj}i{ldl}>",
	"<BSiBCpfs[6]BS[3]p>",
	"<CcfSjfLC>",
	"{C[9]lsldjI<CcfSjfLC>LSJI}",
	"{<BSiBCpfs[6]BS[3]p>{C[9]lsldjI<CcfSjfLC>LSJI}ssIIjBIIpB}",
	"<sslLjJ>",
	"{dB}",
	"<Jj[15]<sslLjJ>IppCL{dB}BI>",
	"{sj[15]ljIiL}",
	"{CCIld[3]fppCCJf}",
	"<CjsiSSdJB[15]Bdl>",
	"<{sj[15]ljIiL}B{CCIld[3]fppCCJf}I<CjsiSSdJB[15]Bdl>pjLJpCf>",
	"<pjLiscCdLIjc>",
	"{CCLJlc}",
	"{p<pjLiscCdLIjc>SSjspsll{CCLJlc}l}",
	"<pf>",
	"<LCsIfdClLpSC>",
	"{sBCBj}",
	"<JSS>",
	"{dlcCBpIpCBjS}",
	"{pjsLLB<JSS>f{dlcCBpIpCBjS}sBB}",
	"{iidcJs{pjsLLB<JSS>f{dlcCBpIpCBjS}sBB}SSflc}",
	"{BiSdSsISsipC}",
	"<IfdLiId>",
	"{SfidCscIcpiS}",
	"<{BiSdSsISsipC}SS[12]Ccp<IfdLiId>[2]BI{SfidCscIcpiS}sf>",
	"<j<{BiSdSsISsipC}SS[12]Ccp<IfdLiId>[2]BI{SfidCscIcpiS}sf>llJJi>",
	"{cidjii}",
	"<ipCpsjldlsld>",
	"{jSjBdJdBlcBC}",
	"{cIScsSdI[13]dL{jSjBdJdBlcBC}L}",
	"{s[11]jI}",
	"<IpiSc[10]SJp[12]dJjs>",
	"{ssliICCSCicS}",
	"{ILjSi[6]fdJCCJ}",
	"<ll>",
	"{cC<IpiSc[10]SJp[12]dJjs>Ljsl{ssliICCSCicS}{ILjSi[6]fdJCCJ}p<ll>S}",
	"<lsjJcdflJdLl>",
	"{sBlCssLslijI}",
	"{Lpj}",
	"{l{sBlCssLslijI}{Lpj}jpisSs}",
	"<LJsscLS>",
	"{dS}",
	"<CsJ>",
	"<cBiiCss>",
	"<lISfL<cBiiCss>pCCsLS>",
	"{lCpLBf[13]lclsLJ}",
	"<<lISfL<cBiiCss>pCCsLS>JC{lCpLBf[13]lclsLJ}BjSldIfB>",
	"{ipSJJBSiSifJ}",
	"<CdisJsBBsC>",
	"<I{ipSJJBSiSifJ}IpcJlplps<CdisJsBBsC>>",
	"<SllBSsipssd<I{ipSJJBSiSifJ}IpcJlplps<CdisJsBBsC>>>",
	"{ddSJsCLslBIS}",
	"<IJCffs>",
	"{{ddSJsCLslBIS}<IJCffs>}",
	"{SJjSCSIdBiI}",
	"{iJppjLl}",
	"<C{iJppjLl}CcjLS>",
	"{IcIiBCBd[9]Sj}",
	"{pJJLs}",
	"{BLBcCJSS}",
	"<jIIjdicpCcLl>",
	"<CJd{BLBcCJSS}silSi<jIIjdicpCcLl>JL>",
	"{SpllSpJpSis}",
	"<clLcsiljLBjL>",
	"<I{SpllSpJpSis}BIsIjd<clLcsiljLBjL>ssC>",
	"{sJciJpjssjCi}",
	"<CCB>",
	"{cIiJsjJsCBjl}",
	"{sclLBdpLISCp}",
	"<LB{sJciJpjssjCi}<CCB>{cIiJsjJsCBjl}Jcd{sclLBdpLISCp}dIS>",
	"{<CJd{BLBcCJSS}silSi<jIIjdicpCcLl>JL>cill<I{SpllSpJpSis}BIsIjd<clLcsiljLBjL>ssC>lI<LB{sJciJpjssjCi}<CCB>{cIiJsjJsCBjl}Jcd{sclLBdpLISCp}dIS>Bp[3]C}",
	"{CdJ[6]JCfISSJLc}",
	"<spSSJLiJSCpC>",
	"<ICiCiidj{CdJ[6]JCfISSJLc}<spSSJLiJSCpC>I[4]S>",
	"{lILj<ICiCiidj{CdJ[6]JCfISSJLc}<spSSJLiJSCpC>I[4]S>BlfssBS}",
	"{dfIIp}",
	"{ssIBicliddBc}"
};
int G_agg_sizes[] = {
	sizeof(struct A1),
	sizeof(struct A2),
	sizeof(union A3),
	sizeof(union A4),
	sizeof(struct A5),
	sizeof(struct A6),
	sizeof(struct A7),
	sizeof(union A8),
	sizeof(union A9),
	sizeof(struct A10),
	sizeof(union A11),
	sizeof(union A12),
	sizeof(union A13),
	sizeof(union A14),
	sizeof(struct A15),
	sizeof(union A16),
	sizeof(struct A17),
	sizeof(union A18),
	sizeof(union A19),
	sizeof(union A20),
	sizeof(union A21),
	sizeof(union A22),
	sizeof(struct A23),
	sizeof(union A24),
	sizeof(union A25),
	sizeof(union A26),
	sizeof(struct A27),
	sizeof(struct A28),
	sizeof(union A29),
	sizeof(union A30),
	sizeof(struct A31),
	sizeof(union A32),
	sizeof(union A33),
	sizeof(union A34),
	sizeof(union A35),
	sizeof(union A36),
	sizeof(union A37),
	sizeof(struct A38),
	sizeof(struct A39),
	sizeof(struct A40),
	sizeof(union A41),
	sizeof(union A42),
	sizeof(union A43),
	sizeof(union A44),
	sizeof(union A45),
	sizeof(union A46),
	sizeof(union A47),
	sizeof(union A48),
	sizeof(union A49),
	sizeof(union A50),
	sizeof(union A51),
	sizeof(struct A52),
	sizeof(union A53),
	sizeof(union A54),
	sizeof(struct A55),
	sizeof(union A56),
	sizeof(struct A57),
	sizeof(union A58),
	sizeof(struct A59),
	sizeof(union A60),
	sizeof(struct A61),
	sizeof(union A62),
	sizeof(union A63),
	sizeof(union A64),
	sizeof(union A65),
	sizeof(union A66),
	sizeof(union A67),
	sizeof(struct A68),
	sizeof(union A69),
	sizeof(union A70),
	sizeof(struct A71),
	sizeof(struct A72),
	sizeof(union A73),
	sizeof(union A74),
	sizeof(struct A75),
	sizeof(struct A76),
	sizeof(union A77),
	sizeof(union A78),
	sizeof(union A79),
	sizeof(union A80),
	sizeof(union A81),
	sizeof(union A82),
	sizeof(struct A83),
	sizeof(union A84),
	sizeof(union A85),
	sizeof(struct A86),
	sizeof(struct A87),
	sizeof(struct A88),
	sizeof(struct A89),
	sizeof(struct A90),
	sizeof(union A91),
	sizeof(union A92),
	sizeof(struct A93),
	sizeof(union A94),
	sizeof(struct A95),
	sizeof(struct A96),
	sizeof(struct A97),
	sizeof(struct A98),
	sizeof(union A99),
	sizeof(union A100),
	sizeof(union A101),
	sizeof(struct A102),
	sizeof(union A103),
	sizeof(struct A104),
	sizeof(union A105),
	sizeof(struct A106),
	sizeof(struct A107),
	sizeof(struct A108),
	sizeof(union A109),
	sizeof(union A110),
	sizeof(struct A111),
	sizeof(struct A112),
	sizeof(struct A113),
	sizeof(union A114),
	sizeof(struct A115),
	sizeof(struct A116),
	sizeof(struct A117),
	sizeof(struct A118),
	sizeof(union A119),
	sizeof(union A120),
	sizeof(union A121),
	sizeof(union A122),
	sizeof(union A123),
	sizeof(union A124),
	sizeof(struct A125),
	sizeof(struct A126),
	sizeof(struct A127),
	sizeof(struct A128),
	sizeof(struct A129),
	sizeof(struct A130),
	sizeof(struct A131),
	sizeof(struct A132),
	sizeof(struct A133),
	sizeof(struct A134),
	sizeof(union A135),
	sizeof(union A136),
	sizeof(union A137),
	sizeof(struct A138),
	sizeof(union A139),
	sizeof(struct A140),
	sizeof(union A141),
	sizeof(union A142),
	sizeof(union A143),
	sizeof(struct A144),
	sizeof(struct A145),
	sizeof(struct A146),
	sizeof(struct A147),
	sizeof(struct A148),
	sizeof(struct A149),
	sizeof(struct A150),
	sizeof(struct A151),
	sizeof(union A152),
	sizeof(struct A153),
	sizeof(union A154),
	sizeof(union A155),
	sizeof(union A156),
	sizeof(union A157),
	sizeof(union A158),
	sizeof(union A159),
	sizeof(struct A160),
	sizeof(struct A161),
	sizeof(union A162),
	sizeof(union A163),
	sizeof(struct A164),
	sizeof(struct A165),
	sizeof(union A166),
	sizeof(union A167),
	sizeof(union A168),
	sizeof(struct A169),
	sizeof(struct A170),
	sizeof(union A171),
	sizeof(union A172),
	sizeof(struct A173),
	sizeof(struct A174),
	sizeof(struct A175),
	sizeof(union A176),
	sizeof(struct A177),
	sizeof(union A178),
	sizeof(union A179),
	sizeof(union A180),
	sizeof(struct A181),
	sizeof(union A182),
	sizeof(union A183),
	sizeof(struct A184),
	sizeof(union A185),
	sizeof(union A186),
	sizeof(union A187),
	sizeof(struct A188),
	sizeof(struct A189),
	sizeof(union A190),
	sizeof(union A191),
	sizeof(union A192),
	sizeof(union A193),
	sizeof(union A194),
	sizeof(union A195),
	sizeof(union A196),
	sizeof(union A197),
	sizeof(union A198),
	sizeof(union A199),
	sizeof(union A200),
	sizeof(union A201),
	sizeof(struct A202),
	sizeof(struct A203),
	sizeof(union A204),
	sizeof(struct A205),
	sizeof(union A206),
	sizeof(struct A207),
	sizeof(struct A208),
	sizeof(struct A209),
	sizeof(union A210),
	sizeof(struct A211),
	sizeof(struct A212),
	sizeof(union A213),
	sizeof(struct A214),
	sizeof(union A215),
	sizeof(struct A216),
	sizeof(struct A217),
	sizeof(struct A218),
	sizeof(struct A219),
	sizeof(struct A220),
	sizeof(union A221),
	sizeof(struct A222),
	sizeof(union A223),
	sizeof(union A224),
	sizeof(struct A225),
	sizeof(union A226),
	sizeof(struct A227),
	sizeof(union A228),
	sizeof(union A229),
	sizeof(struct A230),
	sizeof(struct A231),
	sizeof(union A232),
	sizeof(struct A233),
	sizeof(struct A234),
	sizeof(struct A235),
	sizeof(struct A236),
	sizeof(union A237),
	sizeof(union A238),
	sizeof(struct A239),
	sizeof(struct A240),
	sizeof(union A241),
	sizeof(union A242),
	sizeof(struct A243),
	sizeof(union A244),
	sizeof(struct A245),
	sizeof(union A246),
	sizeof(union A247),
	sizeof(struct A248),
	sizeof(union A249),
	sizeof(union A250),
	sizeof(struct A251),
	sizeof(union A252),
	sizeof(struct A253),
	sizeof(struct A254),
	sizeof(union A255),
	sizeof(struct A256),
	sizeof(union A257),
	sizeof(struct A258),
	sizeof(struct A259),
	sizeof(union A260),
	sizeof(union A261),
	sizeof(union A262),
	sizeof(union A263),
	sizeof(union A264),
	sizeof(struct A265),
	sizeof(union A266),
	sizeof(struct A267),
	sizeof(union A268),
	sizeof(struct A269),
	sizeof(union A270),
	sizeof(union A271),
	sizeof(union A272),
	sizeof(struct A273),
	sizeof(struct A274),
	sizeof(union A275),
	sizeof(union A276),
	sizeof(union A277),
	sizeof(struct A278),
	sizeof(union A279),
	sizeof(struct A280),
	sizeof(union A281),
	sizeof(struct A282),
	sizeof(union A283),
	sizeof(struct A284),
	sizeof(struct A285),
	sizeof(struct A286),
	sizeof(union A287),
	sizeof(struct A288),
	sizeof(struct A289),
	sizeof(struct A290),
	sizeof(union A291),
	sizeof(union A292),
	sizeof(union A293),
	sizeof(struct A294),
	sizeof(struct A295),
	sizeof(struct A296),
	sizeof(struct A297),
	sizeof(union A298),
	sizeof(struct A299),
	sizeof(union A300),
	sizeof(struct A301),
	sizeof(struct A302),
	sizeof(struct A303),
	sizeof(union A304),
	sizeof(union A305),
	sizeof(struct A306),
	sizeof(struct A307),
	sizeof(union A308),
	sizeof(struct A309),
	sizeof(struct A310),
	sizeof(struct A311),
	sizeof(struct A312),
	sizeof(union A313),
	sizeof(union A314),
	sizeof(struct A315),
	sizeof(struct A316),
	sizeof(union A317),
	sizeof(union A318),
	sizeof(struct A319),
	sizeof(struct A320),
	sizeof(union A321),
	sizeof(struct A322),
	sizeof(struct A323),
	sizeof(struct A324),
	sizeof(struct A325),
	sizeof(union A326),
	sizeof(union A327),
	sizeof(struct A328),
	sizeof(union A329),
	sizeof(union A330),
	sizeof(struct A331),
	sizeof(union A332),
	sizeof(struct A333),
	sizeof(union A334),
	sizeof(struct A335),
	sizeof(union A336),
	sizeof(struct A337),
	sizeof(union A338),
	sizeof(union A339),
	sizeof(struct A340),
	sizeof(struct A341),
	sizeof(struct A342),
	sizeof(union A343),
	sizeof(union A344),
	sizeof(union A345),
	sizeof(union A346),
	sizeof(struct A347),
	sizeof(union A348),
	sizeof(union A349),
	sizeof(union A350),
	sizeof(union A351),
	sizeof(union A352),
	sizeof(struct A353),
	sizeof(union A354),
	sizeof(struct A355),
	sizeof(union A356),
	sizeof(union A357),
	sizeof(union A358),
	sizeof(union A359),
	sizeof(struct A360),
	sizeof(struct A361),
	sizeof(union A362),
	sizeof(union A363),
	sizeof(struct A364),
	sizeof(struct A365),
	sizeof(struct A366),
	sizeof(struct A367),
	sizeof(struct A368),
	sizeof(union A369),
	sizeof(struct A370),
	sizeof(union A371),
	sizeof(struct A372),
	sizeof(struct A373),
	sizeof(union A374),
	sizeof(union A375),
	sizeof(struct A376),
	sizeof(union A377),
	sizeof(union A378),
	sizeof(struct A379),
	sizeof(union A380),
	sizeof(union A381),
	sizeof(union A382),
	sizeof(struct A383),
	sizeof(union A384),
	sizeof(struct A385),
	sizeof(union A386),
	sizeof(union A387),
	sizeof(struct A388),
	sizeof(union A389),
	sizeof(union A390),
	sizeof(struct A391),
	sizeof(struct A392),
	sizeof(union A393),
	sizeof(struct A394),
	sizeof(struct A395),
	sizeof(struct A396),
	sizeof(struct A397),
	sizeof(union A398),
	sizeof(struct A399),
	sizeof(union A400),
	sizeof(union A401),
	sizeof(union A402),
	sizeof(struct A403),
	sizeof(union A404),
	sizeof(union A405),
	sizeof(struct A406),
	sizeof(union A407),
	sizeof(union A408),
	sizeof(union A409),
	sizeof(struct A410),
	sizeof(union A411),
	sizeof(union A412),
	sizeof(union A413),
	sizeof(struct A414),
	sizeof(union A415),
	sizeof(union A416),
	sizeof(union A417),
	sizeof(struct A418),
	sizeof(struct A419),
	sizeof(union A420),
	sizeof(union A421),
	sizeof(union A422),
	sizeof(union A423),
	sizeof(union A424),
	sizeof(union A425),
	sizeof(struct A426),
	sizeof(union A427),
	sizeof(union A428),
	sizeof(union A429),
	sizeof(union A430),
	sizeof(struct A431),
	sizeof(union A432),
	sizeof(struct A433),
	sizeof(struct A434),
	sizeof(union A435),
	sizeof(struct A436),
	sizeof(union A437),
	sizeof(struct A438),
	sizeof(struct A439),
	sizeof(struct A440),
	sizeof(struct A441),
	sizeof(union A442),
	sizeof(struct A443),
	sizeof(union A444),
	sizeof(union A445),
	sizeof(struct A446),
	sizeof(union A447),
	sizeof(struct A448),
	sizeof(union A449),
	sizeof(struct A450),
	sizeof(struct A451),
	sizeof(struct A452),
	sizeof(union A453),
	sizeof(struct A454),
	sizeof(struct A455),
	sizeof(union A456),
	sizeof(struct A457),
	sizeof(union A458),
	sizeof(struct A459),
	sizeof(struct A460),
	sizeof(union A461),
	sizeof(union A462),
	sizeof(union A463),
	sizeof(union A464),
	sizeof(struct A465),
	sizeof(struct A466),
	sizeof(struct A467),
	sizeof(union A468),
	sizeof(union A469),
	sizeof(struct A470),
	sizeof(struct A471),
	sizeof(struct A472),
	sizeof(union A473),
	sizeof(union A474),
	sizeof(struct A475),
	sizeof(union A476),
	sizeof(union A477),
	sizeof(union A478),
	sizeof(struct A479),
	sizeof(union A480),
	sizeof(union A481),
	sizeof(union A482),
	sizeof(struct A483),
	sizeof(union A484),
	sizeof(struct A485),
	sizeof(struct A486),
	sizeof(union A487),
	sizeof(struct A488),
	sizeof(union A489),
	sizeof(struct A490),
	sizeof(struct A491),
	sizeof(struct A492),
	sizeof(union A493),
	sizeof(struct A494),
	sizeof(struct A495),
	sizeof(struct A496),
	sizeof(struct A497),
	sizeof(union A498),
	sizeof(union A499),
	sizeof(struct A500),
	sizeof(union A501),
	sizeof(struct A502),
	sizeof(struct A503),
	sizeof(struct A504),
	sizeof(struct A505),
	sizeof(struct A506),
	sizeof(union A507),
	sizeof(union A508),
	sizeof(union A509),
	sizeof(struct A510),
	sizeof(struct A511),
	sizeof(struct A512),
	sizeof(struct A513),
	sizeof(struct A514),
	sizeof(union A515),
	sizeof(union A516),
	sizeof(struct A517),
	sizeof(union A518),
	sizeof(struct A519),
	sizeof(struct A520),
	sizeof(struct A521),
	sizeof(struct A522),
	sizeof(struct A523),
	sizeof(struct A524),
	sizeof(struct A525),
	sizeof(struct A526),
	sizeof(struct A527),
	sizeof(union A528),
	sizeof(union A529),
	sizeof(union A530),
	sizeof(union A531),
	sizeof(union A532),
	sizeof(struct A533),
	sizeof(struct A534),
	sizeof(union A535),
	sizeof(union A536),
	sizeof(union A537),
	sizeof(union A538),
	sizeof(struct A539),
	sizeof(struct A540),
	sizeof(struct A541),
	sizeof(struct A542),
	sizeof(union A543),
	sizeof(struct A544),
	sizeof(struct A545),
	sizeof(struct A546),
	sizeof(union A547),
	sizeof(struct A548),
	sizeof(union A549),
	sizeof(struct A550),
	sizeof(union A551),
	sizeof(struct A552),
	sizeof(struct A553),
	sizeof(union A554),
	sizeof(union A555),
	sizeof(struct A556),
	sizeof(struct A557),
	sizeof(struct A558),
	sizeof(struct A559),
	sizeof(struct A560),
	sizeof(union A561),
	sizeof(struct A562),
	sizeof(union A563),
	sizeof(struct A564),
	sizeof(union A565),
	sizeof(struct A566),
	sizeof(union A567),
	sizeof(union A568),
	sizeof(union A569),
	sizeof(struct A570),
	sizeof(union A571),
	sizeof(union A572),
	sizeof(struct A573),
	sizeof(struct A574),
	sizeof(struct A575),
	sizeof(union A576),
	sizeof(union A577),
	sizeof(struct A578),
	sizeof(union A579),
	sizeof(union A580),
	sizeof(struct A581),
	sizeof(struct A582),
	sizeof(union A583),
	sizeof(struct A584),
	sizeof(struct A585),
	sizeof(union A586),
	sizeof(union A587),
	sizeof(struct A588),
	sizeof(struct A589),
	sizeof(union A590),
	sizeof(struct A591),
	sizeof(struct A592),
	sizeof(struct A593),
	sizeof(struct A594),
	sizeof(struct A595),
	sizeof(struct A596),
	sizeof(struct A597),
	sizeof(struct A598),
	sizeof(struct A599),
	sizeof(struct A600),
	sizeof(union A601),
	sizeof(struct A602),
	sizeof(union A603),
	sizeof(union A604),
	sizeof(struct A605),
	sizeof(union A606),
	sizeof(union A607),
	sizeof(struct A608),
	sizeof(union A609),
	sizeof(union A610),
	sizeof(union A611),
	sizeof(struct A612),
	sizeof(struct A613),
	sizeof(union A614),
	sizeof(struct A615),
	sizeof(struct A616),
	sizeof(union A617),
	sizeof(struct A618),
	sizeof(struct A619),
	sizeof(struct A620),
	sizeof(union A621),
	sizeof(struct A622),
	sizeof(union A623),
	sizeof(union A624),
	sizeof(union A625),
	sizeof(union A626),
	sizeof(struct A627),
	sizeof(struct A628),
	sizeof(struct A629),
	sizeof(struct A630),
	sizeof(struct A631),
	sizeof(union A632),
	sizeof(struct A633),
	sizeof(struct A634),
	sizeof(union A635),
	sizeof(union A636),
	sizeof(struct A637),
	sizeof(struct A638),
	sizeof(struct A639),
	sizeof(struct A640),
	sizeof(union A641),
	sizeof(union A642),
	sizeof(struct A643),
	sizeof(struct A644),
	sizeof(struct A645),
	sizeof(union A646),
	sizeof(struct A647),
	sizeof(union A648),
	sizeof(struct A649),
	sizeof(union A650),
	sizeof(struct A651),
	sizeof(union A652),
	sizeof(union A653),
	sizeof(union A654),
	sizeof(union A655),
	sizeof(struct A656),
	sizeof(struct A657),
	sizeof(union A658),
	sizeof(struct A659),
	sizeof(union A660),
	sizeof(struct A661),
	sizeof(union A662),
	sizeof(struct A663),
	sizeof(union A664),
	sizeof(struct A665),
	sizeof(struct A666),
	sizeof(union A667),
	sizeof(union A668),
	sizeof(union A669),
	sizeof(struct A670),
	sizeof(union A671),
	sizeof(union A672),
	sizeof(union A673),
	sizeof(struct A674),
	sizeof(union A675),
	sizeof(struct A676),
	sizeof(struct A677),
	sizeof(struct A678),
	sizeof(union A679),
	sizeof(struct A680),
	sizeof(struct A681),
	sizeof(union A682),
	sizeof(union A683),
	sizeof(struct A684),
	sizeof(union A685),
	sizeof(union A686),
	sizeof(struct A687),
	sizeof(struct A688),
	sizeof(union A689),
	sizeof(union A690),
	sizeof(union A691),
	sizeof(struct A692),
	sizeof(union A693),
	sizeof(union A694),
	sizeof(struct A695),
	sizeof(struct A696),
	sizeof(union A697),
	sizeof(struct A698),
	sizeof(struct A699),
	sizeof(union A700),
	sizeof(union A701),
	sizeof(struct A702),
	sizeof(union A703),
	sizeof(union A704),
	sizeof(struct A705),
	sizeof(struct A706),
	sizeof(union A707),
	sizeof(union A708),
	sizeof(union A709),
	sizeof(struct A710),
	sizeof(struct A711),
	sizeof(struct A712),
	sizeof(union A713),
	sizeof(union A714),
	sizeof(struct A715),
	sizeof(union A716),
	sizeof(union A717),
	sizeof(struct A718),
	sizeof(struct A719),
	sizeof(union A720),
	sizeof(union A721),
	sizeof(union A722),
	sizeof(union A723),
	sizeof(union A724),
	sizeof(union A725),
	sizeof(struct A726),
	sizeof(struct A727),
	sizeof(union A728),
	sizeof(union A729),
	sizeof(union A730),
	sizeof(union A731),
	sizeof(union A732),
	sizeof(struct A733),
	sizeof(union A734),
	sizeof(struct A735),
	sizeof(struct A736),
	sizeof(union A737),
	sizeof(union A738),
	sizeof(union A739),
	sizeof(union A740),
	sizeof(union A741),
	sizeof(struct A742),
	sizeof(union A743),
	sizeof(struct A744),
	sizeof(union A745),
	sizeof(struct A746),
	sizeof(struct A747),
	sizeof(union A748),
	sizeof(struct A749),
	sizeof(struct A750),
	sizeof(struct A751),
	sizeof(struct A752),
	sizeof(struct A753),
	sizeof(union A754),
	sizeof(struct A755),
	sizeof(struct A756),
	sizeof(union A757),
	sizeof(union A758),
	sizeof(struct A759),
	sizeof(union A760),
	sizeof(struct A761),
	sizeof(union A762),
	sizeof(struct A763),
	sizeof(union A764),
	sizeof(union A765),
	sizeof(struct A766),
	sizeof(struct A767),
	sizeof(union A768),
	sizeof(struct A769),
	sizeof(union A770),
	sizeof(union A771),
	sizeof(struct A772),
	sizeof(struct A773),
	sizeof(struct A774),
	sizeof(struct A775),
	sizeof(union A776),
	sizeof(struct A777),
	sizeof(union A778),
	sizeof(struct A779),
	sizeof(struct A780),
	sizeof(struct A781),
	sizeof(struct A782),
	sizeof(union A783),
	sizeof(struct A784),
	sizeof(struct A785),
	sizeof(struct A786),
	sizeof(union A787),
	sizeof(union A788),
	sizeof(union A789),
	sizeof(union A790),
	sizeof(struct A791),
	sizeof(struct A792),
	sizeof(struct A793),
	sizeof(struct A794),
	sizeof(struct A795),
	sizeof(union A796),
	sizeof(union A797),
	sizeof(union A798),
	sizeof(union A799),
	sizeof(union A800),
	sizeof(union A801),
	sizeof(struct A802),
	sizeof(union A803),
	sizeof(struct A804),
	sizeof(union A805),
	sizeof(union A806),
	sizeof(union A807),
	sizeof(struct A808),
	sizeof(union A809),
	sizeof(union A810),
	sizeof(union A811),
	sizeof(struct A812),
	sizeof(struct A813),
	sizeof(struct A814),
	sizeof(union A815),
	sizeof(union A816),
	sizeof(struct A817),
	sizeof(struct A818),
	sizeof(union A819),
	sizeof(union A820),
	sizeof(union A821),
	sizeof(union A822),
	sizeof(struct A823),
	sizeof(struct A824),
	sizeof(union A825),
	sizeof(union A826),
	sizeof(struct A827),
	sizeof(struct A828),
	sizeof(union A829),
	sizeof(struct A830),
	sizeof(union A831),
	sizeof(struct A832),
	sizeof(union A833),
	sizeof(union A834),
	sizeof(union A835),
	sizeof(struct A836),
	sizeof(struct A837),
	sizeof(struct A838),
	sizeof(union A839),
	sizeof(struct A840),
	sizeof(struct A841),
	sizeof(union A842),
	sizeof(union A843),
	sizeof(union A844),
	sizeof(union A845),
	sizeof(struct A846),
	sizeof(union A847),
	sizeof(union A848),
	sizeof(struct A849),
	sizeof(union A850),
	sizeof(struct A851),
	sizeof(union A852),
	sizeof(struct A853),
	sizeof(union A854),
	sizeof(struct A855),
	sizeof(union A856),
	sizeof(union A857),
	sizeof(union A858),
	sizeof(union A859),
	sizeof(struct A860),
	sizeof(union A861),
	sizeof(struct A862),
	sizeof(struct A863),
	sizeof(struct A864),
	sizeof(union A865),
	sizeof(union A866),
	sizeof(union A867),
	sizeof(union A868),
	sizeof(union A869),
	sizeof(struct A870),
	sizeof(union A871),
	sizeof(struct A872),
	sizeof(struct A873),
	sizeof(struct A874),
	sizeof(union A875),
	sizeof(union A876),
	sizeof(struct A877),
	sizeof(union A878),
	sizeof(union A879),
	sizeof(struct A880),
	sizeof(union A881),
	sizeof(union A882),
	sizeof(struct A883),
	sizeof(struct A884),
	sizeof(union A885),
	sizeof(struct A886),
	sizeof(union A887),
	sizeof(union A888),
	sizeof(struct A889),
	sizeof(union A890),
	sizeof(struct A891),
	sizeof(struct A892),
	sizeof(struct A893),
	sizeof(union A894),
	sizeof(union A895),
	sizeof(union A896),
	sizeof(union A897),
	sizeof(struct A898),
	sizeof(struct A899),
	sizeof(struct A900),
	sizeof(union A901),
	sizeof(union A902),
	sizeof(struct A903),
	sizeof(union A904),
	sizeof(struct A905),
	sizeof(struct A906),
	sizeof(struct A907),
	sizeof(struct A908),
	sizeof(struct A909),
	sizeof(struct A910),
	sizeof(struct A911),
	sizeof(union A912),
	sizeof(struct A913),
	sizeof(union A914),
	sizeof(struct A915),
	sizeof(union A916),
	sizeof(struct A917),
	sizeof(struct A918),
	sizeof(struct A919),
	sizeof(struct A920),
	sizeof(union A921),
	sizeof(union A922),
	sizeof(struct A923),
	sizeof(struct A924),
	sizeof(union A925),
	sizeof(struct A926),
	sizeof(struct A927),
	sizeof(struct A928),
	sizeof(union A929),
	sizeof(struct A930),
	sizeof(struct A931),
	sizeof(union A932),
	sizeof(struct A933),
	sizeof(union A934),
	sizeof(struct A935),
	sizeof(struct A936),
	sizeof(struct A937),
	sizeof(union A938),
	sizeof(struct A939),
	sizeof(struct A940),
	sizeof(struct A941),
	sizeof(struct A942),
	sizeof(union A943),
	sizeof(struct A944),
	sizeof(union A945),
	sizeof(struct A946),
	sizeof(struct A947),
	sizeof(union A948),
	sizeof(union A949),
	sizeof(struct A950),
	sizeof(union A951),
	sizeof(union A952),
	sizeof(union A953),
	sizeof(struct A954),
	sizeof(union A955),
	sizeof(struct A956),
	sizeof(struct A957),
	sizeof(union A958),
	sizeof(union A959),
	sizeof(struct A960),
	sizeof(union A961),
	sizeof(struct A962),
	sizeof(union A963),
	sizeof(struct A964),
	sizeof(union A965),
	sizeof(struct A966),
	sizeof(union A967),
	sizeof(struct A968),
	sizeof(union A969),
	sizeof(struct A970),
	sizeof(struct A971),
	sizeof(union A972),
	sizeof(struct A973),
	sizeof(union A974),
	sizeof(union A975),
	sizeof(union A976),
	sizeof(union A977),
	sizeof(struct A978),
	sizeof(union A979),
	sizeof(union A980),
	sizeof(struct A981),
	sizeof(struct A982),
	sizeof(struct A983),
	sizeof(union A984),
	sizeof(union A985),
	sizeof(struct A986),
	sizeof(struct A987),
	sizeof(struct A988),
	sizeof(struct A989),
	sizeof(union A990),
	sizeof(struct A991),
	sizeof(struct A992),
	sizeof(struct A993),
	sizeof(union A994),
	sizeof(struct A995),
	sizeof(union A996),
	sizeof(union A997),
	sizeof(struct A998),
	sizeof(struct A999),
	sizeof(union A1000),
	sizeof(struct A1001),
	sizeof(union A1002),
	sizeof(union A1003),
	sizeof(struct A1004),
	sizeof(union A1005),
	sizeof(struct A1006),
	sizeof(struct A1007),
	sizeof(union A1008),
	sizeof(struct A1009),
	sizeof(struct A1010),
	sizeof(union A1011),
	sizeof(union A1012),
	sizeof(union A1013),
	sizeof(union A1014),
	sizeof(struct A1015),
	sizeof(struct A1016),
	sizeof(union A1017),
	sizeof(struct A1018),
	sizeof(struct A1019),
	sizeof(struct A1020),
	sizeof(struct A1021),
	sizeof(union A1022),
	sizeof(struct A1023),
	sizeof(struct A1024),
	sizeof(struct A1025),
	sizeof(union A1026),
	sizeof(struct A1027),
	sizeof(struct A1028),
	sizeof(union A1029),
	sizeof(union A1030),
	sizeof(union A1031),
	sizeof(struct A1032),
	sizeof(union A1033),
	sizeof(union A1034),
	sizeof(union A1035),
	sizeof(union A1036),
	sizeof(union A1037),
	sizeof(struct A1038),
	sizeof(union A1039),
	sizeof(struct A1040),
	sizeof(union A1041),
	sizeof(union A1042),
	sizeof(struct A1043),
	sizeof(union A1044),
	sizeof(union A1045),
	sizeof(struct A1046),
	sizeof(struct A1047),
	sizeof(union A1048),
	sizeof(struct A1049),
	sizeof(struct A1050),
	sizeof(union A1051),
	sizeof(union A1052),
	sizeof(union A1053),
	sizeof(struct A1054),
	sizeof(union A1055),
	sizeof(struct A1056),
	sizeof(union A1057),
	sizeof(struct A1058),
	sizeof(struct A1059),
	sizeof(struct A1060),
	sizeof(struct A1061),
	sizeof(union A1062),
	sizeof(struct A1063),
	sizeof(union A1064),
	sizeof(struct A1065),
	sizeof(union A1066),
	sizeof(union A1067),
	sizeof(union A1068),
	sizeof(struct A1069),
	sizeof(union A1070),
	sizeof(struct A1071),
	sizeof(union A1072),
	sizeof(union A1073),
	sizeof(union A1074),
	sizeof(union A1075),
	sizeof(union A1076),
	sizeof(union A1077),
	sizeof(union A1078),
	sizeof(union A1079),
	sizeof(struct A1080),
	sizeof(union A1081),
	sizeof(struct A1082),
	sizeof(struct A1083),
	sizeof(union A1084),
	sizeof(union A1085),
	sizeof(union A1086),
	sizeof(union A1087),
	sizeof(union A1088),
	sizeof(struct A1089),
	sizeof(union A1090),
	sizeof(union A1091),
	sizeof(union A1092),
	sizeof(union A1093),
	sizeof(union A1094),
	sizeof(struct A1095),
	sizeof(union A1096),
	sizeof(union A1097),
	sizeof(struct A1098),
	sizeof(struct A1099),
	sizeof(union A1100),
	sizeof(union A1101),
	sizeof(struct A1102),
	sizeof(struct A1103),
	sizeof(struct A1104),
	sizeof(struct A1105),
	sizeof(union A1106),
	sizeof(union A1107),
	sizeof(union A1108),
	sizeof(struct A1109),
	sizeof(union A1110),
	sizeof(union A1111),
	sizeof(struct A1112),
	sizeof(struct A1113),
	sizeof(union A1114),
	sizeof(union A1115),
	sizeof(struct A1116),
	sizeof(struct A1117),
	sizeof(struct A1118),
	sizeof(union A1119),
	sizeof(struct A1120),
	sizeof(union A1121),
	sizeof(union A1122),
	sizeof(union A1123),
	sizeof(union A1124),
	sizeof(union A1125),
	sizeof(struct A1126),
	sizeof(struct A1127),
	sizeof(struct A1128),
	sizeof(union A1129),
	sizeof(union A1130),
	sizeof(union A1131),
	sizeof(struct A1132),
	sizeof(struct A1133),
	sizeof(struct A1134),
	sizeof(struct A1135),
	sizeof(struct A1136),
	sizeof(union A1137),
	sizeof(union A1138),
	sizeof(union A1139),
	sizeof(union A1140),
	sizeof(struct A1141),
	sizeof(struct A1142),
	sizeof(union A1143),
	sizeof(union A1144),
	sizeof(struct A1145),
	sizeof(union A1146),
	sizeof(struct A1147),
	sizeof(struct A1148),
	sizeof(struct A1149),
	sizeof(struct A1150),
	sizeof(struct A1151),
	sizeof(struct A1152),
	sizeof(union A1153),
	sizeof(struct A1154),
	sizeof(union A1155),
	sizeof(union A1156),
	sizeof(struct A1157),
	sizeof(union A1158),
	sizeof(union A1159),
	sizeof(union A1160),
	sizeof(union A1161),
	sizeof(struct A1162),
	sizeof(struct A1163),
	sizeof(struct A1164),
	sizeof(struct A1165),
	sizeof(union A1166),
	sizeof(struct A1167),
	sizeof(union A1168),
	sizeof(union A1169),
	sizeof(union A1170),
	sizeof(struct A1171),
	sizeof(struct A1172),
	sizeof(union A1173),
	sizeof(union A1174),
	sizeof(union A1175),
	sizeof(union A1176),
	sizeof(union A1177),
	sizeof(union A1178),
	sizeof(struct A1179),
	sizeof(struct A1180),
	sizeof(union A1181),
	sizeof(union A1182),
	sizeof(struct A1183),
	sizeof(union A1184),
	sizeof(union A1185),
	sizeof(union A1186),
	sizeof(union A1187),
	sizeof(union A1188),
	sizeof(struct A1189),
	sizeof(struct A1190),
	sizeof(union A1191),
	sizeof(struct A1192),
	sizeof(struct A1193),
	sizeof(struct A1194),
	sizeof(struct A1195),
	sizeof(union A1196),
	sizeof(struct A1197),
	sizeof(struct A1198),
	sizeof(struct A1199),
	sizeof(union A1200),
	sizeof(union A1201),
	sizeof(union A1202),
	sizeof(union A1203),
	sizeof(struct A1204),
	sizeof(struct A1205),
	sizeof(struct A1206),
	sizeof(struct A1207),
	sizeof(struct A1208),
	sizeof(struct A1209),
	sizeof(union A1210),
	sizeof(struct A1211),
	sizeof(union A1212),
	sizeof(struct A1213),
	sizeof(struct A1214),
	sizeof(union A1215),
	sizeof(struct A1216),
	sizeof(union A1217),
	sizeof(union A1218),
	sizeof(struct A1219),
	sizeof(union A1220),
	sizeof(union A1221),
	sizeof(struct A1222),
	sizeof(union A1223),
	sizeof(struct A1224),
	sizeof(struct A1225),
	sizeof(union A1226),
	sizeof(union A1227),
	sizeof(union A1228),
	sizeof(struct A1229),
	sizeof(struct A1230),
	sizeof(struct A1231),
	sizeof(struct A1232),
	sizeof(union A1233),
	sizeof(struct A1234),
	sizeof(struct A1235),
	sizeof(struct A1236),
	sizeof(struct A1237),
	sizeof(struct A1238),
	sizeof(struct A1239),
	sizeof(union A1240),
	sizeof(union A1241),
	sizeof(struct A1242),
	sizeof(union A1243),
	sizeof(union A1244),
	sizeof(struct A1245),
	sizeof(union A1246),
	sizeof(struct A1247),
	sizeof(struct A1248),
	sizeof(struct A1249),
	sizeof(struct A1250),
	sizeof(union A1251),
	sizeof(union A1252),
	sizeof(struct A1253),
	sizeof(struct A1254),
	sizeof(struct A1255),
	sizeof(union A1256),
	sizeof(union A1257),
	sizeof(struct A1258),
	sizeof(union A1259),
	sizeof(union A1260),
	sizeof(struct A1261),
	sizeof(union A1262),
	sizeof(union A1263),
	sizeof(union A1264),
	sizeof(union A1265),
	sizeof(union A1266),
	sizeof(struct A1267),
	sizeof(union A1268),
	sizeof(union A1269),
	sizeof(union A1270),
	sizeof(struct A1271),
	sizeof(struct A1272),
	sizeof(union A1273),
	sizeof(struct A1274),
	sizeof(struct A1275),
	sizeof(union A1276),
	sizeof(struct A1277),
	sizeof(struct A1278),
	sizeof(struct A1279),
	sizeof(struct A1280),
	sizeof(union A1281),
	sizeof(struct A1282),
	sizeof(struct A1283),
	sizeof(union A1284),
	sizeof(union A1285),
	sizeof(struct A1286),
	sizeof(union A1287),
	sizeof(struct A1288),
	sizeof(union A1289),
	sizeof(struct A1290),
	sizeof(union A1291),
	sizeof(union A1292),
	sizeof(struct A1293),
	sizeof(union A1294),
	sizeof(struct A1295),
	sizeof(union A1296),
	sizeof(struct A1297),
	sizeof(struct A1298),
	sizeof(struct A1299),
	sizeof(struct A1300),
	sizeof(union A1301),
	sizeof(struct A1302),
	sizeof(union A1303),
	sizeof(struct A1304),
	sizeof(union A1305),
	sizeof(struct A1306),
	sizeof(struct A1307),
	sizeof(union A1308),
	sizeof(struct A1309),
	sizeof(struct A1310),
	sizeof(union A1311),
	sizeof(union A1312),
	sizeof(struct A1313),
	sizeof(union A1314),
	sizeof(union A1315),
	sizeof(struct A1316),
	sizeof(struct A1317),
	sizeof(struct A1318),
	sizeof(struct A1319),
	sizeof(struct A1320),
	sizeof(union A1321),
	sizeof(struct A1322),
	sizeof(struct A1323),
	sizeof(union A1324),
	sizeof(union A1325),
	sizeof(union A1326),
	sizeof(union A1327),
	sizeof(union A1328),
	sizeof(struct A1329),
	sizeof(struct A1330),
	sizeof(union A1331),
	sizeof(struct A1332),
	sizeof(struct A1333),
	sizeof(union A1334),
	sizeof(struct A1335),
	sizeof(union A1336),
	sizeof(union A1337),
	sizeof(struct A1338),
	sizeof(struct A1339),
	sizeof(union A1340),
	sizeof(union A1341),
	sizeof(union A1342),
	sizeof(struct A1343),
	sizeof(struct A1344),
	sizeof(union A1345),
	sizeof(struct A1346),
	sizeof(union A1347),
	sizeof(struct A1348),
	sizeof(struct A1349),
	sizeof(union A1350),
	sizeof(union A1351),
	sizeof(union A1352),
	sizeof(struct A1353),
	sizeof(struct A1354),
	sizeof(union A1355),
	sizeof(union A1356),
	sizeof(struct A1357),
	sizeof(union A1358),
	sizeof(struct A1359),
	sizeof(struct A1360),
	sizeof(struct A1361),
	sizeof(struct A1362),
	sizeof(union A1363),
	sizeof(struct A1364),
	sizeof(union A1365),
	sizeof(union A1366),
	sizeof(struct A1367),
	sizeof(union A1368),
	sizeof(struct A1369),
	sizeof(struct A1370),
	sizeof(struct A1371),
	sizeof(union A1372),
	sizeof(struct A1373),
	sizeof(struct A1374),
	sizeof(union A1375),
	sizeof(struct A1376),
	sizeof(union A1377),
	sizeof(struct A1378),
	sizeof(struct A1379),
	sizeof(struct A1380),
	sizeof(union A1381),
	sizeof(struct A1382),
	sizeof(union A1383),
	sizeof(union A1384),
	sizeof(union A1385),
	sizeof(struct A1386),
	sizeof(union A1387),
	sizeof(struct A1388),
	sizeof(union A1389),
	sizeof(union A1390),
	sizeof(union A1391),
	sizeof(struct A1392),
	sizeof(union A1393),
	sizeof(struct A1394),
	sizeof(struct A1395),
	sizeof(struct A1396),
	sizeof(union A1397),
	sizeof(struct A1398),
	sizeof(struct A1399),
	sizeof(struct A1400),
	sizeof(union A1401),
	sizeof(union A1402),
	sizeof(struct A1403),
	sizeof(union A1404),
	sizeof(union A1405),
	sizeof(struct A1406),
	sizeof(union A1407),
	sizeof(struct A1408),
	sizeof(struct A1409),
	sizeof(union A1410),
	sizeof(struct A1411),
	sizeof(struct A1412),
	sizeof(union A1413),
	sizeof(union A1414),
	sizeof(struct A1415),
	sizeof(struct A1416),
	sizeof(struct A1417)
};
funptr G_agg_touchAfuncs[] = {
	(funptr)&f_touchA1,
	(funptr)&f_touchA2,
	(funptr)&f_touchA3,
	(funptr)&f_touchA4,
	(funptr)&f_touchA5,
	(funptr)&f_touchA6,
	(funptr)&f_touchA7,
	(funptr)&f_touchA8,
	(funptr)&f_touchA9,
	(funptr)&f_touchA10,
	(funptr)&f_touchA11,
	(funptr)&f_touchA12,
	(funptr)&f_touchA13,
	(funptr)&f_touchA14,
	(funptr)&f_touchA15,
	(funptr)&f_touchA16,
	(funptr)&f_touchA17,
	(funptr)&f_touchA18,
	(funptr)&f_touchA19,
	(funptr)&f_touchA20,
	(funptr)&f_touchA21,
	(funptr)&f_touchA22,
	(funptr)&f_touchA23,
	(funptr)&f_touchA24,
	(funptr)&f_touchA25,
	(funptr)&f_touchA26,
	(funptr)&f_touchA27,
	(funptr)&f_touchA28,
	(funptr)&f_touchA29,
	(funptr)&f_touchA30,
	(funptr)&f_touchA31,
	(funptr)&f_touchA32,
	(funptr)&f_touchA33,
	(funptr)&f_touchA34,
	(funptr)&f_touchA35,
	(funptr)&f_touchA36,
	(funptr)&f_touchA37,
	(funptr)&f_touchA38,
	(funptr)&f_touchA39,
	(funptr)&f_touchA40,
	(funptr)&f_touchA41,
	(funptr)&f_touchA42,
	(funptr)&f_touchA43,
	(funptr)&f_touchA44,
	(funptr)&f_touchA45,
	(funptr)&f_touchA46,
	(funptr)&f_touchA47,
	(funptr)&f_touchA48,
	(funptr)&f_touchA49,
	(funptr)&f_touchA50,
	(funptr)&f_touchA51,
	(funptr)&f_touchA52,
	(funptr)&f_touchA53,
	(funptr)&f_touchA54,
	(funptr)&f_touchA55,
	(funptr)&f_touchA56,
	(funptr)&f_touchA57,
	(funptr)&f_touchA58,
	(funptr)&f_touchA59,
	(funptr)&f_touchA60,
	(funptr)&f_touchA61,
	(funptr)&f_touchA62,
	(funptr)&f_touchA63,
	(funptr)&f_touchA64,
	(funptr)&f_touchA65,
	(funptr)&f_touchA66,
	(funptr)&f_touchA67,
	(funptr)&f_touchA68,
	(funptr)&f_touchA69,
	(funptr)&f_touchA70,
	(funptr)&f_touchA71,
	(funptr)&f_touchA72,
	(funptr)&f_touchA73,
	(funptr)&f_touchA74,
	(funptr)&f_touchA75,
	(funptr)&f_touchA76,
	(funptr)&f_touchA77,
	(funptr)&f_touchA78,
	(funptr)&f_touchA79,
	(funptr)&f_touchA80,
	(funptr)&f_touchA81,
	(funptr)&f_touchA82,
	(funptr)&f_touchA83,
	(funptr)&f_touchA84,
	(funptr)&f_touchA85,
	(funptr)&f_touchA86,
	(funptr)&f_touchA87,
	(funptr)&f_touchA88,
	(funptr)&f_touchA89,
	(funptr)&f_touchA90,
	(funptr)&f_touchA91,
	(funptr)&f_touchA92,
	(funptr)&f_touchA93,
	(funptr)&f_touchA94,
	(funptr)&f_touchA95,
	(funptr)&f_touchA96,
	(funptr)&f_touchA97,
	(funptr)&f_touchA98,
	(funptr)&f_touchA99,
	(funptr)&f_touchA100,
	(funptr)&f_touchA101,
	(funptr)&f_touchA102,
	(funptr)&f_touchA103,
	(funptr)&f_touchA104,
	(funptr)&f_touchA105,
	(funptr)&f_touchA106,
	(funptr)&f_touchA107,
	(funptr)&f_touchA108,
	(funptr)&f_touchA109,
	(funptr)&f_touchA110,
	(funptr)&f_touchA111,
	(funptr)&f_touchA112,
	(funptr)&f_touchA113,
	(funptr)&f_touchA114,
	(funptr)&f_touchA115,
	(funptr)&f_touchA116,
	(funptr)&f_touchA117,
	(funptr)&f_touchA118,
	(funptr)&f_touchA119,
	(funptr)&f_touchA120,
	(funptr)&f_touchA121,
	(funptr)&f_touchA122,
	(funptr)&f_touchA123,
	(funptr)&f_touchA124,
	(funptr)&f_touchA125,
	(funptr)&f_touchA126,
	(funptr)&f_touchA127,
	(funptr)&f_touchA128,
	(funptr)&f_touchA129,
	(funptr)&f_touchA130,
	(funptr)&f_touchA131,
	(funptr)&f_touchA132,
	(funptr)&f_touchA133,
	(funptr)&f_touchA134,
	(funptr)&f_touchA135,
	(funptr)&f_touchA136,
	(funptr)&f_touchA137,
	(funptr)&f_touchA138,
	(funptr)&f_touchA139,
	(funptr)&f_touchA140,
	(funptr)&f_touchA141,
	(funptr)&f_touchA142,
	(funptr)&f_touchA143,
	(funptr)&f_touchA144,
	(funptr)&f_touchA145,
	(funptr)&f_touchA146,
	(funptr)&f_touchA147,
	(funptr)&f_touchA148,
	(funptr)&f_touchA149,
	(funptr)&f_touchA150,
	(funptr)&f_touchA151,
	(funptr)&f_touchA152,
	(funptr)&f_touchA153,
	(funptr)&f_touchA154,
	(funptr)&f_touchA155,
	(funptr)&f_touchA156,
	(funptr)&f_touchA157,
	(funptr)&f_touchA158,
	(funptr)&f_touchA159,
	(funptr)&f_touchA160,
	(funptr)&f_touchA161,
	(funptr)&f_touchA162,
	(funptr)&f_touchA163,
	(funptr)&f_touchA164,
	(funptr)&f_touchA165,
	(funptr)&f_touchA166,
	(funptr)&f_touchA167,
	(funptr)&f_touchA168,
	(funptr)&f_touchA169,
	(funptr)&f_touchA170,
	(funptr)&f_touchA171,
	(funptr)&f_touchA172,
	(funptr)&f_touchA173,
	(funptr)&f_touchA174,
	(funptr)&f_touchA175,
	(funptr)&f_touchA176,
	(funptr)&f_touchA177,
	(funptr)&f_touchA178,
	(funptr)&f_touchA179,
	(funptr)&f_touchA180,
	(funptr)&f_touchA181,
	(funptr)&f_touchA182,
	(funptr)&f_touchA183,
	(funptr)&f_touchA184,
	(funptr)&f_touchA185,
	(funptr)&f_touchA186,
	(funptr)&f_touchA187,
	(funptr)&f_touchA188,
	(funptr)&f_touchA189,
	(funptr)&f_touchA190,
	(funptr)&f_touchA191,
	(funptr)&f_touchA192,
	(funptr)&f_touchA193,
	(funptr)&f_touchA194,
	(funptr)&f_touchA195,
	(funptr)&f_touchA196,
	(funptr)&f_touchA197,
	(funptr)&f_touchA198,
	(funptr)&f_touchA199,
	(funptr)&f_touchA200,
	(funptr)&f_touchA201,
	(funptr)&f_touchA202,
	(funptr)&f_touchA203,
	(funptr)&f_touchA204,
	(funptr)&f_touchA205,
	(funptr)&f_touchA206,
	(funptr)&f_touchA207,
	(funptr)&f_touchA208,
	(funptr)&f_touchA209,
	(funptr)&f_touchA210,
	(funptr)&f_touchA211,
	(funptr)&f_touchA212,
	(funptr)&f_touchA213,
	(funptr)&f_touchA214,
	(funptr)&f_touchA215,
	(funptr)&f_touchA216,
	(funptr)&f_touchA217,
	(funptr)&f_touchA218,
	(funptr)&f_touchA219,
	(funptr)&f_touchA220,
	(funptr)&f_touchA221,
	(funptr)&f_touchA222,
	(funptr)&f_touchA223,
	(funptr)&f_touchA224,
	(funptr)&f_touchA225,
	(funptr)&f_touchA226,
	(funptr)&f_touchA227,
	(funptr)&f_touchA228,
	(funptr)&f_touchA229,
	(funptr)&f_touchA230,
	(funptr)&f_touchA231,
	(funptr)&f_touchA232,
	(funptr)&f_touchA233,
	(funptr)&f_touchA234,
	(funptr)&f_touchA235,
	(funptr)&f_touchA236,
	(funptr)&f_touchA237,
	(funptr)&f_touchA238,
	(funptr)&f_touchA239,
	(funptr)&f_touchA240,
	(funptr)&f_touchA241,
	(funptr)&f_touchA242,
	(funptr)&f_touchA243,
	(funptr)&f_touchA244,
	(funptr)&f_touchA245,
	(funptr)&f_touchA246,
	(funptr)&f_touchA247,
	(funptr)&f_touchA248,
	(funptr)&f_touchA249,
	(funptr)&f_touchA250,
	(funptr)&f_touchA251,
	(funptr)&f_touchA252,
	(funptr)&f_touchA253,
	(funptr)&f_touchA254,
	(funptr)&f_touchA255,
	(funptr)&f_touchA256,
	(funptr)&f_touchA257,
	(funptr)&f_touchA258,
	(funptr)&f_touchA259,
	(funptr)&f_touchA260,
	(funptr)&f_touchA261,
	(funptr)&f_touchA262,
	(funptr)&f_touchA263,
	(funptr)&f_touchA264,
	(funptr)&f_touchA265,
	(funptr)&f_touchA266,
	(funptr)&f_touchA267,
	(funptr)&f_touchA268,
	(funptr)&f_touchA269,
	(funptr)&f_touchA270,
	(funptr)&f_touchA271,
	(funptr)&f_touchA272,
	(funptr)&f_touchA273,
	(funptr)&f_touchA274,
	(funptr)&f_touchA275,
	(funptr)&f_touchA276,
	(funptr)&f_touchA277,
	(funptr)&f_touchA278,
	(funptr)&f_touchA279,
	(funptr)&f_touchA280,
	(funptr)&f_touchA281,
	(funptr)&f_touchA282,
	(funptr)&f_touchA283,
	(funptr)&f_touchA284,
	(funptr)&f_touchA285,
	(funptr)&f_touchA286,
	(funptr)&f_touchA287,
	(funptr)&f_touchA288,
	(funptr)&f_touchA289,
	(funptr)&f_touchA290,
	(funptr)&f_touchA291,
	(funptr)&f_touchA292,
	(funptr)&f_touchA293,
	(funptr)&f_touchA294,
	(funptr)&f_touchA295,
	(funptr)&f_touchA296,
	(funptr)&f_touchA297,
	(funptr)&f_touchA298,
	(funptr)&f_touchA299,
	(funptr)&f_touchA300,
	(funptr)&f_touchA301,
	(funptr)&f_touchA302,
	(funptr)&f_touchA303,
	(funptr)&f_touchA304,
	(funptr)&f_touchA305,
	(funptr)&f_touchA306,
	(funptr)&f_touchA307,
	(funptr)&f_touchA308,
	(funptr)&f_touchA309,
	(funptr)&f_touchA310,
	(funptr)&f_touchA311,
	(funptr)&f_touchA312,
	(funptr)&f_touchA313,
	(funptr)&f_touchA314,
	(funptr)&f_touchA315,
	(funptr)&f_touchA316,
	(funptr)&f_touchA317,
	(funptr)&f_touchA318,
	(funptr)&f_touchA319,
	(funptr)&f_touchA320,
	(funptr)&f_touchA321,
	(funptr)&f_touchA322,
	(funptr)&f_touchA323,
	(funptr)&f_touchA324,
	(funptr)&f_touchA325,
	(funptr)&f_touchA326,
	(funptr)&f_touchA327,
	(funptr)&f_touchA328,
	(funptr)&f_touchA329,
	(funptr)&f_touchA330,
	(funptr)&f_touchA331,
	(funptr)&f_touchA332,
	(funptr)&f_touchA333,
	(funptr)&f_touchA334,
	(funptr)&f_touchA335,
	(funptr)&f_touchA336,
	(funptr)&f_touchA337,
	(funptr)&f_touchA338,
	(funptr)&f_touchA339,
	(funptr)&f_touchA340,
	(funptr)&f_touchA341,
	(funptr)&f_touchA342,
	(funptr)&f_touchA343,
	(funptr)&f_touchA344,
	(funptr)&f_touchA345,
	(funptr)&f_touchA346,
	(funptr)&f_touchA347,
	(funptr)&f_touchA348,
	(funptr)&f_touchA349,
	(funptr)&f_touchA350,
	(funptr)&f_touchA351,
	(funptr)&f_touchA352,
	(funptr)&f_touchA353,
	(funptr)&f_touchA354,
	(funptr)&f_touchA355,
	(funptr)&f_touchA356,
	(funptr)&f_touchA357,
	(funptr)&f_touchA358,
	(funptr)&f_touchA359,
	(funptr)&f_touchA360,
	(funptr)&f_touchA361,
	(funptr)&f_touchA362,
	(funptr)&f_touchA363,
	(funptr)&f_touchA364,
	(funptr)&f_touchA365,
	(funptr)&f_touchA366,
	(funptr)&f_touchA367,
	(funptr)&f_touchA368,
	(funptr)&f_touchA369,
	(funptr)&f_touchA370,
	(funptr)&f_touchA371,
	(funptr)&f_touchA372,
	(funptr)&f_touchA373,
	(funptr)&f_touchA374,
	(funptr)&f_touchA375,
	(funptr)&f_touchA376,
	(funptr)&f_touchA377,
	(funptr)&f_touchA378,
	(funptr)&f_touchA379,
	(funptr)&f_touchA380,
	(funptr)&f_touchA381,
	(funptr)&f_touchA382,
	(funptr)&f_touchA383,
	(funptr)&f_touchA384,
	(funptr)&f_touchA385,
	(funptr)&f_touchA386,
	(funptr)&f_touchA387,
	(funptr)&f_touchA388,
	(funptr)&f_touchA389,
	(funptr)&f_touchA390,
	(funptr)&f_touchA391,
	(funptr)&f_touchA392,
	(funptr)&f_touchA393,
	(funptr)&f_touchA394,
	(funptr)&f_touchA395,
	(funptr)&f_touchA396,
	(funptr)&f_touchA397,
	(funptr)&f_touchA398,
	(funptr)&f_touchA399,
	(funptr)&f_touchA400,
	(funptr)&f_touchA401,
	(funptr)&f_touchA402,
	(funptr)&f_touchA403,
	(funptr)&f_touchA404,
	(funptr)&f_touchA405,
	(funptr)&f_touchA406,
	(funptr)&f_touchA407,
	(funptr)&f_touchA408,
	(funptr)&f_touchA409,
	(funptr)&f_touchA410,
	(funptr)&f_touchA411,
	(funptr)&f_touchA412,
	(funptr)&f_touchA413,
	(funptr)&f_touchA414,
	(funptr)&f_touchA415,
	(funptr)&f_touchA416,
	(funptr)&f_touchA417,
	(funptr)&f_touchA418,
	(funptr)&f_touchA419,
	(funptr)&f_touchA420,
	(funptr)&f_touchA421,
	(funptr)&f_touchA422,
	(funptr)&f_touchA423,
	(funptr)&f_touchA424,
	(funptr)&f_touchA425,
	(funptr)&f_touchA426,
	(funptr)&f_touchA427,
	(funptr)&f_touchA428,
	(funptr)&f_touchA429,
	(funptr)&f_touchA430,
	(funptr)&f_touchA431,
	(funptr)&f_touchA432,
	(funptr)&f_touchA433,
	(funptr)&f_touchA434,
	(funptr)&f_touchA435,
	(funptr)&f_touchA436,
	(funptr)&f_touchA437,
	(funptr)&f_touchA438,
	(funptr)&f_touchA439,
	(funptr)&f_touchA440,
	(funptr)&f_touchA441,
	(funptr)&f_touchA442,
	(funptr)&f_touchA443,
	(funptr)&f_touchA444,
	(funptr)&f_touchA445,
	(funptr)&f_touchA446,
	(funptr)&f_touchA447,
	(funptr)&f_touchA448,
	(funptr)&f_touchA449,
	(funptr)&f_touchA450,
	(funptr)&f_touchA451,
	(funptr)&f_touchA452,
	(funptr)&f_touchA453,
	(funptr)&f_touchA454,
	(funptr)&f_touchA455,
	(funptr)&f_touchA456,
	(funptr)&f_touchA457,
	(funptr)&f_touchA458,
	(funptr)&f_touchA459,
	(funptr)&f_touchA460,
	(funptr)&f_touchA461,
	(funptr)&f_touchA462,
	(funptr)&f_touchA463,
	(funptr)&f_touchA464,
	(funptr)&f_touchA465,
	(funptr)&f_touchA466,
	(funptr)&f_touchA467,
	(funptr)&f_touchA468,
	(funptr)&f_touchA469,
	(funptr)&f_touchA470,
	(funptr)&f_touchA471,
	(funptr)&f_touchA472,
	(funptr)&f_touchA473,
	(funptr)&f_touchA474,
	(funptr)&f_touchA475,
	(funptr)&f_touchA476,
	(funptr)&f_touchA477,
	(funptr)&f_touchA478,
	(funptr)&f_touchA479,
	(funptr)&f_touchA480,
	(funptr)&f_touchA481,
	(funptr)&f_touchA482,
	(funptr)&f_touchA483,
	(funptr)&f_touchA484,
	(funptr)&f_touchA485,
	(funptr)&f_touchA486,
	(funptr)&f_touchA487,
	(funptr)&f_touchA488,
	(funptr)&f_touchA489,
	(funptr)&f_touchA490,
	(funptr)&f_touchA491,
	(funptr)&f_touchA492,
	(funptr)&f_touchA493,
	(funptr)&f_touchA494,
	(funptr)&f_touchA495,
	(funptr)&f_touchA496,
	(funptr)&f_touchA497,
	(funptr)&f_touchA498,
	(funptr)&f_touchA499,
	(funptr)&f_touchA500,
	(funptr)&f_touchA501,
	(funptr)&f_touchA502,
	(funptr)&f_touchA503,
	(funptr)&f_touchA504,
	(funptr)&f_touchA505,
	(funptr)&f_touchA506,
	(funptr)&f_touchA507,
	(funptr)&f_touchA508,
	(funptr)&f_touchA509,
	(funptr)&f_touchA510,
	(funptr)&f_touchA511,
	(funptr)&f_touchA512,
	(funptr)&f_touchA513,
	(funptr)&f_touchA514,
	(funptr)&f_touchA515,
	(funptr)&f_touchA516,
	(funptr)&f_touchA517,
	(funptr)&f_touchA518,
	(funptr)&f_touchA519,
	(funptr)&f_touchA520,
	(funptr)&f_touchA521,
	(funptr)&f_touchA522,
	(funptr)&f_touchA523,
	(funptr)&f_touchA524,
	(funptr)&f_touchA525,
	(funptr)&f_touchA526,
	(funptr)&f_touchA527,
	(funptr)&f_touchA528,
	(funptr)&f_touchA529,
	(funptr)&f_touchA530,
	(funptr)&f_touchA531,
	(funptr)&f_touchA532,
	(funptr)&f_touchA533,
	(funptr)&f_touchA534,
	(funptr)&f_touchA535,
	(funptr)&f_touchA536,
	(funptr)&f_touchA537,
	(funptr)&f_touchA538,
	(funptr)&f_touchA539,
	(funptr)&f_touchA540,
	(funptr)&f_touchA541,
	(funptr)&f_touchA542,
	(funptr)&f_touchA543,
	(funptr)&f_touchA544,
	(funptr)&f_touchA545,
	(funptr)&f_touchA546,
	(funptr)&f_touchA547,
	(funptr)&f_touchA548,
	(funptr)&f_touchA549,
	(funptr)&f_touchA550,
	(funptr)&f_touchA551,
	(funptr)&f_touchA552,
	(funptr)&f_touchA553,
	(funptr)&f_touchA554,
	(funptr)&f_touchA555,
	(funptr)&f_touchA556,
	(funptr)&f_touchA557,
	(funptr)&f_touchA558,
	(funptr)&f_touchA559,
	(funptr)&f_touchA560,
	(funptr)&f_touchA561,
	(funptr)&f_touchA562,
	(funptr)&f_touchA563,
	(funptr)&f_touchA564,
	(funptr)&f_touchA565,
	(funptr)&f_touchA566,
	(funptr)&f_touchA567,
	(funptr)&f_touchA568,
	(funptr)&f_touchA569,
	(funptr)&f_touchA570,
	(funptr)&f_touchA571,
	(funptr)&f_touchA572,
	(funptr)&f_touchA573,
	(funptr)&f_touchA574,
	(funptr)&f_touchA575,
	(funptr)&f_touchA576,
	(funptr)&f_touchA577,
	(funptr)&f_touchA578,
	(funptr)&f_touchA579,
	(funptr)&f_touchA580,
	(funptr)&f_touchA581,
	(funptr)&f_touchA582,
	(funptr)&f_touchA583,
	(funptr)&f_touchA584,
	(funptr)&f_touchA585,
	(funptr)&f_touchA586,
	(funptr)&f_touchA587,
	(funptr)&f_touchA588,
	(funptr)&f_touchA589,
	(funptr)&f_touchA590,
	(funptr)&f_touchA591,
	(funptr)&f_touchA592,
	(funptr)&f_touchA593,
	(funptr)&f_touchA594,
	(funptr)&f_touchA595,
	(funptr)&f_touchA596,
	(funptr)&f_touchA597,
	(funptr)&f_touchA598,
	(funptr)&f_touchA599,
	(funptr)&f_touchA600,
	(funptr)&f_touchA601,
	(funptr)&f_touchA602,
	(funptr)&f_touchA603,
	(funptr)&f_touchA604,
	(funptr)&f_touchA605,
	(funptr)&f_touchA606,
	(funptr)&f_touchA607,
	(funptr)&f_touchA608,
	(funptr)&f_touchA609,
	(funptr)&f_touchA610,
	(funptr)&f_touchA611,
	(funptr)&f_touchA612,
	(funptr)&f_touchA613,
	(funptr)&f_touchA614,
	(funptr)&f_touchA615,
	(funptr)&f_touchA616,
	(funptr)&f_touchA617,
	(funptr)&f_touchA618,
	(funptr)&f_touchA619,
	(funptr)&f_touchA620,
	(funptr)&f_touchA621,
	(funptr)&f_touchA622,
	(funptr)&f_touchA623,
	(funptr)&f_touchA624,
	(funptr)&f_touchA625,
	(funptr)&f_touchA626,
	(funptr)&f_touchA627,
	(funptr)&f_touchA628,
	(funptr)&f_touchA629,
	(funptr)&f_touchA630,
	(funptr)&f_touchA631,
	(funptr)&f_touchA632,
	(funptr)&f_touchA633,
	(funptr)&f_touchA634,
	(funptr)&f_touchA635,
	(funptr)&f_touchA636,
	(funptr)&f_touchA637,
	(funptr)&f_touchA638,
	(funptr)&f_touchA639,
	(funptr)&f_touchA640,
	(funptr)&f_touchA641,
	(funptr)&f_touchA642,
	(funptr)&f_touchA643,
	(funptr)&f_touchA644,
	(funptr)&f_touchA645,
	(funptr)&f_touchA646,
	(funptr)&f_touchA647,
	(funptr)&f_touchA648,
	(funptr)&f_touchA649,
	(funptr)&f_touchA650,
	(funptr)&f_touchA651,
	(funptr)&f_touchA652,
	(funptr)&f_touchA653,
	(funptr)&f_touchA654,
	(funptr)&f_touchA655,
	(funptr)&f_touchA656,
	(funptr)&f_touchA657,
	(funptr)&f_touchA658,
	(funptr)&f_touchA659,
	(funptr)&f_touchA660,
	(funptr)&f_touchA661,
	(funptr)&f_touchA662,
	(funptr)&f_touchA663,
	(funptr)&f_touchA664,
	(funptr)&f_touchA665,
	(funptr)&f_touchA666,
	(funptr)&f_touchA667,
	(funptr)&f_touchA668,
	(funptr)&f_touchA669,
	(funptr)&f_touchA670,
	(funptr)&f_touchA671,
	(funptr)&f_touchA672,
	(funptr)&f_touchA673,
	(funptr)&f_touchA674,
	(funptr)&f_touchA675,
	(funptr)&f_touchA676,
	(funptr)&f_touchA677,
	(funptr)&f_touchA678,
	(funptr)&f_touchA679,
	(funptr)&f_touchA680,
	(funptr)&f_touchA681,
	(funptr)&f_touchA682,
	(funptr)&f_touchA683,
	(funptr)&f_touchA684,
	(funptr)&f_touchA685,
	(funptr)&f_touchA686,
	(funptr)&f_touchA687,
	(funptr)&f_touchA688,
	(funptr)&f_touchA689,
	(funptr)&f_touchA690,
	(funptr)&f_touchA691,
	(funptr)&f_touchA692,
	(funptr)&f_touchA693,
	(funptr)&f_touchA694,
	(funptr)&f_touchA695,
	(funptr)&f_touchA696,
	(funptr)&f_touchA697,
	(funptr)&f_touchA698,
	(funptr)&f_touchA699,
	(funptr)&f_touchA700,
	(funptr)&f_touchA701,
	(funptr)&f_touchA702,
	(funptr)&f_touchA703,
	(funptr)&f_touchA704,
	(funptr)&f_touchA705,
	(funptr)&f_touchA706,
	(funptr)&f_touchA707,
	(funptr)&f_touchA708,
	(funptr)&f_touchA709,
	(funptr)&f_touchA710,
	(funptr)&f_touchA711,
	(funptr)&f_touchA712,
	(funptr)&f_touchA713,
	(funptr)&f_touchA714,
	(funptr)&f_touchA715,
	(funptr)&f_touchA716,
	(funptr)&f_touchA717,
	(funptr)&f_touchA718,
	(funptr)&f_touchA719,
	(funptr)&f_touchA720,
	(funptr)&f_touchA721,
	(funptr)&f_touchA722,
	(funptr)&f_touchA723,
	(funptr)&f_touchA724,
	(funptr)&f_touchA725,
	(funptr)&f_touchA726,
	(funptr)&f_touchA727,
	(funptr)&f_touchA728,
	(funptr)&f_touchA729,
	(funptr)&f_touchA730,
	(funptr)&f_touchA731,
	(funptr)&f_touchA732,
	(funptr)&f_touchA733,
	(funptr)&f_touchA734,
	(funptr)&f_touchA735,
	(funptr)&f_touchA736,
	(funptr)&f_touchA737,
	(funptr)&f_touchA738,
	(funptr)&f_touchA739,
	(funptr)&f_touchA740,
	(funptr)&f_touchA741,
	(funptr)&f_touchA742,
	(funptr)&f_touchA743,
	(funptr)&f_touchA744,
	(funptr)&f_touchA745,
	(funptr)&f_touchA746,
	(funptr)&f_touchA747,
	(funptr)&f_touchA748,
	(funptr)&f_touchA749,
	(funptr)&f_touchA750,
	(funptr)&f_touchA751,
	(funptr)&f_touchA752,
	(funptr)&f_touchA753,
	(funptr)&f_touchA754,
	(funptr)&f_touchA755,
	(funptr)&f_touchA756,
	(funptr)&f_touchA757,
	(funptr)&f_touchA758,
	(funptr)&f_touchA759,
	(funptr)&f_touchA760,
	(funptr)&f_touchA761,
	(funptr)&f_touchA762,
	(funptr)&f_touchA763,
	(funptr)&f_touchA764,
	(funptr)&f_touchA765,
	(funptr)&f_touchA766,
	(funptr)&f_touchA767,
	(funptr)&f_touchA768,
	(funptr)&f_touchA769,
	(funptr)&f_touchA770,
	(funptr)&f_touchA771,
	(funptr)&f_touchA772,
	(funptr)&f_touchA773,
	(funptr)&f_touchA774,
	(funptr)&f_touchA775,
	(funptr)&f_touchA776,
	(funptr)&f_touchA777,
	(funptr)&f_touchA778,
	(funptr)&f_touchA779,
	(funptr)&f_touchA780,
	(funptr)&f_touchA781,
	(funptr)&f_touchA782,
	(funptr)&f_touchA783,
	(funptr)&f_touchA784,
	(funptr)&f_touchA785,
	(funptr)&f_touchA786,
	(funptr)&f_touchA787,
	(funptr)&f_touchA788,
	(funptr)&f_touchA789,
	(funptr)&f_touchA790,
	(funptr)&f_touchA791,
	(funptr)&f_touchA792,
	(funptr)&f_touchA793,
	(funptr)&f_touchA794,
	(funptr)&f_touchA795,
	(funptr)&f_touchA796,
	(funptr)&f_touchA797,
	(funptr)&f_touchA798,
	(funptr)&f_touchA799,
	(funptr)&f_touchA800,
	(funptr)&f_touchA801,
	(funptr)&f_touchA802,
	(funptr)&f_touchA803,
	(funptr)&f_touchA804,
	(funptr)&f_touchA805,
	(funptr)&f_touchA806,
	(funptr)&f_touchA807,
	(funptr)&f_touchA808,
	(funptr)&f_touchA809,
	(funptr)&f_touchA810,
	(funptr)&f_touchA811,
	(funptr)&f_touchA812,
	(funptr)&f_touchA813,
	(funptr)&f_touchA814,
	(funptr)&f_touchA815,
	(funptr)&f_touchA816,
	(funptr)&f_touchA817,
	(funptr)&f_touchA818,
	(funptr)&f_touchA819,
	(funptr)&f_touchA820,
	(funptr)&f_touchA821,
	(funptr)&f_touchA822,
	(funptr)&f_touchA823,
	(funptr)&f_touchA824,
	(funptr)&f_touchA825,
	(funptr)&f_touchA826,
	(funptr)&f_touchA827,
	(funptr)&f_touchA828,
	(funptr)&f_touchA829,
	(funptr)&f_touchA830,
	(funptr)&f_touchA831,
	(funptr)&f_touchA832,
	(funptr)&f_touchA833,
	(funptr)&f_touchA834,
	(funptr)&f_touchA835,
	(funptr)&f_touchA836,
	(funptr)&f_touchA837,
	(funptr)&f_touchA838,
	(funptr)&f_touchA839,
	(funptr)&f_touchA840,
	(funptr)&f_touchA841,
	(funptr)&f_touchA842,
	(funptr)&f_touchA843,
	(funptr)&f_touchA844,
	(funptr)&f_touchA845,
	(funptr)&f_touchA846,
	(funptr)&f_touchA847,
	(funptr)&f_touchA848,
	(funptr)&f_touchA849,
	(funptr)&f_touchA850,
	(funptr)&f_touchA851,
	(funptr)&f_touchA852,
	(funptr)&f_touchA853,
	(funptr)&f_touchA854,
	(funptr)&f_touchA855,
	(funptr)&f_touchA856,
	(funptr)&f_touchA857,
	(funptr)&f_touchA858,
	(funptr)&f_touchA859,
	(funptr)&f_touchA860,
	(funptr)&f_touchA861,
	(funptr)&f_touchA862,
	(funptr)&f_touchA863,
	(funptr)&f_touchA864,
	(funptr)&f_touchA865,
	(funptr)&f_touchA866,
	(funptr)&f_touchA867,
	(funptr)&f_touchA868,
	(funptr)&f_touchA869,
	(funptr)&f_touchA870,
	(funptr)&f_touchA871,
	(funptr)&f_touchA872,
	(funptr)&f_touchA873,
	(funptr)&f_touchA874,
	(funptr)&f_touchA875,
	(funptr)&f_touchA876,
	(funptr)&f_touchA877,
	(funptr)&f_touchA878,
	(funptr)&f_touchA879,
	(funptr)&f_touchA880,
	(funptr)&f_touchA881,
	(funptr)&f_touchA882,
	(funptr)&f_touchA883,
	(funptr)&f_touchA884,
	(funptr)&f_touchA885,
	(funptr)&f_touchA886,
	(funptr)&f_touchA887,
	(funptr)&f_touchA888,
	(funptr)&f_touchA889,
	(funptr)&f_touchA890,
	(funptr)&f_touchA891,
	(funptr)&f_touchA892,
	(funptr)&f_touchA893,
	(funptr)&f_touchA894,
	(funptr)&f_touchA895,
	(funptr)&f_touchA896,
	(funptr)&f_touchA897,
	(funptr)&f_touchA898,
	(funptr)&f_touchA899,
	(funptr)&f_touchA900,
	(funptr)&f_touchA901,
	(funptr)&f_touchA902,
	(funptr)&f_touchA903,
	(funptr)&f_touchA904,
	(funptr)&f_touchA905,
	(funptr)&f_touchA906,
	(funptr)&f_touchA907,
	(funptr)&f_touchA908,
	(funptr)&f_touchA909,
	(funptr)&f_touchA910,
	(funptr)&f_touchA911,
	(funptr)&f_touchA912,
	(funptr)&f_touchA913,
	(funptr)&f_touchA914,
	(funptr)&f_touchA915,
	(funptr)&f_touchA916,
	(funptr)&f_touchA917,
	(funptr)&f_touchA918,
	(funptr)&f_touchA919,
	(funptr)&f_touchA920,
	(funptr)&f_touchA921,
	(funptr)&f_touchA922,
	(funptr)&f_touchA923,
	(funptr)&f_touchA924,
	(funptr)&f_touchA925,
	(funptr)&f_touchA926,
	(funptr)&f_touchA927,
	(funptr)&f_touchA928,
	(funptr)&f_touchA929,
	(funptr)&f_touchA930,
	(funptr)&f_touchA931,
	(funptr)&f_touchA932,
	(funptr)&f_touchA933,
	(funptr)&f_touchA934,
	(funptr)&f_touchA935,
	(funptr)&f_touchA936,
	(funptr)&f_touchA937,
	(funptr)&f_touchA938,
	(funptr)&f_touchA939,
	(funptr)&f_touchA940,
	(funptr)&f_touchA941,
	(funptr)&f_touchA942,
	(funptr)&f_touchA943,
	(funptr)&f_touchA944,
	(funptr)&f_touchA945,
	(funptr)&f_touchA946,
	(funptr)&f_touchA947,
	(funptr)&f_touchA948,
	(funptr)&f_touchA949,
	(funptr)&f_touchA950,
	(funptr)&f_touchA951,
	(funptr)&f_touchA952,
	(funptr)&f_touchA953,
	(funptr)&f_touchA954,
	(funptr)&f_touchA955,
	(funptr)&f_touchA956,
	(funptr)&f_touchA957,
	(funptr)&f_touchA958,
	(funptr)&f_touchA959,
	(funptr)&f_touchA960,
	(funptr)&f_touchA961,
	(funptr)&f_touchA962,
	(funptr)&f_touchA963,
	(funptr)&f_touchA964,
	(funptr)&f_touchA965,
	(funptr)&f_touchA966,
	(funptr)&f_touchA967,
	(funptr)&f_touchA968,
	(funptr)&f_touchA969,
	(funptr)&f_touchA970,
	(funptr)&f_touchA971,
	(funptr)&f_touchA972,
	(funptr)&f_touchA973,
	(funptr)&f_touchA974,
	(funptr)&f_touchA975,
	(funptr)&f_touchA976,
	(funptr)&f_touchA977,
	(funptr)&f_touchA978,
	(funptr)&f_touchA979,
	(funptr)&f_touchA980,
	(funptr)&f_touchA981,
	(funptr)&f_touchA982,
	(funptr)&f_touchA983,
	(funptr)&f_touchA984,
	(funptr)&f_touchA985,
	(funptr)&f_touchA986,
	(funptr)&f_touchA987,
	(funptr)&f_touchA988,
	(funptr)&f_touchA989,
	(funptr)&f_touchA990,
	(funptr)&f_touchA991,
	(funptr)&f_touchA992,
	(funptr)&f_touchA993,
	(funptr)&f_touchA994,
	(funptr)&f_touchA995,
	(funptr)&f_touchA996,
	(funptr)&f_touchA997,
	(funptr)&f_touchA998,
	(funptr)&f_touchA999,
	(funptr)&f_touchA1000,
	(funptr)&f_touchA1001,
	(funptr)&f_touchA1002,
	(funptr)&f_touchA1003,
	(funptr)&f_touchA1004,
	(funptr)&f_touchA1005,
	(funptr)&f_touchA1006,
	(funptr)&f_touchA1007,
	(funptr)&f_touchA1008,
	(funptr)&f_touchA1009,
	(funptr)&f_touchA1010,
	(funptr)&f_touchA1011,
	(funptr)&f_touchA1012,
	(funptr)&f_touchA1013,
	(funptr)&f_touchA1014,
	(funptr)&f_touchA1015,
	(funptr)&f_touchA1016,
	(funptr)&f_touchA1017,
	(funptr)&f_touchA1018,
	(funptr)&f_touchA1019,
	(funptr)&f_touchA1020,
	(funptr)&f_touchA1021,
	(funptr)&f_touchA1022,
	(funptr)&f_touchA1023,
	(funptr)&f_touchA1024,
	(funptr)&f_touchA1025,
	(funptr)&f_touchA1026,
	(funptr)&f_touchA1027,
	(funptr)&f_touchA1028,
	(funptr)&f_touchA1029,
	(funptr)&f_touchA1030,
	(funptr)&f_touchA1031,
	(funptr)&f_touchA1032,
	(funptr)&f_touchA1033,
	(funptr)&f_touchA1034,
	(funptr)&f_touchA1035,
	(funptr)&f_touchA1036,
	(funptr)&f_touchA1037,
	(funptr)&f_touchA1038,
	(funptr)&f_touchA1039,
	(funptr)&f_touchA1040,
	(funptr)&f_touchA1041,
	(funptr)&f_touchA1042,
	(funptr)&f_touchA1043,
	(funptr)&f_touchA1044,
	(funptr)&f_touchA1045,
	(funptr)&f_touchA1046,
	(funptr)&f_touchA1047,
	(funptr)&f_touchA1048,
	(funptr)&f_touchA1049,
	(funptr)&f_touchA1050,
	(funptr)&f_touchA1051,
	(funptr)&f_touchA1052,
	(funptr)&f_touchA1053,
	(funptr)&f_touchA1054,
	(funptr)&f_touchA1055,
	(funptr)&f_touchA1056,
	(funptr)&f_touchA1057,
	(funptr)&f_touchA1058,
	(funptr)&f_touchA1059,
	(funptr)&f_touchA1060,
	(funptr)&f_touchA1061,
	(funptr)&f_touchA1062,
	(funptr)&f_touchA1063,
	(funptr)&f_touchA1064,
	(funptr)&f_touchA1065,
	(funptr)&f_touchA1066,
	(funptr)&f_touchA1067,
	(funptr)&f_touchA1068,
	(funptr)&f_touchA1069,
	(funptr)&f_touchA1070,
	(funptr)&f_touchA1071,
	(funptr)&f_touchA1072,
	(funptr)&f_touchA1073,
	(funptr)&f_touchA1074,
	(funptr)&f_touchA1075,
	(funptr)&f_touchA1076,
	(funptr)&f_touchA1077,
	(funptr)&f_touchA1078,
	(funptr)&f_touchA1079,
	(funptr)&f_touchA1080,
	(funptr)&f_touchA1081,
	(funptr)&f_touchA1082,
	(funptr)&f_touchA1083,
	(funptr)&f_touchA1084,
	(funptr)&f_touchA1085,
	(funptr)&f_touchA1086,
	(funptr)&f_touchA1087,
	(funptr)&f_touchA1088,
	(funptr)&f_touchA1089,
	(funptr)&f_touchA1090,
	(funptr)&f_touchA1091,
	(funptr)&f_touchA1092,
	(funptr)&f_touchA1093,
	(funptr)&f_touchA1094,
	(funptr)&f_touchA1095,
	(funptr)&f_touchA1096,
	(funptr)&f_touchA1097,
	(funptr)&f_touchA1098,
	(funptr)&f_touchA1099,
	(funptr)&f_touchA1100,
	(funptr)&f_touchA1101,
	(funptr)&f_touchA1102,
	(funptr)&f_touchA1103,
	(funptr)&f_touchA1104,
	(funptr)&f_touchA1105,
	(funptr)&f_touchA1106,
	(funptr)&f_touchA1107,
	(funptr)&f_touchA1108,
	(funptr)&f_touchA1109,
	(funptr)&f_touchA1110,
	(funptr)&f_touchA1111,
	(funptr)&f_touchA1112,
	(funptr)&f_touchA1113,
	(funptr)&f_touchA1114,
	(funptr)&f_touchA1115,
	(funptr)&f_touchA1116,
	(funptr)&f_touchA1117,
	(funptr)&f_touchA1118,
	(funptr)&f_touchA1119,
	(funptr)&f_touchA1120,
	(funptr)&f_touchA1121,
	(funptr)&f_touchA1122,
	(funptr)&f_touchA1123,
	(funptr)&f_touchA1124,
	(funptr)&f_touchA1125,
	(funptr)&f_touchA1126,
	(funptr)&f_touchA1127,
	(funptr)&f_touchA1128,
	(funptr)&f_touchA1129,
	(funptr)&f_touchA1130,
	(funptr)&f_touchA1131,
	(funptr)&f_touchA1132,
	(funptr)&f_touchA1133,
	(funptr)&f_touchA1134,
	(funptr)&f_touchA1135,
	(funptr)&f_touchA1136,
	(funptr)&f_touchA1137,
	(funptr)&f_touchA1138,
	(funptr)&f_touchA1139,
	(funptr)&f_touchA1140,
	(funptr)&f_touchA1141,
	(funptr)&f_touchA1142,
	(funptr)&f_touchA1143,
	(funptr)&f_touchA1144,
	(funptr)&f_touchA1145,
	(funptr)&f_touchA1146,
	(funptr)&f_touchA1147,
	(funptr)&f_touchA1148,
	(funptr)&f_touchA1149,
	(funptr)&f_touchA1150,
	(funptr)&f_touchA1151,
	(funptr)&f_touchA1152,
	(funptr)&f_touchA1153,
	(funptr)&f_touchA1154,
	(funptr)&f_touchA1155,
	(funptr)&f_touchA1156,
	(funptr)&f_touchA1157,
	(funptr)&f_touchA1158,
	(funptr)&f_touchA1159,
	(funptr)&f_touchA1160,
	(funptr)&f_touchA1161,
	(funptr)&f_touchA1162,
	(funptr)&f_touchA1163,
	(funptr)&f_touchA1164,
	(funptr)&f_touchA1165,
	(funptr)&f_touchA1166,
	(funptr)&f_touchA1167,
	(funptr)&f_touchA1168,
	(funptr)&f_touchA1169,
	(funptr)&f_touchA1170,
	(funptr)&f_touchA1171,
	(funptr)&f_touchA1172,
	(funptr)&f_touchA1173,
	(funptr)&f_touchA1174,
	(funptr)&f_touchA1175,
	(funptr)&f_touchA1176,
	(funptr)&f_touchA1177,
	(funptr)&f_touchA1178,
	(funptr)&f_touchA1179,
	(funptr)&f_touchA1180,
	(funptr)&f_touchA1181,
	(funptr)&f_touchA1182,
	(funptr)&f_touchA1183,
	(funptr)&f_touchA1184,
	(funptr)&f_touchA1185,
	(funptr)&f_touchA1186,
	(funptr)&f_touchA1187,
	(funptr)&f_touchA1188,
	(funptr)&f_touchA1189,
	(funptr)&f_touchA1190,
	(funptr)&f_touchA1191,
	(funptr)&f_touchA1192,
	(funptr)&f_touchA1193,
	(funptr)&f_touchA1194,
	(funptr)&f_touchA1195,
	(funptr)&f_touchA1196,
	(funptr)&f_touchA1197,
	(funptr)&f_touchA1198,
	(funptr)&f_touchA1199,
	(funptr)&f_touchA1200,
	(funptr)&f_touchA1201,
	(funptr)&f_touchA1202,
	(funptr)&f_touchA1203,
	(funptr)&f_touchA1204,
	(funptr)&f_touchA1205,
	(funptr)&f_touchA1206,
	(funptr)&f_touchA1207,
	(funptr)&f_touchA1208,
	(funptr)&f_touchA1209,
	(funptr)&f_touchA1210,
	(funptr)&f_touchA1211,
	(funptr)&f_touchA1212,
	(funptr)&f_touchA1213,
	(funptr)&f_touchA1214,
	(funptr)&f_touchA1215,
	(funptr)&f_touchA1216,
	(funptr)&f_touchA1217,
	(funptr)&f_touchA1218,
	(funptr)&f_touchA1219,
	(funptr)&f_touchA1220,
	(funptr)&f_touchA1221,
	(funptr)&f_touchA1222,
	(funptr)&f_touchA1223,
	(funptr)&f_touchA1224,
	(funptr)&f_touchA1225,
	(funptr)&f_touchA1226,
	(funptr)&f_touchA1227,
	(funptr)&f_touchA1228,
	(funptr)&f_touchA1229,
	(funptr)&f_touchA1230,
	(funptr)&f_touchA1231,
	(funptr)&f_touchA1232,
	(funptr)&f_touchA1233,
	(funptr)&f_touchA1234,
	(funptr)&f_touchA1235,
	(funptr)&f_touchA1236,
	(funptr)&f_touchA1237,
	(funptr)&f_touchA1238,
	(funptr)&f_touchA1239,
	(funptr)&f_touchA1240,
	(funptr)&f_touchA1241,
	(funptr)&f_touchA1242,
	(funptr)&f_touchA1243,
	(funptr)&f_touchA1244,
	(funptr)&f_touchA1245,
	(funptr)&f_touchA1246,
	(funptr)&f_touchA1247,
	(funptr)&f_touchA1248,
	(funptr)&f_touchA1249,
	(funptr)&f_touchA1250,
	(funptr)&f_touchA1251,
	(funptr)&f_touchA1252,
	(funptr)&f_touchA1253,
	(funptr)&f_touchA1254,
	(funptr)&f_touchA1255,
	(funptr)&f_touchA1256,
	(funptr)&f_touchA1257,
	(funptr)&f_touchA1258,
	(funptr)&f_touchA1259,
	(funptr)&f_touchA1260,
	(funptr)&f_touchA1261,
	(funptr)&f_touchA1262,
	(funptr)&f_touchA1263,
	(funptr)&f_touchA1264,
	(funptr)&f_touchA1265,
	(funptr)&f_touchA1266,
	(funptr)&f_touchA1267,
	(funptr)&f_touchA1268,
	(funptr)&f_touchA1269,
	(funptr)&f_touchA1270,
	(funptr)&f_touchA1271,
	(funptr)&f_touchA1272,
	(funptr)&f_touchA1273,
	(funptr)&f_touchA1274,
	(funptr)&f_touchA1275,
	(funptr)&f_touchA1276,
	(funptr)&f_touchA1277,
	(funptr)&f_touchA1278,
	(funptr)&f_touchA1279,
	(funptr)&f_touchA1280,
	(funptr)&f_touchA1281,
	(funptr)&f_touchA1282,
	(funptr)&f_touchA1283,
	(funptr)&f_touchA1284,
	(funptr)&f_touchA1285,
	(funptr)&f_touchA1286,
	(funptr)&f_touchA1287,
	(funptr)&f_touchA1288,
	(funptr)&f_touchA1289,
	(funptr)&f_touchA1290,
	(funptr)&f_touchA1291,
	(funptr)&f_touchA1292,
	(funptr)&f_touchA1293,
	(funptr)&f_touchA1294,
	(funptr)&f_touchA1295,
	(funptr)&f_touchA1296,
	(funptr)&f_touchA1297,
	(funptr)&f_touchA1298,
	(funptr)&f_touchA1299,
	(funptr)&f_touchA1300,
	(funptr)&f_touchA1301,
	(funptr)&f_touchA1302,
	(funptr)&f_touchA1303,
	(funptr)&f_touchA1304,
	(funptr)&f_touchA1305,
	(funptr)&f_touchA1306,
	(funptr)&f_touchA1307,
	(funptr)&f_touchA1308,
	(funptr)&f_touchA1309,
	(funptr)&f_touchA1310,
	(funptr)&f_touchA1311,
	(funptr)&f_touchA1312,
	(funptr)&f_touchA1313,
	(funptr)&f_touchA1314,
	(funptr)&f_touchA1315,
	(funptr)&f_touchA1316,
	(funptr)&f_touchA1317,
	(funptr)&f_touchA1318,
	(funptr)&f_touchA1319,
	(funptr)&f_touchA1320,
	(funptr)&f_touchA1321,
	(funptr)&f_touchA1322,
	(funptr)&f_touchA1323,
	(funptr)&f_touchA1324,
	(funptr)&f_touchA1325,
	(funptr)&f_touchA1326,
	(funptr)&f_touchA1327,
	(funptr)&f_touchA1328,
	(funptr)&f_touchA1329,
	(funptr)&f_touchA1330,
	(funptr)&f_touchA1331,
	(funptr)&f_touchA1332,
	(funptr)&f_touchA1333,
	(funptr)&f_touchA1334,
	(funptr)&f_touchA1335,
	(funptr)&f_touchA1336,
	(funptr)&f_touchA1337,
	(funptr)&f_touchA1338,
	(funptr)&f_touchA1339,
	(funptr)&f_touchA1340,
	(funptr)&f_touchA1341,
	(funptr)&f_touchA1342,
	(funptr)&f_touchA1343,
	(funptr)&f_touchA1344,
	(funptr)&f_touchA1345,
	(funptr)&f_touchA1346,
	(funptr)&f_touchA1347,
	(funptr)&f_touchA1348,
	(funptr)&f_touchA1349,
	(funptr)&f_touchA1350,
	(funptr)&f_touchA1351,
	(funptr)&f_touchA1352,
	(funptr)&f_touchA1353,
	(funptr)&f_touchA1354,
	(funptr)&f_touchA1355,
	(funptr)&f_touchA1356,
	(funptr)&f_touchA1357,
	(funptr)&f_touchA1358,
	(funptr)&f_touchA1359,
	(funptr)&f_touchA1360,
	(funptr)&f_touchA1361,
	(funptr)&f_touchA1362,
	(funptr)&f_touchA1363,
	(funptr)&f_touchA1364,
	(funptr)&f_touchA1365,
	(funptr)&f_touchA1366,
	(funptr)&f_touchA1367,
	(funptr)&f_touchA1368,
	(funptr)&f_touchA1369,
	(funptr)&f_touchA1370,
	(funptr)&f_touchA1371,
	(funptr)&f_touchA1372,
	(funptr)&f_touchA1373,
	(funptr)&f_touchA1374,
	(funptr)&f_touchA1375,
	(funptr)&f_touchA1376,
	(funptr)&f_touchA1377,
	(funptr)&f_touchA1378,
	(funptr)&f_touchA1379,
	(funptr)&f_touchA1380,
	(funptr)&f_touchA1381,
	(funptr)&f_touchA1382,
	(funptr)&f_touchA1383,
	(funptr)&f_touchA1384,
	(funptr)&f_touchA1385,
	(funptr)&f_touchA1386,
	(funptr)&f_touchA1387,
	(funptr)&f_touchA1388,
	(funptr)&f_touchA1389,
	(funptr)&f_touchA1390,
	(funptr)&f_touchA1391,
	(funptr)&f_touchA1392,
	(funptr)&f_touchA1393,
	(funptr)&f_touchA1394,
	(funptr)&f_touchA1395,
	(funptr)&f_touchA1396,
	(funptr)&f_touchA1397,
	(funptr)&f_touchA1398,
	(funptr)&f_touchA1399,
	(funptr)&f_touchA1400,
	(funptr)&f_touchA1401,
	(funptr)&f_touchA1402,
	(funptr)&f_touchA1403,
	(funptr)&f_touchA1404,
	(funptr)&f_touchA1405,
	(funptr)&f_touchA1406,
	(funptr)&f_touchA1407,
	(funptr)&f_touchA1408,
	(funptr)&f_touchA1409,
	(funptr)&f_touchA1410,
	(funptr)&f_touchA1411,
	(funptr)&f_touchA1412,
	(funptr)&f_touchA1413,
	(funptr)&f_touchA1414,
	(funptr)&f_touchA1415,
	(funptr)&f_touchA1416,
	(funptr)&f_touchA1417
};
funptr G_agg_cmpfuncs[] = {
	(funptr)&f_cmpA1,
	(funptr)&f_cmpA2,
	(funptr)&f_cmpA3,
	(funptr)&f_cmpA4,
	(funptr)&f_cmpA5,
	(funptr)&f_cmpA6,
	(funptr)&f_cmpA7,
	(funptr)&f_cmpA8,
	(funptr)&f_cmpA9,
	(funptr)&f_cmpA10,
	(funptr)&f_cmpA11,
	(funptr)&f_cmpA12,
	(funptr)&f_cmpA13,
	(funptr)&f_cmpA14,
	(funptr)&f_cmpA15,
	(funptr)&f_cmpA16,
	(funptr)&f_cmpA17,
	(funptr)&f_cmpA18,
	(funptr)&f_cmpA19,
	(funptr)&f_cmpA20,
	(funptr)&f_cmpA21,
	(funptr)&f_cmpA22,
	(funptr)&f_cmpA23,
	(funptr)&f_cmpA24,
	(funptr)&f_cmpA25,
	(funptr)&f_cmpA26,
	(funptr)&f_cmpA27,
	(funptr)&f_cmpA28,
	(funptr)&f_cmpA29,
	(funptr)&f_cmpA30,
	(funptr)&f_cmpA31,
	(funptr)&f_cmpA32,
	(funptr)&f_cmpA33,
	(funptr)&f_cmpA34,
	(funptr)&f_cmpA35,
	(funptr)&f_cmpA36,
	(funptr)&f_cmpA37,
	(funptr)&f_cmpA38,
	(funptr)&f_cmpA39,
	(funptr)&f_cmpA40,
	(funptr)&f_cmpA41,
	(funptr)&f_cmpA42,
	(funptr)&f_cmpA43,
	(funptr)&f_cmpA44,
	(funptr)&f_cmpA45,
	(funptr)&f_cmpA46,
	(funptr)&f_cmpA47,
	(funptr)&f_cmpA48,
	(funptr)&f_cmpA49,
	(funptr)&f_cmpA50,
	(funptr)&f_cmpA51,
	(funptr)&f_cmpA52,
	(funptr)&f_cmpA53,
	(funptr)&f_cmpA54,
	(funptr)&f_cmpA55,
	(funptr)&f_cmpA56,
	(funptr)&f_cmpA57,
	(funptr)&f_cmpA58,
	(funptr)&f_cmpA59,
	(funptr)&f_cmpA60,
	(funptr)&f_cmpA61,
	(funptr)&f_cmpA62,
	(funptr)&f_cmpA63,
	(funptr)&f_cmpA64,
	(funptr)&f_cmpA65,
	(funptr)&f_cmpA66,
	(funptr)&f_cmpA67,
	(funptr)&f_cmpA68,
	(funptr)&f_cmpA69,
	(funptr)&f_cmpA70,
	(funptr)&f_cmpA71,
	(funptr)&f_cmpA72,
	(funptr)&f_cmpA73,
	(funptr)&f_cmpA74,
	(funptr)&f_cmpA75,
	(funptr)&f_cmpA76,
	(funptr)&f_cmpA77,
	(funptr)&f_cmpA78,
	(funptr)&f_cmpA79,
	(funptr)&f_cmpA80,
	(funptr)&f_cmpA81,
	(funptr)&f_cmpA82,
	(funptr)&f_cmpA83,
	(funptr)&f_cmpA84,
	(funptr)&f_cmpA85,
	(funptr)&f_cmpA86,
	(funptr)&f_cmpA87,
	(funptr)&f_cmpA88,
	(funptr)&f_cmpA89,
	(funptr)&f_cmpA90,
	(funptr)&f_cmpA91,
	(funptr)&f_cmpA92,
	(funptr)&f_cmpA93,
	(funptr)&f_cmpA94,
	(funptr)&f_cmpA95,
	(funptr)&f_cmpA96,
	(funptr)&f_cmpA97,
	(funptr)&f_cmpA98,
	(funptr)&f_cmpA99,
	(funptr)&f_cmpA100,
	(funptr)&f_cmpA101,
	(funptr)&f_cmpA102,
	(funptr)&f_cmpA103,
	(funptr)&f_cmpA104,
	(funptr)&f_cmpA105,
	(funptr)&f_cmpA106,
	(funptr)&f_cmpA107,
	(funptr)&f_cmpA108,
	(funptr)&f_cmpA109,
	(funptr)&f_cmpA110,
	(funptr)&f_cmpA111,
	(funptr)&f_cmpA112,
	(funptr)&f_cmpA113,
	(funptr)&f_cmpA114,
	(funptr)&f_cmpA115,
	(funptr)&f_cmpA116,
	(funptr)&f_cmpA117,
	(funptr)&f_cmpA118,
	(funptr)&f_cmpA119,
	(funptr)&f_cmpA120,
	(funptr)&f_cmpA121,
	(funptr)&f_cmpA122,
	(funptr)&f_cmpA123,
	(funptr)&f_cmpA124,
	(funptr)&f_cmpA125,
	(funptr)&f_cmpA126,
	(funptr)&f_cmpA127,
	(funptr)&f_cmpA128,
	(funptr)&f_cmpA129,
	(funptr)&f_cmpA130,
	(funptr)&f_cmpA131,
	(funptr)&f_cmpA132,
	(funptr)&f_cmpA133,
	(funptr)&f_cmpA134,
	(funptr)&f_cmpA135,
	(funptr)&f_cmpA136,
	(funptr)&f_cmpA137,
	(funptr)&f_cmpA138,
	(funptr)&f_cmpA139,
	(funptr)&f_cmpA140,
	(funptr)&f_cmpA141,
	(funptr)&f_cmpA142,
	(funptr)&f_cmpA143,
	(funptr)&f_cmpA144,
	(funptr)&f_cmpA145,
	(funptr)&f_cmpA146,
	(funptr)&f_cmpA147,
	(funptr)&f_cmpA148,
	(funptr)&f_cmpA149,
	(funptr)&f_cmpA150,
	(funptr)&f_cmpA151,
	(funptr)&f_cmpA152,
	(funptr)&f_cmpA153,
	(funptr)&f_cmpA154,
	(funptr)&f_cmpA155,
	(funptr)&f_cmpA156,
	(funptr)&f_cmpA157,
	(funptr)&f_cmpA158,
	(funptr)&f_cmpA159,
	(funptr)&f_cmpA160,
	(funptr)&f_cmpA161,
	(funptr)&f_cmpA162,
	(funptr)&f_cmpA163,
	(funptr)&f_cmpA164,
	(funptr)&f_cmpA165,
	(funptr)&f_cmpA166,
	(funptr)&f_cmpA167,
	(funptr)&f_cmpA168,
	(funptr)&f_cmpA169,
	(funptr)&f_cmpA170,
	(funptr)&f_cmpA171,
	(funptr)&f_cmpA172,
	(funptr)&f_cmpA173,
	(funptr)&f_cmpA174,
	(funptr)&f_cmpA175,
	(funptr)&f_cmpA176,
	(funptr)&f_cmpA177,
	(funptr)&f_cmpA178,
	(funptr)&f_cmpA179,
	(funptr)&f_cmpA180,
	(funptr)&f_cmpA181,
	(funptr)&f_cmpA182,
	(funptr)&f_cmpA183,
	(funptr)&f_cmpA184,
	(funptr)&f_cmpA185,
	(funptr)&f_cmpA186,
	(funptr)&f_cmpA187,
	(funptr)&f_cmpA188,
	(funptr)&f_cmpA189,
	(funptr)&f_cmpA190,
	(funptr)&f_cmpA191,
	(funptr)&f_cmpA192,
	(funptr)&f_cmpA193,
	(funptr)&f_cmpA194,
	(funptr)&f_cmpA195,
	(funptr)&f_cmpA196,
	(funptr)&f_cmpA197,
	(funptr)&f_cmpA198,
	(funptr)&f_cmpA199,
	(funptr)&f_cmpA200,
	(funptr)&f_cmpA201,
	(funptr)&f_cmpA202,
	(funptr)&f_cmpA203,
	(funptr)&f_cmpA204,
	(funptr)&f_cmpA205,
	(funptr)&f_cmpA206,
	(funptr)&f_cmpA207,
	(funptr)&f_cmpA208,
	(funptr)&f_cmpA209,
	(funptr)&f_cmpA210,
	(funptr)&f_cmpA211,
	(funptr)&f_cmpA212,
	(funptr)&f_cmpA213,
	(funptr)&f_cmpA214,
	(funptr)&f_cmpA215,
	(funptr)&f_cmpA216,
	(funptr)&f_cmpA217,
	(funptr)&f_cmpA218,
	(funptr)&f_cmpA219,
	(funptr)&f_cmpA220,
	(funptr)&f_cmpA221,
	(funptr)&f_cmpA222,
	(funptr)&f_cmpA223,
	(funptr)&f_cmpA224,
	(funptr)&f_cmpA225,
	(funptr)&f_cmpA226,
	(funptr)&f_cmpA227,
	(funptr)&f_cmpA228,
	(funptr)&f_cmpA229,
	(funptr)&f_cmpA230,
	(funptr)&f_cmpA231,
	(funptr)&f_cmpA232,
	(funptr)&f_cmpA233,
	(funptr)&f_cmpA234,
	(funptr)&f_cmpA235,
	(funptr)&f_cmpA236,
	(funptr)&f_cmpA237,
	(funptr)&f_cmpA238,
	(funptr)&f_cmpA239,
	(funptr)&f_cmpA240,
	(funptr)&f_cmpA241,
	(funptr)&f_cmpA242,
	(funptr)&f_cmpA243,
	(funptr)&f_cmpA244,
	(funptr)&f_cmpA245,
	(funptr)&f_cmpA246,
	(funptr)&f_cmpA247,
	(funptr)&f_cmpA248,
	(funptr)&f_cmpA249,
	(funptr)&f_cmpA250,
	(funptr)&f_cmpA251,
	(funptr)&f_cmpA252,
	(funptr)&f_cmpA253,
	(funptr)&f_cmpA254,
	(funptr)&f_cmpA255,
	(funptr)&f_cmpA256,
	(funptr)&f_cmpA257,
	(funptr)&f_cmpA258,
	(funptr)&f_cmpA259,
	(funptr)&f_cmpA260,
	(funptr)&f_cmpA261,
	(funptr)&f_cmpA262,
	(funptr)&f_cmpA263,
	(funptr)&f_cmpA264,
	(funptr)&f_cmpA265,
	(funptr)&f_cmpA266,
	(funptr)&f_cmpA267,
	(funptr)&f_cmpA268,
	(funptr)&f_cmpA269,
	(funptr)&f_cmpA270,
	(funptr)&f_cmpA271,
	(funptr)&f_cmpA272,
	(funptr)&f_cmpA273,
	(funptr)&f_cmpA274,
	(funptr)&f_cmpA275,
	(funptr)&f_cmpA276,
	(funptr)&f_cmpA277,
	(funptr)&f_cmpA278,
	(funptr)&f_cmpA279,
	(funptr)&f_cmpA280,
	(funptr)&f_cmpA281,
	(funptr)&f_cmpA282,
	(funptr)&f_cmpA283,
	(funptr)&f_cmpA284,
	(funptr)&f_cmpA285,
	(funptr)&f_cmpA286,
	(funptr)&f_cmpA287,
	(funptr)&f_cmpA288,
	(funptr)&f_cmpA289,
	(funptr)&f_cmpA290,
	(funptr)&f_cmpA291,
	(funptr)&f_cmpA292,
	(funptr)&f_cmpA293,
	(funptr)&f_cmpA294,
	(funptr)&f_cmpA295,
	(funptr)&f_cmpA296,
	(funptr)&f_cmpA297,
	(funptr)&f_cmpA298,
	(funptr)&f_cmpA299,
	(funptr)&f_cmpA300,
	(funptr)&f_cmpA301,
	(funptr)&f_cmpA302,
	(funptr)&f_cmpA303,
	(funptr)&f_cmpA304,
	(funptr)&f_cmpA305,
	(funptr)&f_cmpA306,
	(funptr)&f_cmpA307,
	(funptr)&f_cmpA308,
	(funptr)&f_cmpA309,
	(funptr)&f_cmpA310,
	(funptr)&f_cmpA311,
	(funptr)&f_cmpA312,
	(funptr)&f_cmpA313,
	(funptr)&f_cmpA314,
	(funptr)&f_cmpA315,
	(funptr)&f_cmpA316,
	(funptr)&f_cmpA317,
	(funptr)&f_cmpA318,
	(funptr)&f_cmpA319,
	(funptr)&f_cmpA320,
	(funptr)&f_cmpA321,
	(funptr)&f_cmpA322,
	(funptr)&f_cmpA323,
	(funptr)&f_cmpA324,
	(funptr)&f_cmpA325,
	(funptr)&f_cmpA326,
	(funptr)&f_cmpA327,
	(funptr)&f_cmpA328,
	(funptr)&f_cmpA329,
	(funptr)&f_cmpA330,
	(funptr)&f_cmpA331,
	(funptr)&f_cmpA332,
	(funptr)&f_cmpA333,
	(funptr)&f_cmpA334,
	(funptr)&f_cmpA335,
	(funptr)&f_cmpA336,
	(funptr)&f_cmpA337,
	(funptr)&f_cmpA338,
	(funptr)&f_cmpA339,
	(funptr)&f_cmpA340,
	(funptr)&f_cmpA341,
	(funptr)&f_cmpA342,
	(funptr)&f_cmpA343,
	(funptr)&f_cmpA344,
	(funptr)&f_cmpA345,
	(funptr)&f_cmpA346,
	(funptr)&f_cmpA347,
	(funptr)&f_cmpA348,
	(funptr)&f_cmpA349,
	(funptr)&f_cmpA350,
	(funptr)&f_cmpA351,
	(funptr)&f_cmpA352,
	(funptr)&f_cmpA353,
	(funptr)&f_cmpA354,
	(funptr)&f_cmpA355,
	(funptr)&f_cmpA356,
	(funptr)&f_cmpA357,
	(funptr)&f_cmpA358,
	(funptr)&f_cmpA359,
	(funptr)&f_cmpA360,
	(funptr)&f_cmpA361,
	(funptr)&f_cmpA362,
	(funptr)&f_cmpA363,
	(funptr)&f_cmpA364,
	(funptr)&f_cmpA365,
	(funptr)&f_cmpA366,
	(funptr)&f_cmpA367,
	(funptr)&f_cmpA368,
	(funptr)&f_cmpA369,
	(funptr)&f_cmpA370,
	(funptr)&f_cmpA371,
	(funptr)&f_cmpA372,
	(funptr)&f_cmpA373,
	(funptr)&f_cmpA374,
	(funptr)&f_cmpA375,
	(funptr)&f_cmpA376,
	(funptr)&f_cmpA377,
	(funptr)&f_cmpA378,
	(funptr)&f_cmpA379,
	(funptr)&f_cmpA380,
	(funptr)&f_cmpA381,
	(funptr)&f_cmpA382,
	(funptr)&f_cmpA383,
	(funptr)&f_cmpA384,
	(funptr)&f_cmpA385,
	(funptr)&f_cmpA386,
	(funptr)&f_cmpA387,
	(funptr)&f_cmpA388,
	(funptr)&f_cmpA389,
	(funptr)&f_cmpA390,
	(funptr)&f_cmpA391,
	(funptr)&f_cmpA392,
	(funptr)&f_cmpA393,
	(funptr)&f_cmpA394,
	(funptr)&f_cmpA395,
	(funptr)&f_cmpA396,
	(funptr)&f_cmpA397,
	(funptr)&f_cmpA398,
	(funptr)&f_cmpA399,
	(funptr)&f_cmpA400,
	(funptr)&f_cmpA401,
	(funptr)&f_cmpA402,
	(funptr)&f_cmpA403,
	(funptr)&f_cmpA404,
	(funptr)&f_cmpA405,
	(funptr)&f_cmpA406,
	(funptr)&f_cmpA407,
	(funptr)&f_cmpA408,
	(funptr)&f_cmpA409,
	(funptr)&f_cmpA410,
	(funptr)&f_cmpA411,
	(funptr)&f_cmpA412,
	(funptr)&f_cmpA413,
	(funptr)&f_cmpA414,
	(funptr)&f_cmpA415,
	(funptr)&f_cmpA416,
	(funptr)&f_cmpA417,
	(funptr)&f_cmpA418,
	(funptr)&f_cmpA419,
	(funptr)&f_cmpA420,
	(funptr)&f_cmpA421,
	(funptr)&f_cmpA422,
	(funptr)&f_cmpA423,
	(funptr)&f_cmpA424,
	(funptr)&f_cmpA425,
	(funptr)&f_cmpA426,
	(funptr)&f_cmpA427,
	(funptr)&f_cmpA428,
	(funptr)&f_cmpA429,
	(funptr)&f_cmpA430,
	(funptr)&f_cmpA431,
	(funptr)&f_cmpA432,
	(funptr)&f_cmpA433,
	(funptr)&f_cmpA434,
	(funptr)&f_cmpA435,
	(funptr)&f_cmpA436,
	(funptr)&f_cmpA437,
	(funptr)&f_cmpA438,
	(funptr)&f_cmpA439,
	(funptr)&f_cmpA440,
	(funptr)&f_cmpA441,
	(funptr)&f_cmpA442,
	(funptr)&f_cmpA443,
	(funptr)&f_cmpA444,
	(funptr)&f_cmpA445,
	(funptr)&f_cmpA446,
	(funptr)&f_cmpA447,
	(funptr)&f_cmpA448,
	(funptr)&f_cmpA449,
	(funptr)&f_cmpA450,
	(funptr)&f_cmpA451,
	(funptr)&f_cmpA452,
	(funptr)&f_cmpA453,
	(funptr)&f_cmpA454,
	(funptr)&f_cmpA455,
	(funptr)&f_cmpA456,
	(funptr)&f_cmpA457,
	(funptr)&f_cmpA458,
	(funptr)&f_cmpA459,
	(funptr)&f_cmpA460,
	(funptr)&f_cmpA461,
	(funptr)&f_cmpA462,
	(funptr)&f_cmpA463,
	(funptr)&f_cmpA464,
	(funptr)&f_cmpA465,
	(funptr)&f_cmpA466,
	(funptr)&f_cmpA467,
	(funptr)&f_cmpA468,
	(funptr)&f_cmpA469,
	(funptr)&f_cmpA470,
	(funptr)&f_cmpA471,
	(funptr)&f_cmpA472,
	(funptr)&f_cmpA473,
	(funptr)&f_cmpA474,
	(funptr)&f_cmpA475,
	(funptr)&f_cmpA476,
	(funptr)&f_cmpA477,
	(funptr)&f_cmpA478,
	(funptr)&f_cmpA479,
	(funptr)&f_cmpA480,
	(funptr)&f_cmpA481,
	(funptr)&f_cmpA482,
	(funptr)&f_cmpA483,
	(funptr)&f_cmpA484,
	(funptr)&f_cmpA485,
	(funptr)&f_cmpA486,
	(funptr)&f_cmpA487,
	(funptr)&f_cmpA488,
	(funptr)&f_cmpA489,
	(funptr)&f_cmpA490,
	(funptr)&f_cmpA491,
	(funptr)&f_cmpA492,
	(funptr)&f_cmpA493,
	(funptr)&f_cmpA494,
	(funptr)&f_cmpA495,
	(funptr)&f_cmpA496,
	(funptr)&f_cmpA497,
	(funptr)&f_cmpA498,
	(funptr)&f_cmpA499,
	(funptr)&f_cmpA500,
	(funptr)&f_cmpA501,
	(funptr)&f_cmpA502,
	(funptr)&f_cmpA503,
	(funptr)&f_cmpA504,
	(funptr)&f_cmpA505,
	(funptr)&f_cmpA506,
	(funptr)&f_cmpA507,
	(funptr)&f_cmpA508,
	(funptr)&f_cmpA509,
	(funptr)&f_cmpA510,
	(funptr)&f_cmpA511,
	(funptr)&f_cmpA512,
	(funptr)&f_cmpA513,
	(funptr)&f_cmpA514,
	(funptr)&f_cmpA515,
	(funptr)&f_cmpA516,
	(funptr)&f_cmpA517,
	(funptr)&f_cmpA518,
	(funptr)&f_cmpA519,
	(funptr)&f_cmpA520,
	(funptr)&f_cmpA521,
	(funptr)&f_cmpA522,
	(funptr)&f_cmpA523,
	(funptr)&f_cmpA524,
	(funptr)&f_cmpA525,
	(funptr)&f_cmpA526,
	(funptr)&f_cmpA527,
	(funptr)&f_cmpA528,
	(funptr)&f_cmpA529,
	(funptr)&f_cmpA530,
	(funptr)&f_cmpA531,
	(funptr)&f_cmpA532,
	(funptr)&f_cmpA533,
	(funptr)&f_cmpA534,
	(funptr)&f_cmpA535,
	(funptr)&f_cmpA536,
	(funptr)&f_cmpA537,
	(funptr)&f_cmpA538,
	(funptr)&f_cmpA539,
	(funptr)&f_cmpA540,
	(funptr)&f_cmpA541,
	(funptr)&f_cmpA542,
	(funptr)&f_cmpA543,
	(funptr)&f_cmpA544,
	(funptr)&f_cmpA545,
	(funptr)&f_cmpA546,
	(funptr)&f_cmpA547,
	(funptr)&f_cmpA548,
	(funptr)&f_cmpA549,
	(funptr)&f_cmpA550,
	(funptr)&f_cmpA551,
	(funptr)&f_cmpA552,
	(funptr)&f_cmpA553,
	(funptr)&f_cmpA554,
	(funptr)&f_cmpA555,
	(funptr)&f_cmpA556,
	(funptr)&f_cmpA557,
	(funptr)&f_cmpA558,
	(funptr)&f_cmpA559,
	(funptr)&f_cmpA560,
	(funptr)&f_cmpA561,
	(funptr)&f_cmpA562,
	(funptr)&f_cmpA563,
	(funptr)&f_cmpA564,
	(funptr)&f_cmpA565,
	(funptr)&f_cmpA566,
	(funptr)&f_cmpA567,
	(funptr)&f_cmpA568,
	(funptr)&f_cmpA569,
	(funptr)&f_cmpA570,
	(funptr)&f_cmpA571,
	(funptr)&f_cmpA572,
	(funptr)&f_cmpA573,
	(funptr)&f_cmpA574,
	(funptr)&f_cmpA575,
	(funptr)&f_cmpA576,
	(funptr)&f_cmpA577,
	(funptr)&f_cmpA578,
	(funptr)&f_cmpA579,
	(funptr)&f_cmpA580,
	(funptr)&f_cmpA581,
	(funptr)&f_cmpA582,
	(funptr)&f_cmpA583,
	(funptr)&f_cmpA584,
	(funptr)&f_cmpA585,
	(funptr)&f_cmpA586,
	(funptr)&f_cmpA587,
	(funptr)&f_cmpA588,
	(funptr)&f_cmpA589,
	(funptr)&f_cmpA590,
	(funptr)&f_cmpA591,
	(funptr)&f_cmpA592,
	(funptr)&f_cmpA593,
	(funptr)&f_cmpA594,
	(funptr)&f_cmpA595,
	(funptr)&f_cmpA596,
	(funptr)&f_cmpA597,
	(funptr)&f_cmpA598,
	(funptr)&f_cmpA599,
	(funptr)&f_cmpA600,
	(funptr)&f_cmpA601,
	(funptr)&f_cmpA602,
	(funptr)&f_cmpA603,
	(funptr)&f_cmpA604,
	(funptr)&f_cmpA605,
	(funptr)&f_cmpA606,
	(funptr)&f_cmpA607,
	(funptr)&f_cmpA608,
	(funptr)&f_cmpA609,
	(funptr)&f_cmpA610,
	(funptr)&f_cmpA611,
	(funptr)&f_cmpA612,
	(funptr)&f_cmpA613,
	(funptr)&f_cmpA614,
	(funptr)&f_cmpA615,
	(funptr)&f_cmpA616,
	(funptr)&f_cmpA617,
	(funptr)&f_cmpA618,
	(funptr)&f_cmpA619,
	(funptr)&f_cmpA620,
	(funptr)&f_cmpA621,
	(funptr)&f_cmpA622,
	(funptr)&f_cmpA623,
	(funptr)&f_cmpA624,
	(funptr)&f_cmpA625,
	(funptr)&f_cmpA626,
	(funptr)&f_cmpA627,
	(funptr)&f_cmpA628,
	(funptr)&f_cmpA629,
	(funptr)&f_cmpA630,
	(funptr)&f_cmpA631,
	(funptr)&f_cmpA632,
	(funptr)&f_cmpA633,
	(funptr)&f_cmpA634,
	(funptr)&f_cmpA635,
	(funptr)&f_cmpA636,
	(funptr)&f_cmpA637,
	(funptr)&f_cmpA638,
	(funptr)&f_cmpA639,
	(funptr)&f_cmpA640,
	(funptr)&f_cmpA641,
	(funptr)&f_cmpA642,
	(funptr)&f_cmpA643,
	(funptr)&f_cmpA644,
	(funptr)&f_cmpA645,
	(funptr)&f_cmpA646,
	(funptr)&f_cmpA647,
	(funptr)&f_cmpA648,
	(funptr)&f_cmpA649,
	(funptr)&f_cmpA650,
	(funptr)&f_cmpA651,
	(funptr)&f_cmpA652,
	(funptr)&f_cmpA653,
	(funptr)&f_cmpA654,
	(funptr)&f_cmpA655,
	(funptr)&f_cmpA656,
	(funptr)&f_cmpA657,
	(funptr)&f_cmpA658,
	(funptr)&f_cmpA659,
	(funptr)&f_cmpA660,
	(funptr)&f_cmpA661,
	(funptr)&f_cmpA662,
	(funptr)&f_cmpA663,
	(funptr)&f_cmpA664,
	(funptr)&f_cmpA665,
	(funptr)&f_cmpA666,
	(funptr)&f_cmpA667,
	(funptr)&f_cmpA668,
	(funptr)&f_cmpA669,
	(funptr)&f_cmpA670,
	(funptr)&f_cmpA671,
	(funptr)&f_cmpA672,
	(funptr)&f_cmpA673,
	(funptr)&f_cmpA674,
	(funptr)&f_cmpA675,
	(funptr)&f_cmpA676,
	(funptr)&f_cmpA677,
	(funptr)&f_cmpA678,
	(funptr)&f_cmpA679,
	(funptr)&f_cmpA680,
	(funptr)&f_cmpA681,
	(funptr)&f_cmpA682,
	(funptr)&f_cmpA683,
	(funptr)&f_cmpA684,
	(funptr)&f_cmpA685,
	(funptr)&f_cmpA686,
	(funptr)&f_cmpA687,
	(funptr)&f_cmpA688,
	(funptr)&f_cmpA689,
	(funptr)&f_cmpA690,
	(funptr)&f_cmpA691,
	(funptr)&f_cmpA692,
	(funptr)&f_cmpA693,
	(funptr)&f_cmpA694,
	(funptr)&f_cmpA695,
	(funptr)&f_cmpA696,
	(funptr)&f_cmpA697,
	(funptr)&f_cmpA698,
	(funptr)&f_cmpA699,
	(funptr)&f_cmpA700,
	(funptr)&f_cmpA701,
	(funptr)&f_cmpA702,
	(funptr)&f_cmpA703,
	(funptr)&f_cmpA704,
	(funptr)&f_cmpA705,
	(funptr)&f_cmpA706,
	(funptr)&f_cmpA707,
	(funptr)&f_cmpA708,
	(funptr)&f_cmpA709,
	(funptr)&f_cmpA710,
	(funptr)&f_cmpA711,
	(funptr)&f_cmpA712,
	(funptr)&f_cmpA713,
	(funptr)&f_cmpA714,
	(funptr)&f_cmpA715,
	(funptr)&f_cmpA716,
	(funptr)&f_cmpA717,
	(funptr)&f_cmpA718,
	(funptr)&f_cmpA719,
	(funptr)&f_cmpA720,
	(funptr)&f_cmpA721,
	(funptr)&f_cmpA722,
	(funptr)&f_cmpA723,
	(funptr)&f_cmpA724,
	(funptr)&f_cmpA725,
	(funptr)&f_cmpA726,
	(funptr)&f_cmpA727,
	(funptr)&f_cmpA728,
	(funptr)&f_cmpA729,
	(funptr)&f_cmpA730,
	(funptr)&f_cmpA731,
	(funptr)&f_cmpA732,
	(funptr)&f_cmpA733,
	(funptr)&f_cmpA734,
	(funptr)&f_cmpA735,
	(funptr)&f_cmpA736,
	(funptr)&f_cmpA737,
	(funptr)&f_cmpA738,
	(funptr)&f_cmpA739,
	(funptr)&f_cmpA740,
	(funptr)&f_cmpA741,
	(funptr)&f_cmpA742,
	(funptr)&f_cmpA743,
	(funptr)&f_cmpA744,
	(funptr)&f_cmpA745,
	(funptr)&f_cmpA746,
	(funptr)&f_cmpA747,
	(funptr)&f_cmpA748,
	(funptr)&f_cmpA749,
	(funptr)&f_cmpA750,
	(funptr)&f_cmpA751,
	(funptr)&f_cmpA752,
	(funptr)&f_cmpA753,
	(funptr)&f_cmpA754,
	(funptr)&f_cmpA755,
	(funptr)&f_cmpA756,
	(funptr)&f_cmpA757,
	(funptr)&f_cmpA758,
	(funptr)&f_cmpA759,
	(funptr)&f_cmpA760,
	(funptr)&f_cmpA761,
	(funptr)&f_cmpA762,
	(funptr)&f_cmpA763,
	(funptr)&f_cmpA764,
	(funptr)&f_cmpA765,
	(funptr)&f_cmpA766,
	(funptr)&f_cmpA767,
	(funptr)&f_cmpA768,
	(funptr)&f_cmpA769,
	(funptr)&f_cmpA770,
	(funptr)&f_cmpA771,
	(funptr)&f_cmpA772,
	(funptr)&f_cmpA773,
	(funptr)&f_cmpA774,
	(funptr)&f_cmpA775,
	(funptr)&f_cmpA776,
	(funptr)&f_cmpA777,
	(funptr)&f_cmpA778,
	(funptr)&f_cmpA779,
	(funptr)&f_cmpA780,
	(funptr)&f_cmpA781,
	(funptr)&f_cmpA782,
	(funptr)&f_cmpA783,
	(funptr)&f_cmpA784,
	(funptr)&f_cmpA785,
	(funptr)&f_cmpA786,
	(funptr)&f_cmpA787,
	(funptr)&f_cmpA788,
	(funptr)&f_cmpA789,
	(funptr)&f_cmpA790,
	(funptr)&f_cmpA791,
	(funptr)&f_cmpA792,
	(funptr)&f_cmpA793,
	(funptr)&f_cmpA794,
	(funptr)&f_cmpA795,
	(funptr)&f_cmpA796,
	(funptr)&f_cmpA797,
	(funptr)&f_cmpA798,
	(funptr)&f_cmpA799,
	(funptr)&f_cmpA800,
	(funptr)&f_cmpA801,
	(funptr)&f_cmpA802,
	(funptr)&f_cmpA803,
	(funptr)&f_cmpA804,
	(funptr)&f_cmpA805,
	(funptr)&f_cmpA806,
	(funptr)&f_cmpA807,
	(funptr)&f_cmpA808,
	(funptr)&f_cmpA809,
	(funptr)&f_cmpA810,
	(funptr)&f_cmpA811,
	(funptr)&f_cmpA812,
	(funptr)&f_cmpA813,
	(funptr)&f_cmpA814,
	(funptr)&f_cmpA815,
	(funptr)&f_cmpA816,
	(funptr)&f_cmpA817,
	(funptr)&f_cmpA818,
	(funptr)&f_cmpA819,
	(funptr)&f_cmpA820,
	(funptr)&f_cmpA821,
	(funptr)&f_cmpA822,
	(funptr)&f_cmpA823,
	(funptr)&f_cmpA824,
	(funptr)&f_cmpA825,
	(funptr)&f_cmpA826,
	(funptr)&f_cmpA827,
	(funptr)&f_cmpA828,
	(funptr)&f_cmpA829,
	(funptr)&f_cmpA830,
	(funptr)&f_cmpA831,
	(funptr)&f_cmpA832,
	(funptr)&f_cmpA833,
	(funptr)&f_cmpA834,
	(funptr)&f_cmpA835,
	(funptr)&f_cmpA836,
	(funptr)&f_cmpA837,
	(funptr)&f_cmpA838,
	(funptr)&f_cmpA839,
	(funptr)&f_cmpA840,
	(funptr)&f_cmpA841,
	(funptr)&f_cmpA842,
	(funptr)&f_cmpA843,
	(funptr)&f_cmpA844,
	(funptr)&f_cmpA845,
	(funptr)&f_cmpA846,
	(funptr)&f_cmpA847,
	(funptr)&f_cmpA848,
	(funptr)&f_cmpA849,
	(funptr)&f_cmpA850,
	(funptr)&f_cmpA851,
	(funptr)&f_cmpA852,
	(funptr)&f_cmpA853,
	(funptr)&f_cmpA854,
	(funptr)&f_cmpA855,
	(funptr)&f_cmpA856,
	(funptr)&f_cmpA857,
	(funptr)&f_cmpA858,
	(funptr)&f_cmpA859,
	(funptr)&f_cmpA860,
	(funptr)&f_cmpA861,
	(funptr)&f_cmpA862,
	(funptr)&f_cmpA863,
	(funptr)&f_cmpA864,
	(funptr)&f_cmpA865,
	(funptr)&f_cmpA866,
	(funptr)&f_cmpA867,
	(funptr)&f_cmpA868,
	(funptr)&f_cmpA869,
	(funptr)&f_cmpA870,
	(funptr)&f_cmpA871,
	(funptr)&f_cmpA872,
	(funptr)&f_cmpA873,
	(funptr)&f_cmpA874,
	(funptr)&f_cmpA875,
	(funptr)&f_cmpA876,
	(funptr)&f_cmpA877,
	(funptr)&f_cmpA878,
	(funptr)&f_cmpA879,
	(funptr)&f_cmpA880,
	(funptr)&f_cmpA881,
	(funptr)&f_cmpA882,
	(funptr)&f_cmpA883,
	(funptr)&f_cmpA884,
	(funptr)&f_cmpA885,
	(funptr)&f_cmpA886,
	(funptr)&f_cmpA887,
	(funptr)&f_cmpA888,
	(funptr)&f_cmpA889,
	(funptr)&f_cmpA890,
	(funptr)&f_cmpA891,
	(funptr)&f_cmpA892,
	(funptr)&f_cmpA893,
	(funptr)&f_cmpA894,
	(funptr)&f_cmpA895,
	(funptr)&f_cmpA896,
	(funptr)&f_cmpA897,
	(funptr)&f_cmpA898,
	(funptr)&f_cmpA899,
	(funptr)&f_cmpA900,
	(funptr)&f_cmpA901,
	(funptr)&f_cmpA902,
	(funptr)&f_cmpA903,
	(funptr)&f_cmpA904,
	(funptr)&f_cmpA905,
	(funptr)&f_cmpA906,
	(funptr)&f_cmpA907,
	(funptr)&f_cmpA908,
	(funptr)&f_cmpA909,
	(funptr)&f_cmpA910,
	(funptr)&f_cmpA911,
	(funptr)&f_cmpA912,
	(funptr)&f_cmpA913,
	(funptr)&f_cmpA914,
	(funptr)&f_cmpA915,
	(funptr)&f_cmpA916,
	(funptr)&f_cmpA917,
	(funptr)&f_cmpA918,
	(funptr)&f_cmpA919,
	(funptr)&f_cmpA920,
	(funptr)&f_cmpA921,
	(funptr)&f_cmpA922,
	(funptr)&f_cmpA923,
	(funptr)&f_cmpA924,
	(funptr)&f_cmpA925,
	(funptr)&f_cmpA926,
	(funptr)&f_cmpA927,
	(funptr)&f_cmpA928,
	(funptr)&f_cmpA929,
	(funptr)&f_cmpA930,
	(funptr)&f_cmpA931,
	(funptr)&f_cmpA932,
	(funptr)&f_cmpA933,
	(funptr)&f_cmpA934,
	(funptr)&f_cmpA935,
	(funptr)&f_cmpA936,
	(funptr)&f_cmpA937,
	(funptr)&f_cmpA938,
	(funptr)&f_cmpA939,
	(funptr)&f_cmpA940,
	(funptr)&f_cmpA941,
	(funptr)&f_cmpA942,
	(funptr)&f_cmpA943,
	(funptr)&f_cmpA944,
	(funptr)&f_cmpA945,
	(funptr)&f_cmpA946,
	(funptr)&f_cmpA947,
	(funptr)&f_cmpA948,
	(funptr)&f_cmpA949,
	(funptr)&f_cmpA950,
	(funptr)&f_cmpA951,
	(funptr)&f_cmpA952,
	(funptr)&f_cmpA953,
	(funptr)&f_cmpA954,
	(funptr)&f_cmpA955,
	(funptr)&f_cmpA956,
	(funptr)&f_cmpA957,
	(funptr)&f_cmpA958,
	(funptr)&f_cmpA959,
	(funptr)&f_cmpA960,
	(funptr)&f_cmpA961,
	(funptr)&f_cmpA962,
	(funptr)&f_cmpA963,
	(funptr)&f_cmpA964,
	(funptr)&f_cmpA965,
	(funptr)&f_cmpA966,
	(funptr)&f_cmpA967,
	(funptr)&f_cmpA968,
	(funptr)&f_cmpA969,
	(funptr)&f_cmpA970,
	(funptr)&f_cmpA971,
	(funptr)&f_cmpA972,
	(funptr)&f_cmpA973,
	(funptr)&f_cmpA974,
	(funptr)&f_cmpA975,
	(funptr)&f_cmpA976,
	(funptr)&f_cmpA977,
	(funptr)&f_cmpA978,
	(funptr)&f_cmpA979,
	(funptr)&f_cmpA980,
	(funptr)&f_cmpA981,
	(funptr)&f_cmpA982,
	(funptr)&f_cmpA983,
	(funptr)&f_cmpA984,
	(funptr)&f_cmpA985,
	(funptr)&f_cmpA986,
	(funptr)&f_cmpA987,
	(funptr)&f_cmpA988,
	(funptr)&f_cmpA989,
	(funptr)&f_cmpA990,
	(funptr)&f_cmpA991,
	(funptr)&f_cmpA992,
	(funptr)&f_cmpA993,
	(funptr)&f_cmpA994,
	(funptr)&f_cmpA995,
	(funptr)&f_cmpA996,
	(funptr)&f_cmpA997,
	(funptr)&f_cmpA998,
	(funptr)&f_cmpA999,
	(funptr)&f_cmpA1000,
	(funptr)&f_cmpA1001,
	(funptr)&f_cmpA1002,
	(funptr)&f_cmpA1003,
	(funptr)&f_cmpA1004,
	(funptr)&f_cmpA1005,
	(funptr)&f_cmpA1006,
	(funptr)&f_cmpA1007,
	(funptr)&f_cmpA1008,
	(funptr)&f_cmpA1009,
	(funptr)&f_cmpA1010,
	(funptr)&f_cmpA1011,
	(funptr)&f_cmpA1012,
	(funptr)&f_cmpA1013,
	(funptr)&f_cmpA1014,
	(funptr)&f_cmpA1015,
	(funptr)&f_cmpA1016,
	(funptr)&f_cmpA1017,
	(funptr)&f_cmpA1018,
	(funptr)&f_cmpA1019,
	(funptr)&f_cmpA1020,
	(funptr)&f_cmpA1021,
	(funptr)&f_cmpA1022,
	(funptr)&f_cmpA1023,
	(funptr)&f_cmpA1024,
	(funptr)&f_cmpA1025,
	(funptr)&f_cmpA1026,
	(funptr)&f_cmpA1027,
	(funptr)&f_cmpA1028,
	(funptr)&f_cmpA1029,
	(funptr)&f_cmpA1030,
	(funptr)&f_cmpA1031,
	(funptr)&f_cmpA1032,
	(funptr)&f_cmpA1033,
	(funptr)&f_cmpA1034,
	(funptr)&f_cmpA1035,
	(funptr)&f_cmpA1036,
	(funptr)&f_cmpA1037,
	(funptr)&f_cmpA1038,
	(funptr)&f_cmpA1039,
	(funptr)&f_cmpA1040,
	(funptr)&f_cmpA1041,
	(funptr)&f_cmpA1042,
	(funptr)&f_cmpA1043,
	(funptr)&f_cmpA1044,
	(funptr)&f_cmpA1045,
	(funptr)&f_cmpA1046,
	(funptr)&f_cmpA1047,
	(funptr)&f_cmpA1048,
	(funptr)&f_cmpA1049,
	(funptr)&f_cmpA1050,
	(funptr)&f_cmpA1051,
	(funptr)&f_cmpA1052,
	(funptr)&f_cmpA1053,
	(funptr)&f_cmpA1054,
	(funptr)&f_cmpA1055,
	(funptr)&f_cmpA1056,
	(funptr)&f_cmpA1057,
	(funptr)&f_cmpA1058,
	(funptr)&f_cmpA1059,
	(funptr)&f_cmpA1060,
	(funptr)&f_cmpA1061,
	(funptr)&f_cmpA1062,
	(funptr)&f_cmpA1063,
	(funptr)&f_cmpA1064,
	(funptr)&f_cmpA1065,
	(funptr)&f_cmpA1066,
	(funptr)&f_cmpA1067,
	(funptr)&f_cmpA1068,
	(funptr)&f_cmpA1069,
	(funptr)&f_cmpA1070,
	(funptr)&f_cmpA1071,
	(funptr)&f_cmpA1072,
	(funptr)&f_cmpA1073,
	(funptr)&f_cmpA1074,
	(funptr)&f_cmpA1075,
	(funptr)&f_cmpA1076,
	(funptr)&f_cmpA1077,
	(funptr)&f_cmpA1078,
	(funptr)&f_cmpA1079,
	(funptr)&f_cmpA1080,
	(funptr)&f_cmpA1081,
	(funptr)&f_cmpA1082,
	(funptr)&f_cmpA1083,
	(funptr)&f_cmpA1084,
	(funptr)&f_cmpA1085,
	(funptr)&f_cmpA1086,
	(funptr)&f_cmpA1087,
	(funptr)&f_cmpA1088,
	(funptr)&f_cmpA1089,
	(funptr)&f_cmpA1090,
	(funptr)&f_cmpA1091,
	(funptr)&f_cmpA1092,
	(funptr)&f_cmpA1093,
	(funptr)&f_cmpA1094,
	(funptr)&f_cmpA1095,
	(funptr)&f_cmpA1096,
	(funptr)&f_cmpA1097,
	(funptr)&f_cmpA1098,
	(funptr)&f_cmpA1099,
	(funptr)&f_cmpA1100,
	(funptr)&f_cmpA1101,
	(funptr)&f_cmpA1102,
	(funptr)&f_cmpA1103,
	(funptr)&f_cmpA1104,
	(funptr)&f_cmpA1105,
	(funptr)&f_cmpA1106,
	(funptr)&f_cmpA1107,
	(funptr)&f_cmpA1108,
	(funptr)&f_cmpA1109,
	(funptr)&f_cmpA1110,
	(funptr)&f_cmpA1111,
	(funptr)&f_cmpA1112,
	(funptr)&f_cmpA1113,
	(funptr)&f_cmpA1114,
	(funptr)&f_cmpA1115,
	(funptr)&f_cmpA1116,
	(funptr)&f_cmpA1117,
	(funptr)&f_cmpA1118,
	(funptr)&f_cmpA1119,
	(funptr)&f_cmpA1120,
	(funptr)&f_cmpA1121,
	(funptr)&f_cmpA1122,
	(funptr)&f_cmpA1123,
	(funptr)&f_cmpA1124,
	(funptr)&f_cmpA1125,
	(funptr)&f_cmpA1126,
	(funptr)&f_cmpA1127,
	(funptr)&f_cmpA1128,
	(funptr)&f_cmpA1129,
	(funptr)&f_cmpA1130,
	(funptr)&f_cmpA1131,
	(funptr)&f_cmpA1132,
	(funptr)&f_cmpA1133,
	(funptr)&f_cmpA1134,
	(funptr)&f_cmpA1135,
	(funptr)&f_cmpA1136,
	(funptr)&f_cmpA1137,
	(funptr)&f_cmpA1138,
	(funptr)&f_cmpA1139,
	(funptr)&f_cmpA1140,
	(funptr)&f_cmpA1141,
	(funptr)&f_cmpA1142,
	(funptr)&f_cmpA1143,
	(funptr)&f_cmpA1144,
	(funptr)&f_cmpA1145,
	(funptr)&f_cmpA1146,
	(funptr)&f_cmpA1147,
	(funptr)&f_cmpA1148,
	(funptr)&f_cmpA1149,
	(funptr)&f_cmpA1150,
	(funptr)&f_cmpA1151,
	(funptr)&f_cmpA1152,
	(funptr)&f_cmpA1153,
	(funptr)&f_cmpA1154,
	(funptr)&f_cmpA1155,
	(funptr)&f_cmpA1156,
	(funptr)&f_cmpA1157,
	(funptr)&f_cmpA1158,
	(funptr)&f_cmpA1159,
	(funptr)&f_cmpA1160,
	(funptr)&f_cmpA1161,
	(funptr)&f_cmpA1162,
	(funptr)&f_cmpA1163,
	(funptr)&f_cmpA1164,
	(funptr)&f_cmpA1165,
	(funptr)&f_cmpA1166,
	(funptr)&f_cmpA1167,
	(funptr)&f_cmpA1168,
	(funptr)&f_cmpA1169,
	(funptr)&f_cmpA1170,
	(funptr)&f_cmpA1171,
	(funptr)&f_cmpA1172,
	(funptr)&f_cmpA1173,
	(funptr)&f_cmpA1174,
	(funptr)&f_cmpA1175,
	(funptr)&f_cmpA1176,
	(funptr)&f_cmpA1177,
	(funptr)&f_cmpA1178,
	(funptr)&f_cmpA1179,
	(funptr)&f_cmpA1180,
	(funptr)&f_cmpA1181,
	(funptr)&f_cmpA1182,
	(funptr)&f_cmpA1183,
	(funptr)&f_cmpA1184,
	(funptr)&f_cmpA1185,
	(funptr)&f_cmpA1186,
	(funptr)&f_cmpA1187,
	(funptr)&f_cmpA1188,
	(funptr)&f_cmpA1189,
	(funptr)&f_cmpA1190,
	(funptr)&f_cmpA1191,
	(funptr)&f_cmpA1192,
	(funptr)&f_cmpA1193,
	(funptr)&f_cmpA1194,
	(funptr)&f_cmpA1195,
	(funptr)&f_cmpA1196,
	(funptr)&f_cmpA1197,
	(funptr)&f_cmpA1198,
	(funptr)&f_cmpA1199,
	(funptr)&f_cmpA1200,
	(funptr)&f_cmpA1201,
	(funptr)&f_cmpA1202,
	(funptr)&f_cmpA1203,
	(funptr)&f_cmpA1204,
	(funptr)&f_cmpA1205,
	(funptr)&f_cmpA1206,
	(funptr)&f_cmpA1207,
	(funptr)&f_cmpA1208,
	(funptr)&f_cmpA1209,
	(funptr)&f_cmpA1210,
	(funptr)&f_cmpA1211,
	(funptr)&f_cmpA1212,
	(funptr)&f_cmpA1213,
	(funptr)&f_cmpA1214,
	(funptr)&f_cmpA1215,
	(funptr)&f_cmpA1216,
	(funptr)&f_cmpA1217,
	(funptr)&f_cmpA1218,
	(funptr)&f_cmpA1219,
	(funptr)&f_cmpA1220,
	(funptr)&f_cmpA1221,
	(funptr)&f_cmpA1222,
	(funptr)&f_cmpA1223,
	(funptr)&f_cmpA1224,
	(funptr)&f_cmpA1225,
	(funptr)&f_cmpA1226,
	(funptr)&f_cmpA1227,
	(funptr)&f_cmpA1228,
	(funptr)&f_cmpA1229,
	(funptr)&f_cmpA1230,
	(funptr)&f_cmpA1231,
	(funptr)&f_cmpA1232,
	(funptr)&f_cmpA1233,
	(funptr)&f_cmpA1234,
	(funptr)&f_cmpA1235,
	(funptr)&f_cmpA1236,
	(funptr)&f_cmpA1237,
	(funptr)&f_cmpA1238,
	(funptr)&f_cmpA1239,
	(funptr)&f_cmpA1240,
	(funptr)&f_cmpA1241,
	(funptr)&f_cmpA1242,
	(funptr)&f_cmpA1243,
	(funptr)&f_cmpA1244,
	(funptr)&f_cmpA1245,
	(funptr)&f_cmpA1246,
	(funptr)&f_cmpA1247,
	(funptr)&f_cmpA1248,
	(funptr)&f_cmpA1249,
	(funptr)&f_cmpA1250,
	(funptr)&f_cmpA1251,
	(funptr)&f_cmpA1252,
	(funptr)&f_cmpA1253,
	(funptr)&f_cmpA1254,
	(funptr)&f_cmpA1255,
	(funptr)&f_cmpA1256,
	(funptr)&f_cmpA1257,
	(funptr)&f_cmpA1258,
	(funptr)&f_cmpA1259,
	(funptr)&f_cmpA1260,
	(funptr)&f_cmpA1261,
	(funptr)&f_cmpA1262,
	(funptr)&f_cmpA1263,
	(funptr)&f_cmpA1264,
	(funptr)&f_cmpA1265,
	(funptr)&f_cmpA1266,
	(funptr)&f_cmpA1267,
	(funptr)&f_cmpA1268,
	(funptr)&f_cmpA1269,
	(funptr)&f_cmpA1270,
	(funptr)&f_cmpA1271,
	(funptr)&f_cmpA1272,
	(funptr)&f_cmpA1273,
	(funptr)&f_cmpA1274,
	(funptr)&f_cmpA1275,
	(funptr)&f_cmpA1276,
	(funptr)&f_cmpA1277,
	(funptr)&f_cmpA1278,
	(funptr)&f_cmpA1279,
	(funptr)&f_cmpA1280,
	(funptr)&f_cmpA1281,
	(funptr)&f_cmpA1282,
	(funptr)&f_cmpA1283,
	(funptr)&f_cmpA1284,
	(funptr)&f_cmpA1285,
	(funptr)&f_cmpA1286,
	(funptr)&f_cmpA1287,
	(funptr)&f_cmpA1288,
	(funptr)&f_cmpA1289,
	(funptr)&f_cmpA1290,
	(funptr)&f_cmpA1291,
	(funptr)&f_cmpA1292,
	(funptr)&f_cmpA1293,
	(funptr)&f_cmpA1294,
	(funptr)&f_cmpA1295,
	(funptr)&f_cmpA1296,
	(funptr)&f_cmpA1297,
	(funptr)&f_cmpA1298,
	(funptr)&f_cmpA1299,
	(funptr)&f_cmpA1300,
	(funptr)&f_cmpA1301,
	(funptr)&f_cmpA1302,
	(funptr)&f_cmpA1303,
	(funptr)&f_cmpA1304,
	(funptr)&f_cmpA1305,
	(funptr)&f_cmpA1306,
	(funptr)&f_cmpA1307,
	(funptr)&f_cmpA1308,
	(funptr)&f_cmpA1309,
	(funptr)&f_cmpA1310,
	(funptr)&f_cmpA1311,
	(funptr)&f_cmpA1312,
	(funptr)&f_cmpA1313,
	(funptr)&f_cmpA1314,
	(funptr)&f_cmpA1315,
	(funptr)&f_cmpA1316,
	(funptr)&f_cmpA1317,
	(funptr)&f_cmpA1318,
	(funptr)&f_cmpA1319,
	(funptr)&f_cmpA1320,
	(funptr)&f_cmpA1321,
	(funptr)&f_cmpA1322,
	(funptr)&f_cmpA1323,
	(funptr)&f_cmpA1324,
	(funptr)&f_cmpA1325,
	(funptr)&f_cmpA1326,
	(funptr)&f_cmpA1327,
	(funptr)&f_cmpA1328,
	(funptr)&f_cmpA1329,
	(funptr)&f_cmpA1330,
	(funptr)&f_cmpA1331,
	(funptr)&f_cmpA1332,
	(funptr)&f_cmpA1333,
	(funptr)&f_cmpA1334,
	(funptr)&f_cmpA1335,
	(funptr)&f_cmpA1336,
	(funptr)&f_cmpA1337,
	(funptr)&f_cmpA1338,
	(funptr)&f_cmpA1339,
	(funptr)&f_cmpA1340,
	(funptr)&f_cmpA1341,
	(funptr)&f_cmpA1342,
	(funptr)&f_cmpA1343,
	(funptr)&f_cmpA1344,
	(funptr)&f_cmpA1345,
	(funptr)&f_cmpA1346,
	(funptr)&f_cmpA1347,
	(funptr)&f_cmpA1348,
	(funptr)&f_cmpA1349,
	(funptr)&f_cmpA1350,
	(funptr)&f_cmpA1351,
	(funptr)&f_cmpA1352,
	(funptr)&f_cmpA1353,
	(funptr)&f_cmpA1354,
	(funptr)&f_cmpA1355,
	(funptr)&f_cmpA1356,
	(funptr)&f_cmpA1357,
	(funptr)&f_cmpA1358,
	(funptr)&f_cmpA1359,
	(funptr)&f_cmpA1360,
	(funptr)&f_cmpA1361,
	(funptr)&f_cmpA1362,
	(funptr)&f_cmpA1363,
	(funptr)&f_cmpA1364,
	(funptr)&f_cmpA1365,
	(funptr)&f_cmpA1366,
	(funptr)&f_cmpA1367,
	(funptr)&f_cmpA1368,
	(funptr)&f_cmpA1369,
	(funptr)&f_cmpA1370,
	(funptr)&f_cmpA1371,
	(funptr)&f_cmpA1372,
	(funptr)&f_cmpA1373,
	(funptr)&f_cmpA1374,
	(funptr)&f_cmpA1375,
	(funptr)&f_cmpA1376,
	(funptr)&f_cmpA1377,
	(funptr)&f_cmpA1378,
	(funptr)&f_cmpA1379,
	(funptr)&f_cmpA1380,
	(funptr)&f_cmpA1381,
	(funptr)&f_cmpA1382,
	(funptr)&f_cmpA1383,
	(funptr)&f_cmpA1384,
	(funptr)&f_cmpA1385,
	(funptr)&f_cmpA1386,
	(funptr)&f_cmpA1387,
	(funptr)&f_cmpA1388,
	(funptr)&f_cmpA1389,
	(funptr)&f_cmpA1390,
	(funptr)&f_cmpA1391,
	(funptr)&f_cmpA1392,
	(funptr)&f_cmpA1393,
	(funptr)&f_cmpA1394,
	(funptr)&f_cmpA1395,
	(funptr)&f_cmpA1396,
	(funptr)&f_cmpA1397,
	(funptr)&f_cmpA1398,
	(funptr)&f_cmpA1399,
	(funptr)&f_cmpA1400,
	(funptr)&f_cmpA1401,
	(funptr)&f_cmpA1402,
	(funptr)&f_cmpA1403,
	(funptr)&f_cmpA1404,
	(funptr)&f_cmpA1405,
	(funptr)&f_cmpA1406,
	(funptr)&f_cmpA1407,
	(funptr)&f_cmpA1408,
	(funptr)&f_cmpA1409,
	(funptr)&f_cmpA1410,
	(funptr)&f_cmpA1411,
	(funptr)&f_cmpA1412,
	(funptr)&f_cmpA1413,
	(funptr)&f_cmpA1414,
	(funptr)&f_cmpA1415,
	(funptr)&f_cmpA1416,
	(funptr)&f_cmpA1417
};
int G_maxargs = 16;
