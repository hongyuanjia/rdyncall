/* {iCIlsBCSBisd} */
#pragma pack(push,2)
struct A1 { i m0; C m1; I m2; l m3; s m4; B m5; C m6; S m7; B m8; i m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA1(const struct A1 *x, const struct A1 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1));
		AF('i',struct A1,m0,1)
		AF('C',struct A1,m1,1)
		AF('I',struct A1,m2,1)
		AF('l',struct A1,m3,1)
		AF('s',struct A1,m4,1)
		AF('B',struct A1,m5,1)
		AF('C',struct A1,m6,1)
		AF('S',struct A1,m7,1)
		AF('B',struct A1,m8,1)
		AF('i',struct A1,m9,1)
		AF('s',struct A1,m10,1)
		AF('d',struct A1,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcBcpBLl} */
#pragma pack(push,4)
struct A2 { l m0; c m1; B m2; c m3; p m4; B m5; L m6; l m7; };
#pragma pack(pop)
int f_cmpA2(const struct A2 *x, const struct A2 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA2() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A2));
		AF('l',struct A2,m0,1)
		AF('c',struct A2,m1,1)
		AF('B',struct A2,m2,1)
		AF('c',struct A2,m3,1)
		AF('p',struct A2,m4,1)
		AF('B',struct A2,m5,1)
		AF('L',struct A2,m6,1)
		AF('l',struct A2,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BpScJBSjJsil> */
#pragma pack(push,2)
union A3 { B m0; p m1; S m2; c m3; J m4; B m5; S m6; j m7; J m8; s m9; i m10; l m11; };
#pragma pack(pop)
int f_cmpA3(const union A3 *x, const union A3 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA3() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A3));
		AF('B',union A3,m0,1)
		AF('p',union A3,m1,1)
		AF('S',union A3,m2,1)
		AF('c',union A3,m3,1)
		AF('J',union A3,m4,1)
		AF('B',union A3,m5,1)
		AF('S',union A3,m6,1)
		AF('j',union A3,m7,1)
		AF('J',union A3,m8,1)
		AF('s',union A3,m9,1)
		AF('i',union A3,m10,1)
		AF('l',union A3,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lI> */
#pragma pack(push,2)
union A4 { l m0; I m1; };
#pragma pack(pop)
int f_cmpA4(const union A4 *x, const union A4 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA4() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A4));
		AF('l',union A4,m0,1)
		AF('I',union A4,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f[6]jLIjCCLjSIS} */
#pragma pack(push,8)
struct A5 { f m0[6]; j m1; L m2; I m3; j m4; C m5; C m6; L m7; j m8; S m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA5(const struct A5 *x, const struct A5 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA5() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A5));
		AF('f',struct A5,m0,6)
		AF('j',struct A5,m1,1)
		AF('L',struct A5,m2,1)
		AF('I',struct A5,m3,1)
		AF('j',struct A5,m4,1)
		AF('C',struct A5,m5,1)
		AF('C',struct A5,m6,1)
		AF('L',struct A5,m7,1)
		AF('j',struct A5,m8,1)
		AF('S',struct A5,m9,1)
		AF('I',struct A5,m10,1)
		AF('S',struct A5,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLsjjfLJsJIL} */
#pragma pack(push,2)
struct A6 { J m0; L m1; s m2; j m3; j m4; f m5; L m6; J m7; s m8; J m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA6(const struct A6 *x, const struct A6 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA6() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A6));
		AF('J',struct A6,m0,1)
		AF('L',struct A6,m1,1)
		AF('s',struct A6,m2,1)
		AF('j',struct A6,m3,1)
		AF('j',struct A6,m4,1)
		AF('f',struct A6,m5,1)
		AF('L',struct A6,m6,1)
		AF('J',struct A6,m7,1)
		AF('s',struct A6,m8,1)
		AF('J',struct A6,m9,1)
		AF('I',struct A6,m10,1)
		AF('L',struct A6,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BS} */
#pragma pack(push,1)
struct A7 { B m0; S m1; };
#pragma pack(pop)
int f_cmpA7(const struct A7 *x, const struct A7 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA7() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A7));
		AF('B',struct A7,m0,1)
		AF('S',struct A7,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip> */
#pragma pack(push,4)
union A8 { I m0; p m1; J m2; struct A5 m3; i m4; struct A6 m5; S m6; p m7; L m8; struct A7 m9; i m10; p m11; };
#pragma pack(pop)
int f_cmpA8(const union A8 *x, const union A8 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA5(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA6(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA7(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA8() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A8));
		AF('I',union A8,m0,1)
		AF('p',union A8,m1,1)
		AF('J',union A8,m2,1)
		AFa(union A8,m3,1,A5)
		AF('i',union A8,m4,1)
		AFa(union A8,m5,1,A6)
		AF('S',union A8,m6,1)
		AF('p',union A8,m7,1)
		AF('L',union A8,m8,1)
		AFa(union A8,m9,1,A7)
		AF('i',union A8,m10,1)
		AF('p',union A8,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lljCplLiLJBj> */
#pragma pack(push,8)
union A9 { l m0; l m1; j m2; C m3; p m4; l m5; L m6; i m7; L m8; J m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA9(const union A9 *x, const union A9 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA9() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A9));
		AF('l',union A9,m0,1)
		AF('l',union A9,m1,1)
		AF('j',union A9,m2,1)
		AF('C',union A9,m3,1)
		AF('p',union A9,m4,1)
		AF('l',union A9,m5,1)
		AF('L',union A9,m6,1)
		AF('i',union A9,m7,1)
		AF('L',union A9,m8,1)
		AF('J',union A9,m9,1)
		AF('B',union A9,m10,1)
		AF('j',union A9,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dS<lljCplLiLJBj>LCIS} */
#pragma pack(push,2)
struct A10 { d m0; S m1; union A9 m2; L m3; C m4; I m5; S m6; };
#pragma pack(pop)
int f_cmpA10(const struct A10 *x, const struct A10 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA9(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA10() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A10));
		AF('d',struct A10,m0,1)
		AF('S',struct A10,m1,1)
		AFa(struct A10,m2,1,A9)
		AF('L',struct A10,m3,1)
		AF('C',struct A10,m4,1)
		AF('I',struct A10,m5,1)
		AF('S',struct A10,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI> */
#pragma pack(push,2)
union A11 { l m0; I m1; j m2; l m3; J m4; l m5; union A8 m6; struct A10 m7; d m8; C m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA11(const union A11 *x, const union A11 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA8(&x->m6, &y->m6) && f_cmpA10(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA11() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A11));
		AF('l',union A11,m0,1)
		AF('I',union A11,m1,1)
		AF('j',union A11,m2,1)
		AF('l',union A11,m3,1)
		AF('J',union A11,m4,1)
		AF('l',union A11,m5,1)
		AFa(union A11,m6,1,A8)
		AFa(union A11,m7,1,A10)
		AF('d',union A11,m8,1)
		AF('C',union A11,m9,1)
		AF('s',union A11,m10,1)
		AF('I',union A11,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BSJJ[6]BCpdfffC> */
#pragma pack(push,4)
union A12 { B m0; S m1; J m2; J m3[6]; B m4; C m5; p m6; d m7; f m8; f m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA12(const union A12 *x, const union A12 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA12() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A12));
		AF('B',union A12,m0,1)
		AF('S',union A12,m1,1)
		AF('J',union A12,m2,1)
		AF('J',union A12,m3,6)
		AF('B',union A12,m4,1)
		AF('C',union A12,m5,1)
		AF('p',union A12,m6,1)
		AF('d',union A12,m7,1)
		AF('f',union A12,m8,1)
		AF('f',union A12,m9,1)
		AF('f',union A12,m10,1)
		AF('C',union A12,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SpSJJpjcfs> */
#pragma pack(push,2)
union A13 { S m0; p m1; S m2; J m3; J m4; p m5; j m6; c m7; f m8; s m9; };
#pragma pack(pop)
int f_cmpA13(const union A13 *x, const union A13 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA13() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A13));
		AF('S',union A13,m0,1)
		AF('p',union A13,m1,1)
		AF('S',union A13,m2,1)
		AF('J',union A13,m3,1)
		AF('J',union A13,m4,1)
		AF('p',union A13,m5,1)
		AF('j',union A13,m6,1)
		AF('c',union A13,m7,1)
		AF('f',union A13,m8,1)
		AF('s',union A13,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IB> */
#pragma pack(push,1)
union A14 { I m0; B m1; };
#pragma pack(pop)
int f_cmpA14(const union A14 *x, const union A14 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA14() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A14));
		AF('I',union A14,m0,1)
		AF('B',union A14,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILLl} */
#pragma pack(push,4)
struct A15 { I m0; L m1; L m2; l m3; };
#pragma pack(pop)
int f_cmpA15(const struct A15 *x, const struct A15 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA15() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A15));
		AF('I',struct A15,m0,1)
		AF('L',struct A15,m1,1)
		AF('L',struct A15,m2,1)
		AF('l',struct A15,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dJpcddCdClCj> */
#pragma pack(push,1)
union A16 { d m0; J m1; p m2; c m3; d m4; d m5; C m6; d m7; C m8; l m9; C m10; j m11; };
#pragma pack(pop)
int f_cmpA16(const union A16 *x, const union A16 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA16() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A16));
		AF('d',union A16,m0,1)
		AF('J',union A16,m1,1)
		AF('p',union A16,m2,1)
		AF('c',union A16,m3,1)
		AF('d',union A16,m4,1)
		AF('d',union A16,m5,1)
		AF('C',union A16,m6,1)
		AF('d',union A16,m7,1)
		AF('C',union A16,m8,1)
		AF('l',union A16,m9,1)
		AF('C',union A16,m10,1)
		AF('j',union A16,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SCSicIjs> */
#pragma pack(push,4)
union A17 { S m0; C m1; S m2; i m3; c m4; I m5; j m6; s m7; };
#pragma pack(pop)
int f_cmpA17(const union A17 *x, const union A17 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA17() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A17));
		AF('S',union A17,m0,1)
		AF('C',union A17,m1,1)
		AF('S',union A17,m2,1)
		AF('i',union A17,m3,1)
		AF('c',union A17,m4,1)
		AF('I',union A17,m5,1)
		AF('j',union A17,m6,1)
		AF('s',union A17,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjJL} */
#pragma pack(push,4)
struct A18 { B m0; j m1; J m2; L m3; };
#pragma pack(pop)
int f_cmpA18(const struct A18 *x, const struct A18 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA18() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A18));
		AF('B',struct A18,m0,1)
		AF('j',struct A18,m1,1)
		AF('J',struct A18,m2,1)
		AF('L',struct A18,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfBid[9]Ldfjdcj> */
#pragma pack(push,1)
union A19 { s m0; f m1; B m2; i m3; d m4[9]; L m5; d m6; f m7; j m8; d m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA19(const union A19 *x, const union A19 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA19() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A19));
		AF('s',union A19,m0,1)
		AF('f',union A19,m1,1)
		AF('B',union A19,m2,1)
		AF('i',union A19,m3,1)
		AF('d',union A19,m4,9)
		AF('L',union A19,m5,1)
		AF('d',union A19,m6,1)
		AF('f',union A19,m7,1)
		AF('j',union A19,m8,1)
		AF('d',union A19,m9,1)
		AF('c',union A19,m10,1)
		AF('j',union A19,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <j> */
#pragma pack(push,2)
union A20 { j m0; };
#pragma pack(pop)
int f_cmpA20(const union A20 *x, const union A20 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA20() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A20));
		AF('j',union A20,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BjjLs[13]SicJic> */
#pragma pack(push,1)
union A21 { B m0; j m1; j m2; L m3; s m4[13]; S m5; i m6; c m7; J m8; i m9; c m10; };
#pragma pack(pop)
int f_cmpA21(const union A21 *x, const union A21 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA21() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A21));
		AF('B',union A21,m0,1)
		AF('j',union A21,m1,1)
		AF('j',union A21,m2,1)
		AF('L',union A21,m3,1)
		AF('s',union A21,m4,13)
		AF('S',union A21,m5,1)
		AF('i',union A21,m6,1)
		AF('c',union A21,m7,1)
		AF('J',union A21,m8,1)
		AF('i',union A21,m9,1)
		AF('c',union A21,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flLJJJLLJiJs> */
#pragma pack(push,4)
union A22 { f m0; l m1; L m2; J m3; J m4; J m5; L m6; L m7; J m8; i m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA22(const union A22 *x, const union A22 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA22() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A22));
		AF('f',union A22,m0,1)
		AF('l',union A22,m1,1)
		AF('L',union A22,m2,1)
		AF('J',union A22,m3,1)
		AF('J',union A22,m4,1)
		AF('J',union A22,m5,1)
		AF('L',union A22,m6,1)
		AF('L',union A22,m7,1)
		AF('J',union A22,m8,1)
		AF('i',union A22,m9,1)
		AF('J',union A22,m10,1)
		AF('s',union A22,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>> */
#pragma pack(push,4)
union A23 { i m0; union A19 m1; S m2; l m3; S m4; s m5; union A20 m6; j m7; union A21 m8; I m9; d m10; union A22 m11; };
#pragma pack(pop)
int f_cmpA23(const union A23 *x, const union A23 *y) { return x->m0 == y->m0 && f_cmpA19(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA20(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA21(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA22(&x->m11, &y->m11); };
DCaggr* f_touchA23() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A23));
		AF('i',union A23,m0,1)
		AFa(union A23,m1,1,A19)
		AF('S',union A23,m2,1)
		AF('l',union A23,m3,1)
		AF('S',union A23,m4,1)
		AF('s',union A23,m5,1)
		AFa(union A23,m6,1,A20)
		AF('j',union A23,m7,1)
		AFa(union A23,m8,1,A21)
		AF('I',union A23,m9,1)
		AF('d',union A23,m10,1)
		AFa(union A23,m11,1,A22)
		dcCloseAggr(a);
	}
	return a;
};
/* {} */
#pragma pack(push,1)
struct A24 { };
#pragma pack(pop)
int f_cmpA24(const struct A24 *x, const struct A24 *y) { return 1; };
DCaggr* f_touchA24() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(0, sizeof(struct A24));
		dcCloseAggr(a);
	}
	return a;
};
/* <ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{}ClsIS> */
#pragma pack(push,4)
union A25 { I m0; C m1; J m2; struct A18 m3; union A23 m4; J m5; struct A24 m6; C m7; l m8; s m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA25(const union A25 *x, const union A25 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA18(&x->m3, &y->m3) && f_cmpA23(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA24(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA25() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A25));
		AF('I',union A25,m0,1)
		AF('C',union A25,m1,1)
		AF('J',union A25,m2,1)
		AFa(union A25,m3,1,A18)
		AFa(union A25,m4,1,A23)
		AF('J',union A25,m5,1)
		AFa(union A25,m6,1,A24)
		AF('C',union A25,m7,1)
		AF('l',union A25,m8,1)
		AF('s',union A25,m9,1)
		AF('I',union A25,m10,1)
		AF('S',union A25,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fJidLfJCC[16]l[10]jS} */
#pragma pack(push,2)
struct A26 { f m0; J m1; i m2; d m3; L m4; f m5; J m6; C m7; C m8[16]; l m9[10]; j m10; S m11; };
#pragma pack(pop)
int f_cmpA26(const struct A26 *x, const struct A26 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m8[15] == y->m8[15] && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA26() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A26));
		AF('f',struct A26,m0,1)
		AF('J',struct A26,m1,1)
		AF('i',struct A26,m2,1)
		AF('d',struct A26,m3,1)
		AF('L',struct A26,m4,1)
		AF('f',struct A26,m5,1)
		AF('J',struct A26,m6,1)
		AF('C',struct A26,m7,1)
		AF('C',struct A26,m8,16)
		AF('l',struct A26,m9,10)
		AF('j',struct A26,m10,1)
		AF('S',struct A26,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SpLIpsIBLpij} */
#pragma pack(push,8)
struct A27 { S m0; p m1; L m2; I m3; p m4; s m5; I m6; B m7; L m8; p m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA27(const struct A27 *x, const struct A27 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA27() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A27));
		AF('S',struct A27,m0,1)
		AF('p',struct A27,m1,1)
		AF('L',struct A27,m2,1)
		AF('I',struct A27,m3,1)
		AF('p',struct A27,m4,1)
		AF('s',struct A27,m5,1)
		AF('I',struct A27,m6,1)
		AF('B',struct A27,m7,1)
		AF('L',struct A27,m8,1)
		AF('p',struct A27,m9,1)
		AF('i',struct A27,m10,1)
		AF('j',struct A27,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lLpBsSIBB} */
#pragma pack(push,2)
struct A28 { l m0; L m1; p m2; B m3; s m4; S m5; I m6; B m7; B m8; };
#pragma pack(pop)
int f_cmpA28(const struct A28 *x, const struct A28 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA28() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A28));
		AF('l',struct A28,m0,1)
		AF('L',struct A28,m1,1)
		AF('p',struct A28,m2,1)
		AF('B',struct A28,m3,1)
		AF('s',struct A28,m4,1)
		AF('S',struct A28,m5,1)
		AF('I',struct A28,m6,1)
		AF('B',struct A28,m7,1)
		AF('B',struct A28,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{lLpBsSIBB}LBSpl[7]p> */
#pragma pack(push,8)
union A29 { struct A28 m0; L m1; B m2; S m3; p m4; l m5[7]; p m6; };
#pragma pack(pop)
int f_cmpA29(const union A29 *x, const union A29 *y) { return f_cmpA28(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m6 == y->m6; };
DCaggr* f_touchA29() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A29));
		AFa(union A29,m0,1,A28)
		AF('L',union A29,m1,1)
		AF('B',union A29,m2,1)
		AF('S',union A29,m3,1)
		AF('p',union A29,m4,1)
		AF('l',union A29,m5,7)
		AF('p',union A29,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <> */
#pragma pack(push,4)
union A30 { };
#pragma pack(pop)
int f_cmpA30(const union A30 *x, const union A30 *y) { return 1; };
DCaggr* f_touchA30() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(0, sizeof(union A30));
		dcCloseAggr(a);
	}
	return a;
};
/* <dJSSffBIs> */
#pragma pack(push,2)
union A31 { d m0; J m1; S m2; S m3; f m4; f m5; B m6; I m7; s m8; };
#pragma pack(pop)
int f_cmpA31(const union A31 *x, const union A31 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA31() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A31));
		AF('d',union A31,m0,1)
		AF('J',union A31,m1,1)
		AF('S',union A31,m2,1)
		AF('S',union A31,m3,1)
		AF('f',union A31,m4,1)
		AF('f',union A31,m5,1)
		AF('B',union A31,m6,1)
		AF('I',union A31,m7,1)
		AF('s',union A31,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J> */
#pragma pack(push,2)
union A32 { J m0; };
#pragma pack(pop)
int f_cmpA32(const union A32 *x, const union A32 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA32() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A32));
		AF('J',union A32,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bffjjp} */
#pragma pack(push,4)
struct A33 { B m0; f m1; f m2; j m3; j m4; p m5; };
#pragma pack(pop)
int f_cmpA33(const struct A33 *x, const struct A33 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA33() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A33));
		AF('B',struct A33,m0,1)
		AF('f',struct A33,m1,1)
		AF('f',struct A33,m2,1)
		AF('j',struct A33,m3,1)
		AF('j',struct A33,m4,1)
		AF('p',struct A33,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j[7]jiB[5]dB} */
#pragma pack(push,4)
struct A34 { j m0[7]; j m1; i m2; B m3[5]; d m4; B m5; };
#pragma pack(pop)
int f_cmpA34(const struct A34 *x, const struct A34 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA34() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A34));
		AF('j',struct A34,m0,7)
		AF('j',struct A34,m1,1)
		AF('i',struct A34,m2,1)
		AF('B',struct A34,m3,5)
		AF('d',struct A34,m4,1)
		AF('B',struct A34,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lj<>jBf<dJSSffBIs>L<J>{Bffjjp}l{j[7]jiB[5]dB}} */
#pragma pack(push,4)
struct A35 { l m0; j m1; union A30 m2; j m3; B m4; f m5; union A31 m6; L m7; union A32 m8; struct A33 m9; l m10; struct A34 m11; };
#pragma pack(pop)
int f_cmpA35(const struct A35 *x, const struct A35 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA30(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA31(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA32(&x->m8, &y->m8) && f_cmpA33(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA34(&x->m11, &y->m11); };
DCaggr* f_touchA35() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A35));
		AF('l',struct A35,m0,1)
		AF('j',struct A35,m1,1)
		AFa(struct A35,m2,1,A30)
		AF('j',struct A35,m3,1)
		AF('B',struct A35,m4,1)
		AF('f',struct A35,m5,1)
		AFa(struct A35,m6,1,A31)
		AF('L',struct A35,m7,1)
		AFa(struct A35,m8,1,A32)
		AFa(struct A35,m9,1,A33)
		AF('l',struct A35,m10,1)
		AFa(struct A35,m11,1,A34)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLfLBIJ> */
#pragma pack(push,4)
union A36 { J m0; L m1; f m2; L m3; B m4; I m5; J m6; };
#pragma pack(pop)
int f_cmpA36(const union A36 *x, const union A36 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA36() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A36));
		AF('J',union A36,m0,1)
		AF('L',union A36,m1,1)
		AF('f',union A36,m2,1)
		AF('L',union A36,m3,1)
		AF('B',union A36,m4,1)
		AF('I',union A36,m5,1)
		AF('J',union A36,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cS<JLfLBIJ>} */
#pragma pack(push,4)
struct A37 { c m0; S m1; union A36 m2; };
#pragma pack(pop)
int f_cmpA37(const struct A37 *x, const struct A37 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA36(&x->m2, &y->m2); };
DCaggr* f_touchA37() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A37));
		AF('c',struct A37,m0,1)
		AF('S',struct A37,m1,1)
		AFa(struct A37,m2,1,A36)
		dcCloseAggr(a);
	}
	return a;
};
/* {cdfCpLCCCiIl} */
#pragma pack(push,4)
struct A38 { c m0; d m1; f m2; C m3; p m4; L m5; C m6; C m7; C m8; i m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA38(const struct A38 *x, const struct A38 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA38() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A38));
		AF('c',struct A38,m0,1)
		AF('d',struct A38,m1,1)
		AF('f',struct A38,m2,1)
		AF('C',struct A38,m3,1)
		AF('p',struct A38,m4,1)
		AF('L',struct A38,m5,1)
		AF('C',struct A38,m6,1)
		AF('C',struct A38,m7,1)
		AF('C',struct A38,m8,1)
		AF('i',struct A38,m9,1)
		AF('I',struct A38,m10,1)
		AF('l',struct A38,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d{cdfCpLCCCiIl}Spp[10]LSCcIIf> */
#pragma pack(push,8)
union A39 { d m0; struct A38 m1; S m2; p m3; p m4[10]; L m5; S m6; C m7; c m8; I m9; I m10; f m11; };
#pragma pack(pop)
int f_cmpA39(const union A39 *x, const union A39 *y) { return x->m0 == y->m0 && f_cmpA38(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA39() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A39));
		AF('d',union A39,m0,1)
		AFa(union A39,m1,1,A38)
		AF('S',union A39,m2,1)
		AF('p',union A39,m3,1)
		AF('p',union A39,m4,10)
		AF('L',union A39,m5,1)
		AF('S',union A39,m6,1)
		AF('C',union A39,m7,1)
		AF('c',union A39,m8,1)
		AF('I',union A39,m9,1)
		AF('I',union A39,m10,1)
		AF('f',union A39,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSJJcI> */
#pragma pack(push,4)
union A40 { l m0; S m1; J m2; J m3; c m4; I m5; };
#pragma pack(pop)
int f_cmpA40(const union A40 *x, const union A40 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA40() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A40));
		AF('l',union A40,m0,1)
		AF('S',union A40,m1,1)
		AF('J',union A40,m2,1)
		AF('J',union A40,m3,1)
		AF('c',union A40,m4,1)
		AF('I',union A40,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBpsLciSBj<lSJJcI>B> */
#pragma pack(push,4)
union A41 { S m0; B m1; p m2; s m3; L m4; c m5; i m6; S m7; B m8; j m9; union A40 m10; B m11; };
#pragma pack(pop)
int f_cmpA41(const union A41 *x, const union A41 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA40(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA41() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A41));
		AF('S',union A41,m0,1)
		AF('B',union A41,m1,1)
		AF('p',union A41,m2,1)
		AF('s',union A41,m3,1)
		AF('L',union A41,m4,1)
		AF('c',union A41,m5,1)
		AF('i',union A41,m6,1)
		AF('S',union A41,m7,1)
		AF('B',union A41,m8,1)
		AF('j',union A41,m9,1)
		AFa(union A41,m10,1,A40)
		AF('B',union A41,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fplcpj{lj<>jBf<dJSSffBIs>L<J>{Bffjjp}l{j[7]jiB[5]dB}}{cS<JLfLBIJ>}Bi<d{cdfCpLCCCiIl}Spp[10]LSCcIIf><SBpsLciSBj<lSJJcI>B>> */
#pragma pack(push,1)
union A42 { f m0; p m1; l m2; c m3; p m4; j m5; struct A35 m6; struct A37 m7; B m8; i m9; union A39 m10; union A41 m11; };
#pragma pack(pop)
int f_cmpA42(const union A42 *x, const union A42 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA35(&x->m6, &y->m6) && f_cmpA37(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA39(&x->m10, &y->m10) && f_cmpA41(&x->m11, &y->m11); };
DCaggr* f_touchA42() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A42));
		AF('f',union A42,m0,1)
		AF('p',union A42,m1,1)
		AF('l',union A42,m2,1)
		AF('c',union A42,m3,1)
		AF('p',union A42,m4,1)
		AF('j',union A42,m5,1)
		AFa(union A42,m6,1,A35)
		AFa(union A42,m7,1,A37)
		AF('B',union A42,m8,1)
		AF('i',union A42,m9,1)
		AFa(union A42,m10,1,A39)
		AFa(union A42,m11,1,A41)
		dcCloseAggr(a);
	}
	return a;
};
/* <IBjjdiILLlSf> */
#pragma pack(push,4)
union A43 { I m0; B m1; j m2; j m3; d m4; i m5; I m6; L m7; L m8; l m9; S m10; f m11; };
#pragma pack(pop)
int f_cmpA43(const union A43 *x, const union A43 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA43() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A43));
		AF('I',union A43,m0,1)
		AF('B',union A43,m1,1)
		AF('j',union A43,m2,1)
		AF('j',union A43,m3,1)
		AF('d',union A43,m4,1)
		AF('i',union A43,m5,1)
		AF('I',union A43,m6,1)
		AF('L',union A43,m7,1)
		AF('L',union A43,m8,1)
		AF('l',union A43,m9,1)
		AF('S',union A43,m10,1)
		AF('f',union A43,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iCjBCCjIpC} */
#pragma pack(push,1)
struct A44 { i m0; C m1; j m2; B m3; C m4; C m5; j m6; I m7; p m8; C m9; };
#pragma pack(pop)
int f_cmpA44(const struct A44 *x, const struct A44 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA44() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A44));
		AF('i',struct A44,m0,1)
		AF('C',struct A44,m1,1)
		AF('j',struct A44,m2,1)
		AF('B',struct A44,m3,1)
		AF('C',struct A44,m4,1)
		AF('C',struct A44,m5,1)
		AF('j',struct A44,m6,1)
		AF('I',struct A44,m7,1)
		AF('p',struct A44,m8,1)
		AF('C',struct A44,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L[6]} */
#pragma pack(push,2)
struct A45 { L m0[6]; };
#pragma pack(pop)
int f_cmpA45(const struct A45 *x, const struct A45 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5]; };
DCaggr* f_touchA45() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A45));
		AF('L',struct A45,m0,6)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldd> */
#pragma pack(push,2)
union A46 { l m0; d m1; d m2; };
#pragma pack(pop)
int f_cmpA46(const union A46 *x, const union A46 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA46() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A46));
		AF('l',union A46,m0,1)
		AF('d',union A46,m1,1)
		AF('d',union A46,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i} */
#pragma pack(push,1)
struct A47 { i m0; };
#pragma pack(pop)
int f_cmpA47(const struct A47 *x, const struct A47 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA47() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A47));
		AF('i',struct A47,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <l{i}f{}[5]JpdBIcpC> */
#pragma pack(push,4)
union A48 { l m0; struct A47 m1; f m2; struct A24 m3[5]; J m4; p m5; d m6; B m7; I m8; c m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA48(const union A48 *x, const union A48 *y) { return x->m0 == y->m0 && f_cmpA47(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA24(&x->m3[0], &y->m3[0]) && f_cmpA24(&x->m3[1], &y->m3[1]) && f_cmpA24(&x->m3[2], &y->m3[2]) && f_cmpA24(&x->m3[3], &y->m3[3]) && f_cmpA24(&x->m3[4], &y->m3[4]) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA48() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A48));
		AF('l',union A48,m0,1)
		AFa(union A48,m1,1,A47)
		AF('f',union A48,m2,1)
		AFa(union A48,m3,5,A24)
		AF('J',union A48,m4,1)
		AF('p',union A48,m5,1)
		AF('d',union A48,m6,1)
		AF('B',union A48,m7,1)
		AF('I',union A48,m8,1)
		AF('c',union A48,m9,1)
		AF('p',union A48,m10,1)
		AF('C',union A48,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CcdJjILIIJpL[15]> */
#pragma pack(push,2)
union A49 { C m0; c m1; d m2; J m3; j m4; I m5; L m6; I m7; I m8; J m9; p m10; L m11[15]; };
#pragma pack(pop)
int f_cmpA49(const union A49 *x, const union A49 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14]; };
DCaggr* f_touchA49() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A49));
		AF('C',union A49,m0,1)
		AF('c',union A49,m1,1)
		AF('d',union A49,m2,1)
		AF('J',union A49,m3,1)
		AF('j',union A49,m4,1)
		AF('I',union A49,m5,1)
		AF('L',union A49,m6,1)
		AF('I',union A49,m7,1)
		AF('I',union A49,m8,1)
		AF('J',union A49,m9,1)
		AF('p',union A49,m10,1)
		AF('L',union A49,m11,15)
		dcCloseAggr(a);
	}
	return a;
};
/* <p<CcdJjILIIJpL[15]>IiSsBpjBBJ> */
#pragma pack(push,2)
union A50 { p m0; union A49 m1; I m2; i m3; S m4; s m5; B m6; p m7; j m8; B m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA50(const union A50 *x, const union A50 *y) { return x->m0 == y->m0 && f_cmpA49(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA50() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A50));
		AF('p',union A50,m0,1)
		AFa(union A50,m1,1,A49)
		AF('I',union A50,m2,1)
		AF('i',union A50,m3,1)
		AF('S',union A50,m4,1)
		AF('s',union A50,m5,1)
		AF('B',union A50,m6,1)
		AF('p',union A50,m7,1)
		AF('j',union A50,m8,1)
		AF('B',union A50,m9,1)
		AF('B',union A50,m10,1)
		AF('J',union A50,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c> */
#pragma pack(push,2)
union A51 { B m0; l m1[2]; union A50 m2; c m3; };
#pragma pack(pop)
int f_cmpA51(const union A51 *x, const union A51 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && f_cmpA50(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA51() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A51));
		AF('B',union A51,m0,1)
		AF('l',union A51,m1,2)
		AFa(union A51,m2,1,A50)
		AF('c',union A51,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ILi[15]ljj> */
#pragma pack(push,2)
union A52 { I m0; L m1; i m2[15]; l m3; j m4; j m5; };
#pragma pack(pop)
int f_cmpA52(const union A52 *x, const union A52 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA52() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A52));
		AF('I',union A52,m0,1)
		AF('L',union A52,m1,1)
		AF('i',union A52,m2,15)
		AF('l',union A52,m3,1)
		AF('j',union A52,m4,1)
		AF('j',union A52,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {flcfdjdjBSJf} */
#pragma pack(push,4)
struct A53 { f m0; l m1; c m2; f m3; d m4; j m5; d m6; j m7; B m8; S m9; J m10; f m11; };
#pragma pack(pop)
int f_cmpA53(const struct A53 *x, const struct A53 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA53() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A53));
		AF('f',struct A53,m0,1)
		AF('l',struct A53,m1,1)
		AF('c',struct A53,m2,1)
		AF('f',struct A53,m3,1)
		AF('d',struct A53,m4,1)
		AF('j',struct A53,m5,1)
		AF('d',struct A53,m6,1)
		AF('j',struct A53,m7,1)
		AF('B',struct A53,m8,1)
		AF('S',struct A53,m9,1)
		AF('J',struct A53,m10,1)
		AF('f',struct A53,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jIBIBSfcpSiL} */
#pragma pack(push,4)
struct A54 { j m0; I m1; B m2; I m3; B m4; S m5; f m6; c m7; p m8; S m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA54(const struct A54 *x, const struct A54 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA54() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A54));
		AF('j',struct A54,m0,1)
		AF('I',struct A54,m1,1)
		AF('B',struct A54,m2,1)
		AF('I',struct A54,m3,1)
		AF('B',struct A54,m4,1)
		AF('S',struct A54,m5,1)
		AF('f',struct A54,m6,1)
		AF('c',struct A54,m7,1)
		AF('p',struct A54,m8,1)
		AF('S',struct A54,m9,1)
		AF('i',struct A54,m10,1)
		AF('L',struct A54,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfcCljjfS{jIBIBSfcpSiL}} */
#pragma pack(push,2)
struct A55 { I m0; f m1; c m2; C m3; l m4; j m5; j m6; f m7; S m8; struct A54 m9; };
#pragma pack(pop)
int f_cmpA55(const struct A55 *x, const struct A55 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA54(&x->m9, &y->m9); };
DCaggr* f_touchA55() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A55));
		AF('I',struct A55,m0,1)
		AF('f',struct A55,m1,1)
		AF('c',struct A55,m2,1)
		AF('C',struct A55,m3,1)
		AF('l',struct A55,m4,1)
		AF('j',struct A55,m5,1)
		AF('j',struct A55,m6,1)
		AF('f',struct A55,m7,1)
		AF('S',struct A55,m8,1)
		AFa(struct A55,m9,1,A54)
		dcCloseAggr(a);
	}
	return a;
};
/* <p> */
#pragma pack(push,2)
union A56 { p m0; };
#pragma pack(pop)
int f_cmpA56(const union A56 *x, const union A56 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA56() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A56));
		AF('p',union A56,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JpIdlcipIIJc} */
#pragma pack(push,4)
struct A57 { J m0; p m1; I m2; d m3; l m4; c m5; i m6; p m7; I m8; I m9; J m10; c m11; };
#pragma pack(pop)
int f_cmpA57(const struct A57 *x, const struct A57 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA57() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A57));
		AF('J',struct A57,m0,1)
		AF('p',struct A57,m1,1)
		AF('I',struct A57,m2,1)
		AF('d',struct A57,m3,1)
		AF('l',struct A57,m4,1)
		AF('c',struct A57,m5,1)
		AF('i',struct A57,m6,1)
		AF('p',struct A57,m7,1)
		AF('I',struct A57,m8,1)
		AF('I',struct A57,m9,1)
		AF('J',struct A57,m10,1)
		AF('c',struct A57,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lBcCpCpLBcSd} */
#pragma pack(push,2)
struct A58 { l m0; B m1; c m2; C m3; p m4; C m5; p m6; L m7; B m8; c m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA58(const struct A58 *x, const struct A58 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA58() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A58));
		AF('l',struct A58,m0,1)
		AF('B',struct A58,m1,1)
		AF('c',struct A58,m2,1)
		AF('C',struct A58,m3,1)
		AF('p',struct A58,m4,1)
		AF('C',struct A58,m5,1)
		AF('p',struct A58,m6,1)
		AF('L',struct A58,m7,1)
		AF('B',struct A58,m8,1)
		AF('c',struct A58,m9,1)
		AF('S',struct A58,m10,1)
		AF('d',struct A58,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iljL} */
#pragma pack(push,2)
struct A59 { i m0; l m1; j m2; L m3; };
#pragma pack(pop)
int f_cmpA59(const struct A59 *x, const struct A59 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA59() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A59));
		AF('i',struct A59,m0,1)
		AF('l',struct A59,m1,1)
		AF('j',struct A59,m2,1)
		AF('L',struct A59,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ljsi{iljL}flcJ<>CL} */
#pragma pack(push,4)
struct A60 { L m0; j m1; s m2; i m3; struct A59 m4; f m5; l m6; c m7; J m8; union A30 m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA60(const struct A60 *x, const struct A60 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA59(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA30(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA60() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A60));
		AF('L',struct A60,m0,1)
		AF('j',struct A60,m1,1)
		AF('s',struct A60,m2,1)
		AF('i',struct A60,m3,1)
		AFa(struct A60,m4,1,A59)
		AF('f',struct A60,m5,1)
		AF('l',struct A60,m6,1)
		AF('c',struct A60,m7,1)
		AF('J',struct A60,m8,1)
		AFa(struct A60,m9,1,A30)
		AF('C',struct A60,m10,1)
		AF('L',struct A60,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S> */
#pragma pack(push,8)
union A61 { S m0; };
#pragma pack(pop)
int f_cmpA61(const union A61 *x, const union A61 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA61() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A61));
		AF('S',union A61,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cil<S>JLBiS<>pB> */
#pragma pack(push,4)
union A62 { c m0; i m1; l m2; union A61 m3; J m4; L m5; B m6; i m7; S m8; union A30 m9; p m10; B m11; };
#pragma pack(pop)
int f_cmpA62(const union A62 *x, const union A62 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA61(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA30(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA62() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A62));
		AF('c',union A62,m0,1)
		AF('i',union A62,m1,1)
		AF('l',union A62,m2,1)
		AFa(union A62,m3,1,A61)
		AF('J',union A62,m4,1)
		AF('L',union A62,m5,1)
		AF('B',union A62,m6,1)
		AF('i',union A62,m7,1)
		AF('S',union A62,m8,1)
		AFa(union A62,m9,1,A30)
		AF('p',union A62,m10,1)
		AF('B',union A62,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pScjcpLjspId} */
#pragma pack(push,1)
struct A63 { p m0; S m1; c m2; j m3; c m4; p m5; L m6; j m7; s m8; p m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA63(const struct A63 *x, const struct A63 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA63() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A63));
		AF('p',struct A63,m0,1)
		AF('S',struct A63,m1,1)
		AF('c',struct A63,m2,1)
		AF('j',struct A63,m3,1)
		AF('c',struct A63,m4,1)
		AF('p',struct A63,m5,1)
		AF('L',struct A63,m6,1)
		AF('j',struct A63,m7,1)
		AF('s',struct A63,m8,1)
		AF('p',struct A63,m9,1)
		AF('I',struct A63,m10,1)
		AF('d',struct A63,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lJJIBifdIij> */
#pragma pack(push,4)
union A64 { l m0; J m1; J m2; I m3; B m4; i m5; f m6; d m7; I m8; i m9; j m10; };
#pragma pack(pop)
int f_cmpA64(const union A64 *x, const union A64 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA64() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A64));
		AF('l',union A64,m0,1)
		AF('J',union A64,m1,1)
		AF('J',union A64,m2,1)
		AF('I',union A64,m3,1)
		AF('B',union A64,m4,1)
		AF('i',union A64,m5,1)
		AF('f',union A64,m6,1)
		AF('d',union A64,m7,1)
		AF('I',union A64,m8,1)
		AF('i',union A64,m9,1)
		AF('j',union A64,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LLBljdfljCd> */
#pragma pack(push,1)
union A65 { L m0; L m1; B m2; l m3; j m4; d m5; f m6; l m7; j m8; C m9; d m10; };
#pragma pack(pop)
int f_cmpA65(const union A65 *x, const union A65 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA65() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A65));
		AF('L',union A65,m0,1)
		AF('L',union A65,m1,1)
		AF('B',union A65,m2,1)
		AF('l',union A65,m3,1)
		AF('j',union A65,m4,1)
		AF('d',union A65,m5,1)
		AF('f',union A65,m6,1)
		AF('l',union A65,m7,1)
		AF('j',union A65,m8,1)
		AF('C',union A65,m9,1)
		AF('d',union A65,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijIlIL> */
#pragma pack(push,4)
union A66 { i m0; j m1; I m2; l m3; I m4; L m5; };
#pragma pack(pop)
int f_cmpA66(const union A66 *x, const union A66 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA66() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A66));
		AF('i',union A66,m0,1)
		AF('j',union A66,m1,1)
		AF('I',union A66,m2,1)
		AF('l',union A66,m3,1)
		AF('I',union A66,m4,1)
		AF('L',union A66,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<lJJIBifdIij>CscISS<LLBljdfljCd>dls<ijIlIL>> */
#pragma pack(push,8)
union A67 { union A64 m0; C m1; s m2; c m3; I m4; S m5; S m6; union A65 m7; d m8; l m9; s m10; union A66 m11; };
#pragma pack(pop)
int f_cmpA67(const union A67 *x, const union A67 *y) { return f_cmpA64(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA65(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA66(&x->m11, &y->m11); };
DCaggr* f_touchA67() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A67));
		AFa(union A67,m0,1,A64)
		AF('C',union A67,m1,1)
		AF('s',union A67,m2,1)
		AF('c',union A67,m3,1)
		AF('I',union A67,m4,1)
		AF('S',union A67,m5,1)
		AF('S',union A67,m6,1)
		AFa(union A67,m7,1,A65)
		AF('d',union A67,m8,1)
		AF('l',union A67,m9,1)
		AF('s',union A67,m10,1)
		AFa(union A67,m11,1,A66)
		dcCloseAggr(a);
	}
	return a;
};
/* <clj<<lJJIBifdIij>CscISS<LLBljdfljCd>dls<ijIlIL>>lddljdL> */
#pragma pack(push,4)
union A68 { c m0; l m1; j m2; union A67 m3; l m4; d m5; d m6; l m7; j m8; d m9; L m10; };
#pragma pack(pop)
int f_cmpA68(const union A68 *x, const union A68 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA67(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA68() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A68));
		AF('c',union A68,m0,1)
		AF('l',union A68,m1,1)
		AF('j',union A68,m2,1)
		AFa(union A68,m3,1,A67)
		AF('l',union A68,m4,1)
		AF('d',union A68,m5,1)
		AF('d',union A68,m6,1)
		AF('l',union A68,m7,1)
		AF('j',union A68,m8,1)
		AF('d',union A68,m9,1)
		AF('L',union A68,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSS[16]Cj[2]piJf[10]Bsf} */
#pragma pack(push,1)
struct A69 { d m0; S m1; S m2[16]; C m3; j m4[2]; p m5; i m6; J m7; f m8[10]; B m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA69(const struct A69 *x, const struct A69 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m2[15] == y->m2[15] && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA69() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A69));
		AF('d',struct A69,m0,1)
		AF('S',struct A69,m1,1)
		AF('S',struct A69,m2,16)
		AF('C',struct A69,m3,1)
		AF('j',struct A69,m4,2)
		AF('p',struct A69,m5,1)
		AF('i',struct A69,m6,1)
		AF('J',struct A69,m7,1)
		AF('f',struct A69,m8,10)
		AF('B',struct A69,m9,1)
		AF('s',struct A69,m10,1)
		AF('f',struct A69,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfSilfLs> */
#pragma pack(push,4)
union A70 { s m0; f m1; S m2; i m3; l m4; f m5; L m6; s m7; };
#pragma pack(pop)
int f_cmpA70(const union A70 *x, const union A70 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA70() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A70));
		AF('s',union A70,m0,1)
		AF('f',union A70,m1,1)
		AF('S',union A70,m2,1)
		AF('i',union A70,m3,1)
		AF('l',union A70,m4,1)
		AF('f',union A70,m5,1)
		AF('L',union A70,m6,1)
		AF('s',union A70,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pljiIClJLiLf} */
#pragma pack(push,4)
struct A71 { p m0; l m1; j m2; i m3; I m4; C m5; l m6; J m7; L m8; i m9; L m10; f m11; };
#pragma pack(pop)
int f_cmpA71(const struct A71 *x, const struct A71 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA71() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A71));
		AF('p',struct A71,m0,1)
		AF('l',struct A71,m1,1)
		AF('j',struct A71,m2,1)
		AF('i',struct A71,m3,1)
		AF('I',struct A71,m4,1)
		AF('C',struct A71,m5,1)
		AF('l',struct A71,m6,1)
		AF('J',struct A71,m7,1)
		AF('L',struct A71,m8,1)
		AF('i',struct A71,m9,1)
		AF('L',struct A71,m10,1)
		AF('f',struct A71,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SIslc} */
#pragma pack(push,8)
struct A72 { S m0; I m1; s m2; l m3; c m4; };
#pragma pack(pop)
int f_cmpA72(const struct A72 *x, const struct A72 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA72() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A72));
		AF('S',struct A72,m0,1)
		AF('I',struct A72,m1,1)
		AF('s',struct A72,m2,1)
		AF('l',struct A72,m3,1)
		AF('c',struct A72,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L} */
#pragma pack(push,8)
struct A73 { L m0; };
#pragma pack(pop)
int f_cmpA73(const struct A73 *x, const struct A73 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA73() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A73));
		AF('L',struct A73,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBfddsiIJBsI> */
#pragma pack(push,2)
union A74 { p m0; B m1; f m2; d m3; d m4; s m5; i m6; I m7; J m8; B m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA74(const union A74 *x, const union A74 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA74() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A74));
		AF('p',union A74,m0,1)
		AF('B',union A74,m1,1)
		AF('f',union A74,m2,1)
		AF('d',union A74,m3,1)
		AF('d',union A74,m4,1)
		AF('s',union A74,m5,1)
		AF('i',union A74,m6,1)
		AF('I',union A74,m7,1)
		AF('J',union A74,m8,1)
		AF('B',union A74,m9,1)
		AF('s',union A74,m10,1)
		AF('I',union A74,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jsSil<pBfddsiIJBsI>Bld> */
#pragma pack(push,1)
union A75 { j m0; s m1; S m2; i m3; l m4; union A74 m5; B m6; l m7; d m8; };
#pragma pack(pop)
int f_cmpA75(const union A75 *x, const union A75 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA74(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA75() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A75));
		AF('j',union A75,m0,1)
		AF('s',union A75,m1,1)
		AF('S',union A75,m2,1)
		AF('i',union A75,m3,1)
		AF('l',union A75,m4,1)
		AFa(union A75,m5,1,A74)
		AF('B',union A75,m6,1)
		AF('l',union A75,m7,1)
		AF('d',union A75,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djcBpBClfjJS> */
#pragma pack(push,2)
union A76 { d m0; j m1; c m2; B m3; p m4; B m5; C m6; l m7; f m8; j m9; J m10; S m11; };
#pragma pack(pop)
int f_cmpA76(const union A76 *x, const union A76 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA76() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A76));
		AF('d',union A76,m0,1)
		AF('j',union A76,m1,1)
		AF('c',union A76,m2,1)
		AF('B',union A76,m3,1)
		AF('p',union A76,m4,1)
		AF('B',union A76,m5,1)
		AF('C',union A76,m6,1)
		AF('l',union A76,m7,1)
		AF('f',union A76,m8,1)
		AF('j',union A76,m9,1)
		AF('J',union A76,m10,1)
		AF('S',union A76,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cLJCSCjspliB> */
#pragma pack(push,4)
union A77 { c m0; L m1; J m2; C m3; S m4; C m5; j m6; s m7; p m8; l m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA77(const union A77 *x, const union A77 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA77() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A77));
		AF('c',union A77,m0,1)
		AF('L',union A77,m1,1)
		AF('J',union A77,m2,1)
		AF('C',union A77,m3,1)
		AF('S',union A77,m4,1)
		AF('C',union A77,m5,1)
		AF('j',union A77,m6,1)
		AF('s',union A77,m7,1)
		AF('p',union A77,m8,1)
		AF('l',union A77,m9,1)
		AF('i',union A77,m10,1)
		AF('B',union A77,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]> */
#pragma pack(push,2)
union A78 { j m0; l m1; J m2; L m3; j m4; J m5; union A76 m6; p m7; union A77 m8; I m9; c m10; l m11[4]; };
#pragma pack(pop)
int f_cmpA78(const union A78 *x, const union A78 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA76(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA77(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3]; };
DCaggr* f_touchA78() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A78));
		AF('j',union A78,m0,1)
		AF('l',union A78,m1,1)
		AF('J',union A78,m2,1)
		AF('L',union A78,m3,1)
		AF('j',union A78,m4,1)
		AF('J',union A78,m5,1)
		AFa(union A78,m6,1,A76)
		AF('p',union A78,m7,1)
		AFa(union A78,m8,1,A77)
		AF('I',union A78,m9,1)
		AF('c',union A78,m10,1)
		AF('l',union A78,m11,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL> */
#pragma pack(push,8)
union A79 { struct A73 m0; s m1; union A75 m2; i m3; l m4; J m5; f m6; union A78 m7; L m8; L m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA79(const union A79 *x, const union A79 *y) { return f_cmpA73(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA75(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA78(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA79() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A79));
		AFa(union A79,m0,1,A73)
		AF('s',union A79,m1,1)
		AFa(union A79,m2,1,A75)
		AF('i',union A79,m3,1)
		AF('l',union A79,m4,1)
		AF('J',union A79,m5,1)
		AF('f',union A79,m6,1)
		AFa(union A79,m7,1,A78)
		AF('L',union A79,m8,1)
		AF('L',union A79,m9,1)
		AF('C',union A79,m10,1)
		AF('L',union A79,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j} */
#pragma pack(push,4)
struct A80 { j m0; };
#pragma pack(pop)
int f_cmpA80(const struct A80 *x, const struct A80 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA80() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A80));
		AF('j',struct A80,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jsjssdIfBlpl> */
#pragma pack(push,2)
union A81 { j m0; s m1; j m2; s m3; s m4; d m5; I m6; f m7; B m8; l m9; p m10; l m11; };
#pragma pack(pop)
int f_cmpA81(const union A81 *x, const union A81 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA81() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A81));
		AF('j',union A81,m0,1)
		AF('s',union A81,m1,1)
		AF('j',union A81,m2,1)
		AF('s',union A81,m3,1)
		AF('s',union A81,m4,1)
		AF('d',union A81,m5,1)
		AF('I',union A81,m6,1)
		AF('f',union A81,m7,1)
		AF('B',union A81,m8,1)
		AF('l',union A81,m9,1)
		AF('p',union A81,m10,1)
		AF('l',union A81,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LiLISc> */
#pragma pack(push,2)
union A82 { L m0; i m1; L m2; I m3; S m4; c m5; };
#pragma pack(pop)
int f_cmpA82(const union A82 *x, const union A82 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA82() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A82));
		AF('L',union A82,m0,1)
		AF('i',union A82,m1,1)
		AF('L',union A82,m2,1)
		AF('I',union A82,m3,1)
		AF('S',union A82,m4,1)
		AF('c',union A82,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cL> */
#pragma pack(push,4)
union A83 { c m0; L m1; };
#pragma pack(pop)
int f_cmpA83(const union A83 *x, const union A83 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA83() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A83));
		AF('c',union A83,m0,1)
		AF('L',union A83,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JidfscIsclfl} */
#pragma pack(push,8)
struct A84 { J m0; i m1; d m2; f m3; s m4; c m5; I m6; s m7; c m8; l m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA84(const struct A84 *x, const struct A84 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA84() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A84));
		AF('J',struct A84,m0,1)
		AF('i',struct A84,m1,1)
		AF('d',struct A84,m2,1)
		AF('f',struct A84,m3,1)
		AF('s',struct A84,m4,1)
		AF('c',struct A84,m5,1)
		AF('I',struct A84,m6,1)
		AF('s',struct A84,m7,1)
		AF('c',struct A84,m8,1)
		AF('l',struct A84,m9,1)
		AF('f',struct A84,m10,1)
		AF('l',struct A84,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cI{}IsSsiSc{JidfscIsclfl}I} */
#pragma pack(push,4)
struct A85 { c m0; I m1; struct A24 m2; I m3; s m4; S m5; s m6; i m7; S m8; c m9; struct A84 m10; I m11; };
#pragma pack(pop)
int f_cmpA85(const struct A85 *x, const struct A85 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA24(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA84(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA85() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A85));
		AF('c',struct A85,m0,1)
		AF('I',struct A85,m1,1)
		AFa(struct A85,m2,1,A24)
		AF('I',struct A85,m3,1)
		AF('s',struct A85,m4,1)
		AF('S',struct A85,m5,1)
		AF('s',struct A85,m6,1)
		AF('i',struct A85,m7,1)
		AF('S',struct A85,m8,1)
		AF('c',struct A85,m9,1)
		AFa(struct A85,m10,1,A84)
		AF('I',struct A85,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJclIICpi> */
#pragma pack(push,1)
union A86 { s m0; J m1; c m2; l m3; I m4; I m5; C m6; p m7; i m8; };
#pragma pack(pop)
int f_cmpA86(const union A86 *x, const union A86 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA86() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A86));
		AF('s',union A86,m0,1)
		AF('J',union A86,m1,1)
		AF('c',union A86,m2,1)
		AF('l',union A86,m3,1)
		AF('I',union A86,m4,1)
		AF('I',union A86,m5,1)
		AF('C',union A86,m6,1)
		AF('p',union A86,m7,1)
		AF('i',union A86,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ssISpj<sJclIICpi>lLCcd} */
#pragma pack(push,1)
struct A87 { s m0; s m1; I m2; S m3; p m4; j m5; union A86 m6; l m7; L m8; C m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA87(const struct A87 *x, const struct A87 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA86(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA87() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A87));
		AF('s',struct A87,m0,1)
		AF('s',struct A87,m1,1)
		AF('I',struct A87,m2,1)
		AF('S',struct A87,m3,1)
		AF('p',struct A87,m4,1)
		AF('j',struct A87,m5,1)
		AFa(struct A87,m6,1,A86)
		AF('l',struct A87,m7,1)
		AF('L',struct A87,m8,1)
		AF('C',struct A87,m9,1)
		AF('c',struct A87,m10,1)
		AF('d',struct A87,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfjiISS{cI{}IsSsiSc{JidfscIsclfl}I}S{ssISpj<sJclIICpi>lLCcd}jp> */
#pragma pack(push,4)
union A88 { l m0; f m1; j m2; i m3; I m4; S m5; S m6; struct A85 m7; S m8; struct A87 m9; j m10; p m11; };
#pragma pack(pop)
int f_cmpA88(const union A88 *x, const union A88 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA85(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA87(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA88() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A88));
		AF('l',union A88,m0,1)
		AF('f',union A88,m1,1)
		AF('j',union A88,m2,1)
		AF('i',union A88,m3,1)
		AF('I',union A88,m4,1)
		AF('S',union A88,m5,1)
		AF('S',union A88,m6,1)
		AFa(union A88,m7,1,A85)
		AF('S',union A88,m8,1)
		AFa(union A88,m9,1,A87)
		AF('j',union A88,m10,1)
		AF('p',union A88,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ljjCscIlfLjs} */
#pragma pack(push,2)
struct A89 { l m0; j m1; j m2; C m3; s m4; c m5; I m6; l m7; f m8; L m9; j m10; s m11; };
#pragma pack(pop)
int f_cmpA89(const struct A89 *x, const struct A89 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA89() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A89));
		AF('l',struct A89,m0,1)
		AF('j',struct A89,m1,1)
		AF('j',struct A89,m2,1)
		AF('C',struct A89,m3,1)
		AF('s',struct A89,m4,1)
		AF('c',struct A89,m5,1)
		AF('I',struct A89,m6,1)
		AF('l',struct A89,m7,1)
		AF('f',struct A89,m8,1)
		AF('L',struct A89,m9,1)
		AF('j',struct A89,m10,1)
		AF('s',struct A89,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d> */
#pragma pack(push,4)
union A90 { d m0; };
#pragma pack(pop)
int f_cmpA90(const union A90 *x, const union A90 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA90() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A90));
		AF('d',union A90,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpdfJiidcpiB} */
#pragma pack(push,4)
struct A91 { f m0; p m1; d m2; f m3; J m4; i m5; i m6; d m7; c m8; p m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA91(const struct A91 *x, const struct A91 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA91() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A91));
		AF('f',struct A91,m0,1)
		AF('p',struct A91,m1,1)
		AF('d',struct A91,m2,1)
		AF('f',struct A91,m3,1)
		AF('J',struct A91,m4,1)
		AF('i',struct A91,m5,1)
		AF('i',struct A91,m6,1)
		AF('d',struct A91,m7,1)
		AF('c',struct A91,m8,1)
		AF('p',struct A91,m9,1)
		AF('i',struct A91,m10,1)
		AF('B',struct A91,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfcS} */
#pragma pack(push,1)
struct A92 { c m0; f m1; c m2; S m3; };
#pragma pack(pop)
int f_cmpA92(const struct A92 *x, const struct A92 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA92() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A92));
		AF('c',struct A92,m0,1)
		AF('f',struct A92,m1,1)
		AF('c',struct A92,m2,1)
		AF('S',struct A92,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lf> */
#pragma pack(push,8)
union A93 { l m0; f m1; };
#pragma pack(pop)
int f_cmpA93(const union A93 *x, const union A93 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA93() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A93));
		AF('l',union A93,m0,1)
		AF('f',union A93,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCl<d>i{fpdfJiidcpiB}{cfcS}fSC[15]i<lf>} */
#pragma pack(push,4)
struct A94 { d m0; C m1; l m2; union A90 m3; i m4; struct A91 m5; struct A92 m6; f m7; S m8; C m9[15]; i m10; union A93 m11; };
#pragma pack(pop)
int f_cmpA94(const struct A94 *x, const struct A94 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA90(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA91(&x->m5, &y->m5) && f_cmpA92(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m9[13] == y->m9[13] && x->m9[14] == y->m9[14] && x->m10 == y->m10 && f_cmpA93(&x->m11, &y->m11); };
DCaggr* f_touchA94() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A94));
		AF('d',struct A94,m0,1)
		AF('C',struct A94,m1,1)
		AF('l',struct A94,m2,1)
		AFa(struct A94,m3,1,A90)
		AF('i',struct A94,m4,1)
		AFa(struct A94,m5,1,A91)
		AFa(struct A94,m6,1,A92)
		AF('f',struct A94,m7,1)
		AF('S',struct A94,m8,1)
		AF('C',struct A94,m9,15)
		AF('i',struct A94,m10,1)
		AFa(struct A94,m11,1,A93)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ljffsc{dCl<d>i{fpdfJiidcpiB}{cfcS}fSC[15]i<lf>}pIdsS} */
#pragma pack(push,4)
struct A95 { L m0; j m1; f m2; f m3; s m4; c m5; struct A94 m6; p m7; I m8; d m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA95(const struct A95 *x, const struct A95 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA94(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA95() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A95));
		AF('L',struct A95,m0,1)
		AF('j',struct A95,m1,1)
		AF('f',struct A95,m2,1)
		AF('f',struct A95,m3,1)
		AF('s',struct A95,m4,1)
		AF('c',struct A95,m5,1)
		AFa(struct A95,m6,1,A94)
		AF('p',struct A95,m7,1)
		AF('I',struct A95,m8,1)
		AF('d',struct A95,m9,1)
		AF('s',struct A95,m10,1)
		AF('S',struct A95,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cdpcSSJJ[13]SL[15]Lf} */
#pragma pack(push,1)
struct A96 { c m0; d m1; p m2; c m3; S m4; S m5; J m6; J m7[13]; S m8; L m9[15]; L m10; f m11; };
#pragma pack(pop)
int f_cmpA96(const struct A96 *x, const struct A96 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m9[13] == y->m9[13] && x->m9[14] == y->m9[14] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA96() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A96));
		AF('c',struct A96,m0,1)
		AF('d',struct A96,m1,1)
		AF('p',struct A96,m2,1)
		AF('c',struct A96,m3,1)
		AF('S',struct A96,m4,1)
		AF('S',struct A96,m5,1)
		AF('J',struct A96,m6,1)
		AF('J',struct A96,m7,13)
		AF('S',struct A96,m8,1)
		AF('L',struct A96,m9,15)
		AF('L',struct A96,m10,1)
		AF('f',struct A96,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JdjLpjBiICcs> */
#pragma pack(push,2)
union A97 { J m0; d m1; j m2; L m3; p m4; j m5; B m6; i m7; I m8; C m9; c m10; s m11; };
#pragma pack(pop)
int f_cmpA97(const union A97 *x, const union A97 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA97() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A97));
		AF('J',union A97,m0,1)
		AF('d',union A97,m1,1)
		AF('j',union A97,m2,1)
		AF('L',union A97,m3,1)
		AF('p',union A97,m4,1)
		AF('j',union A97,m5,1)
		AF('B',union A97,m6,1)
		AF('i',union A97,m7,1)
		AF('I',union A97,m8,1)
		AF('C',union A97,m9,1)
		AF('c',union A97,m10,1)
		AF('s',union A97,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jp> */
#pragma pack(push,4)
union A98 { J m0; p m1; };
#pragma pack(pop)
int f_cmpA98(const union A98 *x, const union A98 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA98() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A98));
		AF('J',union A98,m0,1)
		AF('p',union A98,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jLsBC> */
#pragma pack(push,8)
union A99 { j m0; L m1; s m2; B m3; C m4; };
#pragma pack(pop)
int f_cmpA99(const union A99 *x, const union A99 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA99() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A99));
		AF('j',union A99,m0,1)
		AF('L',union A99,m1,1)
		AF('s',union A99,m2,1)
		AF('B',union A99,m3,1)
		AF('C',union A99,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dplicIlifsiB} */
#pragma pack(push,2)
struct A100 { d m0; p m1; l m2; i m3; c m4; I m5; l m6; i m7; f m8; s m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA100(const struct A100 *x, const struct A100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA100() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A100));
		AF('d',struct A100,m0,1)
		AF('p',struct A100,m1,1)
		AF('l',struct A100,m2,1)
		AF('i',struct A100,m3,1)
		AF('c',struct A100,m4,1)
		AF('I',struct A100,m5,1)
		AF('l',struct A100,m6,1)
		AF('i',struct A100,m7,1)
		AF('f',struct A100,m8,1)
		AF('s',struct A100,m9,1)
		AF('i',struct A100,m10,1)
		AF('B',struct A100,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j{cdpcSSJJ[13]SL[15]Lf}j<JdjLpjBiICcs>[11]<Jp><jLsBC>jic{dplicIlifsiB}} */
#pragma pack(push,2)
struct A101 { j m0; struct A96 m1; j m2; union A97 m3[11]; union A98 m4; union A99 m5; j m6; i m7; c m8; struct A100 m9; };
#pragma pack(pop)
int f_cmpA101(const struct A101 *x, const struct A101 *y) { return x->m0 == y->m0 && f_cmpA96(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA97(&x->m3[0], &y->m3[0]) && f_cmpA97(&x->m3[1], &y->m3[1]) && f_cmpA97(&x->m3[2], &y->m3[2]) && f_cmpA97(&x->m3[3], &y->m3[3]) && f_cmpA97(&x->m3[4], &y->m3[4]) && f_cmpA97(&x->m3[5], &y->m3[5]) && f_cmpA97(&x->m3[6], &y->m3[6]) && f_cmpA97(&x->m3[7], &y->m3[7]) && f_cmpA97(&x->m3[8], &y->m3[8]) && f_cmpA97(&x->m3[9], &y->m3[9]) && f_cmpA97(&x->m3[10], &y->m3[10]) && f_cmpA98(&x->m4, &y->m4) && f_cmpA99(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA100(&x->m9, &y->m9); };
DCaggr* f_touchA101() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A101));
		AF('j',struct A101,m0,1)
		AFa(struct A101,m1,1,A96)
		AF('j',struct A101,m2,1)
		AFa(struct A101,m3,11,A97)
		AFa(struct A101,m4,1,A98)
		AFa(struct A101,m5,1,A99)
		AF('j',struct A101,m6,1)
		AF('i',struct A101,m7,1)
		AF('c',struct A101,m8,1)
		AFa(struct A101,m9,1,A100)
		dcCloseAggr(a);
	}
	return a;
};
/* {lBcjLdCJSIlJ} */
#pragma pack(push,4)
struct A102 { l m0; B m1; c m2; j m3; L m4; d m5; C m6; J m7; S m8; I m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA102(const struct A102 *x, const struct A102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA102() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A102));
		AF('l',struct A102,m0,1)
		AF('B',struct A102,m1,1)
		AF('c',struct A102,m2,1)
		AF('j',struct A102,m3,1)
		AF('L',struct A102,m4,1)
		AF('d',struct A102,m5,1)
		AF('C',struct A102,m6,1)
		AF('J',struct A102,m7,1)
		AF('S',struct A102,m8,1)
		AF('I',struct A102,m9,1)
		AF('l',struct A102,m10,1)
		AF('J',struct A102,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i[16]JcJIs{lBcjLdCJSIlJ}> */
#pragma pack(push,2)
union A103 { i m0[16]; J m1; c m2; J m3; I m4; s m5; struct A102 m6; };
#pragma pack(pop)
int f_cmpA103(const union A103 *x, const union A103 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && x->m0[15] == y->m0[15] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA102(&x->m6, &y->m6); };
DCaggr* f_touchA103() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A103));
		AF('i',union A103,m0,16)
		AF('J',union A103,m1,1)
		AF('c',union A103,m2,1)
		AF('J',union A103,m3,1)
		AF('I',union A103,m4,1)
		AF('s',union A103,m5,1)
		AFa(union A103,m6,1,A102)
		dcCloseAggr(a);
	}
	return a;
};
/* <l> */
#pragma pack(push,2)
union A104 { l m0; };
#pragma pack(pop)
int f_cmpA104(const union A104 *x, const union A104 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA104() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A104));
		AF('l',union A104,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djCflIdcCjsI} */
#pragma pack(push,4)
struct A105 { d m0; j m1; C m2; f m3; l m4; I m5; d m6; c m7; C m8; j m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA105(const struct A105 *x, const struct A105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA105() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A105));
		AF('d',struct A105,m0,1)
		AF('j',struct A105,m1,1)
		AF('C',struct A105,m2,1)
		AF('f',struct A105,m3,1)
		AF('l',struct A105,m4,1)
		AF('I',struct A105,m5,1)
		AF('d',struct A105,m6,1)
		AF('c',struct A105,m7,1)
		AF('C',struct A105,m8,1)
		AF('j',struct A105,m9,1)
		AF('s',struct A105,m10,1)
		AF('I',struct A105,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dB<i[16]JcJIs{lBcjLdCJSIlJ}>I<l>cpBdl{djCflIdcCjsI}j} */
#pragma pack(push,2)
struct A106 { d m0; B m1; union A103 m2; I m3; union A104 m4; c m5; p m6; B m7; d m8; l m9; struct A105 m10; j m11; };
#pragma pack(pop)
int f_cmpA106(const struct A106 *x, const struct A106 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA103(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA104(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA105(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA106() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A106));
		AF('d',struct A106,m0,1)
		AF('B',struct A106,m1,1)
		AFa(struct A106,m2,1,A103)
		AF('I',struct A106,m3,1)
		AFa(struct A106,m4,1,A104)
		AF('c',struct A106,m5,1)
		AF('p',struct A106,m6,1)
		AF('B',struct A106,m7,1)
		AF('d',struct A106,m8,1)
		AF('l',struct A106,m9,1)
		AFa(struct A106,m10,1,A105)
		AF('j',struct A106,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Sl> */
#pragma pack(push,2)
union A107 { S m0; l m1; };
#pragma pack(pop)
int f_cmpA107(const union A107 *x, const union A107 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA107() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A107));
		AF('S',union A107,m0,1)
		AF('l',union A107,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LSfsiLpcsISc} */
#pragma pack(push,2)
struct A108 { L m0; S m1; f m2; s m3; i m4; L m5; p m6; c m7; s m8; I m9; S m10; c m11; };
#pragma pack(pop)
int f_cmpA108(const struct A108 *x, const struct A108 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA108() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A108));
		AF('L',struct A108,m0,1)
		AF('S',struct A108,m1,1)
		AF('f',struct A108,m2,1)
		AF('s',struct A108,m3,1)
		AF('i',struct A108,m4,1)
		AF('L',struct A108,m5,1)
		AF('p',struct A108,m6,1)
		AF('c',struct A108,m7,1)
		AF('s',struct A108,m8,1)
		AF('I',struct A108,m9,1)
		AF('S',struct A108,m10,1)
		AF('c',struct A108,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IsIis} */
#pragma pack(push,2)
struct A109 { I m0; s m1; I m2; i m3; s m4; };
#pragma pack(pop)
int f_cmpA109(const struct A109 *x, const struct A109 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA109() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A109));
		AF('I',struct A109,m0,1)
		AF('s',struct A109,m1,1)
		AF('I',struct A109,m2,1)
		AF('i',struct A109,m3,1)
		AF('s',struct A109,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pBJSJp[4]} */
#pragma pack(push,2)
struct A110 { p m0; B m1; J m2; S m3; J m4; p m5[4]; };
#pragma pack(pop)
int f_cmpA110(const struct A110 *x, const struct A110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3]; };
DCaggr* f_touchA110() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A110));
		AF('p',struct A110,m0,1)
		AF('B',struct A110,m1,1)
		AF('J',struct A110,m2,1)
		AF('S',struct A110,m3,1)
		AF('J',struct A110,m4,1)
		AF('p',struct A110,m5,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <dIjsp> */
#pragma pack(push,8)
union A111 { d m0; I m1; j m2; s m3; p m4; };
#pragma pack(pop)
int f_cmpA111(const union A111 *x, const union A111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA111() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A111));
		AF('d',union A111,m0,1)
		AF('I',union A111,m1,1)
		AF('j',union A111,m2,1)
		AF('s',union A111,m3,1)
		AF('p',union A111,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILCIS} */
#pragma pack(push,4)
struct A112 { I m0; L m1; C m2; I m3; S m4; };
#pragma pack(pop)
int f_cmpA112(const struct A112 *x, const struct A112 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA112() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A112));
		AF('I',struct A112,m0,1)
		AF('L',struct A112,m1,1)
		AF('C',struct A112,m2,1)
		AF('I',struct A112,m3,1)
		AF('S',struct A112,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jidJCcssdjBB} */
#pragma pack(push,4)
struct A113 { j m0; i m1; d m2; J m3; C m4; c m5; s m6; s m7; d m8; j m9; B m10; B m11; };
#pragma pack(pop)
int f_cmpA113(const struct A113 *x, const struct A113 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA113() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A113));
		AF('j',struct A113,m0,1)
		AF('i',struct A113,m1,1)
		AF('d',struct A113,m2,1)
		AF('J',struct A113,m3,1)
		AF('C',struct A113,m4,1)
		AF('c',struct A113,m5,1)
		AF('s',struct A113,m6,1)
		AF('s',struct A113,m7,1)
		AF('d',struct A113,m8,1)
		AF('j',struct A113,m9,1)
		AF('B',struct A113,m10,1)
		AF('B',struct A113,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dICcIll[10]BfcLI} */
#pragma pack(push,4)
struct A114 { d m0; I m1; C m2; c m3; I m4; l m5; l m6[10]; B m7; f m8; c m9; L m10; I m11; };
#pragma pack(pop)
int f_cmpA114(const struct A114 *x, const struct A114 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA114() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A114));
		AF('d',struct A114,m0,1)
		AF('I',struct A114,m1,1)
		AF('C',struct A114,m2,1)
		AF('c',struct A114,m3,1)
		AF('I',struct A114,m4,1)
		AF('l',struct A114,m5,1)
		AF('l',struct A114,m6,10)
		AF('B',struct A114,m7,1)
		AF('f',struct A114,m8,1)
		AF('c',struct A114,m9,1)
		AF('L',struct A114,m10,1)
		AF('I',struct A114,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iI{dICcIll[10]BfcLI}Bs} */
#pragma pack(push,4)
struct A115 { i m0; I m1; struct A114 m2; B m3; s m4; };
#pragma pack(pop)
int f_cmpA115(const struct A115 *x, const struct A115 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA114(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA115() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A115));
		AF('i',struct A115,m0,1)
		AF('I',struct A115,m1,1)
		AFa(struct A115,m2,1,A114)
		AF('B',struct A115,m3,1)
		AF('s',struct A115,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pfcid} */
#pragma pack(push,2)
struct A116 { p m0; f m1; c m2; i m3; d m4; };
#pragma pack(pop)
int f_cmpA116(const struct A116 *x, const struct A116 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA116() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A116));
		AF('p',struct A116,m0,1)
		AF('f',struct A116,m1,1)
		AF('c',struct A116,m2,1)
		AF('i',struct A116,m3,1)
		AF('d',struct A116,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BpddCssJcjdc} */
#pragma pack(push,8)
struct A117 { B m0; p m1; d m2; d m3; C m4; s m5; s m6; J m7; c m8; j m9; d m10; c m11; };
#pragma pack(pop)
int f_cmpA117(const struct A117 *x, const struct A117 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA117() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A117));
		AF('B',struct A117,m0,1)
		AF('p',struct A117,m1,1)
		AF('d',struct A117,m2,1)
		AF('d',struct A117,m3,1)
		AF('C',struct A117,m4,1)
		AF('s',struct A117,m5,1)
		AF('s',struct A117,m6,1)
		AF('J',struct A117,m7,1)
		AF('c',struct A117,m8,1)
		AF('j',struct A117,m9,1)
		AF('d',struct A117,m10,1)
		AF('c',struct A117,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JspCf} */
#pragma pack(push,4)
struct A118 { J m0; s m1; p m2; C m3; f m4; };
#pragma pack(pop)
int f_cmpA118(const struct A118 *x, const struct A118 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA118() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A118));
		AF('J',struct A118,m0,1)
		AF('s',struct A118,m1,1)
		AF('p',struct A118,m2,1)
		AF('C',struct A118,m3,1)
		AF('f',struct A118,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCsidlCB[14]JsS{JspCf}> */
#pragma pack(push,1)
union A119 { C m0; C m1; s m2; i m3; d m4; l m5; C m6; B m7[14]; J m8; s m9; S m10; struct A118 m11; };
#pragma pack(pop)
int f_cmpA119(const union A119 *x, const union A119 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA118(&x->m11, &y->m11); };
DCaggr* f_touchA119() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A119));
		AF('C',union A119,m0,1)
		AF('C',union A119,m1,1)
		AF('s',union A119,m2,1)
		AF('i',union A119,m3,1)
		AF('d',union A119,m4,1)
		AF('l',union A119,m5,1)
		AF('C',union A119,m6,1)
		AF('B',union A119,m7,14)
		AF('J',union A119,m8,1)
		AF('s',union A119,m9,1)
		AF('S',union A119,m10,1)
		AFa(union A119,m11,1,A118)
		dcCloseAggr(a);
	}
	return a;
};
/* <c> */
#pragma pack(push,1)
union A120 { c m0; };
#pragma pack(pop)
int f_cmpA120(const union A120 *x, const union A120 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA120() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A120));
		AF('c',union A120,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdJlfJsJd[16]pLc> */
#pragma pack(push,1)
union A121 { C m0; d m1; J m2; l m3; f m4; J m5; s m6; J m7; d m8[16]; p m9; L m10; c m11; };
#pragma pack(pop)
int f_cmpA121(const union A121 *x, const union A121 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m8[15] == y->m8[15] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA121() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A121));
		AF('C',union A121,m0,1)
		AF('d',union A121,m1,1)
		AF('J',union A121,m2,1)
		AF('l',union A121,m3,1)
		AF('f',union A121,m4,1)
		AF('J',union A121,m5,1)
		AF('s',union A121,m6,1)
		AF('J',union A121,m7,1)
		AF('d',union A121,m8,16)
		AF('p',union A121,m9,1)
		AF('L',union A121,m10,1)
		AF('c',union A121,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSJJj[13]} */
#pragma pack(push,4)
struct A122 { c m0; S m1; J m2; J m3; j m4[13]; };
#pragma pack(pop)
int f_cmpA122(const struct A122 *x, const struct A122 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12]; };
DCaggr* f_touchA122() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A122));
		AF('c',struct A122,m0,1)
		AF('S',struct A122,m1,1)
		AF('J',struct A122,m2,1)
		AF('J',struct A122,m3,1)
		AF('j',struct A122,m4,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcLCBjB{cSJJj[13]}SSdS} */
#pragma pack(push,2)
struct A123 { I m0; c m1; L m2; C m3; B m4; j m5; B m6; struct A122 m7; S m8; S m9; d m10; S m11; };
#pragma pack(pop)
int f_cmpA123(const struct A123 *x, const struct A123 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA122(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA123() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A123));
		AF('I',struct A123,m0,1)
		AF('c',struct A123,m1,1)
		AF('L',struct A123,m2,1)
		AF('C',struct A123,m3,1)
		AF('B',struct A123,m4,1)
		AF('j',struct A123,m5,1)
		AF('B',struct A123,m6,1)
		AFa(struct A123,m7,1,A122)
		AF('S',struct A123,m8,1)
		AF('S',struct A123,m9,1)
		AF('d',struct A123,m10,1)
		AF('S',struct A123,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dJLdCd} */
#pragma pack(push,1)
struct A124 { d m0; J m1; L m2; d m3; C m4; d m5; };
#pragma pack(pop)
int f_cmpA124(const struct A124 *x, const struct A124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA124() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A124));
		AF('d',struct A124,m0,1)
		AF('J',struct A124,m1,1)
		AF('L',struct A124,m2,1)
		AF('d',struct A124,m3,1)
		AF('C',struct A124,m4,1)
		AF('d',struct A124,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjjfLJIdLISJ} */
#pragma pack(push,1)
struct A125 { s m0; j m1; j m2; f m3; L m4; J m5; I m6; d m7; L m8; I m9; S m10; J m11; };
#pragma pack(pop)
int f_cmpA125(const struct A125 *x, const struct A125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA125() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A125));
		AF('s',struct A125,m0,1)
		AF('j',struct A125,m1,1)
		AF('j',struct A125,m2,1)
		AF('f',struct A125,m3,1)
		AF('L',struct A125,m4,1)
		AF('J',struct A125,m5,1)
		AF('I',struct A125,m6,1)
		AF('d',struct A125,m7,1)
		AF('L',struct A125,m8,1)
		AF('I',struct A125,m9,1)
		AF('S',struct A125,m10,1)
		AF('J',struct A125,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IL} */
#pragma pack(push,4)
struct A126 { I m0; L m1; };
#pragma pack(pop)
int f_cmpA126(const struct A126 *x, const struct A126 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA126() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A126));
		AF('I',struct A126,m0,1)
		AF('L',struct A126,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lslSlj} */
#pragma pack(push,1)
struct A127 { l m0; s m1; l m2; S m3; l m4; j m5; };
#pragma pack(pop)
int f_cmpA127(const struct A127 *x, const struct A127 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA127() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A127));
		AF('l',struct A127,m0,1)
		AF('s',struct A127,m1,1)
		AF('l',struct A127,m2,1)
		AF('S',struct A127,m3,1)
		AF('l',struct A127,m4,1)
		AF('j',struct A127,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LBJp[6]ilIc} */
#pragma pack(push,2)
struct A128 { L m0; B m1; J m2; p m3[6]; i m4; l m5; I m6; c m7; };
#pragma pack(pop)
int f_cmpA128(const struct A128 *x, const struct A128 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA128() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A128));
		AF('L',struct A128,m0,1)
		AF('B',struct A128,m1,1)
		AF('J',struct A128,m2,1)
		AF('p',struct A128,m3,6)
		AF('i',struct A128,m4,1)
		AF('l',struct A128,m5,1)
		AF('I',struct A128,m6,1)
		AF('c',struct A128,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {spIli} */
#pragma pack(push,2)
struct A129 { s m0; p m1; I m2; l m3; i m4; };
#pragma pack(pop)
int f_cmpA129(const struct A129 *x, const struct A129 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA129() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A129));
		AF('s',struct A129,m0,1)
		AF('p',struct A129,m1,1)
		AF('I',struct A129,m2,1)
		AF('l',struct A129,m3,1)
		AF('i',struct A129,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jj{LBJp[6]ilIc}{spIli}Cdff<>cic> */
#pragma pack(push,8)
union A130 { J m0; j m1; struct A128 m2; struct A129 m3; C m4; d m5; f m6; f m7; union A30 m8; c m9; i m10; c m11; };
#pragma pack(pop)
int f_cmpA130(const union A130 *x, const union A130 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA128(&x->m2, &y->m2) && f_cmpA129(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA30(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA130() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A130));
		AF('J',union A130,m0,1)
		AF('j',union A130,m1,1)
		AFa(union A130,m2,1,A128)
		AFa(union A130,m3,1,A129)
		AF('C',union A130,m4,1)
		AF('d',union A130,m5,1)
		AF('f',union A130,m6,1)
		AF('f',union A130,m7,1)
		AFa(union A130,m8,1,A30)
		AF('c',union A130,m9,1)
		AF('i',union A130,m10,1)
		AF('c',union A130,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CpjIljISJdfs> */
#pragma pack(push,4)
union A131 { C m0; p m1; j m2; I m3; l m4; j m5; I m6; S m7; J m8; d m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA131(const union A131 *x, const union A131 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA131() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A131));
		AF('C',union A131,m0,1)
		AF('p',union A131,m1,1)
		AF('j',union A131,m2,1)
		AF('I',union A131,m3,1)
		AF('l',union A131,m4,1)
		AF('j',union A131,m5,1)
		AF('I',union A131,m6,1)
		AF('S',union A131,m7,1)
		AF('J',union A131,m8,1)
		AF('d',union A131,m9,1)
		AF('f',union A131,m10,1)
		AF('s',union A131,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLJj[16]Jil> */
#pragma pack(push,4)
union A132 { l m0; L m1; J m2; j m3[16]; J m4; i m5; l m6; };
#pragma pack(pop)
int f_cmpA132(const union A132 *x, const union A132 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m3[15] == y->m3[15] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA132() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A132));
		AF('l',union A132,m0,1)
		AF('L',union A132,m1,1)
		AF('J',union A132,m2,1)
		AF('j',union A132,m3,16)
		AF('J',union A132,m4,1)
		AF('i',union A132,m5,1)
		AF('l',union A132,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBI<CpjIljISJdfs>iS<lLJj[16]Jil>cjf[12]<>> */
#pragma pack(push,4)
union A133 { B m0; B m1; I m2; union A131 m3; i m4; S m5; union A132 m6; c m7; j m8; f m9[12]; union A30 m10; };
#pragma pack(pop)
int f_cmpA133(const union A133 *x, const union A133 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA131(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA132(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && f_cmpA30(&x->m10, &y->m10); };
DCaggr* f_touchA133() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A133));
		AF('B',union A133,m0,1)
		AF('B',union A133,m1,1)
		AF('I',union A133,m2,1)
		AFa(union A133,m3,1,A131)
		AF('i',union A133,m4,1)
		AF('S',union A133,m5,1)
		AFa(union A133,m6,1,A132)
		AF('c',union A133,m7,1)
		AF('j',union A133,m8,1)
		AF('f',union A133,m9,12)
		AFa(union A133,m10,1,A30)
		dcCloseAggr(a);
	}
	return a;
};
/* <Slj> */
#pragma pack(push,4)
union A134 { S m0; l m1; j m2; };
#pragma pack(pop)
int f_cmpA134(const union A134 *x, const union A134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA134() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A134));
		AF('S',union A134,m0,1)
		AF('l',union A134,m1,1)
		AF('j',union A134,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LClILIscJj> */
#pragma pack(push,4)
union A135 { L m0; C m1; l m2; I m3; L m4; I m5; s m6; c m7; J m8; j m9; };
#pragma pack(pop)
int f_cmpA135(const union A135 *x, const union A135 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA135() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A135));
		AF('L',union A135,m0,1)
		AF('C',union A135,m1,1)
		AF('l',union A135,m2,1)
		AF('I',union A135,m3,1)
		AF('L',union A135,m4,1)
		AF('I',union A135,m5,1)
		AF('s',union A135,m6,1)
		AF('c',union A135,m7,1)
		AF('J',union A135,m8,1)
		AF('j',union A135,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ScLpsdjLllIl} */
#pragma pack(push,2)
struct A136 { S m0; c m1; L m2; p m3; s m4; d m5; j m6; L m7; l m8; l m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA136(const struct A136 *x, const struct A136 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA136() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A136));
		AF('S',struct A136,m0,1)
		AF('c',struct A136,m1,1)
		AF('L',struct A136,m2,1)
		AF('p',struct A136,m3,1)
		AF('s',struct A136,m4,1)
		AF('d',struct A136,m5,1)
		AF('j',struct A136,m6,1)
		AF('L',struct A136,m7,1)
		AF('l',struct A136,m8,1)
		AF('l',struct A136,m9,1)
		AF('I',struct A136,m10,1)
		AF('l',struct A136,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ds[8]pdj{ScLpsdjLllIl}diBjis> */
#pragma pack(push,4)
union A137 { d m0; s m1[8]; p m2; d m3; j m4; struct A136 m5; d m6; i m7; B m8; j m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA137(const union A137 *x, const union A137 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA136(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA137() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A137));
		AF('d',union A137,m0,1)
		AF('s',union A137,m1,8)
		AF('p',union A137,m2,1)
		AF('d',union A137,m3,1)
		AF('j',union A137,m4,1)
		AFa(union A137,m5,1,A136)
		AF('d',union A137,m6,1)
		AF('i',union A137,m7,1)
		AF('B',union A137,m8,1)
		AF('j',union A137,m9,1)
		AF('i',union A137,m10,1)
		AF('s',union A137,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCLSpJ> */
#pragma pack(push,4)
union A138 { p m0; C m1; L m2; S m3; p m4; J m5; };
#pragma pack(pop)
int f_cmpA138(const union A138 *x, const union A138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA138() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A138));
		AF('p',union A138,m0,1)
		AF('C',union A138,m1,1)
		AF('L',union A138,m2,1)
		AF('S',union A138,m3,1)
		AF('p',union A138,m4,1)
		AF('J',union A138,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jl<pCLSpJ>pCdSLfid[5]S> */
#pragma pack(push,4)
union A139 { j m0; l m1; union A138 m2; p m3; C m4; d m5; S m6; L m7; f m8; i m9; d m10[5]; S m11; };
#pragma pack(pop)
int f_cmpA139(const union A139 *x, const union A139 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA138(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m11 == y->m11; };
DCaggr* f_touchA139() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A139));
		AF('j',union A139,m0,1)
		AF('l',union A139,m1,1)
		AFa(union A139,m2,1,A138)
		AF('p',union A139,m3,1)
		AF('C',union A139,m4,1)
		AF('d',union A139,m5,1)
		AF('S',union A139,m6,1)
		AF('L',union A139,m7,1)
		AF('f',union A139,m8,1)
		AF('i',union A139,m9,1)
		AF('d',union A139,m10,5)
		AF('S',union A139,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdLSsBLlppdp} */
#pragma pack(push,1)
struct A140 { C m0; d m1; L m2; S m3; s m4; B m5; L m6; l m7; p m8; p m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA140(const struct A140 *x, const struct A140 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA140() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A140));
		AF('C',struct A140,m0,1)
		AF('d',struct A140,m1,1)
		AF('L',struct A140,m2,1)
		AF('S',struct A140,m3,1)
		AF('s',struct A140,m4,1)
		AF('B',struct A140,m5,1)
		AF('L',struct A140,m6,1)
		AF('l',struct A140,m7,1)
		AF('p',struct A140,m8,1)
		AF('p',struct A140,m9,1)
		AF('d',struct A140,m10,1)
		AF('p',struct A140,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pdCIfC[3]dISpdl} */
#pragma pack(push,2)
struct A141 { p m0; d m1; C m2; I m3; f m4; C m5[3]; d m6; I m7; S m8; p m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA141(const struct A141 *x, const struct A141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA141() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A141));
		AF('p',struct A141,m0,1)
		AF('d',struct A141,m1,1)
		AF('C',struct A141,m2,1)
		AF('I',struct A141,m3,1)
		AF('f',struct A141,m4,1)
		AF('C',struct A141,m5,3)
		AF('d',struct A141,m6,1)
		AF('I',struct A141,m7,1)
		AF('S',struct A141,m8,1)
		AF('p',struct A141,m9,1)
		AF('d',struct A141,m10,1)
		AF('l',struct A141,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBsI{pdCIfC[3]dISpdl}IIfsJlp} */
#pragma pack(push,4)
struct A142 { I m0; B m1; s m2; I m3; struct A141 m4; I m5; I m6; f m7; s m8; J m9; l m10; p m11; };
#pragma pack(pop)
int f_cmpA142(const struct A142 *x, const struct A142 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA141(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA142() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A142));
		AF('I',struct A142,m0,1)
		AF('B',struct A142,m1,1)
		AF('s',struct A142,m2,1)
		AF('I',struct A142,m3,1)
		AFa(struct A142,m4,1,A141)
		AF('I',struct A142,m5,1)
		AF('I',struct A142,m6,1)
		AF('f',struct A142,m7,1)
		AF('s',struct A142,m8,1)
		AF('J',struct A142,m9,1)
		AF('l',struct A142,m10,1)
		AF('p',struct A142,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lli} */
#pragma pack(push,4)
struct A143 { l m0; l m1; i m2; };
#pragma pack(pop)
int f_cmpA143(const struct A143 *x, const struct A143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA143() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A143));
		AF('l',struct A143,m0,1)
		AF('l',struct A143,m1,1)
		AF('i',struct A143,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJ{lli}p} */
#pragma pack(push,4)
struct A144 { p m0; J m1; struct A143 m2; p m3; };
#pragma pack(pop)
int f_cmpA144(const struct A144 *x, const struct A144 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA143(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA144() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A144));
		AF('p',struct A144,m0,1)
		AF('J',struct A144,m1,1)
		AFa(struct A144,m2,1,A143)
		AF('p',struct A144,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCCCcS{IBsI{pdCIfC[3]dISpdl}IIfsJlp}BClB{pJ{lli}p}} */
#pragma pack(push,2)
struct A145 { d m0; C m1; C m2; C m3; c m4; S m5; struct A142 m6; B m7; C m8; l m9; B m10; struct A144 m11; };
#pragma pack(pop)
int f_cmpA145(const struct A145 *x, const struct A145 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA142(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA144(&x->m11, &y->m11); };
DCaggr* f_touchA145() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A145));
		AF('d',struct A145,m0,1)
		AF('C',struct A145,m1,1)
		AF('C',struct A145,m2,1)
		AF('C',struct A145,m3,1)
		AF('c',struct A145,m4,1)
		AF('S',struct A145,m5,1)
		AFa(struct A145,m6,1,A142)
		AF('B',struct A145,m7,1)
		AF('C',struct A145,m8,1)
		AF('l',struct A145,m9,1)
		AF('B',struct A145,m10,1)
		AFa(struct A145,m11,1,A144)
		dcCloseAggr(a);
	}
	return a;
};
/* <IfjBSsJJpldI> */
#pragma pack(push,2)
union A146 { I m0; f m1; j m2; B m3; S m4; s m5; J m6; J m7; p m8; l m9; d m10; I m11; };
#pragma pack(pop)
int f_cmpA146(const union A146 *x, const union A146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA146() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A146));
		AF('I',union A146,m0,1)
		AF('f',union A146,m1,1)
		AF('j',union A146,m2,1)
		AF('B',union A146,m3,1)
		AF('S',union A146,m4,1)
		AF('s',union A146,m5,1)
		AF('J',union A146,m6,1)
		AF('J',union A146,m7,1)
		AF('p',union A146,m8,1)
		AF('l',union A146,m9,1)
		AF('d',union A146,m10,1)
		AF('I',union A146,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JjsjjJJcBiIB} */
#pragma pack(push,1)
struct A147 { J m0; j m1; s m2; j m3; j m4; J m5; J m6; c m7; B m8; i m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA147(const struct A147 *x, const struct A147 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA147() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A147));
		AF('J',struct A147,m0,1)
		AF('j',struct A147,m1,1)
		AF('s',struct A147,m2,1)
		AF('j',struct A147,m3,1)
		AF('j',struct A147,m4,1)
		AF('J',struct A147,m5,1)
		AF('J',struct A147,m6,1)
		AF('c',struct A147,m7,1)
		AF('B',struct A147,m8,1)
		AF('i',struct A147,m9,1)
		AF('I',struct A147,m10,1)
		AF('B',struct A147,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BB<IfjBSsJJpldI>S{JjsjjJJcBiIB}> */
#pragma pack(push,2)
union A148 { B m0; B m1; union A146 m2; S m3; struct A147 m4; };
#pragma pack(pop)
int f_cmpA148(const union A148 *x, const union A148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA146(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA147(&x->m4, &y->m4); };
DCaggr* f_touchA148() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A148));
		AF('B',union A148,m0,1)
		AF('B',union A148,m1,1)
		AFa(union A148,m2,1,A146)
		AF('S',union A148,m3,1)
		AFa(union A148,m4,1,A147)
		dcCloseAggr(a);
	}
	return a;
};
/* {psLijl<BB<IfjBSsJJpldI>S{JjsjjJJcBiIB}>pB} */
#pragma pack(push,8)
struct A149 { p m0; s m1; L m2; i m3; j m4; l m5; union A148 m6; p m7; B m8; };
#pragma pack(pop)
int f_cmpA149(const struct A149 *x, const struct A149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA148(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA149() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A149));
		AF('p',struct A149,m0,1)
		AF('s',struct A149,m1,1)
		AF('L',struct A149,m2,1)
		AF('i',struct A149,m3,1)
		AF('j',struct A149,m4,1)
		AF('l',struct A149,m5,1)
		AFa(struct A149,m6,1,A148)
		AF('p',struct A149,m7,1)
		AF('B',struct A149,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fCdfLflddLfp> */
#pragma pack(push,1)
union A150 { f m0; C m1; d m2; f m3; L m4; f m5; l m6; d m7; d m8; L m9; f m10; p m11; };
#pragma pack(pop)
int f_cmpA150(const union A150 *x, const union A150 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA150() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A150));
		AF('f',union A150,m0,1)
		AF('C',union A150,m1,1)
		AF('d',union A150,m2,1)
		AF('f',union A150,m3,1)
		AF('L',union A150,m4,1)
		AF('f',union A150,m5,1)
		AF('l',union A150,m6,1)
		AF('d',union A150,m7,1)
		AF('d',union A150,m8,1)
		AF('L',union A150,m9,1)
		AF('f',union A150,m10,1)
		AF('p',union A150,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<fCdfLflddLfp>liiC{}Cl} */
#pragma pack(push,2)
struct A151 { union A150 m0; l m1; i m2; i m3; C m4; struct A24 m5; C m6; l m7; };
#pragma pack(pop)
int f_cmpA151(const struct A151 *x, const struct A151 *y) { return f_cmpA150(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA24(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA151() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A151));
		AFa(struct A151,m0,1,A150)
		AF('l',struct A151,m1,1)
		AF('i',struct A151,m2,1)
		AF('i',struct A151,m3,1)
		AF('C',struct A151,m4,1)
		AFa(struct A151,m5,1,A24)
		AF('C',struct A151,m6,1)
		AF('l',struct A151,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JI} */
#pragma pack(push,8)
struct A152 { J m0; I m1; };
#pragma pack(pop)
int f_cmpA152(const struct A152 *x, const struct A152 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA152() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A152));
		AF('J',struct A152,m0,1)
		AF('I',struct A152,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B{JI}pJLJ> */
#pragma pack(push,4)
union A153 { B m0; struct A152 m1; p m2; J m3; L m4; J m5; };
#pragma pack(pop)
int f_cmpA153(const union A153 *x, const union A153 *y) { return x->m0 == y->m0 && f_cmpA152(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA153() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A153));
		AF('B',union A153,m0,1)
		AFa(union A153,m1,1,A152)
		AF('p',union A153,m2,1)
		AF('J',union A153,m3,1)
		AF('L',union A153,m4,1)
		AF('J',union A153,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l{<fCdfLflddLfp>liiC{}Cl}l<B{JI}pJLJ>p} */
#pragma pack(push,4)
struct A154 { l m0; struct A151 m1; l m2; union A153 m3; p m4; };
#pragma pack(pop)
int f_cmpA154(const struct A154 *x, const struct A154 *y) { return x->m0 == y->m0 && f_cmpA151(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA153(&x->m3, &y->m3) && x->m4 == y->m4; };
DCaggr* f_touchA154() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A154));
		AF('l',struct A154,m0,1)
		AFa(struct A154,m1,1,A151)
		AF('l',struct A154,m2,1)
		AFa(struct A154,m3,1,A153)
		AF('p',struct A154,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jIC> */
#pragma pack(push,8)
union A155 { j m0; I m1; C m2; };
#pragma pack(pop)
int f_cmpA155(const union A155 *x, const union A155 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA155() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A155));
		AF('j',union A155,m0,1)
		AF('I',union A155,m1,1)
		AF('C',union A155,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LpdpjJdBSjl> */
#pragma pack(push,4)
union A156 { L m0; p m1; d m2; p m3; j m4; J m5; d m6; B m7; S m8; j m9; l m10; };
#pragma pack(pop)
int f_cmpA156(const union A156 *x, const union A156 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA156() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A156));
		AF('L',union A156,m0,1)
		AF('p',union A156,m1,1)
		AF('d',union A156,m2,1)
		AF('p',union A156,m3,1)
		AF('j',union A156,m4,1)
		AF('J',union A156,m5,1)
		AF('d',union A156,m6,1)
		AF('B',union A156,m7,1)
		AF('S',union A156,m8,1)
		AF('j',union A156,m9,1)
		AF('l',union A156,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jL<>CSjj<LpdpjJdBSjl>BJJC> */
#pragma pack(push,2)
union A157 { j m0; L m1; union A30 m2; C m3; S m4; j m5; j m6; union A156 m7; B m8; J m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA157(const union A157 *x, const union A157 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA30(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA156(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA157() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A157));
		AF('j',union A157,m0,1)
		AF('L',union A157,m1,1)
		AFa(union A157,m2,1,A30)
		AF('C',union A157,m3,1)
		AF('S',union A157,m4,1)
		AF('j',union A157,m5,1)
		AF('j',union A157,m6,1)
		AFa(union A157,m7,1,A156)
		AF('B',union A157,m8,1)
		AF('J',union A157,m9,1)
		AF('J',union A157,m10,1)
		AF('C',union A157,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCdSlssjpJcc[15]> */
#pragma pack(push,1)
union A158 { d m0; C m1; d m2; S m3; l m4; s m5; s m6; j m7; p m8; J m9; c m10; c m11[15]; };
#pragma pack(pop)
int f_cmpA158(const union A158 *x, const union A158 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14]; };
DCaggr* f_touchA158() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A158));
		AF('d',union A158,m0,1)
		AF('C',union A158,m1,1)
		AF('d',union A158,m2,1)
		AF('S',union A158,m3,1)
		AF('l',union A158,m4,1)
		AF('s',union A158,m5,1)
		AF('s',union A158,m6,1)
		AF('j',union A158,m7,1)
		AF('p',union A158,m8,1)
		AF('J',union A158,m9,1)
		AF('c',union A158,m10,1)
		AF('c',union A158,m11,15)
		dcCloseAggr(a);
	}
	return a;
};
/* <ISs> */
#pragma pack(push,4)
union A159 { I m0; S m1; s m2; };
#pragma pack(pop)
int f_cmpA159(const union A159 *x, const union A159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA159() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A159));
		AF('I',union A159,m0,1)
		AF('S',union A159,m1,1)
		AF('s',union A159,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <L> */
#pragma pack(push,2)
union A160 { L m0; };
#pragma pack(pop)
int f_cmpA160(const union A160 *x, const union A160 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA160() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A160));
		AF('L',union A160,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JIilIsBBlsJd> */
#pragma pack(push,8)
union A161 { J m0; I m1; i m2; l m3; I m4; s m5; B m6; B m7; l m8; s m9; J m10; d m11; };
#pragma pack(pop)
int f_cmpA161(const union A161 *x, const union A161 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA161() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A161));
		AF('J',union A161,m0,1)
		AF('I',union A161,m1,1)
		AF('i',union A161,m2,1)
		AF('l',union A161,m3,1)
		AF('I',union A161,m4,1)
		AF('s',union A161,m5,1)
		AF('B',union A161,m6,1)
		AF('B',union A161,m7,1)
		AF('l',union A161,m8,1)
		AF('s',union A161,m9,1)
		AF('J',union A161,m10,1)
		AF('d',union A161,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lld[9]IL> */
#pragma pack(push,1)
union A162 { L m0; l m1; d m2[9]; I m3; L m4; };
#pragma pack(pop)
int f_cmpA162(const union A162 *x, const union A162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA162() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A162));
		AF('L',union A162,m0,1)
		AF('l',union A162,m1,1)
		AF('d',union A162,m2,9)
		AF('I',union A162,m3,1)
		AF('L',union A162,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ifSsIslpSpij} */
#pragma pack(push,4)
struct A163 { i m0; f m1; S m2; s m3; I m4; s m5; l m6; p m7; S m8; p m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA163(const struct A163 *x, const struct A163 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA163() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A163));
		AF('i',struct A163,m0,1)
		AF('f',struct A163,m1,1)
		AF('S',struct A163,m2,1)
		AF('s',struct A163,m3,1)
		AF('I',struct A163,m4,1)
		AF('s',struct A163,m5,1)
		AF('l',struct A163,m6,1)
		AF('p',struct A163,m7,1)
		AF('S',struct A163,m8,1)
		AF('p',struct A163,m9,1)
		AF('i',struct A163,m10,1)
		AF('j',struct A163,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C<Lld[9]IL>[13]ffc[5]{ifSsIslpSpij}> */
#pragma pack(push,4)
union A164 { C m0; union A162 m1[13]; f m2; f m3; c m4[5]; struct A163 m5; };
#pragma pack(pop)
int f_cmpA164(const union A164 *x, const union A164 *y) { return x->m0 == y->m0 && f_cmpA162(&x->m1[0], &y->m1[0]) && f_cmpA162(&x->m1[1], &y->m1[1]) && f_cmpA162(&x->m1[2], &y->m1[2]) && f_cmpA162(&x->m1[3], &y->m1[3]) && f_cmpA162(&x->m1[4], &y->m1[4]) && f_cmpA162(&x->m1[5], &y->m1[5]) && f_cmpA162(&x->m1[6], &y->m1[6]) && f_cmpA162(&x->m1[7], &y->m1[7]) && f_cmpA162(&x->m1[8], &y->m1[8]) && f_cmpA162(&x->m1[9], &y->m1[9]) && f_cmpA162(&x->m1[10], &y->m1[10]) && f_cmpA162(&x->m1[11], &y->m1[11]) && f_cmpA162(&x->m1[12], &y->m1[12]) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && f_cmpA163(&x->m5, &y->m5); };
DCaggr* f_touchA164() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A164));
		AF('C',union A164,m0,1)
		AFa(union A164,m1,13,A162)
		AF('f',union A164,m2,1)
		AF('f',union A164,m3,1)
		AF('c',union A164,m4,5)
		AFa(union A164,m5,1,A163)
		dcCloseAggr(a);
	}
	return a;
};
/* <JIisSfiBdBcd> */
#pragma pack(push,4)
union A165 { J m0; I m1; i m2; s m3; S m4; f m5; i m6; B m7; d m8; B m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA165(const union A165 *x, const union A165 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA165() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A165));
		AF('J',union A165,m0,1)
		AF('I',union A165,m1,1)
		AF('i',union A165,m2,1)
		AF('s',union A165,m3,1)
		AF('S',union A165,m4,1)
		AF('f',union A165,m5,1)
		AF('i',union A165,m6,1)
		AF('B',union A165,m7,1)
		AF('d',union A165,m8,1)
		AF('B',union A165,m9,1)
		AF('c',union A165,m10,1)
		AF('d',union A165,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcI} */
#pragma pack(push,2)
struct A166 { f m0; c m1; I m2; };
#pragma pack(pop)
int f_cmpA166(const struct A166 *x, const struct A166 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA166() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A166));
		AF('f',struct A166,m0,1)
		AF('c',struct A166,m1,1)
		AF('I',struct A166,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iifdBfffllBL> */
#pragma pack(push,4)
union A167 { i m0; i m1; f m2; d m3; B m4; f m5; f m6; f m7; l m8; l m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA167(const union A167 *x, const union A167 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA167() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A167));
		AF('i',union A167,m0,1)
		AF('i',union A167,m1,1)
		AF('f',union A167,m2,1)
		AF('d',union A167,m3,1)
		AF('B',union A167,m4,1)
		AF('f',union A167,m5,1)
		AF('f',union A167,m6,1)
		AF('f',union A167,m7,1)
		AF('l',union A167,m8,1)
		AF('l',union A167,m9,1)
		AF('B',union A167,m10,1)
		AF('L',union A167,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jcLCcpiCJScC} */
#pragma pack(push,2)
struct A168 { j m0; c m1; L m2; C m3; c m4; p m5; i m6; C m7; J m8; S m9; c m10; C m11; };
#pragma pack(pop)
int f_cmpA168(const struct A168 *x, const struct A168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA168() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A168));
		AF('j',struct A168,m0,1)
		AF('c',struct A168,m1,1)
		AF('L',struct A168,m2,1)
		AF('C',struct A168,m3,1)
		AF('c',struct A168,m4,1)
		AF('p',struct A168,m5,1)
		AF('i',struct A168,m6,1)
		AF('C',struct A168,m7,1)
		AF('J',struct A168,m8,1)
		AF('S',struct A168,m9,1)
		AF('c',struct A168,m10,1)
		AF('C',struct A168,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pcScjfLpLJ> */
#pragma pack(push,2)
union A169 { p m0; c m1; S m2; c m3; j m4; f m5; L m6; p m7; L m8; J m9; };
#pragma pack(pop)
int f_cmpA169(const union A169 *x, const union A169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA169() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A169));
		AF('p',union A169,m0,1)
		AF('c',union A169,m1,1)
		AF('S',union A169,m2,1)
		AF('c',union A169,m3,1)
		AF('j',union A169,m4,1)
		AF('f',union A169,m5,1)
		AF('L',union A169,m6,1)
		AF('p',union A169,m7,1)
		AF('L',union A169,m8,1)
		AF('J',union A169,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pjL{jcLCcpiCJScC}Jciilc<pcScjfLpLJ>B} */
#pragma pack(push,1)
struct A170 { p m0; j m1; L m2; struct A168 m3; J m4; c m5; i m6; i m7; l m8; c m9; union A169 m10; B m11; };
#pragma pack(pop)
int f_cmpA170(const struct A170 *x, const struct A170 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA168(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA169(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA170() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A170));
		AF('p',struct A170,m0,1)
		AF('j',struct A170,m1,1)
		AF('L',struct A170,m2,1)
		AFa(struct A170,m3,1,A168)
		AF('J',struct A170,m4,1)
		AF('c',struct A170,m5,1)
		AF('i',struct A170,m6,1)
		AF('i',struct A170,m7,1)
		AF('l',struct A170,m8,1)
		AF('c',struct A170,m9,1)
		AFa(struct A170,m10,1,A169)
		AF('B',struct A170,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LBlppLSSIJIS> */
#pragma pack(push,4)
union A171 { L m0; B m1; l m2; p m3; p m4; L m5; S m6; S m7; I m8; J m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA171(const union A171 *x, const union A171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA171() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A171));
		AF('L',union A171,m0,1)
		AF('B',union A171,m1,1)
		AF('l',union A171,m2,1)
		AF('p',union A171,m3,1)
		AF('p',union A171,m4,1)
		AF('L',union A171,m5,1)
		AF('S',union A171,m6,1)
		AF('S',union A171,m7,1)
		AF('I',union A171,m8,1)
		AF('J',union A171,m9,1)
		AF('I',union A171,m10,1)
		AF('S',union A171,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lflc<LBlppLSSIJIS>> */
#pragma pack(push,2)
union A172 { L m0; f m1; l m2; c m3; union A171 m4; };
#pragma pack(pop)
int f_cmpA172(const union A172 *x, const union A172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA171(&x->m4, &y->m4); };
DCaggr* f_touchA172() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A172));
		AF('L',union A172,m0,1)
		AF('f',union A172,m1,1)
		AF('l',union A172,m2,1)
		AF('c',union A172,m3,1)
		AFa(union A172,m4,1,A171)
		dcCloseAggr(a);
	}
	return a;
};
/* {LJCS} */
#pragma pack(push,4)
struct A173 { L m0; J m1; C m2; S m3; };
#pragma pack(pop)
int f_cmpA173(const struct A173 *x, const struct A173 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA173() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A173));
		AF('L',struct A173,m0,1)
		AF('J',struct A173,m1,1)
		AF('C',struct A173,m2,1)
		AF('S',struct A173,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LjpjJj> */
#pragma pack(push,2)
union A174 { L m0; j m1; p m2; j m3; J m4; j m5; };
#pragma pack(pop)
int f_cmpA174(const union A174 *x, const union A174 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA174() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A174));
		AF('L',union A174,m0,1)
		AF('j',union A174,m1,1)
		AF('p',union A174,m2,1)
		AF('j',union A174,m3,1)
		AF('J',union A174,m4,1)
		AF('j',union A174,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JifCfBidlLpC> */
#pragma pack(push,1)
union A175 { J m0; i m1; f m2; C m3; f m4; B m5; i m6; d m7; l m8; L m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA175(const union A175 *x, const union A175 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA175() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A175));
		AF('J',union A175,m0,1)
		AF('i',union A175,m1,1)
		AF('f',union A175,m2,1)
		AF('C',union A175,m3,1)
		AF('f',union A175,m4,1)
		AF('B',union A175,m5,1)
		AF('i',union A175,m6,1)
		AF('d',union A175,m7,1)
		AF('l',union A175,m8,1)
		AF('L',union A175,m9,1)
		AF('p',union A175,m10,1)
		AF('C',union A175,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBILBJfJ[10]Bcli> */
#pragma pack(push,8)
union A176 { i m0; B m1; I m2; L m3; B m4; J m5; f m6; J m7[10]; B m8; c m9; l m10; i m11; };
#pragma pack(pop)
int f_cmpA176(const union A176 *x, const union A176 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA176() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A176));
		AF('i',union A176,m0,1)
		AF('B',union A176,m1,1)
		AF('I',union A176,m2,1)
		AF('L',union A176,m3,1)
		AF('B',union A176,m4,1)
		AF('J',union A176,m5,1)
		AF('f',union A176,m6,1)
		AF('J',union A176,m7,10)
		AF('B',union A176,m8,1)
		AF('c',union A176,m9,1)
		AF('l',union A176,m10,1)
		AF('i',union A176,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C[12]isSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB} */
#pragma pack(push,4)
struct A177 { C m0[12]; i m1; s m2; S m3; p m4; union A175 m5; union A176 m6; j m7; B m8; l m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA177(const struct A177 *x, const struct A177 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA175(&x->m5, &y->m5) && f_cmpA176(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA177() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A177));
		AF('C',struct A177,m0,12)
		AF('i',struct A177,m1,1)
		AF('s',struct A177,m2,1)
		AF('S',struct A177,m3,1)
		AF('p',struct A177,m4,1)
		AFa(struct A177,m5,1,A175)
		AFa(struct A177,m6,1,A176)
		AF('j',struct A177,m7,1)
		AF('B',struct A177,m8,1)
		AF('l',struct A177,m9,1)
		AF('j',struct A177,m10,1)
		AF('B',struct A177,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ff[15]SCLspcCiss> */
#pragma pack(push,1)
union A178 { f m0; f m1[15]; S m2; C m3; L m4; s m5; p m6; c m7; C m8; i m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA178(const union A178 *x, const union A178 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA178() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A178));
		AF('f',union A178,m0,1)
		AF('f',union A178,m1,15)
		AF('S',union A178,m2,1)
		AF('C',union A178,m3,1)
		AF('L',union A178,m4,1)
		AF('s',union A178,m5,1)
		AF('p',union A178,m6,1)
		AF('c',union A178,m7,1)
		AF('C',union A178,m8,1)
		AF('i',union A178,m9,1)
		AF('s',union A178,m10,1)
		AF('s',union A178,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdJBSdIf[16]ijss> */
#pragma pack(push,2)
union A179 { C m0; d m1; J m2; B m3; S m4; d m5; I m6; f m7[16]; i m8; j m9; s m10; s m11; };
#pragma pack(pop)
int f_cmpA179(const union A179 *x, const union A179 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m7[14] == y->m7[14] && x->m7[15] == y->m7[15] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA179() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A179));
		AF('C',union A179,m0,1)
		AF('d',union A179,m1,1)
		AF('J',union A179,m2,1)
		AF('B',union A179,m3,1)
		AF('S',union A179,m4,1)
		AF('d',union A179,m5,1)
		AF('I',union A179,m6,1)
		AF('f',union A179,m7,16)
		AF('i',union A179,m8,1)
		AF('j',union A179,m9,1)
		AF('s',union A179,m10,1)
		AF('s',union A179,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jJdCspdffpfl} */
#pragma pack(push,4)
struct A180 { j m0; J m1; d m2; C m3; s m4; p m5; d m6; f m7; f m8; p m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA180(const struct A180 *x, const struct A180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA180() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A180));
		AF('j',struct A180,m0,1)
		AF('J',struct A180,m1,1)
		AF('d',struct A180,m2,1)
		AF('C',struct A180,m3,1)
		AF('s',struct A180,m4,1)
		AF('p',struct A180,m5,1)
		AF('d',struct A180,m6,1)
		AF('f',struct A180,m7,1)
		AF('f',struct A180,m8,1)
		AF('p',struct A180,m9,1)
		AF('f',struct A180,m10,1)
		AF('l',struct A180,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cf[1]d<ff[15]SCLspcCiss>cJ[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJ> */
#pragma pack(push,1)
union A181 { c m0; f m1[1]; d m2; union A178 m3; c m4; J m5[4]; S m6; C m7; union A179 m8; struct A180 m9; s m10; J m11; };
#pragma pack(pop)
int f_cmpA181(const union A181 *x, const union A181 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && f_cmpA178(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA179(&x->m8, &y->m8) && f_cmpA180(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA181() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A181));
		AF('c',union A181,m0,1)
		AF('f',union A181,m1,1)
		AF('d',union A181,m2,1)
		AFa(union A181,m3,1,A178)
		AF('c',union A181,m4,1)
		AF('J',union A181,m5,4)
		AF('S',union A181,m6,1)
		AF('C',union A181,m7,1)
		AFa(union A181,m8,1,A179)
		AFa(union A181,m9,1,A180)
		AF('s',union A181,m10,1)
		AF('J',union A181,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C<LjpjJj>If[7]pS{C[12]isSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}l<cf[1]d<ff[15]SCLspcCiss>cJ[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJ>fcf> */
#pragma pack(push,4)
union A182 { C m0; union A174 m1; I m2; f m3[7]; p m4; S m5; struct A177 m6; l m7; union A181 m8; f m9; c m10; f m11; };
#pragma pack(pop)
int f_cmpA182(const union A182 *x, const union A182 *y) { return x->m0 == y->m0 && f_cmpA174(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA177(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA181(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA182() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A182));
		AF('C',union A182,m0,1)
		AFa(union A182,m1,1,A174)
		AF('I',union A182,m2,1)
		AF('f',union A182,m3,7)
		AF('p',union A182,m4,1)
		AF('S',union A182,m5,1)
		AFa(union A182,m6,1,A177)
		AF('l',union A182,m7,1)
		AFa(union A182,m8,1,A181)
		AF('f',union A182,m9,1)
		AF('c',union A182,m10,1)
		AF('f',union A182,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jppI} */
#pragma pack(push,2)
struct A183 { j m0; p m1; p m2; I m3; };
#pragma pack(pop)
int f_cmpA183(const struct A183 *x, const struct A183 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA183() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A183));
		AF('j',struct A183,m0,1)
		AF('p',struct A183,m1,1)
		AF('p',struct A183,m2,1)
		AF('I',struct A183,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pLJ{jppI}> */
#pragma pack(push,4)
union A184 { p m0; L m1; J m2; struct A183 m3; };
#pragma pack(pop)
int f_cmpA184(const union A184 *x, const union A184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA183(&x->m3, &y->m3); };
DCaggr* f_touchA184() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A184));
		AF('p',union A184,m0,1)
		AF('L',union A184,m1,1)
		AF('J',union A184,m2,1)
		AFa(union A184,m3,1,A183)
		dcCloseAggr(a);
	}
	return a;
};
/* {CfIsICLpicLI} */
#pragma pack(push,1)
struct A185 { C m0; f m1; I m2; s m3; I m4; C m5; L m6; p m7; i m8; c m9; L m10; I m11; };
#pragma pack(pop)
int f_cmpA185(const struct A185 *x, const struct A185 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA185() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A185));
		AF('C',struct A185,m0,1)
		AF('f',struct A185,m1,1)
		AF('I',struct A185,m2,1)
		AF('s',struct A185,m3,1)
		AF('I',struct A185,m4,1)
		AF('C',struct A185,m5,1)
		AF('L',struct A185,m6,1)
		AF('p',struct A185,m7,1)
		AF('i',struct A185,m8,1)
		AF('c',struct A185,m9,1)
		AF('L',struct A185,m10,1)
		AF('I',struct A185,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BfISp> */
#pragma pack(push,2)
union A186 { B m0; f m1; I m2; S m3; p m4; };
#pragma pack(pop)
int f_cmpA186(const union A186 *x, const union A186 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA186() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A186));
		AF('B',union A186,m0,1)
		AF('f',union A186,m1,1)
		AF('I',union A186,m2,1)
		AF('S',union A186,m3,1)
		AF('p',union A186,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lBICc} */
#pragma pack(push,1)
struct A187 { l m0; B m1; I m2; C m3; c m4; };
#pragma pack(pop)
int f_cmpA187(const struct A187 *x, const struct A187 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA187() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A187));
		AF('l',struct A187,m0,1)
		AF('B',struct A187,m1,1)
		AF('I',struct A187,m2,1)
		AF('C',struct A187,m3,1)
		AF('c',struct A187,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BdLCsB} */
#pragma pack(push,2)
struct A188 { B m0; d m1; L m2; C m3; s m4; B m5; };
#pragma pack(pop)
int f_cmpA188(const struct A188 *x, const struct A188 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA188() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A188));
		AF('B',struct A188,m0,1)
		AF('d',struct A188,m1,1)
		AF('L',struct A188,m2,1)
		AF('C',struct A188,m3,1)
		AF('s',struct A188,m4,1)
		AF('B',struct A188,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i> */
#pragma pack(push,2)
union A189 { i m0; };
#pragma pack(pop)
int f_cmpA189(const union A189 *x, const union A189 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA189() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A189));
		AF('i',union A189,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CLs> */
#pragma pack(push,4)
union A190 { C m0; L m1; s m2; };
#pragma pack(pop)
int f_cmpA190(const union A190 *x, const union A190 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA190() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A190));
		AF('C',union A190,m0,1)
		AF('L',union A190,m1,1)
		AF('s',union A190,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JspLpIp> */
#pragma pack(push,4)
union A191 { J m0; s m1; p m2; L m3; p m4; I m5; p m6; };
#pragma pack(pop)
int f_cmpA191(const union A191 *x, const union A191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA191() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A191));
		AF('J',union A191,m0,1)
		AF('s',union A191,m1,1)
		AF('p',union A191,m2,1)
		AF('L',union A191,m3,1)
		AF('p',union A191,m4,1)
		AF('I',union A191,m5,1)
		AF('p',union A191,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jf<CLs>iBB<JspLpIp>JIB> */
#pragma pack(push,2)
union A192 { j m0; f m1; union A190 m2; i m3; B m4; B m5; union A191 m6; J m7; I m8; B m9; };
#pragma pack(pop)
int f_cmpA192(const union A192 *x, const union A192 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA190(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA191(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA192() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A192));
		AF('j',union A192,m0,1)
		AF('f',union A192,m1,1)
		AFa(union A192,m2,1,A190)
		AF('i',union A192,m3,1)
		AF('B',union A192,m4,1)
		AF('B',union A192,m5,1)
		AFa(union A192,m6,1,A191)
		AF('J',union A192,m7,1)
		AF('I',union A192,m8,1)
		AF('B',union A192,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BpSisiiBscfI> */
#pragma pack(push,4)
union A193 { B m0; p m1; S m2; i m3; s m4; i m5; i m6; B m7; s m8; c m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA193(const union A193 *x, const union A193 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA193() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A193));
		AF('B',union A193,m0,1)
		AF('p',union A193,m1,1)
		AF('S',union A193,m2,1)
		AF('i',union A193,m3,1)
		AF('s',union A193,m4,1)
		AF('i',union A193,m5,1)
		AF('i',union A193,m6,1)
		AF('B',union A193,m7,1)
		AF('s',union A193,m8,1)
		AF('c',union A193,m9,1)
		AF('f',union A193,m10,1)
		AF('I',union A193,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iS<BpSisiiBscfI>JSIBIJSjB> */
#pragma pack(push,2)
union A194 { i m0; S m1; union A193 m2; J m3; S m4; I m5; B m6; I m7; J m8; S m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA194(const union A194 *x, const union A194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA193(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA194() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A194));
		AF('i',union A194,m0,1)
		AF('S',union A194,m1,1)
		AFa(union A194,m2,1,A193)
		AF('J',union A194,m3,1)
		AF('S',union A194,m4,1)
		AF('I',union A194,m5,1)
		AF('B',union A194,m6,1)
		AF('I',union A194,m7,1)
		AF('J',union A194,m8,1)
		AF('S',union A194,m9,1)
		AF('j',union A194,m10,1)
		AF('B',union A194,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf> */
#pragma pack(push,4)
union A195 { c m0; s m1; B m2; union A189 m3; union A192 m4; I m5; union A194 m6; j m7; S m8; l m9; s m10; f m11; };
#pragma pack(pop)
int f_cmpA195(const union A195 *x, const union A195 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA189(&x->m3, &y->m3) && f_cmpA192(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA194(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA195() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A195));
		AF('c',union A195,m0,1)
		AF('s',union A195,m1,1)
		AF('B',union A195,m2,1)
		AFa(union A195,m3,1,A189)
		AFa(union A195,m4,1,A192)
		AF('I',union A195,m5,1)
		AFa(union A195,m6,1,A194)
		AF('j',union A195,m7,1)
		AF('S',union A195,m8,1)
		AF('l',union A195,m9,1)
		AF('s',union A195,m10,1)
		AF('f',union A195,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pfifSilBCsBi> */
#pragma pack(push,2)
union A196 { p m0; f m1; i m2; f m3; S m4; i m5; l m6; B m7; C m8; s m9; B m10; i m11; };
#pragma pack(pop)
int f_cmpA196(const union A196 *x, const union A196 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA196() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A196));
		AF('p',union A196,m0,1)
		AF('f',union A196,m1,1)
		AF('i',union A196,m2,1)
		AF('f',union A196,m3,1)
		AF('S',union A196,m4,1)
		AF('i',union A196,m5,1)
		AF('l',union A196,m6,1)
		AF('B',union A196,m7,1)
		AF('C',union A196,m8,1)
		AF('s',union A196,m9,1)
		AF('B',union A196,m10,1)
		AF('i',union A196,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bpii> */
#pragma pack(push,4)
union A197 { B m0; p m1; i m2; i m3; };
#pragma pack(pop)
int f_cmpA197(const union A197 *x, const union A197 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA197() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A197));
		AF('B',union A197,m0,1)
		AF('p',union A197,m1,1)
		AF('i',union A197,m2,1)
		AF('i',union A197,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pdIJLj} */
#pragma pack(push,2)
struct A198 { p m0; d m1; I m2; J m3; L m4; j m5; };
#pragma pack(pop)
int f_cmpA198(const struct A198 *x, const struct A198 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA198() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A198));
		AF('p',struct A198,m0,1)
		AF('d',struct A198,m1,1)
		AF('I',struct A198,m2,1)
		AF('J',struct A198,m3,1)
		AF('L',struct A198,m4,1)
		AF('j',struct A198,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLC[12]CsJSi{pdIJLj}Ifs> */
#pragma pack(push,4)
union A199 { J m0; L m1; C m2[12]; C m3; s m4; J m5; S m6; i m7; struct A198 m8; I m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA199(const union A199 *x, const union A199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA198(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA199() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A199));
		AF('J',union A199,m0,1)
		AF('L',union A199,m1,1)
		AF('C',union A199,m2,12)
		AF('C',union A199,m3,1)
		AF('s',union A199,m4,1)
		AF('J',union A199,m5,1)
		AF('S',union A199,m6,1)
		AF('i',union A199,m7,1)
		AFa(union A199,m8,1,A198)
		AF('I',union A199,m9,1)
		AF('f',union A199,m10,1)
		AF('s',union A199,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCC<JLC[12]CsJSi{pdIJLj}Ifs>JJ> */
#pragma pack(push,4)
union A200 { J m0; C m1; C m2; union A199 m3; J m4; J m5; };
#pragma pack(pop)
int f_cmpA200(const union A200 *x, const union A200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA199(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA200() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A200));
		AF('J',union A200,m0,1)
		AF('C',union A200,m1,1)
		AF('C',union A200,m2,1)
		AFa(union A200,m3,1,A199)
		AF('J',union A200,m4,1)
		AF('J',union A200,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lldfS> */
#pragma pack(push,2)
union A201 { l m0; l m1; d m2; f m3; S m4; };
#pragma pack(pop)
int f_cmpA201(const union A201 *x, const union A201 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA201() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A201));
		AF('l',union A201,m0,1)
		AF('l',union A201,m1,1)
		AF('d',union A201,m2,1)
		AF('f',union A201,m3,1)
		AF('S',union A201,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {siJjBLiSIIj<lldfS>} */
#pragma pack(push,2)
struct A202 { s m0; i m1; J m2; j m3; B m4; L m5; i m6; S m7; I m8; I m9; j m10; union A201 m11; };
#pragma pack(pop)
int f_cmpA202(const struct A202 *x, const struct A202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA201(&x->m11, &y->m11); };
DCaggr* f_touchA202() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A202));
		AF('s',struct A202,m0,1)
		AF('i',struct A202,m1,1)
		AF('J',struct A202,m2,1)
		AF('j',struct A202,m3,1)
		AF('B',struct A202,m4,1)
		AF('L',struct A202,m5,1)
		AF('i',struct A202,m6,1)
		AF('S',struct A202,m7,1)
		AF('I',struct A202,m8,1)
		AF('I',struct A202,m9,1)
		AF('j',struct A202,m10,1)
		AFa(struct A202,m11,1,A201)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdscdfBSLpj} */
#pragma pack(push,2)
struct A203 { j m0; d m1; s m2; c m3; d m4; f m5; B m6; S m7; L m8; p m9; j m10; };
#pragma pack(pop)
int f_cmpA203(const struct A203 *x, const struct A203 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA203() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A203));
		AF('j',struct A203,m0,1)
		AF('d',struct A203,m1,1)
		AF('s',struct A203,m2,1)
		AF('c',struct A203,m3,1)
		AF('d',struct A203,m4,1)
		AF('f',struct A203,m5,1)
		AF('B',struct A203,m6,1)
		AF('S',struct A203,m7,1)
		AF('L',struct A203,m8,1)
		AF('p',struct A203,m9,1)
		AF('j',struct A203,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BJLCIlBCJlIj> */
#pragma pack(push,8)
union A204 { B m0; J m1; L m2; C m3; I m4; l m5; B m6; C m7; J m8; l m9; I m10; j m11; };
#pragma pack(pop)
int f_cmpA204(const union A204 *x, const union A204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA204() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A204));
		AF('B',union A204,m0,1)
		AF('J',union A204,m1,1)
		AF('L',union A204,m2,1)
		AF('C',union A204,m3,1)
		AF('I',union A204,m4,1)
		AF('l',union A204,m5,1)
		AF('B',union A204,m6,1)
		AF('C',union A204,m7,1)
		AF('J',union A204,m8,1)
		AF('l',union A204,m9,1)
		AF('I',union A204,m10,1)
		AF('j',union A204,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CBlj} */
#pragma pack(push,2)
struct A205 { C m0; B m1; l m2; j m3; };
#pragma pack(pop)
int f_cmpA205(const struct A205 *x, const struct A205 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA205() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A205));
		AF('C',struct A205,m0,1)
		AF('B',struct A205,m1,1)
		AF('l',struct A205,m2,1)
		AF('j',struct A205,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I<BJLCIlBCJlIj>{CBlj}JBjs> */
#pragma pack(push,2)
union A206 { I m0; union A204 m1; struct A205 m2; J m3; B m4; j m5; s m6; };
#pragma pack(pop)
int f_cmpA206(const union A206 *x, const union A206 *y) { return x->m0 == y->m0 && f_cmpA204(&x->m1, &y->m1) && f_cmpA205(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA206() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A206));
		AF('I',union A206,m0,1)
		AFa(union A206,m1,1,A204)
		AFa(union A206,m2,1,A205)
		AF('J',union A206,m3,1)
		AF('B',union A206,m4,1)
		AF('j',union A206,m5,1)
		AF('s',union A206,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIBllLL<I<BJLCIlBCJlIj>{CBlj}JBjs>> */
#pragma pack(push,8)
union A207 { l m0; I m1; B m2; l m3; l m4; L m5; L m6; union A206 m7; };
#pragma pack(pop)
int f_cmpA207(const union A207 *x, const union A207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA206(&x->m7, &y->m7); };
DCaggr* f_touchA207() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A207));
		AF('l',union A207,m0,1)
		AF('I',union A207,m1,1)
		AF('B',union A207,m2,1)
		AF('l',union A207,m3,1)
		AF('l',union A207,m4,1)
		AF('L',union A207,m5,1)
		AF('L',union A207,m6,1)
		AFa(union A207,m7,1,A206)
		dcCloseAggr(a);
	}
	return a;
};
/* {dIJpCsSJ} */
#pragma pack(push,4)
struct A208 { d m0; I m1; J m2; p m3; C m4; s m5; S m6; J m7; };
#pragma pack(pop)
int f_cmpA208(const struct A208 *x, const struct A208 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA208() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A208));
		AF('d',struct A208,m0,1)
		AF('I',struct A208,m1,1)
		AF('J',struct A208,m2,1)
		AF('p',struct A208,m3,1)
		AF('C',struct A208,m4,1)
		AF('s',struct A208,m5,1)
		AF('S',struct A208,m6,1)
		AF('J',struct A208,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sfsdBJdBliLf> */
#pragma pack(push,2)
union A209 { s m0; f m1; s m2; d m3; B m4; J m5; d m6; B m7; l m8; i m9; L m10; f m11; };
#pragma pack(pop)
int f_cmpA209(const union A209 *x, const union A209 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA209() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A209));
		AF('s',union A209,m0,1)
		AF('f',union A209,m1,1)
		AF('s',union A209,m2,1)
		AF('d',union A209,m3,1)
		AF('B',union A209,m4,1)
		AF('J',union A209,m5,1)
		AF('d',union A209,m6,1)
		AF('B',union A209,m7,1)
		AF('l',union A209,m8,1)
		AF('i',union A209,m9,1)
		AF('L',union A209,m10,1)
		AF('f',union A209,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jjjCljidi<sfsdBJdBliLf>} */
#pragma pack(push,1)
struct A210 { j m0; j m1; j m2; C m3; l m4; j m5; i m6; d m7; i m8; union A209 m9; };
#pragma pack(pop)
int f_cmpA210(const struct A210 *x, const struct A210 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA209(&x->m9, &y->m9); };
DCaggr* f_touchA210() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A210));
		AF('j',struct A210,m0,1)
		AF('j',struct A210,m1,1)
		AF('j',struct A210,m2,1)
		AF('C',struct A210,m3,1)
		AF('l',struct A210,m4,1)
		AF('j',struct A210,m5,1)
		AF('i',struct A210,m6,1)
		AF('d',struct A210,m7,1)
		AF('i',struct A210,m8,1)
		AFa(struct A210,m9,1,A209)
		dcCloseAggr(a);
	}
	return a;
};
/* {dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI} */
#pragma pack(push,2)
struct A211 { d m0; l m1; l m2; L m3; s m4; struct A210 m5; S m6; L m7; L m8[15]; f m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA211(const struct A211 *x, const struct A211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA210(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA211() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A211));
		AF('d',struct A211,m0,1)
		AF('l',struct A211,m1,1)
		AF('l',struct A211,m2,1)
		AF('L',struct A211,m3,1)
		AF('s',struct A211,m4,1)
		AFa(struct A211,m5,1,A210)
		AF('S',struct A211,m6,1)
		AF('L',struct A211,m7,1)
		AF('L',struct A211,m8,15)
		AF('f',struct A211,m9,1)
		AF('i',struct A211,m10,1)
		AF('I',struct A211,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IffIppICjJiC> */
#pragma pack(push,2)
union A212 { I m0; f m1; f m2; I m3; p m4; p m5; I m6; C m7; j m8; J m9; i m10; C m11; };
#pragma pack(pop)
int f_cmpA212(const union A212 *x, const union A212 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA212() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A212));
		AF('I',union A212,m0,1)
		AF('f',union A212,m1,1)
		AF('f',union A212,m2,1)
		AF('I',union A212,m3,1)
		AF('p',union A212,m4,1)
		AF('p',union A212,m5,1)
		AF('I',union A212,m6,1)
		AF('C',union A212,m7,1)
		AF('j',union A212,m8,1)
		AF('J',union A212,m9,1)
		AF('i',union A212,m10,1)
		AF('C',union A212,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bls} */
#pragma pack(push,4)
struct A213 { B m0; l m1; s m2; };
#pragma pack(pop)
int f_cmpA213(const struct A213 *x, const struct A213 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA213() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A213));
		AF('B',struct A213,m0,1)
		AF('l',struct A213,m1,1)
		AF('s',struct A213,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LJLdd{Bls}BdiJsi> */
#pragma pack(push,4)
union A214 { L m0; J m1; L m2; d m3; d m4; struct A213 m5; B m6; d m7; i m8; J m9; s m10; i m11; };
#pragma pack(pop)
int f_cmpA214(const union A214 *x, const union A214 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA213(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA214() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A214));
		AF('L',union A214,m0,1)
		AF('J',union A214,m1,1)
		AF('L',union A214,m2,1)
		AF('d',union A214,m3,1)
		AF('d',union A214,m4,1)
		AFa(union A214,m5,1,A213)
		AF('B',union A214,m6,1)
		AF('d',union A214,m7,1)
		AF('i',union A214,m8,1)
		AF('J',union A214,m9,1)
		AF('s',union A214,m10,1)
		AF('i',union A214,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {idfCfSSCILjC} */
#pragma pack(push,4)
struct A215 { i m0; d m1; f m2; C m3; f m4; S m5; S m6; C m7; I m8; L m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA215(const struct A215 *x, const struct A215 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA215() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A215));
		AF('i',struct A215,m0,1)
		AF('d',struct A215,m1,1)
		AF('f',struct A215,m2,1)
		AF('C',struct A215,m3,1)
		AF('f',struct A215,m4,1)
		AF('S',struct A215,m5,1)
		AF('S',struct A215,m6,1)
		AF('C',struct A215,m7,1)
		AF('I',struct A215,m8,1)
		AF('L',struct A215,m9,1)
		AF('j',struct A215,m10,1)
		AF('C',struct A215,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sf} */
#pragma pack(push,4)
struct A216 { s m0; f m1; };
#pragma pack(pop)
int f_cmpA216(const struct A216 *x, const struct A216 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA216() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A216));
		AF('s',struct A216,m0,1)
		AF('f',struct A216,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SdIIpBSlIISB} */
#pragma pack(push,8)
struct A217 { S m0; d m1; I m2; I m3; p m4; B m5; S m6; l m7; I m8; I m9; S m10; B m11; };
#pragma pack(pop)
int f_cmpA217(const struct A217 *x, const struct A217 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA217() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A217));
		AF('S',struct A217,m0,1)
		AF('d',struct A217,m1,1)
		AF('I',struct A217,m2,1)
		AF('I',struct A217,m3,1)
		AF('p',struct A217,m4,1)
		AF('B',struct A217,m5,1)
		AF('S',struct A217,m6,1)
		AF('l',struct A217,m7,1)
		AF('I',struct A217,m8,1)
		AF('I',struct A217,m9,1)
		AF('S',struct A217,m10,1)
		AF('B',struct A217,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLsJLSfJ[14]lj} */
#pragma pack(push,4)
struct A218 { J m0; L m1; s m2; J m3; L m4; S m5; f m6; J m7[14]; l m8; j m9; };
#pragma pack(pop)
int f_cmpA218(const struct A218 *x, const struct A218 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA218() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A218));
		AF('J',struct A218,m0,1)
		AF('L',struct A218,m1,1)
		AF('s',struct A218,m2,1)
		AF('J',struct A218,m3,1)
		AF('L',struct A218,m4,1)
		AF('S',struct A218,m5,1)
		AF('f',struct A218,m6,1)
		AF('J',struct A218,m7,14)
		AF('l',struct A218,m8,1)
		AF('j',struct A218,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl} */
#pragma pack(push,4)
struct A219 { struct A217 m0; struct A218 m1; L m2; J m3; l m4; };
#pragma pack(pop)
int f_cmpA219(const struct A219 *x, const struct A219 *y) { return f_cmpA217(&x->m0, &y->m0) && f_cmpA218(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA219() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A219));
		AFa(struct A219,m0,1,A217)
		AFa(struct A219,m1,1,A218)
		AF('L',struct A219,m2,1)
		AF('J',struct A219,m3,1)
		AF('l',struct A219,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CBLlfScjLpLJ> */
#pragma pack(push,2)
union A220 { C m0; B m1; L m2; l m3; f m4; S m5; c m6; j m7; L m8; p m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA220(const union A220 *x, const union A220 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA220() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A220));
		AF('C',union A220,m0,1)
		AF('B',union A220,m1,1)
		AF('L',union A220,m2,1)
		AF('l',union A220,m3,1)
		AF('f',union A220,m4,1)
		AF('S',union A220,m5,1)
		AF('c',union A220,m6,1)
		AF('j',union A220,m7,1)
		AF('L',union A220,m8,1)
		AF('p',union A220,m9,1)
		AF('L',union A220,m10,1)
		AF('J',union A220,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCsciCp} */
#pragma pack(push,4)
struct A221 { S m0; C m1; s m2; c m3; i m4; C m5; p m6; };
#pragma pack(pop)
int f_cmpA221(const struct A221 *x, const struct A221 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA221() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A221));
		AF('S',struct A221,m0,1)
		AF('C',struct A221,m1,1)
		AF('s',struct A221,m2,1)
		AF('c',struct A221,m3,1)
		AF('i',struct A221,m4,1)
		AF('C',struct A221,m5,1)
		AF('p',struct A221,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S<CBLlfScjLpLJ>I{SCsciCp}Cf> */
#pragma pack(push,4)
union A222 { S m0; union A220 m1; I m2; struct A221 m3; C m4; f m5; };
#pragma pack(pop)
int f_cmpA222(const union A222 *x, const union A222 *y) { return x->m0 == y->m0 && f_cmpA220(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA221(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA222() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A222));
		AF('S',union A222,m0,1)
		AFa(union A222,m1,1,A220)
		AF('I',union A222,m2,1)
		AFa(union A222,m3,1,A221)
		AF('C',union A222,m4,1)
		AF('f',union A222,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <slIlpIppcCfc> */
#pragma pack(push,4)
union A223 { s m0; l m1; I m2; l m3; p m4; I m5; p m6; p m7; c m8; C m9; f m10; c m11; };
#pragma pack(pop)
int f_cmpA223(const union A223 *x, const union A223 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA223() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A223));
		AF('s',union A223,m0,1)
		AF('l',union A223,m1,1)
		AF('I',union A223,m2,1)
		AF('l',union A223,m3,1)
		AF('p',union A223,m4,1)
		AF('I',union A223,m5,1)
		AF('p',union A223,m6,1)
		AF('p',union A223,m7,1)
		AF('c',union A223,m8,1)
		AF('C',union A223,m9,1)
		AF('f',union A223,m10,1)
		AF('c',union A223,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {S<slIlpIppcCfc>C} */
#pragma pack(push,2)
struct A224 { S m0; union A223 m1; C m2; };
#pragma pack(pop)
int f_cmpA224(const struct A224 *x, const struct A224 *y) { return x->m0 == y->m0 && f_cmpA223(&x->m1, &y->m1) && x->m2 == y->m2; };
DCaggr* f_touchA224() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A224));
		AF('S',struct A224,m0,1)
		AFa(struct A224,m1,1,A223)
		AF('C',struct A224,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cS> */
#pragma pack(push,4)
union A225 { c m0; S m1; };
#pragma pack(pop)
int f_cmpA225(const union A225 *x, const union A225 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA225() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A225));
		AF('c',union A225,m0,1)
		AF('S',union A225,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>} */
#pragma pack(push,2)
struct A226 { struct A219 m0; union A222 m1; c m2; j m3; c m4; s m5; L m6; j m7; struct A224 m8; J m9; union A225 m10; };
#pragma pack(pop)
int f_cmpA226(const struct A226 *x, const struct A226 *y) { return f_cmpA219(&x->m0, &y->m0) && f_cmpA222(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA224(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA225(&x->m10, &y->m10); };
DCaggr* f_touchA226() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A226));
		AFa(struct A226,m0,1,A219)
		AFa(struct A226,m1,1,A222)
		AF('c',struct A226,m2,1)
		AF('j',struct A226,m3,1)
		AF('c',struct A226,m4,1)
		AF('s',struct A226,m5,1)
		AF('L',struct A226,m6,1)
		AF('j',struct A226,m7,1)
		AFa(struct A226,m8,1,A224)
		AF('J',struct A226,m9,1)
		AFa(struct A226,m10,1,A225)
		dcCloseAggr(a);
	}
	return a;
};
/* <BIpcssdfJSc> */
#pragma pack(push,4)
union A227 { B m0; I m1; p m2; c m3; s m4; s m5; d m6; f m7; J m8; S m9; c m10; };
#pragma pack(pop)
int f_cmpA227(const union A227 *x, const union A227 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA227() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A227));
		AF('B',union A227,m0,1)
		AF('I',union A227,m1,1)
		AF('p',union A227,m2,1)
		AF('c',union A227,m3,1)
		AF('s',union A227,m4,1)
		AF('s',union A227,m5,1)
		AF('d',union A227,m6,1)
		AF('f',union A227,m7,1)
		AF('J',union A227,m8,1)
		AF('S',union A227,m9,1)
		AF('c',union A227,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdSffIssSpCL> */
#pragma pack(push,4)
union A228 { s m0; d m1; S m2; f m3; f m4; I m5; s m6; s m7; S m8; p m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA228(const union A228 *x, const union A228 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA228() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A228));
		AF('s',union A228,m0,1)
		AF('d',union A228,m1,1)
		AF('S',union A228,m2,1)
		AF('f',union A228,m3,1)
		AF('f',union A228,m4,1)
		AF('I',union A228,m5,1)
		AF('s',union A228,m6,1)
		AF('s',union A228,m7,1)
		AF('S',union A228,m8,1)
		AF('p',union A228,m9,1)
		AF('C',union A228,m10,1)
		AF('L',union A228,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B} */
#pragma pack(push,4)
struct A229 { B m0; };
#pragma pack(pop)
int f_cmpA229(const struct A229 *x, const struct A229 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA229() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A229));
		AF('B',struct A229,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p} */
#pragma pack(push,2)
struct A230 { p m0; };
#pragma pack(pop)
int f_cmpA230(const struct A230 *x, const struct A230 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA230() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A230));
		AF('p',struct A230,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdsSssfBd> */
#pragma pack(push,2)
union A231 { s m0; d m1; s m2; S m3; s m4; s m5; f m6; B m7; d m8; };
#pragma pack(pop)
int f_cmpA231(const union A231 *x, const union A231 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA231() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A231));
		AF('s',union A231,m0,1)
		AF('d',union A231,m1,1)
		AF('s',union A231,m2,1)
		AF('S',union A231,m3,1)
		AF('s',union A231,m4,1)
		AF('s',union A231,m5,1)
		AF('f',union A231,m6,1)
		AF('B',union A231,m7,1)
		AF('d',union A231,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSid{p}<sdsSssfBd>[13]} */
#pragma pack(push,8)
struct A232 { c m0; S m1; i m2; d m3; struct A230 m4; union A231 m5[13]; };
#pragma pack(pop)
int f_cmpA232(const struct A232 *x, const struct A232 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA230(&x->m4, &y->m4) && f_cmpA231(&x->m5[0], &y->m5[0]) && f_cmpA231(&x->m5[1], &y->m5[1]) && f_cmpA231(&x->m5[2], &y->m5[2]) && f_cmpA231(&x->m5[3], &y->m5[3]) && f_cmpA231(&x->m5[4], &y->m5[4]) && f_cmpA231(&x->m5[5], &y->m5[5]) && f_cmpA231(&x->m5[6], &y->m5[6]) && f_cmpA231(&x->m5[7], &y->m5[7]) && f_cmpA231(&x->m5[8], &y->m5[8]) && f_cmpA231(&x->m5[9], &y->m5[9]) && f_cmpA231(&x->m5[10], &y->m5[10]) && f_cmpA231(&x->m5[11], &y->m5[11]) && f_cmpA231(&x->m5[12], &y->m5[12]); };
DCaggr* f_touchA232() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A232));
		AF('c',struct A232,m0,1)
		AF('S',struct A232,m1,1)
		AF('i',struct A232,m2,1)
		AF('d',struct A232,m3,1)
		AFa(struct A232,m4,1,A230)
		AFa(struct A232,m5,13,A231)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ifd{cSid{p}<sdsSssfBd>[13]}LI} */
#pragma pack(push,4)
struct A233 { I m0; f m1; d m2; struct A232 m3; L m4; I m5; };
#pragma pack(pop)
int f_cmpA233(const struct A233 *x, const struct A233 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA232(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA233() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A233));
		AF('I',struct A233,m0,1)
		AF('f',struct A233,m1,1)
		AF('d',struct A233,m2,1)
		AFa(struct A233,m3,1,A232)
		AF('L',struct A233,m4,1)
		AF('I',struct A233,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBBfLBd} */
#pragma pack(push,4)
struct A234 { s m0; B m1; B m2; f m3; L m4; B m5; d m6; };
#pragma pack(pop)
int f_cmpA234(const struct A234 *x, const struct A234 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA234() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A234));
		AF('s',struct A234,m0,1)
		AF('B',struct A234,m1,1)
		AF('B',struct A234,m2,1)
		AF('f',struct A234,m3,1)
		AF('L',struct A234,m4,1)
		AF('B',struct A234,m5,1)
		AF('d',struct A234,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LBsSBpLSIcLf} */
#pragma pack(push,4)
struct A235 { L m0; B m1; s m2; S m3; B m4; p m5; L m6; S m7; I m8; c m9; L m10; f m11; };
#pragma pack(pop)
int f_cmpA235(const struct A235 *x, const struct A235 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA235() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A235));
		AF('L',struct A235,m0,1)
		AF('B',struct A235,m1,1)
		AF('s',struct A235,m2,1)
		AF('S',struct A235,m3,1)
		AF('B',struct A235,m4,1)
		AF('p',struct A235,m5,1)
		AF('L',struct A235,m6,1)
		AF('S',struct A235,m7,1)
		AF('I',struct A235,m8,1)
		AF('c',struct A235,m9,1)
		AF('L',struct A235,m10,1)
		AF('f',struct A235,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSsL[8]ji{}csfCL> */
#pragma pack(push,4)
union A236 { l m0; S m1; s m2; L m3[8]; j m4; i m5; struct A24 m6; c m7; s m8; f m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA236(const union A236 *x, const union A236 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA24(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA236() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A236));
		AF('l',union A236,m0,1)
		AF('S',union A236,m1,1)
		AF('s',union A236,m2,1)
		AF('L',union A236,m3,8)
		AF('j',union A236,m4,1)
		AF('i',union A236,m5,1)
		AFa(union A236,m6,1,A24)
		AF('c',union A236,m7,1)
		AF('s',union A236,m8,1)
		AF('f',union A236,m9,1)
		AF('C',union A236,m10,1)
		AF('L',union A236,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SccdLsfidCfI> */
#pragma pack(push,4)
union A237 { S m0; c m1; c m2; d m3; L m4; s m5; f m6; i m7; d m8; C m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA237(const union A237 *x, const union A237 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA237() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A237));
		AF('S',union A237,m0,1)
		AF('c',union A237,m1,1)
		AF('c',union A237,m2,1)
		AF('d',union A237,m3,1)
		AF('L',union A237,m4,1)
		AF('s',union A237,m5,1)
		AF('f',union A237,m6,1)
		AF('i',union A237,m7,1)
		AF('d',union A237,m8,1)
		AF('C',union A237,m9,1)
		AF('f',union A237,m10,1)
		AF('I',union A237,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JCCSiBj} */
#pragma pack(push,4)
struct A238 { J m0; C m1; C m2; S m3; i m4; B m5; j m6; };
#pragma pack(pop)
int f_cmpA238(const struct A238 *x, const struct A238 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA238() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A238));
		AF('J',struct A238,m0,1)
		AF('C',struct A238,m1,1)
		AF('C',struct A238,m2,1)
		AF('S',struct A238,m3,1)
		AF('i',struct A238,m4,1)
		AF('B',struct A238,m5,1)
		AF('j',struct A238,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i<lSsL[8]ji{}csfCL>cSJSis<SccdLsfidCfI>{JCCSiBj}cf} */
#pragma pack(push,4)
struct A239 { i m0; union A236 m1; c m2; S m3; J m4; S m5; i m6; s m7; union A237 m8; struct A238 m9; c m10; f m11; };
#pragma pack(pop)
int f_cmpA239(const struct A239 *x, const struct A239 *y) { return x->m0 == y->m0 && f_cmpA236(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA237(&x->m8, &y->m8) && f_cmpA238(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA239() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A239));
		AF('i',struct A239,m0,1)
		AFa(struct A239,m1,1,A236)
		AF('c',struct A239,m2,1)
		AF('S',struct A239,m3,1)
		AF('J',struct A239,m4,1)
		AF('S',struct A239,m5,1)
		AF('i',struct A239,m6,1)
		AF('s',struct A239,m7,1)
		AFa(struct A239,m8,1,A237)
		AFa(struct A239,m9,1,A238)
		AF('c',struct A239,m10,1)
		AF('f',struct A239,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SSlBdLfcBfJs> */
#pragma pack(push,4)
union A240 { S m0; S m1; l m2; B m3; d m4; L m5; f m6; c m7; B m8; f m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA240(const union A240 *x, const union A240 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA240() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A240));
		AF('S',union A240,m0,1)
		AF('S',union A240,m1,1)
		AF('l',union A240,m2,1)
		AF('B',union A240,m3,1)
		AF('d',union A240,m4,1)
		AF('L',union A240,m5,1)
		AF('f',union A240,m6,1)
		AF('c',union A240,m7,1)
		AF('B',union A240,m8,1)
		AF('f',union A240,m9,1)
		AF('J',union A240,m10,1)
		AF('s',union A240,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jifBl[7]s} */
#pragma pack(push,4)
struct A241 { j m0; i m1; f m2; B m3; l m4[7]; s m5; };
#pragma pack(pop)
int f_cmpA241(const struct A241 *x, const struct A241 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m5 == y->m5; };
DCaggr* f_touchA241() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A241));
		AF('j',struct A241,m0,1)
		AF('i',struct A241,m1,1)
		AF('f',struct A241,m2,1)
		AF('B',struct A241,m3,1)
		AF('l',struct A241,m4,7)
		AF('s',struct A241,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdisdi> */
#pragma pack(push,4)
union A242 { p m0; d m1; i m2; s m3; d m4; i m5; };
#pragma pack(pop)
int f_cmpA242(const union A242 *x, const union A242 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA242() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A242));
		AF('p',union A242,m0,1)
		AF('d',union A242,m1,1)
		AF('i',union A242,m2,1)
		AF('s',union A242,m3,1)
		AF('d',union A242,m4,1)
		AF('i',union A242,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pI<pdisdi>S} */
#pragma pack(push,1)
struct A243 { p m0; I m1; union A242 m2; S m3; };
#pragma pack(pop)
int f_cmpA243(const struct A243 *x, const struct A243 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA242(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA243() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A243));
		AF('p',struct A243,m0,1)
		AF('I',struct A243,m1,1)
		AFa(struct A243,m2,1,A242)
		AF('S',struct A243,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJLpCdj[7]> */
#pragma pack(push,2)
union A244 { C m0; J m1; L m2; p m3; C m4; d m5; j m6[7]; };
#pragma pack(pop)
int f_cmpA244(const union A244 *x, const union A244 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6]; };
DCaggr* f_touchA244() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A244));
		AF('C',union A244,m0,1)
		AF('J',union A244,m1,1)
		AF('L',union A244,m2,1)
		AF('p',union A244,m3,1)
		AF('C',union A244,m4,1)
		AF('d',union A244,m5,1)
		AF('j',union A244,m6,7)
		dcCloseAggr(a);
	}
	return a;
};
/* <CS{pI<pdisdi>S}L<CJLpCdj[7]>JdBSCBd> */
#pragma pack(push,2)
union A245 { C m0; S m1; struct A243 m2; L m3; union A244 m4; J m5; d m6; B m7; S m8; C m9; B m10; d m11; };
#pragma pack(pop)
int f_cmpA245(const union A245 *x, const union A245 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA243(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA244(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA245() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A245));
		AF('C',union A245,m0,1)
		AF('S',union A245,m1,1)
		AFa(union A245,m2,1,A243)
		AF('L',union A245,m3,1)
		AFa(union A245,m4,1,A244)
		AF('J',union A245,m5,1)
		AF('d',union A245,m6,1)
		AF('B',union A245,m7,1)
		AF('S',union A245,m8,1)
		AF('C',union A245,m9,1)
		AF('B',union A245,m10,1)
		AF('d',union A245,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SLL[1]BLiILfLcl} */
#pragma pack(push,4)
struct A246 { S m0; L m1; L m2[1]; B m3; L m4; i m5; I m6; L m7; f m8; L m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA246(const struct A246 *x, const struct A246 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA246() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A246));
		AF('S',struct A246,m0,1)
		AF('L',struct A246,m1,1)
		AF('L',struct A246,m2,1)
		AF('B',struct A246,m3,1)
		AF('L',struct A246,m4,1)
		AF('i',struct A246,m5,1)
		AF('I',struct A246,m6,1)
		AF('L',struct A246,m7,1)
		AF('f',struct A246,m8,1)
		AF('L',struct A246,m9,1)
		AF('c',struct A246,m10,1)
		AF('l',struct A246,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djcB> */
#pragma pack(push,8)
union A247 { d m0; j m1; c m2; B m3; };
#pragma pack(pop)
int f_cmpA247(const union A247 *x, const union A247 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA247() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A247));
		AF('d',union A247,m0,1)
		AF('j',union A247,m1,1)
		AF('c',union A247,m2,1)
		AF('B',union A247,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dJp[13]Lsp[4]sBipij> */
#pragma pack(push,2)
union A248 { d m0; J m1; p m2[13]; L m3; s m4; p m5[4]; s m6; B m7; i m8; p m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA248(const union A248 *x, const union A248 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA248() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A248));
		AF('d',union A248,m0,1)
		AF('J',union A248,m1,1)
		AF('p',union A248,m2,13)
		AF('L',union A248,m3,1)
		AF('s',union A248,m4,1)
		AF('p',union A248,m5,4)
		AF('s',union A248,m6,1)
		AF('B',union A248,m7,1)
		AF('i',union A248,m8,1)
		AF('p',union A248,m9,1)
		AF('i',union A248,m10,1)
		AF('j',union A248,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fLCjI> */
#pragma pack(push,4)
union A249 { f m0; L m1; C m2; j m3; I m4; };
#pragma pack(pop)
int f_cmpA249(const union A249 *x, const union A249 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA249() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A249));
		AF('f',union A249,m0,1)
		AF('L',union A249,m1,1)
		AF('C',union A249,m2,1)
		AF('j',union A249,m3,1)
		AF('I',union A249,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pfCBi<dJp[13]Lsp[4]sBipij>dB<fLCjI>BiL> */
#pragma pack(push,4)
union A250 { p m0; f m1; C m2; B m3; i m4; union A248 m5; d m6; B m7; union A249 m8; B m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA250(const union A250 *x, const union A250 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA248(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA249(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA250() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A250));
		AF('p',union A250,m0,1)
		AF('f',union A250,m1,1)
		AF('C',union A250,m2,1)
		AF('B',union A250,m3,1)
		AF('i',union A250,m4,1)
		AFa(union A250,m5,1,A248)
		AF('d',union A250,m6,1)
		AF('B',union A250,m7,1)
		AFa(union A250,m8,1,A249)
		AF('B',union A250,m9,1)
		AF('i',union A250,m10,1)
		AF('L',union A250,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {spdCC<djcB><pfCBi<dJp[13]Lsp[4]sBipij>dB<fLCjI>BiL>ilcSJ} */
#pragma pack(push,4)
struct A251 { s m0; p m1; d m2; C m3; C m4; union A247 m5; union A250 m6; i m7; l m8; c m9; S m10; J m11; };
#pragma pack(pop)
int f_cmpA251(const struct A251 *x, const struct A251 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA247(&x->m5, &y->m5) && f_cmpA250(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA251() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A251));
		AF('s',struct A251,m0,1)
		AF('p',struct A251,m1,1)
		AF('d',struct A251,m2,1)
		AF('C',struct A251,m3,1)
		AF('C',struct A251,m4,1)
		AFa(struct A251,m5,1,A247)
		AFa(struct A251,m6,1,A250)
		AF('i',struct A251,m7,1)
		AF('l',struct A251,m8,1)
		AF('c',struct A251,m9,1)
		AF('S',struct A251,m10,1)
		AF('J',struct A251,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BdIipJjjJ} */
#pragma pack(push,1)
struct A252 { B m0; d m1; I m2; i m3; p m4; J m5; j m6; j m7; J m8; };
#pragma pack(pop)
int f_cmpA252(const struct A252 *x, const struct A252 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA252() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A252));
		AF('B',struct A252,m0,1)
		AF('d',struct A252,m1,1)
		AF('I',struct A252,m2,1)
		AF('i',struct A252,m3,1)
		AF('p',struct A252,m4,1)
		AF('J',struct A252,m5,1)
		AF('j',struct A252,m6,1)
		AF('j',struct A252,m7,1)
		AF('J',struct A252,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdic<>jfii{BdIipJjjJ}{j}s> */
#pragma pack(push,2)
union A253 { s m0; d m1; i m2; c m3; union A30 m4; j m5; f m6; i m7; i m8; struct A252 m9; struct A80 m10; s m11; };
#pragma pack(pop)
int f_cmpA253(const union A253 *x, const union A253 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA30(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA252(&x->m9, &y->m9) && f_cmpA80(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA253() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A253));
		AF('s',union A253,m0,1)
		AF('d',union A253,m1,1)
		AF('i',union A253,m2,1)
		AF('c',union A253,m3,1)
		AFa(union A253,m4,1,A30)
		AF('j',union A253,m5,1)
		AF('f',union A253,m6,1)
		AF('i',union A253,m7,1)
		AF('i',union A253,m8,1)
		AFa(union A253,m9,1,A252)
		AFa(union A253,m10,1,A80)
		AF('s',union A253,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sC> */
#pragma pack(push,1)
union A254 { s m0; C m1; };
#pragma pack(pop)
int f_cmpA254(const union A254 *x, const union A254 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA254() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A254));
		AF('s',union A254,m0,1)
		AF('C',union A254,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lBpp<sC>IiCjSij} */
#pragma pack(push,2)
struct A255 { l m0; B m1; p m2; p m3; union A254 m4; I m5; i m6; C m7; j m8; S m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA255(const struct A255 *x, const struct A255 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA254(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA255() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A255));
		AF('l',struct A255,m0,1)
		AF('B',struct A255,m1,1)
		AF('p',struct A255,m2,1)
		AF('p',struct A255,m3,1)
		AFa(struct A255,m4,1,A254)
		AF('I',struct A255,m5,1)
		AF('i',struct A255,m6,1)
		AF('C',struct A255,m7,1)
		AF('j',struct A255,m8,1)
		AF('S',struct A255,m9,1)
		AF('i',struct A255,m10,1)
		AF('j',struct A255,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdjjCSdif> */
#pragma pack(push,1)
union A256 { C m0; d m1; j m2; j m3; C m4; S m5; d m6; i m7; f m8; };
#pragma pack(pop)
int f_cmpA256(const union A256 *x, const union A256 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA256() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A256));
		AF('C',union A256,m0,1)
		AF('d',union A256,m1,1)
		AF('j',union A256,m2,1)
		AF('j',union A256,m3,1)
		AF('C',union A256,m4,1)
		AF('S',union A256,m5,1)
		AF('d',union A256,m6,1)
		AF('i',union A256,m7,1)
		AF('f',union A256,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsljiiBCiLJl} */
#pragma pack(push,2)
struct A257 { B m0; s m1; l m2; j m3; i m4; i m5; B m6; C m7; i m8; L m9; J m10; l m11; };
#pragma pack(pop)
int f_cmpA257(const struct A257 *x, const struct A257 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA257() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A257));
		AF('B',struct A257,m0,1)
		AF('s',struct A257,m1,1)
		AF('l',struct A257,m2,1)
		AF('j',struct A257,m3,1)
		AF('i',struct A257,m4,1)
		AF('i',struct A257,m5,1)
		AF('B',struct A257,m6,1)
		AF('C',struct A257,m7,1)
		AF('i',struct A257,m8,1)
		AF('L',struct A257,m9,1)
		AF('J',struct A257,m10,1)
		AF('l',struct A257,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCBliBLplJSd} */
#pragma pack(push,8)
struct A258 { d m0; C m1; B m2; l m3; i m4; B m5; L m6; p m7; l m8; J m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA258(const struct A258 *x, const struct A258 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA258() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A258));
		AF('d',struct A258,m0,1)
		AF('C',struct A258,m1,1)
		AF('B',struct A258,m2,1)
		AF('l',struct A258,m3,1)
		AF('i',struct A258,m4,1)
		AF('B',struct A258,m5,1)
		AF('L',struct A258,m6,1)
		AF('p',struct A258,m7,1)
		AF('l',struct A258,m8,1)
		AF('J',struct A258,m9,1)
		AF('S',struct A258,m10,1)
		AF('d',struct A258,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ll[1]if{BsljiiBCiLJl}sdjISc{dCBliBLplJSd}> */
#pragma pack(push,4)
union A259 { L m0; l m1[1]; i m2; f m3; struct A257 m4; s m5; d m6; j m7; I m8; S m9; c m10; struct A258 m11; };
#pragma pack(pop)
int f_cmpA259(const union A259 *x, const union A259 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA257(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA258(&x->m11, &y->m11); };
DCaggr* f_touchA259() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A259));
		AF('L',union A259,m0,1)
		AF('l',union A259,m1,1)
		AF('i',union A259,m2,1)
		AF('f',union A259,m3,1)
		AFa(union A259,m4,1,A257)
		AF('s',union A259,m5,1)
		AF('d',union A259,m6,1)
		AF('j',union A259,m7,1)
		AF('I',union A259,m8,1)
		AF('S',union A259,m9,1)
		AF('c',union A259,m10,1)
		AFa(union A259,m11,1,A258)
		dcCloseAggr(a);
	}
	return a;
};
/* <II{lBpp<sC>IiCjSij}S<CdjjCSdif>sC<Ll[1]if{BsljiiBCiLJl}sdjISc{dCBliBLplJSd}>fldp> */
#pragma pack(push,8)
union A260 { I m0; I m1; struct A255 m2; S m3; union A256 m4; s m5; C m6; union A259 m7; f m8; l m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA260(const union A260 *x, const union A260 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA255(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA256(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA259(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA260() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A260));
		AF('I',union A260,m0,1)
		AF('I',union A260,m1,1)
		AFa(union A260,m2,1,A255)
		AF('S',union A260,m3,1)
		AFa(union A260,m4,1,A256)
		AF('s',union A260,m5,1)
		AF('C',union A260,m6,1)
		AFa(union A260,m7,1,A259)
		AF('f',union A260,m8,1)
		AF('l',union A260,m9,1)
		AF('d',union A260,m10,1)
		AF('p',union A260,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jll} */
#pragma pack(push,2)
struct A261 { J m0; l m1; l m2; };
#pragma pack(pop)
int f_cmpA261(const struct A261 *x, const struct A261 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA261() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A261));
		AF('J',struct A261,m0,1)
		AF('l',struct A261,m1,1)
		AF('l',struct A261,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdBp{Jll}Bij} */
#pragma pack(push,8)
struct A262 { C m0; d m1; B m2; p m3; struct A261 m4; B m5; i m6; j m7; };
#pragma pack(pop)
int f_cmpA262(const struct A262 *x, const struct A262 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA261(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA262() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A262));
		AF('C',struct A262,m0,1)
		AF('d',struct A262,m1,1)
		AF('B',struct A262,m2,1)
		AF('p',struct A262,m3,1)
		AFa(struct A262,m4,1,A261)
		AF('B',struct A262,m5,1)
		AF('i',struct A262,m6,1)
		AF('j',struct A262,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fSfpsf[11]sCpffj> */
#pragma pack(push,4)
union A263 { f m0; S m1; f m2; p m3; s m4; f m5[11]; s m6; C m7; p m8; f m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA263(const union A263 *x, const union A263 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA263() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A263));
		AF('f',union A263,m0,1)
		AF('S',union A263,m1,1)
		AF('f',union A263,m2,1)
		AF('p',union A263,m3,1)
		AF('s',union A263,m4,1)
		AF('f',union A263,m5,11)
		AF('s',union A263,m6,1)
		AF('C',union A263,m7,1)
		AF('p',union A263,m8,1)
		AF('f',union A263,m9,1)
		AF('f',union A263,m10,1)
		AF('j',union A263,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfs[13]ILlISpSpJ> */
#pragma pack(push,4)
union A264 { l m0; f m1; s m2[13]; I m3; L m4; l m5; I m6; S m7; p m8; S m9; p m10; J m11; };
#pragma pack(pop)
int f_cmpA264(const union A264 *x, const union A264 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA264() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A264));
		AF('l',union A264,m0,1)
		AF('f',union A264,m1,1)
		AF('s',union A264,m2,13)
		AF('I',union A264,m3,1)
		AF('L',union A264,m4,1)
		AF('l',union A264,m5,1)
		AF('I',union A264,m6,1)
		AF('S',union A264,m7,1)
		AF('p',union A264,m8,1)
		AF('S',union A264,m9,1)
		AF('p',union A264,m10,1)
		AF('J',union A264,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SsfficlCB} */
#pragma pack(push,4)
struct A265 { S m0; s m1; f m2; f m3; i m4; c m5; l m6; C m7; B m8; };
#pragma pack(pop)
int f_cmpA265(const struct A265 *x, const struct A265 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA265() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A265));
		AF('S',struct A265,m0,1)
		AF('s',struct A265,m1,1)
		AF('f',struct A265,m2,1)
		AF('f',struct A265,m3,1)
		AF('i',struct A265,m4,1)
		AF('c',struct A265,m5,1)
		AF('l',struct A265,m6,1)
		AF('C',struct A265,m7,1)
		AF('B',struct A265,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BdI<lfs[13]ILlISpSpJ>jd{SsfficlCB}sLj[2]jj> */
#pragma pack(push,4)
union A266 { B m0; d m1; I m2; union A264 m3; j m4; d m5; struct A265 m6; s m7; L m8; j m9[2]; j m10; j m11; };
#pragma pack(pop)
int f_cmpA266(const union A266 *x, const union A266 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA264(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA265(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA266() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A266));
		AF('B',union A266,m0,1)
		AF('d',union A266,m1,1)
		AF('I',union A266,m2,1)
		AFa(union A266,m3,1,A264)
		AF('j',union A266,m4,1)
		AF('d',union A266,m5,1)
		AFa(union A266,m6,1,A265)
		AF('s',union A266,m7,1)
		AF('L',union A266,m8,1)
		AF('j',union A266,m9,2)
		AF('j',union A266,m10,1)
		AF('j',union A266,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lsSJcfJScIdc> */
#pragma pack(push,4)
union A267 { l m0; s m1; S m2; J m3; c m4; f m5; J m6; S m7; c m8; I m9; d m10; c m11; };
#pragma pack(pop)
int f_cmpA267(const union A267 *x, const union A267 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA267() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A267));
		AF('l',union A267,m0,1)
		AF('s',union A267,m1,1)
		AF('S',union A267,m2,1)
		AF('J',union A267,m3,1)
		AF('c',union A267,m4,1)
		AF('f',union A267,m5,1)
		AF('J',union A267,m6,1)
		AF('S',union A267,m7,1)
		AF('c',union A267,m8,1)
		AF('I',union A267,m9,1)
		AF('d',union A267,m10,1)
		AF('c',union A267,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jfLIjdcLi} */
#pragma pack(push,1)
struct A268 { j m0; f m1; L m2; I m3; j m4; d m5; c m6; L m7; i m8; };
#pragma pack(pop)
int f_cmpA268(const struct A268 *x, const struct A268 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA268() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A268));
		AF('j',struct A268,m0,1)
		AF('f',struct A268,m1,1)
		AF('L',struct A268,m2,1)
		AF('I',struct A268,m3,1)
		AF('j',struct A268,m4,1)
		AF('d',struct A268,m5,1)
		AF('c',struct A268,m6,1)
		AF('L',struct A268,m7,1)
		AF('i',struct A268,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<lsSJcfJScIdc>Jcj{jfLIjdcLi}> */
#pragma pack(push,4)
union A269 { union A267 m0; J m1; c m2; j m3; struct A268 m4; };
#pragma pack(pop)
int f_cmpA269(const union A269 *x, const union A269 *y) { return f_cmpA267(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA268(&x->m4, &y->m4); };
DCaggr* f_touchA269() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A269));
		AFa(union A269,m0,1,A267)
		AF('J',union A269,m1,1)
		AF('c',union A269,m2,1)
		AF('j',union A269,m3,1)
		AFa(union A269,m4,1,A268)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljLJss> */
#pragma pack(push,8)
union A270 { l m0; j m1; L m2; J m3; s m4; s m5; };
#pragma pack(pop)
int f_cmpA270(const union A270 *x, const union A270 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA270() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A270));
		AF('l',union A270,m0,1)
		AF('j',union A270,m1,1)
		AF('L',union A270,m2,1)
		AF('J',union A270,m3,1)
		AF('s',union A270,m4,1)
		AF('s',union A270,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sIJij> */
#pragma pack(push,4)
union A271 { s m0; I m1; J m2; i m3; j m4; };
#pragma pack(pop)
int f_cmpA271(const union A271 *x, const union A271 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA271() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A271));
		AF('s',union A271,m0,1)
		AF('I',union A271,m1,1)
		AF('J',union A271,m2,1)
		AF('i',union A271,m3,1)
		AF('j',union A271,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jIJj<sIJij>fd} */
#pragma pack(push,2)
struct A272 { j m0; I m1; J m2; j m3; union A271 m4; f m5; d m6; };
#pragma pack(pop)
int f_cmpA272(const struct A272 *x, const struct A272 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA271(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA272() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A272));
		AF('j',struct A272,m0,1)
		AF('I',struct A272,m1,1)
		AF('J',struct A272,m2,1)
		AF('j',struct A272,m3,1)
		AFa(struct A272,m4,1,A271)
		AF('f',struct A272,m5,1)
		AF('d',struct A272,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcijsLISLlSI} */
#pragma pack(push,4)
struct A273 { f m0; c m1; i m2; j m3; s m4; L m5; I m6; S m7; L m8; l m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA273(const struct A273 *x, const struct A273 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA273() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A273));
		AF('f',struct A273,m0,1)
		AF('c',struct A273,m1,1)
		AF('i',struct A273,m2,1)
		AF('j',struct A273,m3,1)
		AF('s',struct A273,m4,1)
		AF('L',struct A273,m5,1)
		AF('I',struct A273,m6,1)
		AF('S',struct A273,m7,1)
		AF('L',struct A273,m8,1)
		AF('l',struct A273,m9,1)
		AF('S',struct A273,m10,1)
		AF('I',struct A273,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{fcijsLISLlSI}ipcifiL} */
#pragma pack(push,4)
struct A274 { struct A273 m0; i m1; p m2; c m3; i m4; f m5; i m6; L m7; };
#pragma pack(pop)
int f_cmpA274(const struct A274 *x, const struct A274 *y) { return f_cmpA273(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA274() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A274));
		AFa(struct A274,m0,1,A273)
		AF('i',struct A274,m1,1)
		AF('p',struct A274,m2,1)
		AF('c',struct A274,m3,1)
		AF('i',struct A274,m4,1)
		AF('f',struct A274,m5,1)
		AF('i',struct A274,m6,1)
		AF('L',struct A274,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I<>C{jIJj<sIJij>fd}iSs{{fcijsLISLlSI}ipcifiL}SLic> */
#pragma pack(push,4)
union A275 { I m0; union A30 m1; C m2; struct A272 m3; i m4; S m5; s m6; struct A274 m7; S m8; L m9; i m10; c m11; };
#pragma pack(pop)
int f_cmpA275(const union A275 *x, const union A275 *y) { return x->m0 == y->m0 && f_cmpA30(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA272(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA274(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA275() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A275));
		AF('I',union A275,m0,1)
		AFa(union A275,m1,1,A30)
		AF('C',union A275,m2,1)
		AFa(union A275,m3,1,A272)
		AF('i',union A275,m4,1)
		AF('S',union A275,m5,1)
		AF('s',union A275,m6,1)
		AFa(union A275,m7,1,A274)
		AF('S',union A275,m8,1)
		AF('L',union A275,m9,1)
		AF('i',union A275,m10,1)
		AF('c',union A275,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SsIpJLfs} */
#pragma pack(push,8)
struct A276 { S m0; s m1; I m2; p m3; J m4; L m5; f m6; s m7; };
#pragma pack(pop)
int f_cmpA276(const struct A276 *x, const struct A276 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA276() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A276));
		AF('S',struct A276,m0,1)
		AF('s',struct A276,m1,1)
		AF('I',struct A276,m2,1)
		AF('p',struct A276,m3,1)
		AF('J',struct A276,m4,1)
		AF('L',struct A276,m5,1)
		AF('f',struct A276,m6,1)
		AF('s',struct A276,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SlsfcLj> */
#pragma pack(push,4)
union A277 { S m0; l m1; s m2; f m3; c m4; L m5; j m6; };
#pragma pack(pop)
int f_cmpA277(const union A277 *x, const union A277 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA277() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A277));
		AF('S',union A277,m0,1)
		AF('l',union A277,m1,1)
		AF('s',union A277,m2,1)
		AF('f',union A277,m3,1)
		AF('c',union A277,m4,1)
		AF('L',union A277,m5,1)
		AF('j',union A277,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdpSpp} */
#pragma pack(push,4)
struct A278 { C m0; d m1; p m2; S m3; p m4; p m5; };
#pragma pack(pop)
int f_cmpA278(const struct A278 *x, const struct A278 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA278() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A278));
		AF('C',struct A278,m0,1)
		AF('d',struct A278,m1,1)
		AF('p',struct A278,m2,1)
		AF('S',struct A278,m3,1)
		AF('p',struct A278,m4,1)
		AF('p',struct A278,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcdSIdLIds<SlsfcLj>{CdpSpp}} */
#pragma pack(push,2)
struct A279 { f m0; c m1; d m2; S m3; I m4; d m5; L m6; I m7; d m8; s m9; union A277 m10; struct A278 m11; };
#pragma pack(pop)
int f_cmpA279(const struct A279 *x, const struct A279 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA277(&x->m10, &y->m10) && f_cmpA278(&x->m11, &y->m11); };
DCaggr* f_touchA279() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A279));
		AF('f',struct A279,m0,1)
		AF('c',struct A279,m1,1)
		AF('d',struct A279,m2,1)
		AF('S',struct A279,m3,1)
		AF('I',struct A279,m4,1)
		AF('d',struct A279,m5,1)
		AF('L',struct A279,m6,1)
		AF('I',struct A279,m7,1)
		AF('d',struct A279,m8,1)
		AF('s',struct A279,m9,1)
		AFa(struct A279,m10,1,A277)
		AFa(struct A279,m11,1,A278)
		dcCloseAggr(a);
	}
	return a;
};
/* <jJdpiLp> */
#pragma pack(push,2)
union A280 { j m0; J m1; d m2; p m3; i m4; L m5; p m6; };
#pragma pack(pop)
int f_cmpA280(const union A280 *x, const union A280 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA280() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A280));
		AF('j',union A280,m0,1)
		AF('J',union A280,m1,1)
		AF('d',union A280,m2,1)
		AF('p',union A280,m3,1)
		AF('i',union A280,m4,1)
		AF('L',union A280,m5,1)
		AF('p',union A280,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C<jJdpiLp>SSIdCI> */
#pragma pack(push,2)
union A281 { C m0; union A280 m1; S m2; S m3; I m4; d m5; C m6; I m7; };
#pragma pack(pop)
int f_cmpA281(const union A281 *x, const union A281 *y) { return x->m0 == y->m0 && f_cmpA280(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA281() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A281));
		AF('C',union A281,m0,1)
		AFa(union A281,m1,1,A280)
		AF('S',union A281,m2,1)
		AF('S',union A281,m3,1)
		AF('I',union A281,m4,1)
		AF('d',union A281,m5,1)
		AF('C',union A281,m6,1)
		AF('I',union A281,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cdp} */
#pragma pack(push,4)
struct A282 { C m0; d m1; p m2; };
#pragma pack(pop)
int f_cmpA282(const struct A282 *x, const struct A282 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA282() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A282));
		AF('C',struct A282,m0,1)
		AF('d',struct A282,m1,1)
		AF('p',struct A282,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CSsfBcfcSlpc} */
#pragma pack(push,2)
struct A283 { C m0; S m1; s m2; f m3; B m4; c m5; f m6; c m7; S m8; l m9; p m10; c m11; };
#pragma pack(pop)
int f_cmpA283(const struct A283 *x, const struct A283 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA283() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A283));
		AF('C',struct A283,m0,1)
		AF('S',struct A283,m1,1)
		AF('s',struct A283,m2,1)
		AF('f',struct A283,m3,1)
		AF('B',struct A283,m4,1)
		AF('c',struct A283,m5,1)
		AF('f',struct A283,m6,1)
		AF('c',struct A283,m7,1)
		AF('S',struct A283,m8,1)
		AF('l',struct A283,m9,1)
		AF('p',struct A283,m10,1)
		AF('c',struct A283,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIjLpCBlfScd} */
#pragma pack(push,4)
struct A284 { f m0; I m1; j m2; L m3; p m4; C m5; B m6; l m7; f m8; S m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA284(const struct A284 *x, const struct A284 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA284() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A284));
		AF('f',struct A284,m0,1)
		AF('I',struct A284,m1,1)
		AF('j',struct A284,m2,1)
		AF('L',struct A284,m3,1)
		AF('p',struct A284,m4,1)
		AF('C',struct A284,m5,1)
		AF('B',struct A284,m6,1)
		AF('l',struct A284,m7,1)
		AF('f',struct A284,m8,1)
		AF('S',struct A284,m9,1)
		AF('c',struct A284,m10,1)
		AF('d',struct A284,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <If> */
#pragma pack(push,4)
union A285 { I m0; f m1; };
#pragma pack(pop)
int f_cmpA285(const union A285 *x, const union A285 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA285() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A285));
		AF('I',union A285,m0,1)
		AF('f',union A285,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LsdsILcs[11]cppB} */
#pragma pack(push,4)
struct A286 { L m0; s m1; d m2; s m3; I m4; L m5; c m6; s m7[11]; c m8; p m9; p m10; B m11; };
#pragma pack(pop)
int f_cmpA286(const struct A286 *x, const struct A286 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA286() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A286));
		AF('L',struct A286,m0,1)
		AF('s',struct A286,m1,1)
		AF('d',struct A286,m2,1)
		AF('s',struct A286,m3,1)
		AF('I',struct A286,m4,1)
		AF('L',struct A286,m5,1)
		AF('c',struct A286,m6,1)
		AF('s',struct A286,m7,11)
		AF('c',struct A286,m8,1)
		AF('p',struct A286,m9,1)
		AF('p',struct A286,m10,1)
		AF('B',struct A286,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LljcS<If>i{LsdsILcs[11]cppB}> */
#pragma pack(push,4)
union A287 { L m0; l m1; j m2; c m3; S m4; union A285 m5; i m6; struct A286 m7; };
#pragma pack(pop)
int f_cmpA287(const union A287 *x, const union A287 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA285(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA286(&x->m7, &y->m7); };
DCaggr* f_touchA287() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A287));
		AF('L',union A287,m0,1)
		AF('l',union A287,m1,1)
		AF('j',union A287,m2,1)
		AF('c',union A287,m3,1)
		AF('S',union A287,m4,1)
		AFa(union A287,m5,1,A285)
		AF('i',union A287,m6,1)
		AFa(union A287,m7,1,A286)
		dcCloseAggr(a);
	}
	return a;
};
/* {SfScSiJSCBCJ} */
#pragma pack(push,1)
struct A288 { S m0; f m1; S m2; c m3; S m4; i m5; J m6; S m7; C m8; B m9; C m10; J m11; };
#pragma pack(pop)
int f_cmpA288(const struct A288 *x, const struct A288 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA288() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A288));
		AF('S',struct A288,m0,1)
		AF('f',struct A288,m1,1)
		AF('S',struct A288,m2,1)
		AF('c',struct A288,m3,1)
		AF('S',struct A288,m4,1)
		AF('i',struct A288,m5,1)
		AF('J',struct A288,m6,1)
		AF('S',struct A288,m7,1)
		AF('C',struct A288,m8,1)
		AF('B',struct A288,m9,1)
		AF('C',struct A288,m10,1)
		AF('J',struct A288,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B[3]cfl} */
#pragma pack(push,4)
struct A289 { B m0[3]; c m1; f m2; l m3; };
#pragma pack(pop)
int f_cmpA289(const struct A289 *x, const struct A289 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA289() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A289));
		AF('B',struct A289,m0,3)
		AF('c',struct A289,m1,1)
		AF('f',struct A289,m2,1)
		AF('l',struct A289,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jcf} */
#pragma pack(push,2)
struct A290 { j m0; c m1; f m2; };
#pragma pack(pop)
int f_cmpA290(const struct A290 *x, const struct A290 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA290() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A290));
		AF('j',struct A290,m0,1)
		AF('c',struct A290,m1,1)
		AF('f',struct A290,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iliCSCiSjBid} */
#pragma pack(push,8)
struct A291 { i m0; l m1; i m2; C m3; S m4; C m5; i m6; S m7; j m8; B m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA291(const struct A291 *x, const struct A291 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA291() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A291));
		AF('i',struct A291,m0,1)
		AF('l',struct A291,m1,1)
		AF('i',struct A291,m2,1)
		AF('C',struct A291,m3,1)
		AF('S',struct A291,m4,1)
		AF('C',struct A291,m5,1)
		AF('i',struct A291,m6,1)
		AF('S',struct A291,m7,1)
		AF('j',struct A291,m8,1)
		AF('B',struct A291,m9,1)
		AF('i',struct A291,m10,1)
		AF('d',struct A291,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pJ> */
#pragma pack(push,4)
union A292 { p m0; J m1; };
#pragma pack(pop)
int f_cmpA292(const union A292 *x, const union A292 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA292() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A292));
		AF('p',union A292,m0,1)
		AF('J',union A292,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBiSJBJjcCjd} */
#pragma pack(push,2)
struct A293 { s m0; B m1; i m2; S m3; J m4; B m5; J m6; j m7; c m8; C m9; j m10; d m11; };
#pragma pack(pop)
int f_cmpA293(const struct A293 *x, const struct A293 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA293() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A293));
		AF('s',struct A293,m0,1)
		AF('B',struct A293,m1,1)
		AF('i',struct A293,m2,1)
		AF('S',struct A293,m3,1)
		AF('J',struct A293,m4,1)
		AF('B',struct A293,m5,1)
		AF('J',struct A293,m6,1)
		AF('j',struct A293,m7,1)
		AF('c',struct A293,m8,1)
		AF('C',struct A293,m9,1)
		AF('j',struct A293,m10,1)
		AF('d',struct A293,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fLlflcCfJISI> */
#pragma pack(push,4)
union A294 { f m0; L m1; l m2; f m3; l m4; c m5; C m6; f m7; J m8; I m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA294(const union A294 *x, const union A294 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA294() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A294));
		AF('f',union A294,m0,1)
		AF('L',union A294,m1,1)
		AF('l',union A294,m2,1)
		AF('f',union A294,m3,1)
		AF('l',union A294,m4,1)
		AF('c',union A294,m5,1)
		AF('C',union A294,m6,1)
		AF('f',union A294,m7,1)
		AF('J',union A294,m8,1)
		AF('I',union A294,m9,1)
		AF('S',union A294,m10,1)
		AF('I',union A294,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLfCcS[2]JIB> */
#pragma pack(push,4)
union A295 { l m0; L m1; f m2; C m3; c m4; S m5[2]; J m6; I m7; B m8; };
#pragma pack(pop)
int f_cmpA295(const union A295 *x, const union A295 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA295() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A295));
		AF('l',union A295,m0,1)
		AF('L',union A295,m1,1)
		AF('f',union A295,m2,1)
		AF('C',union A295,m3,1)
		AF('c',union A295,m4,1)
		AF('S',union A295,m5,2)
		AF('J',union A295,m6,1)
		AF('I',union A295,m7,1)
		AF('B',union A295,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BfSpffpSijB[5]B} */
#pragma pack(push,4)
struct A296 { B m0; f m1; S m2; p m3; f m4; f m5; p m6; S m7; i m8; j m9; B m10[5]; B m11; };
#pragma pack(pop)
int f_cmpA296(const struct A296 *x, const struct A296 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m11 == y->m11; };
DCaggr* f_touchA296() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A296));
		AF('B',struct A296,m0,1)
		AF('f',struct A296,m1,1)
		AF('S',struct A296,m2,1)
		AF('p',struct A296,m3,1)
		AF('f',struct A296,m4,1)
		AF('f',struct A296,m5,1)
		AF('p',struct A296,m6,1)
		AF('S',struct A296,m7,1)
		AF('i',struct A296,m8,1)
		AF('j',struct A296,m9,1)
		AF('B',struct A296,m10,5)
		AF('B',struct A296,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl} */
#pragma pack(push,4)
struct A297 { C m0; union A295 m1; p m2; struct A296 m3; C m4; i m5; S m6; J m7; J m8; j m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA297(const struct A297 *x, const struct A297 *y) { return x->m0 == y->m0 && f_cmpA295(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA296(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA297() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A297));
		AF('C',struct A297,m0,1)
		AFa(struct A297,m1,1,A295)
		AF('p',struct A297,m2,1)
		AFa(struct A297,m3,1,A296)
		AF('C',struct A297,m4,1)
		AF('i',struct A297,m5,1)
		AF('S',struct A297,m6,1)
		AF('J',struct A297,m7,1)
		AF('J',struct A297,m8,1)
		AF('j',struct A297,m9,1)
		AF('j',struct A297,m10,1)
		AF('l',struct A297,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IiC> */
#pragma pack(push,8)
union A298 { I m0; i m1; C m2; };
#pragma pack(pop)
int f_cmpA298(const union A298 *x, const union A298 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA298() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A298));
		AF('I',union A298,m0,1)
		AF('i',union A298,m1,1)
		AF('C',union A298,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<IiC>[14]iJCSfcdSiJL} */
#pragma pack(push,4)
struct A299 { union A298 m0[14]; i m1; J m2; C m3; S m4; f m5; c m6; d m7; S m8; i m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA299(const struct A299 *x, const struct A299 *y) { return f_cmpA298(&x->m0[0], &y->m0[0]) && f_cmpA298(&x->m0[1], &y->m0[1]) && f_cmpA298(&x->m0[2], &y->m0[2]) && f_cmpA298(&x->m0[3], &y->m0[3]) && f_cmpA298(&x->m0[4], &y->m0[4]) && f_cmpA298(&x->m0[5], &y->m0[5]) && f_cmpA298(&x->m0[6], &y->m0[6]) && f_cmpA298(&x->m0[7], &y->m0[7]) && f_cmpA298(&x->m0[8], &y->m0[8]) && f_cmpA298(&x->m0[9], &y->m0[9]) && f_cmpA298(&x->m0[10], &y->m0[10]) && f_cmpA298(&x->m0[11], &y->m0[11]) && f_cmpA298(&x->m0[12], &y->m0[12]) && f_cmpA298(&x->m0[13], &y->m0[13]) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA299() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A299));
		AFa(struct A299,m0,14,A298)
		AF('i',struct A299,m1,1)
		AF('J',struct A299,m2,1)
		AF('C',struct A299,m3,1)
		AF('S',struct A299,m4,1)
		AF('f',struct A299,m5,1)
		AF('c',struct A299,m6,1)
		AF('d',struct A299,m7,1)
		AF('S',struct A299,m8,1)
		AF('i',struct A299,m9,1)
		AF('J',struct A299,m10,1)
		AF('L',struct A299,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ} */
#pragma pack(push,4)
struct A300 { struct A299 m0; j m1; i m2; c m3; S m4; p m5; J m6; I m7; d m8; C m9; j m10; J m11; };
#pragma pack(pop)
int f_cmpA300(const struct A300 *x, const struct A300 *y) { return f_cmpA299(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA300() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A300));
		AFa(struct A300,m0,1,A299)
		AF('j',struct A300,m1,1)
		AF('i',struct A300,m2,1)
		AF('c',struct A300,m3,1)
		AF('S',struct A300,m4,1)
		AF('p',struct A300,m5,1)
		AF('J',struct A300,m6,1)
		AF('I',struct A300,m7,1)
		AF('d',struct A300,m8,1)
		AF('C',struct A300,m9,1)
		AF('j',struct A300,m10,1)
		AF('J',struct A300,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfpLdIcppsLl} */
#pragma pack(push,8)
struct A301 { I m0; f m1; p m2; L m3; d m4; I m5; c m6; p m7; p m8; s m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA301(const struct A301 *x, const struct A301 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA301() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A301));
		AF('I',struct A301,m0,1)
		AF('f',struct A301,m1,1)
		AF('p',struct A301,m2,1)
		AF('L',struct A301,m3,1)
		AF('d',struct A301,m4,1)
		AF('I',struct A301,m5,1)
		AF('c',struct A301,m6,1)
		AF('p',struct A301,m7,1)
		AF('p',struct A301,m8,1)
		AF('s',struct A301,m9,1)
		AF('L',struct A301,m10,1)
		AF('l',struct A301,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BCIILCiSicfB> */
#pragma pack(push,4)
union A302 { B m0; C m1; I m2; I m3; L m4; C m5; i m6; S m7; i m8; c m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA302(const union A302 *x, const union A302 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA302() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A302));
		AF('B',union A302,m0,1)
		AF('C',union A302,m1,1)
		AF('I',union A302,m2,1)
		AF('I',union A302,m3,1)
		AF('L',union A302,m4,1)
		AF('C',union A302,m5,1)
		AF('i',union A302,m6,1)
		AF('S',union A302,m7,1)
		AF('i',union A302,m8,1)
		AF('c',union A302,m9,1)
		AF('f',union A302,m10,1)
		AF('B',union A302,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcjBplljBdSp> */
#pragma pack(push,1)
union A303 { B m0; c m1; j m2; B m3; p m4; l m5; l m6; j m7; B m8; d m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA303(const union A303 *x, const union A303 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA303() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A303));
		AF('B',union A303,m0,1)
		AF('c',union A303,m1,1)
		AF('j',union A303,m2,1)
		AF('B',union A303,m3,1)
		AF('p',union A303,m4,1)
		AF('l',union A303,m5,1)
		AF('l',union A303,m6,1)
		AF('j',union A303,m7,1)
		AF('B',union A303,m8,1)
		AF('d',union A303,m9,1)
		AF('S',union A303,m10,1)
		AF('p',union A303,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJISlldLJffB> */
#pragma pack(push,4)
union A304 { C m0; J m1; I m2; S m3; l m4; l m5; d m6; L m7; J m8; f m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA304(const union A304 *x, const union A304 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA304() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A304));
		AF('C',union A304,m0,1)
		AF('J',union A304,m1,1)
		AF('I',union A304,m2,1)
		AF('S',union A304,m3,1)
		AF('l',union A304,m4,1)
		AF('l',union A304,m5,1)
		AF('d',union A304,m6,1)
		AF('L',union A304,m7,1)
		AF('J',union A304,m8,1)
		AF('f',union A304,m9,1)
		AF('f',union A304,m10,1)
		AF('B',union A304,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cjL<BcjBplljBdSp>[9]dSp<CJISlldLJffB>pcc[1]c> */
#pragma pack(push,2)
union A305 { c m0; j m1; L m2; union A303 m3[9]; d m4; S m5; p m6; union A304 m7; p m8; c m9; c m10[1]; c m11; };
#pragma pack(pop)
int f_cmpA305(const union A305 *x, const union A305 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA303(&x->m3[0], &y->m3[0]) && f_cmpA303(&x->m3[1], &y->m3[1]) && f_cmpA303(&x->m3[2], &y->m3[2]) && f_cmpA303(&x->m3[3], &y->m3[3]) && f_cmpA303(&x->m3[4], &y->m3[4]) && f_cmpA303(&x->m3[5], &y->m3[5]) && f_cmpA303(&x->m3[6], &y->m3[6]) && f_cmpA303(&x->m3[7], &y->m3[7]) && f_cmpA303(&x->m3[8], &y->m3[8]) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA304(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m11 == y->m11; };
DCaggr* f_touchA305() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A305));
		AF('c',union A305,m0,1)
		AF('j',union A305,m1,1)
		AF('L',union A305,m2,1)
		AFa(union A305,m3,9,A303)
		AF('d',union A305,m4,1)
		AF('S',union A305,m5,1)
		AF('p',union A305,m6,1)
		AFa(union A305,m7,1,A304)
		AF('p',union A305,m8,1)
		AF('c',union A305,m9,1)
		AF('c',union A305,m10,1)
		AF('c',union A305,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f> */
#pragma pack(push,4)
union A306 { f m0; };
#pragma pack(pop)
int f_cmpA306(const union A306 *x, const union A306 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA306() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A306));
		AF('f',union A306,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pjC[3]jBj[9]} */
#pragma pack(push,4)
struct A307 { p m0; j m1; C m2[3]; j m3; B m4; j m5[9]; };
#pragma pack(pop)
int f_cmpA307(const struct A307 *x, const struct A307 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8]; };
DCaggr* f_touchA307() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A307));
		AF('p',struct A307,m0,1)
		AF('j',struct A307,m1,1)
		AF('C',struct A307,m2,3)
		AF('j',struct A307,m3,1)
		AF('B',struct A307,m4,1)
		AF('j',struct A307,m5,9)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsfBdlfpp[4]fpj} */
#pragma pack(push,4)
struct A308 { B m0; s m1; f m2; B m3; d m4; l m5; f m6; p m7; p m8[4]; f m9; p m10; j m11; };
#pragma pack(pop)
int f_cmpA308(const struct A308 *x, const struct A308 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA308() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A308));
		AF('B',struct A308,m0,1)
		AF('s',struct A308,m1,1)
		AF('f',struct A308,m2,1)
		AF('B',struct A308,m3,1)
		AF('d',struct A308,m4,1)
		AF('l',struct A308,m5,1)
		AF('f',struct A308,m6,1)
		AF('p',struct A308,m7,1)
		AF('p',struct A308,m8,4)
		AF('f',struct A308,m9,1)
		AF('p',struct A308,m10,1)
		AF('j',struct A308,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djcjiCi> */
#pragma pack(push,1)
union A309 { d m0; j m1; c m2; j m3; i m4; C m5; i m6; };
#pragma pack(pop)
int f_cmpA309(const union A309 *x, const union A309 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA309() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A309));
		AF('d',union A309,m0,1)
		AF('j',union A309,m1,1)
		AF('c',union A309,m2,1)
		AF('j',union A309,m3,1)
		AF('i',union A309,m4,1)
		AF('C',union A309,m5,1)
		AF('i',union A309,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj} */
#pragma pack(push,4)
struct A310 { d m0; struct A308 m1; c m2; L m3[1]; j m4; B m5; union A309 m6; S m7; B m8; B m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA310(const struct A310 *x, const struct A310 *y) { return x->m0 == y->m0 && f_cmpA308(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA309(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA310() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A310));
		AF('d',struct A310,m0,1)
		AFa(struct A310,m1,1,A308)
		AF('c',struct A310,m2,1)
		AF('L',struct A310,m3,1)
		AF('j',struct A310,m4,1)
		AF('B',struct A310,m5,1)
		AFa(struct A310,m6,1,A309)
		AF('S',struct A310,m7,1)
		AF('B',struct A310,m8,1)
		AF('B',struct A310,m9,1)
		AF('S',struct A310,m10,1)
		AF('j',struct A310,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dJBs} */
#pragma pack(push,8)
struct A311 { d m0; J m1; B m2; s m3; };
#pragma pack(pop)
int f_cmpA311(const struct A311 *x, const struct A311 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA311() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A311));
		AF('d',struct A311,m0,1)
		AF('J',struct A311,m1,1)
		AF('B',struct A311,m2,1)
		AF('s',struct A311,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Llfp[13]CpLjcpiL} */
#pragma pack(push,2)
struct A312 { L m0; l m1; f m2; p m3[13]; C m4; p m5; L m6; j m7; c m8; p m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA312(const struct A312 *x, const struct A312 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA312() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A312));
		AF('L',struct A312,m0,1)
		AF('l',struct A312,m1,1)
		AF('f',struct A312,m2,1)
		AF('p',struct A312,m3,13)
		AF('C',struct A312,m4,1)
		AF('p',struct A312,m5,1)
		AF('L',struct A312,m6,1)
		AF('j',struct A312,m7,1)
		AF('c',struct A312,m8,1)
		AF('p',struct A312,m9,1)
		AF('i',struct A312,m10,1)
		AF('L',struct A312,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C} */
#pragma pack(push,4)
struct A313 { C m0; };
#pragma pack(pop)
int f_cmpA313(const struct A313 *x, const struct A313 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA313() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A313));
		AF('C',struct A313,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IcdBll> */
#pragma pack(push,2)
union A314 { I m0; c m1; d m2; B m3; l m4; l m5; };
#pragma pack(pop)
int f_cmpA314(const union A314 *x, const union A314 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA314() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A314));
		AF('I',union A314,m0,1)
		AF('c',union A314,m1,1)
		AF('d',union A314,m2,1)
		AF('B',union A314,m3,1)
		AF('l',union A314,m4,1)
		AF('l',union A314,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjpS} */
#pragma pack(push,4)
struct A315 { L m0; j m1; p m2; S m3; };
#pragma pack(pop)
int f_cmpA315(const struct A315 *x, const struct A315 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA315() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A315));
		AF('L',struct A315,m0,1)
		AF('j',struct A315,m1,1)
		AF('p',struct A315,m2,1)
		AF('S',struct A315,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LS} */
#pragma pack(push,1)
struct A316 { L m0; S m1; };
#pragma pack(pop)
int f_cmpA316(const struct A316 *x, const struct A316 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA316() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A316));
		AF('L',struct A316,m0,1)
		AF('S',struct A316,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LjLlf[15]pJSC[11]dJI> */
#pragma pack(push,4)
union A317 { L m0; j m1; L m2; l m3; f m4[15]; p m5; J m6; S m7; C m8[11]; d m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA317(const union A317 *x, const union A317 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m4[14] == y->m4[14] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA317() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A317));
		AF('L',union A317,m0,1)
		AF('j',union A317,m1,1)
		AF('L',union A317,m2,1)
		AF('l',union A317,m3,1)
		AF('f',union A317,m4,15)
		AF('p',union A317,m5,1)
		AF('J',union A317,m6,1)
		AF('S',union A317,m7,1)
		AF('C',union A317,m8,11)
		AF('d',union A317,m9,1)
		AF('J',union A317,m10,1)
		AF('I',union A317,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BdIJLLc> */
#pragma pack(push,4)
union A318 { B m0; d m1; I m2; J m3; L m4; L m5; c m6; };
#pragma pack(pop)
int f_cmpA318(const union A318 *x, const union A318 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA318() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A318));
		AF('B',union A318,m0,1)
		AF('d',union A318,m1,1)
		AF('I',union A318,m2,1)
		AF('J',union A318,m3,1)
		AF('L',union A318,m4,1)
		AF('L',union A318,m5,1)
		AF('c',union A318,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jI<L>CjcfppppC> */
#pragma pack(push,2)
union A319 { j m0; I m1; union A160 m2; C m3; j m4; c m5; f m6; p m7; p m8; p m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA319(const union A319 *x, const union A319 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA160(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA319() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A319));
		AF('j',union A319,m0,1)
		AF('I',union A319,m1,1)
		AFa(union A319,m2,1,A160)
		AF('C',union A319,m3,1)
		AF('j',union A319,m4,1)
		AF('c',union A319,m5,1)
		AF('f',union A319,m6,1)
		AF('p',union A319,m7,1)
		AF('p',union A319,m8,1)
		AF('p',union A319,m9,1)
		AF('p',union A319,m10,1)
		AF('C',union A319,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cIlLlcsBlB[14]pJ> */
#pragma pack(push,4)
union A320 { c m0; I m1; l m2; L m3; l m4; c m5; s m6; B m7; l m8; B m9[14]; p m10; J m11; };
#pragma pack(pop)
int f_cmpA320(const union A320 *x, const union A320 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m9[13] == y->m9[13] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA320() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A320));
		AF('c',union A320,m0,1)
		AF('I',union A320,m1,1)
		AF('l',union A320,m2,1)
		AF('L',union A320,m3,1)
		AF('l',union A320,m4,1)
		AF('c',union A320,m5,1)
		AF('s',union A320,m6,1)
		AF('B',union A320,m7,1)
		AF('l',union A320,m8,1)
		AF('B',union A320,m9,14)
		AF('p',union A320,m10,1)
		AF('J',union A320,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jpLpBBBcCjlI> */
#pragma pack(push,4)
union A321 { j m0; p m1; L m2; p m3; B m4; B m5; B m6; c m7; C m8; j m9; l m10; I m11; };
#pragma pack(pop)
int f_cmpA321(const union A321 *x, const union A321 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA321() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A321));
		AF('j',union A321,m0,1)
		AF('p',union A321,m1,1)
		AF('L',union A321,m2,1)
		AF('p',union A321,m3,1)
		AF('B',union A321,m4,1)
		AF('B',union A321,m5,1)
		AF('B',union A321,m6,1)
		AF('c',union A321,m7,1)
		AF('C',union A321,m8,1)
		AF('j',union A321,m9,1)
		AF('l',union A321,m10,1)
		AF('I',union A321,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<jpLpBBBcCjlI>dScpdsjlfl} */
#pragma pack(push,2)
struct A322 { union A321 m0; d m1; S m2; c m3; p m4; d m5; s m6; j m7; l m8; f m9; l m10; };
#pragma pack(pop)
int f_cmpA322(const struct A322 *x, const struct A322 *y) { return f_cmpA321(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA322() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A322));
		AFa(struct A322,m0,1,A321)
		AF('d',struct A322,m1,1)
		AF('S',struct A322,m2,1)
		AF('c',struct A322,m3,1)
		AF('p',struct A322,m4,1)
		AF('d',struct A322,m5,1)
		AF('s',struct A322,m6,1)
		AF('j',struct A322,m7,1)
		AF('l',struct A322,m8,1)
		AF('f',struct A322,m9,1)
		AF('l',struct A322,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iBCIipLsfpBL} */
#pragma pack(push,2)
struct A323 { i m0; B m1; C m2; I m3; i m4; p m5; L m6; s m7; f m8; p m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA323(const struct A323 *x, const struct A323 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA323() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A323));
		AF('i',struct A323,m0,1)
		AF('B',struct A323,m1,1)
		AF('C',struct A323,m2,1)
		AF('I',struct A323,m3,1)
		AF('i',struct A323,m4,1)
		AF('p',struct A323,m5,1)
		AF('L',struct A323,m6,1)
		AF('s',struct A323,m7,1)
		AF('f',struct A323,m8,1)
		AF('p',struct A323,m9,1)
		AF('B',struct A323,m10,1)
		AF('L',struct A323,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SLjpLLjljI{iBCIipLsfpBL}s} */
#pragma pack(push,4)
struct A324 { S m0; L m1; j m2; p m3; L m4; L m5; j m6; l m7; j m8; I m9; struct A323 m10; s m11; };
#pragma pack(pop)
int f_cmpA324(const struct A324 *x, const struct A324 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA323(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA324() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A324));
		AF('S',struct A324,m0,1)
		AF('L',struct A324,m1,1)
		AF('j',struct A324,m2,1)
		AF('p',struct A324,m3,1)
		AF('L',struct A324,m4,1)
		AF('L',struct A324,m5,1)
		AF('j',struct A324,m6,1)
		AF('l',struct A324,m7,1)
		AF('j',struct A324,m8,1)
		AF('I',struct A324,m9,1)
		AFa(struct A324,m10,1,A323)
		AF('s',struct A324,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JIp} */
#pragma pack(push,8)
struct A325 { J m0; I m1; p m2; };
#pragma pack(pop)
int f_cmpA325(const struct A325 *x, const struct A325 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA325() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A325));
		AF('J',struct A325,m0,1)
		AF('I',struct A325,m1,1)
		AF('p',struct A325,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cISSdIC[5]plljc> */
#pragma pack(push,4)
union A326 { c m0; I m1; S m2; S m3; d m4; I m5; C m6[5]; p m7; l m8; l m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA326(const union A326 *x, const union A326 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA326() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A326));
		AF('c',union A326,m0,1)
		AF('I',union A326,m1,1)
		AF('S',union A326,m2,1)
		AF('S',union A326,m3,1)
		AF('d',union A326,m4,1)
		AF('I',union A326,m5,1)
		AF('C',union A326,m6,5)
		AF('p',union A326,m7,1)
		AF('l',union A326,m8,1)
		AF('l',union A326,m9,1)
		AF('j',union A326,m10,1)
		AF('c',union A326,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LSiIl<><cISSdIC[5]plljc>slll[4]p> */
#pragma pack(push,2)
union A327 { L m0; S m1; i m2; I m3; l m4; union A30 m5; union A326 m6; s m7; l m8; l m9; l m10[4]; p m11; };
#pragma pack(pop)
int f_cmpA327(const union A327 *x, const union A327 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA30(&x->m5, &y->m5) && f_cmpA326(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA327() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A327));
		AF('L',union A327,m0,1)
		AF('S',union A327,m1,1)
		AF('i',union A327,m2,1)
		AF('I',union A327,m3,1)
		AF('l',union A327,m4,1)
		AFa(union A327,m5,1,A30)
		AFa(union A327,m6,1,A326)
		AF('s',union A327,m7,1)
		AF('l',union A327,m8,1)
		AF('l',union A327,m9,1)
		AF('l',union A327,m10,4)
		AF('p',union A327,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JC> */
#pragma pack(push,4)
union A328 { J m0; C m1; };
#pragma pack(pop)
int f_cmpA328(const union A328 *x, const union A328 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA328() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A328));
		AF('J',union A328,m0,1)
		AF('C',union A328,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i[13]} */
#pragma pack(push,4)
struct A329 { i m0[13]; };
#pragma pack(pop)
int f_cmpA329(const struct A329 *x, const struct A329 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12]; };
DCaggr* f_touchA329() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A329));
		AF('i',struct A329,m0,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {IpffiLBLs[2]fsL} */
#pragma pack(push,8)
struct A330 { I m0; p m1; f m2; f m3; i m4; L m5; B m6; L m7; s m8[2]; f m9; s m10; L m11; };
#pragma pack(pop)
int f_cmpA330(const struct A330 *x, const struct A330 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA330() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A330));
		AF('I',struct A330,m0,1)
		AF('p',struct A330,m1,1)
		AF('f',struct A330,m2,1)
		AF('f',struct A330,m3,1)
		AF('i',struct A330,m4,1)
		AF('L',struct A330,m5,1)
		AF('B',struct A330,m6,1)
		AF('L',struct A330,m7,1)
		AF('s',struct A330,m8,2)
		AF('f',struct A330,m9,1)
		AF('s',struct A330,m10,1)
		AF('L',struct A330,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLpIfdldSJdj> */
#pragma pack(push,2)
union A331 { S m0; L m1; p m2; I m3; f m4; d m5; l m6; d m7; S m8; J m9; d m10; j m11; };
#pragma pack(pop)
int f_cmpA331(const union A331 *x, const union A331 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA331() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A331));
		AF('S',union A331,m0,1)
		AF('L',union A331,m1,1)
		AF('p',union A331,m2,1)
		AF('I',union A331,m3,1)
		AF('f',union A331,m4,1)
		AF('d',union A331,m5,1)
		AF('l',union A331,m6,1)
		AF('d',union A331,m7,1)
		AF('S',union A331,m8,1)
		AF('J',union A331,m9,1)
		AF('d',union A331,m10,1)
		AF('j',union A331,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SISsCI} */
#pragma pack(push,4)
struct A332 { S m0; I m1; S m2; s m3; C m4; I m5; };
#pragma pack(pop)
int f_cmpA332(const struct A332 *x, const struct A332 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA332() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A332));
		AF('S',struct A332,m0,1)
		AF('I',struct A332,m1,1)
		AF('S',struct A332,m2,1)
		AF('s',struct A332,m3,1)
		AF('C',struct A332,m4,1)
		AF('I',struct A332,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SplLfBs<>sIpf> */
#pragma pack(push,2)
union A333 { S m0; p m1; l m2; L m3; f m4; B m5; s m6; union A30 m7; s m8; I m9; p m10; f m11; };
#pragma pack(pop)
int f_cmpA333(const union A333 *x, const union A333 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA30(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA333() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A333));
		AF('S',union A333,m0,1)
		AF('p',union A333,m1,1)
		AF('l',union A333,m2,1)
		AF('L',union A333,m3,1)
		AF('f',union A333,m4,1)
		AF('B',union A333,m5,1)
		AF('s',union A333,m6,1)
		AFa(union A333,m7,1,A30)
		AF('s',union A333,m8,1)
		AF('I',union A333,m9,1)
		AF('p',union A333,m10,1)
		AF('f',union A333,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<>sIpf>s} */
#pragma pack(push,2)
struct A334 { union A331 m0; B m1; C m2; p m3; s m4; struct A332 m5; union A333 m6; s m7; };
#pragma pack(pop)
int f_cmpA334(const struct A334 *x, const struct A334 *y) { return f_cmpA331(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA332(&x->m5, &y->m5) && f_cmpA333(&x->m6, &y->m6) && x->m7 == y->m7; };
DCaggr* f_touchA334() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A334));
		AFa(struct A334,m0,1,A331)
		AF('B',struct A334,m1,1)
		AF('C',struct A334,m2,1)
		AF('p',struct A334,m3,1)
		AF('s',struct A334,m4,1)
		AFa(struct A334,m5,1,A332)
		AFa(struct A334,m6,1,A333)
		AF('s',struct A334,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIcsljlJCpL> */
#pragma pack(push,2)
union A335 { l m0; I m1; c m2; s m3; l m4; j m5; l m6; J m7; C m8; p m9; L m10; };
#pragma pack(pop)
int f_cmpA335(const union A335 *x, const union A335 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA335() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A335));
		AF('l',union A335,m0,1)
		AF('I',union A335,m1,1)
		AF('c',union A335,m2,1)
		AF('s',union A335,m3,1)
		AF('l',union A335,m4,1)
		AF('j',union A335,m5,1)
		AF('l',union A335,m6,1)
		AF('J',union A335,m7,1)
		AF('C',union A335,m8,1)
		AF('p',union A335,m9,1)
		AF('L',union A335,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdBp[8]d<lIcsljlJCpL>f> */
#pragma pack(push,4)
union A336 { C m0; d m1; B m2; p m3[8]; d m4; union A335 m5; f m6; };
#pragma pack(pop)
int f_cmpA336(const union A336 *x, const union A336 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m4 == y->m4 && f_cmpA335(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA336() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A336));
		AF('C',union A336,m0,1)
		AF('d',union A336,m1,1)
		AF('B',union A336,m2,1)
		AF('p',union A336,m3,8)
		AF('d',union A336,m4,1)
		AFa(union A336,m5,1,A335)
		AF('f',union A336,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sBs[16]} */
#pragma pack(push,8)
struct A337 { s m0; B m1; s m2[16]; };
#pragma pack(pop)
int f_cmpA337(const struct A337 *x, const struct A337 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m2[15] == y->m2[15]; };
DCaggr* f_touchA337() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A337));
		AF('s',struct A337,m0,1)
		AF('B',struct A337,m1,1)
		AF('s',struct A337,m2,16)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sdc[12]fsdjfiCLJ} */
#pragma pack(push,4)
struct A338 { S m0; d m1; c m2[12]; f m3; s m4; d m5; j m6; f m7; i m8; C m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA338(const struct A338 *x, const struct A338 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA338() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A338));
		AF('S',struct A338,m0,1)
		AF('d',struct A338,m1,1)
		AF('c',struct A338,m2,12)
		AF('f',struct A338,m3,1)
		AF('s',struct A338,m4,1)
		AF('d',struct A338,m5,1)
		AF('j',struct A338,m6,1)
		AF('f',struct A338,m7,1)
		AF('i',struct A338,m8,1)
		AF('C',struct A338,m9,1)
		AF('L',struct A338,m10,1)
		AF('J',struct A338,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bl<>L{Sdc[12]fsdjfiCLJ}[6]LccBIpc} */
#pragma pack(push,2)
struct A339 { B m0; l m1; union A30 m2; L m3; struct A338 m4[6]; L m5; c m6; c m7; B m8; I m9; p m10; c m11; };
#pragma pack(pop)
int f_cmpA339(const struct A339 *x, const struct A339 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA30(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA338(&x->m4[0], &y->m4[0]) && f_cmpA338(&x->m4[1], &y->m4[1]) && f_cmpA338(&x->m4[2], &y->m4[2]) && f_cmpA338(&x->m4[3], &y->m4[3]) && f_cmpA338(&x->m4[4], &y->m4[4]) && f_cmpA338(&x->m4[5], &y->m4[5]) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA339() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A339));
		AF('B',struct A339,m0,1)
		AF('l',struct A339,m1,1)
		AFa(struct A339,m2,1,A30)
		AF('L',struct A339,m3,1)
		AFa(struct A339,m4,6,A338)
		AF('L',struct A339,m5,1)
		AF('c',struct A339,m6,1)
		AF('c',struct A339,m7,1)
		AF('B',struct A339,m8,1)
		AF('I',struct A339,m9,1)
		AF('p',struct A339,m10,1)
		AF('c',struct A339,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cC} */
#pragma pack(push,8)
struct A340 { c m0; C m1; };
#pragma pack(pop)
int f_cmpA340(const struct A340 *x, const struct A340 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA340() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A340));
		AF('c',struct A340,m0,1)
		AF('C',struct A340,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B{cC}jls[5]d> */
#pragma pack(push,4)
union A341 { B m0; struct A340 m1; j m2; l m3; s m4[5]; d m5; };
#pragma pack(pop)
int f_cmpA341(const union A341 *x, const union A341 *y) { return x->m0 == y->m0 && f_cmpA340(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m5 == y->m5; };
DCaggr* f_touchA341() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A341));
		AF('B',union A341,m0,1)
		AFa(union A341,m1,1,A340)
		AF('j',union A341,m2,1)
		AF('l',union A341,m3,1)
		AF('s',union A341,m4,5)
		AF('d',union A341,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cclppiJfSfis> */
#pragma pack(push,2)
union A342 { c m0; c m1; l m2; p m3; p m4; i m5; J m6; f m7; S m8; f m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA342(const union A342 *x, const union A342 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA342() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A342));
		AF('c',union A342,m0,1)
		AF('c',union A342,m1,1)
		AF('l',union A342,m2,1)
		AF('p',union A342,m3,1)
		AF('p',union A342,m4,1)
		AF('i',union A342,m5,1)
		AF('J',union A342,m6,1)
		AF('f',union A342,m7,1)
		AF('S',union A342,m8,1)
		AF('f',union A342,m9,1)
		AF('i',union A342,m10,1)
		AF('s',union A342,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I[13]LcJjIBCpp[1]pf> */
#pragma pack(push,2)
union A343 { I m0[13]; L m1; c m2; J m3; j m4; I m5; B m6; C m7; p m8; p m9[1]; p m10; f m11; };
#pragma pack(pop)
int f_cmpA343(const union A343 *x, const union A343 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA343() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A343));
		AF('I',union A343,m0,13)
		AF('L',union A343,m1,1)
		AF('c',union A343,m2,1)
		AF('J',union A343,m3,1)
		AF('j',union A343,m4,1)
		AF('I',union A343,m5,1)
		AF('B',union A343,m6,1)
		AF('C',union A343,m7,1)
		AF('p',union A343,m8,1)
		AF('p',union A343,m9,1)
		AF('p',union A343,m10,1)
		AF('f',union A343,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLfllIiIj} */
#pragma pack(push,1)
struct A344 { J m0; L m1; f m2; l m3; l m4; I m5; i m6; I m7; j m8; };
#pragma pack(pop)
int f_cmpA344(const struct A344 *x, const struct A344 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA344() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A344));
		AF('J',struct A344,m0,1)
		AF('L',struct A344,m1,1)
		AF('f',struct A344,m2,1)
		AF('l',struct A344,m3,1)
		AF('l',struct A344,m4,1)
		AF('I',struct A344,m5,1)
		AF('i',struct A344,m6,1)
		AF('I',struct A344,m7,1)
		AF('j',struct A344,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdLfs[6]C> */
#pragma pack(push,4)
union A345 { s m0; d m1; L m2; f m3; s m4[6]; C m5; };
#pragma pack(pop)
int f_cmpA345(const union A345 *x, const union A345 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m5 == y->m5; };
DCaggr* f_touchA345() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A345));
		AF('s',union A345,m0,1)
		AF('d',union A345,m1,1)
		AF('L',union A345,m2,1)
		AF('f',union A345,m3,1)
		AF('s',union A345,m4,6)
		AF('C',union A345,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <clSfdSppl{JLfllIiIj}S<sdLfs[6]C>> */
#pragma pack(push,2)
union A346 { c m0; l m1; S m2; f m3; d m4; S m5; p m6; p m7; l m8; struct A344 m9; S m10; union A345 m11; };
#pragma pack(pop)
int f_cmpA346(const union A346 *x, const union A346 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA344(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA345(&x->m11, &y->m11); };
DCaggr* f_touchA346() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A346));
		AF('c',union A346,m0,1)
		AF('l',union A346,m1,1)
		AF('S',union A346,m2,1)
		AF('f',union A346,m3,1)
		AF('d',union A346,m4,1)
		AF('S',union A346,m5,1)
		AF('p',union A346,m6,1)
		AF('p',union A346,m7,1)
		AF('l',union A346,m8,1)
		AFa(union A346,m9,1,A344)
		AF('S',union A346,m10,1)
		AFa(union A346,m11,1,A345)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cd[12]CIBJi[1]IsijJ} */
#pragma pack(push,2)
struct A347 { C m0; d m1[12]; C m2; I m3; B m4; J m5; i m6[1]; I m7; s m8; i m9; j m10; J m11; };
#pragma pack(pop)
int f_cmpA347(const struct A347 *x, const struct A347 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA347() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A347));
		AF('C',struct A347,m0,1)
		AF('d',struct A347,m1,12)
		AF('C',struct A347,m2,1)
		AF('I',struct A347,m3,1)
		AF('B',struct A347,m4,1)
		AF('J',struct A347,m5,1)
		AF('i',struct A347,m6,1)
		AF('I',struct A347,m7,1)
		AF('s',struct A347,m8,1)
		AF('i',struct A347,m9,1)
		AF('j',struct A347,m10,1)
		AF('J',struct A347,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ICfpS[8]IJCfCdc> */
#pragma pack(push,4)
union A348 { I m0; C m1; f m2; p m3; S m4[8]; I m5; J m6; C m7; f m8; C m9; d m10; c m11; };
#pragma pack(pop)
int f_cmpA348(const union A348 *x, const union A348 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA348() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A348));
		AF('I',union A348,m0,1)
		AF('C',union A348,m1,1)
		AF('f',union A348,m2,1)
		AF('p',union A348,m3,1)
		AF('S',union A348,m4,8)
		AF('I',union A348,m5,1)
		AF('J',union A348,m6,1)
		AF('C',union A348,m7,1)
		AF('f',union A348,m8,1)
		AF('C',union A348,m9,1)
		AF('d',union A348,m10,1)
		AF('c',union A348,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CIdCss[6]} */
#pragma pack(push,4)
struct A349 { C m0; I m1; d m2; C m3; s m4; s m5[6]; };
#pragma pack(pop)
int f_cmpA349(const struct A349 *x, const struct A349 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5]; };
DCaggr* f_touchA349() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A349));
		AF('C',struct A349,m0,1)
		AF('I',struct A349,m1,1)
		AF('d',struct A349,m2,1)
		AF('C',struct A349,m3,1)
		AF('s',struct A349,m4,1)
		AF('s',struct A349,m5,6)
		dcCloseAggr(a);
	}
	return a;
};
/* <pJcBJjB[6]BJCcB> */
#pragma pack(push,2)
union A350 { p m0; J m1; c m2; B m3; J m4; j m5; B m6[6]; B m7; J m8; C m9; c m10; B m11; };
#pragma pack(pop)
int f_cmpA350(const union A350 *x, const union A350 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA350() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A350));
		AF('p',union A350,m0,1)
		AF('J',union A350,m1,1)
		AF('c',union A350,m2,1)
		AF('B',union A350,m3,1)
		AF('J',union A350,m4,1)
		AF('j',union A350,m5,1)
		AF('B',union A350,m6,6)
		AF('B',union A350,m7,1)
		AF('J',union A350,m8,1)
		AF('C',union A350,m9,1)
		AF('c',union A350,m10,1)
		AF('B',union A350,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL> */
#pragma pack(push,4)
union A351 { struct A349 m0; S m1; j m2; c m3; i m4; i m5; p m6; B m7; I m8; union A350 m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA351(const union A351 *x, const union A351 *y) { return f_cmpA349(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA350(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA351() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A351));
		AFa(union A351,m0,1,A349)
		AF('S',union A351,m1,1)
		AF('j',union A351,m2,1)
		AF('c',union A351,m3,1)
		AF('i',union A351,m4,1)
		AF('i',union A351,m5,1)
		AF('p',union A351,m6,1)
		AF('B',union A351,m7,1)
		AF('I',union A351,m8,1)
		AFa(union A351,m9,1,A350)
		AF('c',union A351,m10,1)
		AF('L',union A351,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SfspdscpIpsj} */
#pragma pack(push,2)
struct A352 { S m0; f m1; s m2; p m3; d m4; s m5; c m6; p m7; I m8; p m9; s m10; j m11; };
#pragma pack(pop)
int f_cmpA352(const struct A352 *x, const struct A352 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA352() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A352));
		AF('S',struct A352,m0,1)
		AF('f',struct A352,m1,1)
		AF('s',struct A352,m2,1)
		AF('p',struct A352,m3,1)
		AF('d',struct A352,m4,1)
		AF('s',struct A352,m5,1)
		AF('c',struct A352,m6,1)
		AF('p',struct A352,m7,1)
		AF('I',struct A352,m8,1)
		AF('p',struct A352,m9,1)
		AF('s',struct A352,m10,1)
		AF('j',struct A352,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cLSlfjI> */
#pragma pack(push,4)
union A353 { c m0; L m1; S m2; l m3; f m4; j m5; I m6; };
#pragma pack(pop)
int f_cmpA353(const union A353 *x, const union A353 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA353() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A353));
		AF('c',union A353,m0,1)
		AF('L',union A353,m1,1)
		AF('S',union A353,m2,1)
		AF('l',union A353,m3,1)
		AF('f',union A353,m4,1)
		AF('j',union A353,m5,1)
		AF('I',union A353,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCSBddjLSfjs} */
#pragma pack(push,1)
struct A354 { L m0; C m1; S m2; B m3; d m4; d m5; j m6; L m7; S m8; f m9; j m10; s m11; };
#pragma pack(pop)
int f_cmpA354(const struct A354 *x, const struct A354 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA354() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A354));
		AF('L',struct A354,m0,1)
		AF('C',struct A354,m1,1)
		AF('S',struct A354,m2,1)
		AF('B',struct A354,m3,1)
		AF('d',struct A354,m4,1)
		AF('d',struct A354,m5,1)
		AF('j',struct A354,m6,1)
		AF('L',struct A354,m7,1)
		AF('S',struct A354,m8,1)
		AF('f',struct A354,m9,1)
		AF('j',struct A354,m10,1)
		AF('s',struct A354,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pC[10]dLiCIsfpdL} */
#pragma pack(push,1)
struct A355 { p m0; C m1[10]; d m2; L m3; i m4; C m5; I m6; s m7; f m8; p m9; d m10; L m11; };
#pragma pack(pop)
int f_cmpA355(const struct A355 *x, const struct A355 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA355() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A355));
		AF('p',struct A355,m0,1)
		AF('C',struct A355,m1,10)
		AF('d',struct A355,m2,1)
		AF('L',struct A355,m3,1)
		AF('i',struct A355,m4,1)
		AF('C',struct A355,m5,1)
		AF('I',struct A355,m6,1)
		AF('s',struct A355,m7,1)
		AF('f',struct A355,m8,1)
		AF('p',struct A355,m9,1)
		AF('d',struct A355,m10,1)
		AF('L',struct A355,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d<cLSlfjI>djcf{LCSBddjLSfjs}j{pC[10]dLiCIsfpdL}[6]jdL> */
#pragma pack(push,4)
union A356 { d m0; union A353 m1; d m2; j m3; c m4; f m5; struct A354 m6; j m7; struct A355 m8[6]; j m9; d m10; L m11; };
#pragma pack(pop)
int f_cmpA356(const union A356 *x, const union A356 *y) { return x->m0 == y->m0 && f_cmpA353(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA354(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA355(&x->m8[0], &y->m8[0]) && f_cmpA355(&x->m8[1], &y->m8[1]) && f_cmpA355(&x->m8[2], &y->m8[2]) && f_cmpA355(&x->m8[3], &y->m8[3]) && f_cmpA355(&x->m8[4], &y->m8[4]) && f_cmpA355(&x->m8[5], &y->m8[5]) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA356() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A356));
		AF('d',union A356,m0,1)
		AFa(union A356,m1,1,A353)
		AF('d',union A356,m2,1)
		AF('j',union A356,m3,1)
		AF('c',union A356,m4,1)
		AF('f',union A356,m5,1)
		AFa(union A356,m6,1,A354)
		AF('j',union A356,m7,1)
		AFa(union A356,m8,6,A355)
		AF('j',union A356,m9,1)
		AF('d',union A356,m10,1)
		AF('L',union A356,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BfCpdiLsJsiL> */
#pragma pack(push,4)
union A357 { B m0; f m1; C m2; p m3; d m4; i m5; L m6; s m7; J m8; s m9; i m10; L m11; };
#pragma pack(pop)
int f_cmpA357(const union A357 *x, const union A357 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA357() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A357));
		AF('B',union A357,m0,1)
		AF('f',union A357,m1,1)
		AF('C',union A357,m2,1)
		AF('p',union A357,m3,1)
		AF('d',union A357,m4,1)
		AF('i',union A357,m5,1)
		AF('L',union A357,m6,1)
		AF('s',union A357,m7,1)
		AF('J',union A357,m8,1)
		AF('s',union A357,m9,1)
		AF('i',union A357,m10,1)
		AF('L',union A357,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jj> */
#pragma pack(push,2)
union A358 { j m0; j m1; };
#pragma pack(pop)
int f_cmpA358(const union A358 *x, const union A358 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA358() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A358));
		AF('j',union A358,m0,1)
		AF('j',union A358,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBJLCflCfsiI} */
#pragma pack(push,8)
struct A359 { I m0; B m1; J m2; L m3; C m4; f m5; l m6; C m7; f m8; s m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA359(const struct A359 *x, const struct A359 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA359() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A359));
		AF('I',struct A359,m0,1)
		AF('B',struct A359,m1,1)
		AF('J',struct A359,m2,1)
		AF('L',struct A359,m3,1)
		AF('C',struct A359,m4,1)
		AF('f',struct A359,m5,1)
		AF('l',struct A359,m6,1)
		AF('C',struct A359,m7,1)
		AF('f',struct A359,m8,1)
		AF('s',struct A359,m9,1)
		AF('i',struct A359,m10,1)
		AF('I',struct A359,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cJSjCBIIj} */
#pragma pack(push,4)
struct A360 { c m0; J m1; S m2; j m3; C m4; B m5; I m6; I m7; j m8; };
#pragma pack(pop)
int f_cmpA360(const struct A360 *x, const struct A360 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA360() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A360));
		AF('c',struct A360,m0,1)
		AF('J',struct A360,m1,1)
		AF('S',struct A360,m2,1)
		AF('j',struct A360,m3,1)
		AF('C',struct A360,m4,1)
		AF('B',struct A360,m5,1)
		AF('I',struct A360,m6,1)
		AF('I',struct A360,m7,1)
		AF('j',struct A360,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ilcjC{cJSjCBIIj}[14]lfBCdS> */
#pragma pack(push,2)
union A361 { i m0; l m1; c m2; j m3; C m4; struct A360 m5[14]; l m6; f m7; B m8; C m9; d m10; S m11; };
#pragma pack(pop)
int f_cmpA361(const union A361 *x, const union A361 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA360(&x->m5[0], &y->m5[0]) && f_cmpA360(&x->m5[1], &y->m5[1]) && f_cmpA360(&x->m5[2], &y->m5[2]) && f_cmpA360(&x->m5[3], &y->m5[3]) && f_cmpA360(&x->m5[4], &y->m5[4]) && f_cmpA360(&x->m5[5], &y->m5[5]) && f_cmpA360(&x->m5[6], &y->m5[6]) && f_cmpA360(&x->m5[7], &y->m5[7]) && f_cmpA360(&x->m5[8], &y->m5[8]) && f_cmpA360(&x->m5[9], &y->m5[9]) && f_cmpA360(&x->m5[10], &y->m5[10]) && f_cmpA360(&x->m5[11], &y->m5[11]) && f_cmpA360(&x->m5[12], &y->m5[12]) && f_cmpA360(&x->m5[13], &y->m5[13]) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA361() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A361));
		AF('i',union A361,m0,1)
		AF('l',union A361,m1,1)
		AF('c',union A361,m2,1)
		AF('j',union A361,m3,1)
		AF('C',union A361,m4,1)
		AFa(union A361,m5,14,A360)
		AF('l',union A361,m6,1)
		AF('f',union A361,m7,1)
		AF('B',union A361,m8,1)
		AF('C',union A361,m9,1)
		AF('d',union A361,m10,1)
		AF('S',union A361,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lJIpi[4]ldjJl> */
#pragma pack(push,2)
union A362 { l m0; J m1; I m2; p m3; i m4[4]; l m5; d m6; j m7; J m8; l m9; };
#pragma pack(pop)
int f_cmpA362(const union A362 *x, const union A362 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA362() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A362));
		AF('l',union A362,m0,1)
		AF('J',union A362,m1,1)
		AF('I',union A362,m2,1)
		AF('p',union A362,m3,1)
		AF('i',union A362,m4,4)
		AF('l',union A362,m5,1)
		AF('d',union A362,m6,1)
		AF('j',union A362,m7,1)
		AF('J',union A362,m8,1)
		AF('l',union A362,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cl> */
#pragma pack(push,1)
union A363 { C m0; l m1; };
#pragma pack(pop)
int f_cmpA363(const union A363 *x, const union A363 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA363() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A363));
		AF('C',union A363,m0,1)
		AF('l',union A363,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdJ> */
#pragma pack(push,4)
union A364 { p m0; d m1; J m2; };
#pragma pack(pop)
int f_cmpA364(const union A364 *x, const union A364 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA364() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A364));
		AF('p',union A364,m0,1)
		AF('d',union A364,m1,1)
		AF('J',union A364,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpiisIfilBfS} */
#pragma pack(push,4)
struct A365 { j m0; p m1; i m2; i m3; s m4; I m5; f m6; i m7; l m8; B m9; f m10; S m11; };
#pragma pack(pop)
int f_cmpA365(const struct A365 *x, const struct A365 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA365() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A365));
		AF('j',struct A365,m0,1)
		AF('p',struct A365,m1,1)
		AF('i',struct A365,m2,1)
		AF('i',struct A365,m3,1)
		AF('s',struct A365,m4,1)
		AF('I',struct A365,m5,1)
		AF('f',struct A365,m6,1)
		AF('i',struct A365,m7,1)
		AF('l',struct A365,m8,1)
		AF('B',struct A365,m9,1)
		AF('f',struct A365,m10,1)
		AF('S',struct A365,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JC} */
#pragma pack(push,2)
struct A366 { J m0; C m1; };
#pragma pack(pop)
int f_cmpA366(const struct A366 *x, const struct A366 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA366() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A366));
		AF('J',struct A366,m0,1)
		AF('C',struct A366,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {si} */
#pragma pack(push,1)
struct A367 { s m0; i m1; };
#pragma pack(pop)
int f_cmpA367(const struct A367 *x, const struct A367 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA367() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A367));
		AF('s',struct A367,m0,1)
		AF('i',struct A367,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BLS} */
#pragma pack(push,4)
struct A368 { B m0; L m1; S m2; };
#pragma pack(pop)
int f_cmpA368(const struct A368 *x, const struct A368 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA368() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A368));
		AF('B',struct A368,m0,1)
		AF('L',struct A368,m1,1)
		AF('S',struct A368,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IdcdjJCsJCLf} */
#pragma pack(push,2)
struct A369 { I m0; d m1; c m2; d m3; j m4; J m5; C m6; s m7; J m8; C m9; L m10; f m11; };
#pragma pack(pop)
int f_cmpA369(const struct A369 *x, const struct A369 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA369() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A369));
		AF('I',struct A369,m0,1)
		AF('d',struct A369,m1,1)
		AF('c',struct A369,m2,1)
		AF('d',struct A369,m3,1)
		AF('j',struct A369,m4,1)
		AF('J',struct A369,m5,1)
		AF('C',struct A369,m6,1)
		AF('s',struct A369,m7,1)
		AF('J',struct A369,m8,1)
		AF('C',struct A369,m9,1)
		AF('L',struct A369,m10,1)
		AF('f',struct A369,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LCcs[7]dBL[6]iiiJC} */
#pragma pack(push,4)
struct A370 { L m0; C m1; c m2; s m3[7]; d m4; B m5; L m6[6]; i m7; i m8; i m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA370(const struct A370 *x, const struct A370 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA370() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A370));
		AF('L',struct A370,m0,1)
		AF('C',struct A370,m1,1)
		AF('c',struct A370,m2,1)
		AF('s',struct A370,m3,7)
		AF('d',struct A370,m4,1)
		AF('B',struct A370,m5,1)
		AF('L',struct A370,m6,6)
		AF('i',struct A370,m7,1)
		AF('i',struct A370,m8,1)
		AF('i',struct A370,m9,1)
		AF('J',struct A370,m10,1)
		AF('C',struct A370,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[3]dC[9]f} */
#pragma pack(push,4)
struct A371 { d m0[3]; d m1; C m2[9]; f m3; };
#pragma pack(pop)
int f_cmpA371(const struct A371 *x, const struct A371 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m3 == y->m3; };
DCaggr* f_touchA371() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A371));
		AF('d',struct A371,m0,3)
		AF('d',struct A371,m1,1)
		AF('C',struct A371,m2,9)
		AF('f',struct A371,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CISl[16]lfJjSlIJ> */
#pragma pack(push,8)
union A372 { C m0; I m1; S m2; l m3[16]; l m4; f m5; J m6; j m7; S m8; l m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA372(const union A372 *x, const union A372 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m3[15] == y->m3[15] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA372() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A372));
		AF('C',union A372,m0,1)
		AF('I',union A372,m1,1)
		AF('S',union A372,m2,1)
		AF('l',union A372,m3,16)
		AF('l',union A372,m4,1)
		AF('f',union A372,m5,1)
		AF('J',union A372,m6,1)
		AF('j',union A372,m7,1)
		AF('S',union A372,m8,1)
		AF('l',union A372,m9,1)
		AF('I',union A372,m10,1)
		AF('J',union A372,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ll[1]pLSsJs} */
#pragma pack(push,4)
struct A373 { L m0; l m1[1]; p m2; L m3; S m4; s m5; J m6; s m7; };
#pragma pack(pop)
int f_cmpA373(const struct A373 *x, const struct A373 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA373() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A373));
		AF('L',struct A373,m0,1)
		AF('l',struct A373,m1,1)
		AF('p',struct A373,m2,1)
		AF('L',struct A373,m3,1)
		AF('S',struct A373,m4,1)
		AF('s',struct A373,m5,1)
		AF('J',struct A373,m6,1)
		AF('s',struct A373,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ILIcpCj> */
#pragma pack(push,4)
union A374 { I m0; L m1; I m2; c m3; p m4; C m5; j m6; };
#pragma pack(pop)
int f_cmpA374(const union A374 *x, const union A374 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA374() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A374));
		AF('I',union A374,m0,1)
		AF('L',union A374,m1,1)
		AF('I',union A374,m2,1)
		AF('c',union A374,m3,1)
		AF('p',union A374,m4,1)
		AF('C',union A374,m5,1)
		AF('j',union A374,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sBldCiBisi> */
#pragma pack(push,8)
union A375 { s m0; B m1; l m2; d m3; C m4; i m5; B m6; i m7; s m8; i m9; };
#pragma pack(pop)
int f_cmpA375(const union A375 *x, const union A375 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA375() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A375));
		AF('s',union A375,m0,1)
		AF('B',union A375,m1,1)
		AF('l',union A375,m2,1)
		AF('d',union A375,m3,1)
		AF('C',union A375,m4,1)
		AF('i',union A375,m5,1)
		AF('B',union A375,m6,1)
		AF('i',union A375,m7,1)
		AF('s',union A375,m8,1)
		AF('i',union A375,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcBJSJ> */
#pragma pack(push,2)
union A376 { B m0; c m1; B m2; J m3; S m4; J m5; };
#pragma pack(pop)
int f_cmpA376(const union A376 *x, const union A376 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA376() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A376));
		AF('B',union A376,m0,1)
		AF('c',union A376,m1,1)
		AF('B',union A376,m2,1)
		AF('J',union A376,m3,1)
		AF('S',union A376,m4,1)
		AF('J',union A376,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JpBdpCiLCflJ} */
#pragma pack(push,8)
struct A377 { J m0; p m1; B m2; d m3; p m4; C m5; i m6; L m7; C m8; f m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA377(const struct A377 *x, const struct A377 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA377() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A377));
		AF('J',struct A377,m0,1)
		AF('p',struct A377,m1,1)
		AF('B',struct A377,m2,1)
		AF('d',struct A377,m3,1)
		AF('p',struct A377,m4,1)
		AF('C',struct A377,m5,1)
		AF('i',struct A377,m6,1)
		AF('L',struct A377,m7,1)
		AF('C',struct A377,m8,1)
		AF('f',struct A377,m9,1)
		AF('l',struct A377,m10,1)
		AF('J',struct A377,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pS[6]LC[5]IjSfiBIp> */
#pragma pack(push,1)
union A378 { p m0; S m1[6]; L m2; C m3[5]; I m4; j m5; S m6; f m7; i m8; B m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA378(const union A378 *x, const union A378 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA378() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A378));
		AF('p',union A378,m0,1)
		AF('S',union A378,m1,6)
		AF('L',union A378,m2,1)
		AF('C',union A378,m3,5)
		AF('I',union A378,m4,1)
		AF('j',union A378,m5,1)
		AF('S',union A378,m6,1)
		AF('f',union A378,m7,1)
		AF('i',union A378,m8,1)
		AF('B',union A378,m9,1)
		AF('I',union A378,m10,1)
		AF('p',union A378,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs> */
#pragma pack(push,4)
union A379 { J m0; struct A377 m1; l m2; l m3; union A378 m4; j m5; J m6; s m7; };
#pragma pack(pop)
int f_cmpA379(const union A379 *x, const union A379 *y) { return x->m0 == y->m0 && f_cmpA377(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA378(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA379() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A379));
		AF('J',union A379,m0,1)
		AFa(union A379,m1,1,A377)
		AF('l',union A379,m2,1)
		AF('l',union A379,m3,1)
		AFa(union A379,m4,1,A378)
		AF('j',union A379,m5,1)
		AF('J',union A379,m6,1)
		AF('s',union A379,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JjIfJljIIIjL} */
#pragma pack(push,4)
struct A380 { J m0; j m1; I m2; f m3; J m4; l m5; j m6; I m7; I m8; I m9; j m10; L m11; };
#pragma pack(pop)
int f_cmpA380(const struct A380 *x, const struct A380 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA380() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A380));
		AF('J',struct A380,m0,1)
		AF('j',struct A380,m1,1)
		AF('I',struct A380,m2,1)
		AF('f',struct A380,m3,1)
		AF('J',struct A380,m4,1)
		AF('l',struct A380,m5,1)
		AF('j',struct A380,m6,1)
		AF('I',struct A380,m7,1)
		AF('I',struct A380,m8,1)
		AF('I',struct A380,m9,1)
		AF('j',struct A380,m10,1)
		AF('L',struct A380,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSBiIjIdI> */
#pragma pack(push,4)
union A381 { l m0; S m1; B m2; i m3; I m4; j m5; I m6; d m7; I m8; };
#pragma pack(pop)
int f_cmpA381(const union A381 *x, const union A381 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA381() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A381));
		AF('l',union A381,m0,1)
		AF('S',union A381,m1,1)
		AF('B',union A381,m2,1)
		AF('i',union A381,m3,1)
		AF('I',union A381,m4,1)
		AF('j',union A381,m5,1)
		AF('I',union A381,m6,1)
		AF('d',union A381,m7,1)
		AF('I',union A381,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I> */
#pragma pack(push,4)
union A382 { I m0; };
#pragma pack(pop)
int f_cmpA382(const union A382 *x, const union A382 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA382() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A382));
		AF('I',union A382,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <siBB[5]i<lSBiIjIdI>scl<I>sd> */
#pragma pack(push,4)
union A383 { s m0; i m1; B m2; B m3[5]; i m4; union A381 m5; s m6; c m7; l m8; union A382 m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA383(const union A383 *x, const union A383 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m4 == y->m4 && f_cmpA381(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA382(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA383() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A383));
		AF('s',union A383,m0,1)
		AF('i',union A383,m1,1)
		AF('B',union A383,m2,1)
		AF('B',union A383,m3,5)
		AF('i',union A383,m4,1)
		AFa(union A383,m5,1,A381)
		AF('s',union A383,m6,1)
		AF('c',union A383,m7,1)
		AF('l',union A383,m8,1)
		AFa(union A383,m9,1,A382)
		AF('s',union A383,m10,1)
		AF('d',union A383,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjiiBLdiJSd[9]J} */
#pragma pack(push,1)
struct A384 { B m0; j m1; i m2; i m3; B m4; L m5; d m6; i m7; J m8; S m9; d m10[9]; J m11; };
#pragma pack(pop)
int f_cmpA384(const struct A384 *x, const struct A384 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m11 == y->m11; };
DCaggr* f_touchA384() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A384));
		AF('B',struct A384,m0,1)
		AF('j',struct A384,m1,1)
		AF('i',struct A384,m2,1)
		AF('i',struct A384,m3,1)
		AF('B',struct A384,m4,1)
		AF('L',struct A384,m5,1)
		AF('d',struct A384,m6,1)
		AF('i',struct A384,m7,1)
		AF('J',struct A384,m8,1)
		AF('S',struct A384,m9,1)
		AF('d',struct A384,m10,9)
		AF('J',struct A384,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CBCIIpdfJiSS> */
#pragma pack(push,4)
union A385 { C m0; B m1; C m2; I m3; I m4; p m5; d m6; f m7; J m8; i m9; S m10; S m11; };
#pragma pack(pop)
int f_cmpA385(const union A385 *x, const union A385 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA385() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A385));
		AF('C',union A385,m0,1)
		AF('B',union A385,m1,1)
		AF('C',union A385,m2,1)
		AF('I',union A385,m3,1)
		AF('I',union A385,m4,1)
		AF('p',union A385,m5,1)
		AF('d',union A385,m6,1)
		AF('f',union A385,m7,1)
		AF('J',union A385,m8,1)
		AF('i',union A385,m9,1)
		AF('S',union A385,m10,1)
		AF('S',union A385,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI> */
#pragma pack(push,4)
union A386 { d m0; p m1; f m2; B m3; J m4; struct A384 m5; s m6; union A385 m7; s m8; l m9; I m10; };
#pragma pack(pop)
int f_cmpA386(const union A386 *x, const union A386 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA384(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA385(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA386() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A386));
		AF('d',union A386,m0,1)
		AF('p',union A386,m1,1)
		AF('f',union A386,m2,1)
		AF('B',union A386,m3,1)
		AF('J',union A386,m4,1)
		AFa(union A386,m5,1,A384)
		AF('s',union A386,m6,1)
		AFa(union A386,m7,1,A385)
		AF('s',union A386,m8,1)
		AF('l',union A386,m9,1)
		AF('I',union A386,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJJpJlCI> */
#pragma pack(push,4)
union A387 { S m0; J m1; J m2; p m3; J m4; l m5; C m6; I m7; };
#pragma pack(pop)
int f_cmpA387(const union A387 *x, const union A387 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA387() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A387));
		AF('S',union A387,m0,1)
		AF('J',union A387,m1,1)
		AF('J',union A387,m2,1)
		AF('p',union A387,m3,1)
		AF('J',union A387,m4,1)
		AF('l',union A387,m5,1)
		AF('C',union A387,m6,1)
		AF('I',union A387,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LScCJJLdsBJj} */
#pragma pack(push,4)
struct A388 { L m0; S m1; c m2; C m3; J m4; J m5; L m6; d m7; s m8; B m9; J m10; j m11; };
#pragma pack(pop)
int f_cmpA388(const struct A388 *x, const struct A388 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA388() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A388));
		AF('L',struct A388,m0,1)
		AF('S',struct A388,m1,1)
		AF('c',struct A388,m2,1)
		AF('C',struct A388,m3,1)
		AF('J',struct A388,m4,1)
		AF('J',struct A388,m5,1)
		AF('L',struct A388,m6,1)
		AF('d',struct A388,m7,1)
		AF('s',struct A388,m8,1)
		AF('B',struct A388,m9,1)
		AF('J',struct A388,m10,1)
		AF('j',struct A388,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCLjLLfilpsS> */
#pragma pack(push,1)
union A389 { d m0; C m1; L m2; j m3; L m4; L m5; f m6; i m7; l m8; p m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA389(const union A389 *x, const union A389 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA389() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A389));
		AF('d',union A389,m0,1)
		AF('C',union A389,m1,1)
		AF('L',union A389,m2,1)
		AF('j',union A389,m3,1)
		AF('L',union A389,m4,1)
		AF('L',union A389,m5,1)
		AF('f',union A389,m6,1)
		AF('i',union A389,m7,1)
		AF('l',union A389,m8,1)
		AF('p',union A389,m9,1)
		AF('s',union A389,m10,1)
		AF('S',union A389,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <is<dCLjLLfilpsS>SCSfSLlBl> */
#pragma pack(push,4)
union A390 { i m0; s m1; union A389 m2; S m3; C m4; S m5; f m6; S m7; L m8; l m9; B m10; l m11; };
#pragma pack(pop)
int f_cmpA390(const union A390 *x, const union A390 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA389(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA390() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A390));
		AF('i',union A390,m0,1)
		AF('s',union A390,m1,1)
		AFa(union A390,m2,1,A389)
		AF('S',union A390,m3,1)
		AF('C',union A390,m4,1)
		AF('S',union A390,m5,1)
		AF('f',union A390,m6,1)
		AF('S',union A390,m7,1)
		AF('L',union A390,m8,1)
		AF('l',union A390,m9,1)
		AF('B',union A390,m10,1)
		AF('l',union A390,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BjpJ[11]> */
#pragma pack(push,8)
union A391 { B m0; j m1; p m2; J m3[11]; };
#pragma pack(pop)
int f_cmpA391(const union A391 *x, const union A391 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10]; };
DCaggr* f_touchA391() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A391));
		AF('B',union A391,m0,1)
		AF('j',union A391,m1,1)
		AF('p',union A391,m2,1)
		AF('J',union A391,m3,11)
		dcCloseAggr(a);
	}
	return a;
};
/* {psCpSjcI} */
#pragma pack(push,2)
struct A392 { p m0; s m1; C m2; p m3; S m4; j m5; c m6; I m7; };
#pragma pack(pop)
int f_cmpA392(const struct A392 *x, const struct A392 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA392() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A392));
		AF('p',struct A392,m0,1)
		AF('s',struct A392,m1,1)
		AF('C',struct A392,m2,1)
		AF('p',struct A392,m3,1)
		AF('S',struct A392,m4,1)
		AF('j',struct A392,m5,1)
		AF('c',struct A392,m6,1)
		AF('I',struct A392,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cslc[8]SBifsjIJ} */
#pragma pack(push,4)
struct A393 { C m0; s m1; l m2; c m3[8]; S m4; B m5; i m6; f m7; s m8; j m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA393(const struct A393 *x, const struct A393 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA393() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A393));
		AF('C',struct A393,m0,1)
		AF('s',struct A393,m1,1)
		AF('l',struct A393,m2,1)
		AF('c',struct A393,m3,8)
		AF('S',struct A393,m4,1)
		AF('B',struct A393,m5,1)
		AF('i',struct A393,m6,1)
		AF('f',struct A393,m7,1)
		AF('s',struct A393,m8,1)
		AF('j',struct A393,m9,1)
		AF('I',struct A393,m10,1)
		AF('J',struct A393,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pILSIplCLLcL> */
#pragma pack(push,1)
union A394 { p m0; I m1; L m2; S m3; I m4; p m5; l m6; C m7; L m8; L m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA394(const union A394 *x, const union A394 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA394() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A394));
		AF('p',union A394,m0,1)
		AF('I',union A394,m1,1)
		AF('L',union A394,m2,1)
		AF('S',union A394,m3,1)
		AF('I',union A394,m4,1)
		AF('p',union A394,m5,1)
		AF('l',union A394,m6,1)
		AF('C',union A394,m7,1)
		AF('L',union A394,m8,1)
		AF('L',union A394,m9,1)
		AF('c',union A394,m10,1)
		AF('L',union A394,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBldliiL<pILSIplCLLcL>jii> */
#pragma pack(push,8)
union A395 { i m0; B m1; l m2; d m3; l m4; i m5; i m6; L m7; union A394 m8; j m9; i m10; i m11; };
#pragma pack(pop)
int f_cmpA395(const union A395 *x, const union A395 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA394(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA395() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A395));
		AF('i',union A395,m0,1)
		AF('B',union A395,m1,1)
		AF('l',union A395,m2,1)
		AF('d',union A395,m3,1)
		AF('l',union A395,m4,1)
		AF('i',union A395,m5,1)
		AF('i',union A395,m6,1)
		AF('L',union A395,m7,1)
		AFa(union A395,m8,1,A394)
		AF('j',union A395,m9,1)
		AF('i',union A395,m10,1)
		AF('i',union A395,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ> */
#pragma pack(push,2)
union A396 { B m0; s m1; f m2; J m3; union A395 m4; I m5; c m6; I m7; B m8; d m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA396(const union A396 *x, const union A396 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA395(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA396() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A396));
		AF('B',union A396,m0,1)
		AF('s',union A396,m1,1)
		AF('f',union A396,m2,1)
		AF('J',union A396,m3,1)
		AFa(union A396,m4,1,A395)
		AF('I',union A396,m5,1)
		AF('c',union A396,m6,1)
		AF('I',union A396,m7,1)
		AF('B',union A396,m8,1)
		AF('d',union A396,m9,1)
		AF('B',union A396,m10,1)
		AF('J',union A396,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IC[15]pSCCCJjdId> */
#pragma pack(push,4)
union A397 { I m0; C m1[15]; p m2; S m3; C m4; C m5; C m6; J m7; j m8; d m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA397(const union A397 *x, const union A397 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA397() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A397));
		AF('I',union A397,m0,1)
		AF('C',union A397,m1,15)
		AF('p',union A397,m2,1)
		AF('S',union A397,m3,1)
		AF('C',union A397,m4,1)
		AF('C',union A397,m5,1)
		AF('C',union A397,m6,1)
		AF('J',union A397,m7,1)
		AF('j',union A397,m8,1)
		AF('d',union A397,m9,1)
		AF('I',union A397,m10,1)
		AF('d',union A397,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<IC[15]pSCCCJjdId>> */
#pragma pack(push,8)
union A398 { union A397 m0; };
#pragma pack(pop)
int f_cmpA398(const union A398 *x, const union A398 *y) { return f_cmpA397(&x->m0, &y->m0); };
DCaggr* f_touchA398() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A398));
		AFa(union A398,m0,1,A397)
		dcCloseAggr(a);
	}
	return a;
};
/* <jclpJppSILds> */
#pragma pack(push,4)
union A399 { j m0; c m1; l m2; p m3; J m4; p m5; p m6; S m7; I m8; L m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA399(const union A399 *x, const union A399 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA399() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A399));
		AF('j',union A399,m0,1)
		AF('c',union A399,m1,1)
		AF('l',union A399,m2,1)
		AF('p',union A399,m3,1)
		AF('J',union A399,m4,1)
		AF('p',union A399,m5,1)
		AF('p',union A399,m6,1)
		AF('S',union A399,m7,1)
		AF('I',union A399,m8,1)
		AF('L',union A399,m9,1)
		AF('d',union A399,m10,1)
		AF('s',union A399,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iBpdpJdcliBL} */
#pragma pack(push,4)
struct A400 { i m0; B m1; p m2; d m3; p m4; J m5; d m6; c m7; l m8; i m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA400(const struct A400 *x, const struct A400 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA400() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A400));
		AF('i',struct A400,m0,1)
		AF('B',struct A400,m1,1)
		AF('p',struct A400,m2,1)
		AF('d',struct A400,m3,1)
		AF('p',struct A400,m4,1)
		AF('J',struct A400,m5,1)
		AF('d',struct A400,m6,1)
		AF('c',struct A400,m7,1)
		AF('l',struct A400,m8,1)
		AF('i',struct A400,m9,1)
		AF('B',struct A400,m10,1)
		AF('L',struct A400,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C> */
#pragma pack(push,4)
union A401 { l m0; B m1; j m2; B m3; S m4; S m5; J m6; union A399 m7; I m8; B m9; struct A400 m10; C m11; };
#pragma pack(pop)
int f_cmpA401(const union A401 *x, const union A401 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA399(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA400(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA401() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A401));
		AF('l',union A401,m0,1)
		AF('B',union A401,m1,1)
		AF('j',union A401,m2,1)
		AF('B',union A401,m3,1)
		AF('S',union A401,m4,1)
		AF('S',union A401,m5,1)
		AF('J',union A401,m6,1)
		AFa(union A401,m7,1,A399)
		AF('I',union A401,m8,1)
		AF('B',union A401,m9,1)
		AFa(union A401,m10,1,A400)
		AF('C',union A401,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCCf> */
#pragma pack(push,1)
union A402 { d m0; C m1; C m2; f m3; };
#pragma pack(pop)
int f_cmpA402(const union A402 *x, const union A402 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA402() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A402));
		AF('d',union A402,m0,1)
		AF('C',union A402,m1,1)
		AF('C',union A402,m2,1)
		AF('f',union A402,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CLSBIisfJI> */
#pragma pack(push,4)
union A403 { C m0; L m1; S m2; B m3; I m4; i m5; s m6; f m7; J m8; I m9; };
#pragma pack(pop)
int f_cmpA403(const union A403 *x, const union A403 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA403() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A403));
		AF('C',union A403,m0,1)
		AF('L',union A403,m1,1)
		AF('S',union A403,m2,1)
		AF('B',union A403,m3,1)
		AF('I',union A403,m4,1)
		AF('i',union A403,m5,1)
		AF('s',union A403,m6,1)
		AF('f',union A403,m7,1)
		AF('J',union A403,m8,1)
		AF('I',union A403,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LpdsdJcp<dCCf>l<CLSBIisfJI>s> */
#pragma pack(push,2)
union A404 { L m0; p m1; d m2; s m3; d m4; J m5; c m6; p m7; union A402 m8; l m9; union A403 m10; s m11; };
#pragma pack(pop)
int f_cmpA404(const union A404 *x, const union A404 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA402(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA403(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA404() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A404));
		AF('L',union A404,m0,1)
		AF('p',union A404,m1,1)
		AF('d',union A404,m2,1)
		AF('s',union A404,m3,1)
		AF('d',union A404,m4,1)
		AF('J',union A404,m5,1)
		AF('c',union A404,m6,1)
		AF('p',union A404,m7,1)
		AFa(union A404,m8,1,A402)
		AF('l',union A404,m9,1)
		AFa(union A404,m10,1,A403)
		AF('s',union A404,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p} */
#pragma pack(push,4)
struct A405 { J m0; S m1; union A398 m2; c m3; i m4; I m5; c m6; J m7; union A401 m8; p m9; union A404 m10; p m11; };
#pragma pack(pop)
int f_cmpA405(const struct A405 *x, const struct A405 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA398(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA401(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA404(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA405() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A405));
		AF('J',struct A405,m0,1)
		AF('S',struct A405,m1,1)
		AFa(struct A405,m2,1,A398)
		AF('c',struct A405,m3,1)
		AF('i',struct A405,m4,1)
		AF('I',struct A405,m5,1)
		AF('c',struct A405,m6,1)
		AF('J',struct A405,m7,1)
		AFa(struct A405,m8,1,A401)
		AF('p',struct A405,m9,1)
		AFa(struct A405,m10,1,A404)
		AF('p',struct A405,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLlSlcpc> */
#pragma pack(push,4)
union A406 { S m0; L m1; l m2; S m3; l m4; c m5; p m6; c m7; };
#pragma pack(pop)
int f_cmpA406(const union A406 *x, const union A406 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA406() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A406));
		AF('S',union A406,m0,1)
		AF('L',union A406,m1,1)
		AF('l',union A406,m2,1)
		AF('S',union A406,m3,1)
		AF('l',union A406,m4,1)
		AF('c',union A406,m5,1)
		AF('p',union A406,m6,1)
		AF('c',union A406,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jIiJI> */
#pragma pack(push,4)
union A407 { j m0; I m1; i m2; J m3; I m4; };
#pragma pack(pop)
int f_cmpA407(const union A407 *x, const union A407 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA407() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A407));
		AF('j',union A407,m0,1)
		AF('I',union A407,m1,1)
		AF('i',union A407,m2,1)
		AF('J',union A407,m3,1)
		AF('I',union A407,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<jIiJI>ddBsdBSJlcj} */
#pragma pack(push,4)
struct A408 { union A407 m0; d m1; d m2; B m3; s m4; d m5; B m6; S m7; J m8; l m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA408(const struct A408 *x, const struct A408 *y) { return f_cmpA407(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA408() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A408));
		AFa(struct A408,m0,1,A407)
		AF('d',struct A408,m1,1)
		AF('d',struct A408,m2,1)
		AF('B',struct A408,m3,1)
		AF('s',struct A408,m4,1)
		AF('d',struct A408,m5,1)
		AF('B',struct A408,m6,1)
		AF('S',struct A408,m7,1)
		AF('J',struct A408,m8,1)
		AF('l',struct A408,m9,1)
		AF('c',struct A408,m10,1)
		AF('j',struct A408,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJB} */
#pragma pack(push,4)
struct A409 { S m0; J m1; B m2; };
#pragma pack(pop)
int f_cmpA409(const struct A409 *x, const struct A409 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA409() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A409));
		AF('S',struct A409,m0,1)
		AF('J',struct A409,m1,1)
		AF('B',struct A409,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IS{SJB}ccsiiJJfJ> */
#pragma pack(push,2)
union A410 { I m0; S m1; struct A409 m2; c m3; c m4; s m5; i m6; i m7; J m8; J m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA410(const union A410 *x, const union A410 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA409(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA410() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A410));
		AF('I',union A410,m0,1)
		AF('S',union A410,m1,1)
		AFa(union A410,m2,1,A409)
		AF('c',union A410,m3,1)
		AF('c',union A410,m4,1)
		AF('s',union A410,m5,1)
		AF('i',union A410,m6,1)
		AF('i',union A410,m7,1)
		AF('J',union A410,m8,1)
		AF('J',union A410,m9,1)
		AF('f',union A410,m10,1)
		AF('J',union A410,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I} */
#pragma pack(push,2)
struct A411 { I m0; };
#pragma pack(pop)
int f_cmpA411(const struct A411 *x, const struct A411 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA411() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A411));
		AF('I',struct A411,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{I}SJjdJIIjlBp> */
#pragma pack(push,1)
union A412 { struct A411 m0; S m1; J m2; j m3; d m4; J m5; I m6; I m7; j m8; l m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA412(const union A412 *x, const union A412 *y) { return f_cmpA411(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA412() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A412));
		AFa(union A412,m0,1,A411)
		AF('S',union A412,m1,1)
		AF('J',union A412,m2,1)
		AF('j',union A412,m3,1)
		AF('d',union A412,m4,1)
		AF('J',union A412,m5,1)
		AF('I',union A412,m6,1)
		AF('I',union A412,m7,1)
		AF('j',union A412,m8,1)
		AF('l',union A412,m9,1)
		AF('B',union A412,m10,1)
		AF('p',union A412,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flBd<>JlfjlfB> */
#pragma pack(push,8)
union A413 { f m0; l m1; B m2; d m3; union A30 m4; J m5; l m6; f m7; j m8; l m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA413(const union A413 *x, const union A413 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA30(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA413() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A413));
		AF('f',union A413,m0,1)
		AF('l',union A413,m1,1)
		AF('B',union A413,m2,1)
		AF('d',union A413,m3,1)
		AFa(union A413,m4,1,A30)
		AF('J',union A413,m5,1)
		AF('l',union A413,m6,1)
		AF('f',union A413,m7,1)
		AF('j',union A413,m8,1)
		AF('l',union A413,m9,1)
		AF('f',union A413,m10,1)
		AF('B',union A413,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BLBi[6]LcffsSBc} */
#pragma pack(push,8)
struct A414 { B m0; L m1; B m2; i m3[6]; L m4; c m5; f m6; f m7; s m8; S m9; B m10; c m11; };
#pragma pack(pop)
int f_cmpA414(const struct A414 *x, const struct A414 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA414() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A414));
		AF('B',struct A414,m0,1)
		AF('L',struct A414,m1,1)
		AF('B',struct A414,m2,1)
		AF('i',struct A414,m3,6)
		AF('L',struct A414,m4,1)
		AF('c',struct A414,m5,1)
		AF('f',struct A414,m6,1)
		AF('f',struct A414,m7,1)
		AF('s',struct A414,m8,1)
		AF('S',struct A414,m9,1)
		AF('B',struct A414,m10,1)
		AF('c',struct A414,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dS> */
#pragma pack(push,1)
union A415 { d m0; S m1; };
#pragma pack(pop)
int f_cmpA415(const union A415 *x, const union A415 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA415() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A415));
		AF('d',union A415,m0,1)
		AF('S',union A415,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J} */
#pragma pack(push,4)
struct A416 { J m0; };
#pragma pack(pop)
int f_cmpA416(const struct A416 *x, const struct A416 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA416() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A416));
		AF('J',struct A416,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cc<d>SIC<>cd[16]LCL} */
#pragma pack(push,4)
struct A417 { C m0; c m1; union A90 m2; S m3; I m4; C m5; union A30 m6; c m7; d m8[16]; L m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA417(const struct A417 *x, const struct A417 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA90(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA30(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m8[14] == y->m8[14] && x->m8[15] == y->m8[15] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA417() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A417));
		AF('C',struct A417,m0,1)
		AF('c',struct A417,m1,1)
		AFa(struct A417,m2,1,A90)
		AF('S',struct A417,m3,1)
		AF('I',struct A417,m4,1)
		AF('C',struct A417,m5,1)
		AFa(struct A417,m6,1,A30)
		AF('c',struct A417,m7,1)
		AF('d',struct A417,m8,16)
		AF('L',struct A417,m9,1)
		AF('C',struct A417,m10,1)
		AF('L',struct A417,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjplLpIBLlfl} */
#pragma pack(push,4)
struct A418 { B m0; j m1; p m2; l m3; L m4; p m5; I m6; B m7; L m8; l m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA418(const struct A418 *x, const struct A418 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA418() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A418));
		AF('B',struct A418,m0,1)
		AF('j',struct A418,m1,1)
		AF('p',struct A418,m2,1)
		AF('l',struct A418,m3,1)
		AF('L',struct A418,m4,1)
		AF('p',struct A418,m5,1)
		AF('I',struct A418,m6,1)
		AF('B',struct A418,m7,1)
		AF('L',struct A418,m8,1)
		AF('l',struct A418,m9,1)
		AF('f',struct A418,m10,1)
		AF('l',struct A418,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsjL} */
#pragma pack(push,2)
struct A419 { f m0; s m1; j m2; L m3; };
#pragma pack(pop)
int f_cmpA419(const struct A419 *x, const struct A419 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA419() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A419));
		AF('f',struct A419,m0,1)
		AF('s',struct A419,m1,1)
		AF('j',struct A419,m2,1)
		AF('L',struct A419,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdlJdCpJSpjB} */
#pragma pack(push,4)
struct A420 { j m0; d m1; l m2; J m3; d m4; C m5; p m6; J m7; S m8; p m9; j m10; B m11; };
#pragma pack(pop)
int f_cmpA420(const struct A420 *x, const struct A420 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA420() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A420));
		AF('j',struct A420,m0,1)
		AF('d',struct A420,m1,1)
		AF('l',struct A420,m2,1)
		AF('J',struct A420,m3,1)
		AF('d',struct A420,m4,1)
		AF('C',struct A420,m5,1)
		AF('p',struct A420,m6,1)
		AF('J',struct A420,m7,1)
		AF('S',struct A420,m8,1)
		AF('p',struct A420,m9,1)
		AF('j',struct A420,m10,1)
		AF('B',struct A420,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J{fsjL}JfL{jdlJdCpJSpjB}JlLBid} */
#pragma pack(push,8)
struct A421 { J m0; struct A419 m1; J m2; f m3; L m4; struct A420 m5; J m6; l m7; L m8; B m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA421(const struct A421 *x, const struct A421 *y) { return x->m0 == y->m0 && f_cmpA419(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA420(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA421() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A421));
		AF('J',struct A421,m0,1)
		AFa(struct A421,m1,1,A419)
		AF('J',struct A421,m2,1)
		AF('f',struct A421,m3,1)
		AF('L',struct A421,m4,1)
		AFa(struct A421,m5,1,A420)
		AF('J',struct A421,m6,1)
		AF('l',struct A421,m7,1)
		AF('L',struct A421,m8,1)
		AF('B',struct A421,m9,1)
		AF('i',struct A421,m10,1)
		AF('d',struct A421,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iJjjSIjsflfC> */
#pragma pack(push,2)
union A422 { i m0; J m1; j m2; j m3; S m4; I m5; j m6; s m7; f m8; l m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA422(const union A422 *x, const union A422 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA422() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A422));
		AF('i',union A422,m0,1)
		AF('J',union A422,m1,1)
		AF('j',union A422,m2,1)
		AF('j',union A422,m3,1)
		AF('S',union A422,m4,1)
		AF('I',union A422,m5,1)
		AF('j',union A422,m6,1)
		AF('s',union A422,m7,1)
		AF('f',union A422,m8,1)
		AF('l',union A422,m9,1)
		AF('f',union A422,m10,1)
		AF('C',union A422,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djC> */
#pragma pack(push,2)
union A423 { d m0; j m1; C m2; };
#pragma pack(pop)
int f_cmpA423(const union A423 *x, const union A423 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA423() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A423));
		AF('d',union A423,m0,1)
		AF('j',union A423,m1,1)
		AF('C',union A423,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djpcI<djC>SJBCBc} */
#pragma pack(push,4)
struct A424 { d m0; j m1; p m2; c m3; I m4; union A423 m5; S m6; J m7; B m8; C m9; B m10; c m11; };
#pragma pack(pop)
int f_cmpA424(const struct A424 *x, const struct A424 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA423(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA424() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A424));
		AF('d',struct A424,m0,1)
		AF('j',struct A424,m1,1)
		AF('p',struct A424,m2,1)
		AF('c',struct A424,m3,1)
		AF('I',struct A424,m4,1)
		AFa(struct A424,m5,1,A423)
		AF('S',struct A424,m6,1)
		AF('J',struct A424,m7,1)
		AF('B',struct A424,m8,1)
		AF('C',struct A424,m9,1)
		AF('B',struct A424,m10,1)
		AF('c',struct A424,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Cjcpcff} */
#pragma pack(push,2)
struct A425 { C m0; j m1; c m2; p m3; c m4; f m5; f m6; };
#pragma pack(pop)
int f_cmpA425(const struct A425 *x, const struct A425 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA425() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A425));
		AF('C',struct A425,m0,1)
		AF('j',struct A425,m1,1)
		AF('c',struct A425,m2,1)
		AF('p',struct A425,m3,1)
		AF('c',struct A425,m4,1)
		AF('f',struct A425,m5,1)
		AF('f',struct A425,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Csf[12]cLidiJjs} */
#pragma pack(push,1)
struct A426 { C m0; s m1; f m2[12]; c m3; L m4; i m5; d m6; i m7; J m8; j m9; s m10; };
#pragma pack(pop)
int f_cmpA426(const struct A426 *x, const struct A426 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA426() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A426));
		AF('C',struct A426,m0,1)
		AF('s',struct A426,m1,1)
		AF('f',struct A426,m2,12)
		AF('c',struct A426,m3,1)
		AF('L',struct A426,m4,1)
		AF('i',struct A426,m5,1)
		AF('d',struct A426,m6,1)
		AF('i',struct A426,m7,1)
		AF('J',struct A426,m8,1)
		AF('j',struct A426,m9,1)
		AF('s',struct A426,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <c[12]S{Cjcpcff}JCds{Csf[12]cLidiJjs}IIdL> */
#pragma pack(push,4)
union A427 { c m0[12]; S m1; struct A425 m2; J m3; C m4; d m5; s m6; struct A426 m7; I m8; I m9; d m10; L m11; };
#pragma pack(pop)
int f_cmpA427(const union A427 *x, const union A427 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m1 == y->m1 && f_cmpA425(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA426(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA427() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A427));
		AF('c',union A427,m0,12)
		AF('S',union A427,m1,1)
		AFa(union A427,m2,1,A425)
		AF('J',union A427,m3,1)
		AF('C',union A427,m4,1)
		AF('d',union A427,m5,1)
		AF('s',union A427,m6,1)
		AFa(union A427,m7,1,A426)
		AF('I',union A427,m8,1)
		AF('I',union A427,m9,1)
		AF('d',union A427,m10,1)
		AF('L',union A427,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<c[12]S{Cjcpcff}JCds{Csf[12]cLidiJjs}IIdL>SBjfpc<>BplS} */
#pragma pack(push,4)
struct A428 { union A427 m0; S m1; B m2; j m3; f m4; p m5; c m6; union A30 m7; B m8; p m9; l m10; S m11; };
#pragma pack(pop)
int f_cmpA428(const struct A428 *x, const struct A428 *y) { return f_cmpA427(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA30(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA428() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A428));
		AFa(struct A428,m0,1,A427)
		AF('S',struct A428,m1,1)
		AF('B',struct A428,m2,1)
		AF('j',struct A428,m3,1)
		AF('f',struct A428,m4,1)
		AF('p',struct A428,m5,1)
		AF('c',struct A428,m6,1)
		AFa(struct A428,m7,1,A30)
		AF('B',struct A428,m8,1)
		AF('p',struct A428,m9,1)
		AF('l',struct A428,m10,1)
		AF('S',struct A428,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLJs> */
#pragma pack(push,1)
union A429 { i m0; L m1; J m2; s m3; };
#pragma pack(pop)
int f_cmpA429(const union A429 *x, const union A429 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA429() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A429));
		AF('i',union A429,m0,1)
		AF('L',union A429,m1,1)
		AF('J',union A429,m2,1)
		AF('s',union A429,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d<iLJs>[15]pp} */
#pragma pack(push,2)
struct A430 { d m0; union A429 m1[15]; p m2; p m3; };
#pragma pack(pop)
int f_cmpA430(const struct A430 *x, const struct A430 *y) { return x->m0 == y->m0 && f_cmpA429(&x->m1[0], &y->m1[0]) && f_cmpA429(&x->m1[1], &y->m1[1]) && f_cmpA429(&x->m1[2], &y->m1[2]) && f_cmpA429(&x->m1[3], &y->m1[3]) && f_cmpA429(&x->m1[4], &y->m1[4]) && f_cmpA429(&x->m1[5], &y->m1[5]) && f_cmpA429(&x->m1[6], &y->m1[6]) && f_cmpA429(&x->m1[7], &y->m1[7]) && f_cmpA429(&x->m1[8], &y->m1[8]) && f_cmpA429(&x->m1[9], &y->m1[9]) && f_cmpA429(&x->m1[10], &y->m1[10]) && f_cmpA429(&x->m1[11], &y->m1[11]) && f_cmpA429(&x->m1[12], &y->m1[12]) && f_cmpA429(&x->m1[13], &y->m1[13]) && f_cmpA429(&x->m1[14], &y->m1[14]) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA430() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A430));
		AF('d',struct A430,m0,1)
		AFa(struct A430,m1,15,A429)
		AF('p',struct A430,m2,1)
		AF('p',struct A430,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJlsf[7]l[10]Blip} */
#pragma pack(push,2)
struct A431 { I m0; J m1; l m2; s m3; f m4[7]; l m5[10]; B m6; l m7; i m8; p m9; };
#pragma pack(pop)
int f_cmpA431(const struct A431 *x, const struct A431 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA431() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A431));
		AF('I',struct A431,m0,1)
		AF('J',struct A431,m1,1)
		AF('l',struct A431,m2,1)
		AF('s',struct A431,m3,1)
		AF('f',struct A431,m4,7)
		AF('l',struct A431,m5,10)
		AF('B',struct A431,m6,1)
		AF('l',struct A431,m7,1)
		AF('i',struct A431,m8,1)
		AF('p',struct A431,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijpsL[4]c{d<iLJs>[15]pp}j{IJlsf[7]l[10]Blip}liI> */
#pragma pack(push,4)
union A432 { i m0; j m1; p m2; s m3; L m4[4]; c m5; struct A430 m6; j m7; struct A431 m8; l m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA432(const union A432 *x, const union A432 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && f_cmpA430(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA431(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA432() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A432));
		AF('i',union A432,m0,1)
		AF('j',union A432,m1,1)
		AF('p',union A432,m2,1)
		AF('s',union A432,m3,1)
		AF('L',union A432,m4,4)
		AF('c',union A432,m5,1)
		AFa(union A432,m6,1,A430)
		AF('j',union A432,m7,1)
		AFa(union A432,m8,1,A431)
		AF('l',union A432,m9,1)
		AF('i',union A432,m10,1)
		AF('I',union A432,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {s[11]clc[15]cccpcCi[6]J} */
#pragma pack(push,4)
struct A433 { s m0[11]; c m1; l m2; c m3[15]; c m4; c m5; c m6; p m7; c m8; C m9; i m10[6]; J m11; };
#pragma pack(pop)
int f_cmpA433(const struct A433 *x, const struct A433 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m3[14] == y->m3[14] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m11 == y->m11; };
DCaggr* f_touchA433() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A433));
		AF('s',struct A433,m0,11)
		AF('c',struct A433,m1,1)
		AF('l',struct A433,m2,1)
		AF('c',struct A433,m3,15)
		AF('c',struct A433,m4,1)
		AF('c',struct A433,m5,1)
		AF('c',struct A433,m6,1)
		AF('p',struct A433,m7,1)
		AF('c',struct A433,m8,1)
		AF('C',struct A433,m9,1)
		AF('i',struct A433,m10,6)
		AF('J',struct A433,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <icciIlCJ{s[11]clc[15]cccpcCi[6]J}LI[15]j[15]> */
#pragma pack(push,8)
union A434 { i m0; c m1; c m2; i m3; I m4; l m5; C m6; J m7; struct A433 m8; L m9; I m10[15]; j m11[15]; };
#pragma pack(pop)
int f_cmpA434(const union A434 *x, const union A434 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA433(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m10[11] == y->m10[11] && x->m10[12] == y->m10[12] && x->m10[13] == y->m10[13] && x->m10[14] == y->m10[14] && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14]; };
DCaggr* f_touchA434() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A434));
		AF('i',union A434,m0,1)
		AF('c',union A434,m1,1)
		AF('c',union A434,m2,1)
		AF('i',union A434,m3,1)
		AF('I',union A434,m4,1)
		AF('l',union A434,m5,1)
		AF('C',union A434,m6,1)
		AF('J',union A434,m7,1)
		AFa(union A434,m8,1,A433)
		AF('L',union A434,m9,1)
		AF('I',union A434,m10,15)
		AF('j',union A434,m11,15)
		dcCloseAggr(a);
	}
	return a;
};
/* {djcJcj} */
#pragma pack(push,4)
struct A435 { d m0; j m1; c m2; J m3; c m4; j m5; };
#pragma pack(pop)
int f_cmpA435(const struct A435 *x, const struct A435 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA435() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A435));
		AF('d',struct A435,m0,1)
		AF('j',struct A435,m1,1)
		AF('c',struct A435,m2,1)
		AF('J',struct A435,m3,1)
		AF('c',struct A435,m4,1)
		AF('j',struct A435,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pfcssLSjcCLj} */
#pragma pack(push,2)
struct A436 { p m0; f m1; c m2; s m3; s m4; L m5; S m6; j m7; c m8; C m9; L m10; j m11; };
#pragma pack(pop)
int f_cmpA436(const struct A436 *x, const struct A436 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA436() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A436));
		AF('p',struct A436,m0,1)
		AF('f',struct A436,m1,1)
		AF('c',struct A436,m2,1)
		AF('s',struct A436,m3,1)
		AF('s',struct A436,m4,1)
		AF('L',struct A436,m5,1)
		AF('S',struct A436,m6,1)
		AF('j',struct A436,m7,1)
		AF('c',struct A436,m8,1)
		AF('C',struct A436,m9,1)
		AF('L',struct A436,m10,1)
		AF('j',struct A436,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IijdSIfjIlIS} */
#pragma pack(push,4)
struct A437 { I m0; i m1; j m2; d m3; S m4; I m5; f m6; j m7; I m8; l m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA437(const struct A437 *x, const struct A437 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA437() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A437));
		AF('I',struct A437,m0,1)
		AF('i',struct A437,m1,1)
		AF('j',struct A437,m2,1)
		AF('d',struct A437,m3,1)
		AF('S',struct A437,m4,1)
		AF('I',struct A437,m5,1)
		AF('f',struct A437,m6,1)
		AF('j',struct A437,m7,1)
		AF('I',struct A437,m8,1)
		AF('l',struct A437,m9,1)
		AF('I',struct A437,m10,1)
		AF('S',struct A437,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s{IijdSIfjIlIS}Lld> */
#pragma pack(push,2)
union A438 { s m0; struct A437 m1; L m2; l m3; d m4; };
#pragma pack(pop)
int f_cmpA438(const union A438 *x, const union A438 *y) { return x->m0 == y->m0 && f_cmpA437(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA438() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A438));
		AF('s',union A438,m0,1)
		AFa(union A438,m1,1,A437)
		AF('L',union A438,m2,1)
		AF('l',union A438,m3,1)
		AF('d',union A438,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d<s{IijdSIfjIlIS}Lld>sBIlB} */
#pragma pack(push,1)
struct A439 { d m0; union A438 m1; s m2; B m3; I m4; l m5; B m6; };
#pragma pack(pop)
int f_cmpA439(const struct A439 *x, const struct A439 *y) { return x->m0 == y->m0 && f_cmpA438(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA439() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A439));
		AF('d',struct A439,m0,1)
		AFa(struct A439,m1,1,A438)
		AF('s',struct A439,m2,1)
		AF('B',struct A439,m3,1)
		AF('I',struct A439,m4,1)
		AF('l',struct A439,m5,1)
		AF('B',struct A439,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jSd[9]LfSCCsC} */
#pragma pack(push,8)
struct A440 { j m0; S m1; d m2[9]; L m3; f m4; S m5; C m6; C m7; s m8; C m9; };
#pragma pack(pop)
int f_cmpA440(const struct A440 *x, const struct A440 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA440() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A440));
		AF('j',struct A440,m0,1)
		AF('S',struct A440,m1,1)
		AF('d',struct A440,m2,9)
		AF('L',struct A440,m3,1)
		AF('f',struct A440,m4,1)
		AF('S',struct A440,m5,1)
		AF('C',struct A440,m6,1)
		AF('C',struct A440,m7,1)
		AF('s',struct A440,m8,1)
		AF('C',struct A440,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jSiBL} */
#pragma pack(push,4)
struct A441 { j m0; S m1; i m2; B m3; L m4; };
#pragma pack(pop)
int f_cmpA441(const struct A441 *x, const struct A441 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA441() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A441));
		AF('j',struct A441,m0,1)
		AF('S',struct A441,m1,1)
		AF('i',struct A441,m2,1)
		AF('B',struct A441,m3,1)
		AF('L',struct A441,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {s{jSiBL}} */
#pragma pack(push,2)
struct A442 { s m0; struct A441 m1; };
#pragma pack(pop)
int f_cmpA442(const struct A442 *x, const struct A442 *y) { return x->m0 == y->m0 && f_cmpA441(&x->m1, &y->m1); };
DCaggr* f_touchA442() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A442));
		AF('s',struct A442,m0,1)
		AFa(struct A442,m1,1,A441)
		dcCloseAggr(a);
	}
	return a;
};
/* {fccdspslJIji} */
#pragma pack(push,1)
struct A443 { f m0; c m1; c m2; d m3; s m4; p m5; s m6; l m7; J m8; I m9; j m10; i m11; };
#pragma pack(pop)
int f_cmpA443(const struct A443 *x, const struct A443 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA443() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A443));
		AF('f',struct A443,m0,1)
		AF('c',struct A443,m1,1)
		AF('c',struct A443,m2,1)
		AF('d',struct A443,m3,1)
		AF('s',struct A443,m4,1)
		AF('p',struct A443,m5,1)
		AF('s',struct A443,m6,1)
		AF('l',struct A443,m7,1)
		AF('J',struct A443,m8,1)
		AF('I',struct A443,m9,1)
		AF('j',struct A443,m10,1)
		AF('i',struct A443,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fcJCfSipiccj> */
#pragma pack(push,4)
union A444 { f m0; c m1; J m2; C m3; f m4; S m5; i m6; p m7; i m8; c m9; c m10; j m11; };
#pragma pack(pop)
int f_cmpA444(const union A444 *x, const union A444 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA444() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A444));
		AF('f',union A444,m0,1)
		AF('c',union A444,m1,1)
		AF('J',union A444,m2,1)
		AF('C',union A444,m3,1)
		AF('f',union A444,m4,1)
		AF('S',union A444,m5,1)
		AF('i',union A444,m6,1)
		AF('p',union A444,m7,1)
		AF('i',union A444,m8,1)
		AF('c',union A444,m9,1)
		AF('c',union A444,m10,1)
		AF('j',union A444,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LdpCppLd[3]pf[10]SI} */
#pragma pack(push,2)
struct A445 { L m0; d m1; p m2; C m3; p m4; p m5; L m6; d m7[3]; p m8; f m9[10]; S m10; I m11; };
#pragma pack(pop)
int f_cmpA445(const struct A445 *x, const struct A445 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA445() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A445));
		AF('L',struct A445,m0,1)
		AF('d',struct A445,m1,1)
		AF('p',struct A445,m2,1)
		AF('C',struct A445,m3,1)
		AF('p',struct A445,m4,1)
		AF('p',struct A445,m5,1)
		AF('L',struct A445,m6,1)
		AF('d',struct A445,m7,3)
		AF('p',struct A445,m8,1)
		AF('f',struct A445,m9,10)
		AF('S',struct A445,m10,1)
		AF('I',struct A445,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fjfCCLCIc<fcJCfSipiccj>{LdpCppLd[3]pf[10]SI}s} */
#pragma pack(push,2)
struct A446 { f m0; j m1; f m2; C m3; C m4; L m5; C m6; I m7; c m8; union A444 m9; struct A445 m10; s m11; };
#pragma pack(pop)
int f_cmpA446(const struct A446 *x, const struct A446 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA444(&x->m9, &y->m9) && f_cmpA445(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA446() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A446));
		AF('f',struct A446,m0,1)
		AF('j',struct A446,m1,1)
		AF('f',struct A446,m2,1)
		AF('C',struct A446,m3,1)
		AF('C',struct A446,m4,1)
		AF('L',struct A446,m5,1)
		AF('C',struct A446,m6,1)
		AF('I',struct A446,m7,1)
		AF('c',struct A446,m8,1)
		AFa(struct A446,m9,1,A444)
		AFa(struct A446,m10,1,A445)
		AF('s',struct A446,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IILijS[15]SllspI> */
#pragma pack(push,1)
union A447 { I m0; I m1; L m2; i m3; j m4; S m5[15]; S m6; l m7; l m8; s m9; p m10; I m11; };
#pragma pack(pop)
int f_cmpA447(const union A447 *x, const union A447 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m5[14] == y->m5[14] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA447() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A447));
		AF('I',union A447,m0,1)
		AF('I',union A447,m1,1)
		AF('L',union A447,m2,1)
		AF('i',union A447,m3,1)
		AF('j',union A447,m4,1)
		AF('S',union A447,m5,15)
		AF('S',union A447,m6,1)
		AF('l',union A447,m7,1)
		AF('l',union A447,m8,1)
		AF('s',union A447,m9,1)
		AF('p',union A447,m10,1)
		AF('I',union A447,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lsB> */
#pragma pack(push,1)
union A448 { l m0; s m1; B m2; };
#pragma pack(pop)
int f_cmpA448(const union A448 *x, const union A448 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA448() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A448));
		AF('l',union A448,m0,1)
		AF('s',union A448,m1,1)
		AF('B',union A448,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lB> */
#pragma pack(push,4)
union A449 { l m0; B m1; };
#pragma pack(pop)
int f_cmpA449(const union A449 *x, const union A449 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA449() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A449));
		AF('l',union A449,m0,1)
		AF('B',union A449,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<IILijS[15]SllspI>pC<lsB><lB>cc} */
#pragma pack(push,2)
struct A450 { union A447 m0; p m1; C m2; union A448 m3; union A449 m4; c m5; c m6; };
#pragma pack(pop)
int f_cmpA450(const struct A450 *x, const struct A450 *y) { return f_cmpA447(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA448(&x->m3, &y->m3) && f_cmpA449(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA450() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A450));
		AFa(struct A450,m0,1,A447)
		AF('p',struct A450,m1,1)
		AF('C',struct A450,m2,1)
		AFa(struct A450,m3,1,A448)
		AFa(struct A450,m4,1,A449)
		AF('c',struct A450,m5,1)
		AF('c',struct A450,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p{fjfCCLCIc<fcJCfSipiccj>{LdpCppLd[3]pf[10]SI}s}pl{<IILijS[15]SllspI>pC<lsB><lB>cc}sS> */
#pragma pack(push,4)
union A451 { p m0; struct A446 m1; p m2; l m3; struct A450 m4; s m5; S m6; };
#pragma pack(pop)
int f_cmpA451(const union A451 *x, const union A451 *y) { return x->m0 == y->m0 && f_cmpA446(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA450(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA451() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A451));
		AF('p',union A451,m0,1)
		AFa(union A451,m1,1,A446)
		AF('p',union A451,m2,1)
		AF('l',union A451,m3,1)
		AFa(union A451,m4,1,A450)
		AF('s',union A451,m5,1)
		AF('S',union A451,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CipSjcdjsLfs[1]> */
#pragma pack(push,4)
union A452 { C m0; i m1; p m2; S m3; j m4; c m5; d m6; j m7; s m8; L m9; f m10; s m11[1]; };
#pragma pack(pop)
int f_cmpA452(const union A452 *x, const union A452 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0]; };
DCaggr* f_touchA452() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A452));
		AF('C',union A452,m0,1)
		AF('i',union A452,m1,1)
		AF('p',union A452,m2,1)
		AF('S',union A452,m3,1)
		AF('j',union A452,m4,1)
		AF('c',union A452,m5,1)
		AF('d',union A452,m6,1)
		AF('j',union A452,m7,1)
		AF('s',union A452,m8,1)
		AF('L',union A452,m9,1)
		AF('f',union A452,m10,1)
		AF('s',union A452,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dLCCCJB> */
#pragma pack(push,4)
union A453 { d m0; L m1; C m2; C m3; C m4; J m5; B m6; };
#pragma pack(pop)
int f_cmpA453(const union A453 *x, const union A453 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA453() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A453));
		AF('d',union A453,m0,1)
		AF('L',union A453,m1,1)
		AF('C',union A453,m2,1)
		AF('C',union A453,m3,1)
		AF('C',union A453,m4,1)
		AF('J',union A453,m5,1)
		AF('B',union A453,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sLlfcIs} */
#pragma pack(push,8)
struct A454 { s m0; L m1; l m2; f m3; c m4; I m5; s m6; };
#pragma pack(pop)
int f_cmpA454(const struct A454 *x, const struct A454 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA454() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A454));
		AF('s',struct A454,m0,1)
		AF('L',struct A454,m1,1)
		AF('l',struct A454,m2,1)
		AF('f',struct A454,m3,1)
		AF('c',struct A454,m4,1)
		AF('I',struct A454,m5,1)
		AF('s',struct A454,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sJJCjIclfffd} */
#pragma pack(push,2)
struct A455 { s m0; J m1; J m2; C m3; j m4; I m5; c m6; l m7; f m8; f m9; f m10; d m11; };
#pragma pack(pop)
int f_cmpA455(const struct A455 *x, const struct A455 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA455() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A455));
		AF('s',struct A455,m0,1)
		AF('J',struct A455,m1,1)
		AF('J',struct A455,m2,1)
		AF('C',struct A455,m3,1)
		AF('j',struct A455,m4,1)
		AF('I',struct A455,m5,1)
		AF('c',struct A455,m6,1)
		AF('l',struct A455,m7,1)
		AF('f',struct A455,m8,1)
		AF('f',struct A455,m9,1)
		AF('f',struct A455,m10,1)
		AF('d',struct A455,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I<dLCCCJB>{sLlfcIs}LcLsciIl{sJJCjIclfffd}> */
#pragma pack(push,4)
union A456 { I m0; union A453 m1; struct A454 m2; L m3; c m4; L m5; s m6; c m7; i m8; I m9; l m10; struct A455 m11; };
#pragma pack(pop)
int f_cmpA456(const union A456 *x, const union A456 *y) { return x->m0 == y->m0 && f_cmpA453(&x->m1, &y->m1) && f_cmpA454(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA455(&x->m11, &y->m11); };
DCaggr* f_touchA456() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A456));
		AF('I',union A456,m0,1)
		AFa(union A456,m1,1,A453)
		AFa(union A456,m2,1,A454)
		AF('L',union A456,m3,1)
		AF('c',union A456,m4,1)
		AF('L',union A456,m5,1)
		AF('s',union A456,m6,1)
		AF('c',union A456,m7,1)
		AF('i',union A456,m8,1)
		AF('I',union A456,m9,1)
		AF('l',union A456,m10,1)
		AFa(union A456,m11,1,A455)
		dcCloseAggr(a);
	}
	return a;
};
/* <BI> */
#pragma pack(push,1)
union A457 { B m0; I m1; };
#pragma pack(pop)
int f_cmpA457(const union A457 *x, const union A457 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA457() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A457));
		AF('B',union A457,m0,1)
		AF('I',union A457,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ssfd} */
#pragma pack(push,8)
struct A458 { S m0; s m1; f m2; d m3; };
#pragma pack(pop)
int f_cmpA458(const struct A458 *x, const struct A458 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA458() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A458));
		AF('S',struct A458,m0,1)
		AF('s',struct A458,m1,1)
		AF('f',struct A458,m2,1)
		AF('d',struct A458,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fd{Ssfd}Bc> */
#pragma pack(push,2)
union A459 { f m0; d m1; struct A458 m2; B m3; c m4; };
#pragma pack(pop)
int f_cmpA459(const union A459 *x, const union A459 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA458(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA459() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A459));
		AF('f',union A459,m0,1)
		AF('d',union A459,m1,1)
		AFa(union A459,m2,1,A458)
		AF('B',union A459,m3,1)
		AF('c',union A459,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sliljsCSSLIf} */
#pragma pack(push,1)
struct A460 { s m0; l m1; i m2; l m3; j m4; s m5; C m6; S m7; S m8; L m9; I m10; f m11; };
#pragma pack(pop)
int f_cmpA460(const struct A460 *x, const struct A460 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA460() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A460));
		AF('s',struct A460,m0,1)
		AF('l',struct A460,m1,1)
		AF('i',struct A460,m2,1)
		AF('l',struct A460,m3,1)
		AF('j',struct A460,m4,1)
		AF('s',struct A460,m5,1)
		AF('C',struct A460,m6,1)
		AF('S',struct A460,m7,1)
		AF('S',struct A460,m8,1)
		AF('L',struct A460,m9,1)
		AF('I',struct A460,m10,1)
		AF('f',struct A460,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f[8]ssS> */
#pragma pack(push,2)
union A461 { f m0[8]; s m1; s m2; S m3; };
#pragma pack(pop)
int f_cmpA461(const union A461 *x, const union A461 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA461() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A461));
		AF('f',union A461,m0,8)
		AF('s',union A461,m1,1)
		AF('s',union A461,m2,1)
		AF('S',union A461,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsBijfccj<f[8]ssS>fj> */
#pragma pack(push,4)
union A462 { S m0; s m1; B m2; i m3; j m4; f m5; c m6; c m7; j m8; union A461 m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA462(const union A462 *x, const union A462 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA461(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA462() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A462));
		AF('S',union A462,m0,1)
		AF('s',union A462,m1,1)
		AF('B',union A462,m2,1)
		AF('i',union A462,m3,1)
		AF('j',union A462,m4,1)
		AF('f',union A462,m5,1)
		AF('c',union A462,m6,1)
		AF('c',union A462,m7,1)
		AF('j',union A462,m8,1)
		AFa(union A462,m9,1,A461)
		AF('f',union A462,m10,1)
		AF('j',union A462,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<BI>iB<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}<SsBijfccj<f[8]ssS>fj>Ij> */
#pragma pack(push,4)
union A463 { union A457 m0; i m1; B m2; union A459 m3; l m4; s m5; I m6; i m7; struct A460 m8; union A462 m9; I m10; j m11; };
#pragma pack(pop)
int f_cmpA463(const union A463 *x, const union A463 *y) { return f_cmpA457(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA459(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA460(&x->m8, &y->m8) && f_cmpA462(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA463() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A463));
		AFa(union A463,m0,1,A457)
		AF('i',union A463,m1,1)
		AF('B',union A463,m2,1)
		AFa(union A463,m3,1,A459)
		AF('l',union A463,m4,1)
		AF('s',union A463,m5,1)
		AF('I',union A463,m6,1)
		AF('i',union A463,m7,1)
		AFa(union A463,m8,1,A460)
		AFa(union A463,m9,1,A462)
		AF('I',union A463,m10,1)
		AF('j',union A463,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lII} */
#pragma pack(push,4)
struct A464 { l m0; I m1; I m2; };
#pragma pack(pop)
int f_cmpA464(const struct A464 *x, const struct A464 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA464() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A464));
		AF('l',struct A464,m0,1)
		AF('I',struct A464,m1,1)
		AF('I',struct A464,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IJpjf[7]JCBj> */
#pragma pack(push,4)
union A465 { I m0; J m1; p m2; j m3; f m4[7]; J m5; C m6; B m7; j m8; };
#pragma pack(pop)
int f_cmpA465(const union A465 *x, const union A465 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA465() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A465));
		AF('I',union A465,m0,1)
		AF('J',union A465,m1,1)
		AF('p',union A465,m2,1)
		AF('j',union A465,m3,1)
		AF('f',union A465,m4,7)
		AF('J',union A465,m5,1)
		AF('C',union A465,m6,1)
		AF('B',union A465,m7,1)
		AF('j',union A465,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{lII}ciLI<IJpjf[7]JCBj>} */
#pragma pack(push,2)
struct A466 { struct A464 m0; c m1; i m2; L m3; I m4; union A465 m5; };
#pragma pack(pop)
int f_cmpA466(const struct A466 *x, const struct A466 *y) { return f_cmpA464(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA465(&x->m5, &y->m5); };
DCaggr* f_touchA466() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A466));
		AFa(struct A466,m0,1,A464)
		AF('c',struct A466,m1,1)
		AF('i',struct A466,m2,1)
		AF('L',struct A466,m3,1)
		AF('I',struct A466,m4,1)
		AFa(struct A466,m5,1,A465)
		dcCloseAggr(a);
	}
	return a;
};
/* <plLSJSfdSipl> */
#pragma pack(push,8)
union A467 { p m0; l m1; L m2; S m3; J m4; S m5; f m6; d m7; S m8; i m9; p m10; l m11; };
#pragma pack(pop)
int f_cmpA467(const union A467 *x, const union A467 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA467() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A467));
		AF('p',union A467,m0,1)
		AF('l',union A467,m1,1)
		AF('L',union A467,m2,1)
		AF('S',union A467,m3,1)
		AF('J',union A467,m4,1)
		AF('S',union A467,m5,1)
		AF('f',union A467,m6,1)
		AF('d',union A467,m7,1)
		AF('S',union A467,m8,1)
		AF('i',union A467,m9,1)
		AF('p',union A467,m10,1)
		AF('l',union A467,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ifc[16]cI} */
#pragma pack(push,4)
struct A468 { I m0; f m1; c m2[16]; c m3; I m4; };
#pragma pack(pop)
int f_cmpA468(const struct A468 *x, const struct A468 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m2[15] == y->m2[15] && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA468() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A468));
		AF('I',struct A468,m0,1)
		AF('f',struct A468,m1,1)
		AF('c',struct A468,m2,16)
		AF('c',struct A468,m3,1)
		AF('I',struct A468,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BBCBBCllLj<plLSJSfdSipl>{Ifc[16]cI}} */
#pragma pack(push,2)
struct A469 { B m0; B m1; C m2; B m3; B m4; C m5; l m6; l m7; L m8; j m9; union A467 m10; struct A468 m11; };
#pragma pack(pop)
int f_cmpA469(const struct A469 *x, const struct A469 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA467(&x->m10, &y->m10) && f_cmpA468(&x->m11, &y->m11); };
DCaggr* f_touchA469() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A469));
		AF('B',struct A469,m0,1)
		AF('B',struct A469,m1,1)
		AF('C',struct A469,m2,1)
		AF('B',struct A469,m3,1)
		AF('B',struct A469,m4,1)
		AF('C',struct A469,m5,1)
		AF('l',struct A469,m6,1)
		AF('l',struct A469,m7,1)
		AF('L',struct A469,m8,1)
		AF('j',struct A469,m9,1)
		AFa(struct A469,m10,1,A467)
		AFa(struct A469,m11,1,A468)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{BBCBBCllLj<plLSJSfdSipl>{Ifc[16]cI}}JLcJLIsjlC} */
#pragma pack(push,8)
struct A470 { p m0; struct A469 m1; J m2; L m3; c m4; J m5; L m6; I m7; s m8; j m9; l m10; C m11; };
#pragma pack(pop)
int f_cmpA470(const struct A470 *x, const struct A470 *y) { return x->m0 == y->m0 && f_cmpA469(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA470() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A470));
		AF('p',struct A470,m0,1)
		AFa(struct A470,m1,1,A469)
		AF('J',struct A470,m2,1)
		AF('L',struct A470,m3,1)
		AF('c',struct A470,m4,1)
		AF('J',struct A470,m5,1)
		AF('L',struct A470,m6,1)
		AF('I',struct A470,m7,1)
		AF('s',struct A470,m8,1)
		AF('j',struct A470,m9,1)
		AF('l',struct A470,m10,1)
		AF('C',struct A470,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ficL> */
#pragma pack(push,4)
union A471 { f m0; i m1; c m2; L m3; };
#pragma pack(pop)
int f_cmpA471(const union A471 *x, const union A471 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA471() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A471));
		AF('f',union A471,m0,1)
		AF('i',union A471,m1,1)
		AF('c',union A471,m2,1)
		AF('L',union A471,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jcfcj} */
#pragma pack(push,4)
struct A472 { J m0; c m1; f m2; c m3; j m4; };
#pragma pack(pop)
int f_cmpA472(const struct A472 *x, const struct A472 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA472() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A472));
		AF('J',struct A472,m0,1)
		AF('c',struct A472,m1,1)
		AF('f',struct A472,m2,1)
		AF('c',struct A472,m3,1)
		AF('j',struct A472,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{Jcfcj}jfjf> */
#pragma pack(push,2)
union A473 { struct A472 m0; j m1; f m2; j m3; f m4; };
#pragma pack(pop)
int f_cmpA473(const union A473 *x, const union A473 *y) { return f_cmpA472(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA473() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A473));
		AFa(union A473,m0,1,A472)
		AF('j',union A473,m1,1)
		AF('f',union A473,m2,1)
		AF('j',union A473,m3,1)
		AF('f',union A473,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d<{Jcfcj}jfjf>dLIC[14]ILIffj} */
#pragma pack(push,8)
struct A474 { d m0; union A473 m1; d m2; L m3; I m4; C m5[14]; I m6; L m7; I m8; f m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA474(const struct A474 *x, const struct A474 *y) { return x->m0 == y->m0 && f_cmpA473(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA474() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A474));
		AF('d',struct A474,m0,1)
		AFa(struct A474,m1,1,A473)
		AF('d',struct A474,m2,1)
		AF('L',struct A474,m3,1)
		AF('I',struct A474,m4,1)
		AF('C',struct A474,m5,14)
		AF('I',struct A474,m6,1)
		AF('L',struct A474,m7,1)
		AF('I',struct A474,m8,1)
		AF('f',struct A474,m9,1)
		AF('f',struct A474,m10,1)
		AF('j',struct A474,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IICldsBSpBsJ} */
#pragma pack(push,2)
struct A475 { I m0; I m1; C m2; l m3; d m4; s m5; B m6; S m7; p m8; B m9; s m10; J m11; };
#pragma pack(pop)
int f_cmpA475(const struct A475 *x, const struct A475 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA475() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A475));
		AF('I',struct A475,m0,1)
		AF('I',struct A475,m1,1)
		AF('C',struct A475,m2,1)
		AF('l',struct A475,m3,1)
		AF('d',struct A475,m4,1)
		AF('s',struct A475,m5,1)
		AF('B',struct A475,m6,1)
		AF('S',struct A475,m7,1)
		AF('p',struct A475,m8,1)
		AF('B',struct A475,m9,1)
		AF('s',struct A475,m10,1)
		AF('J',struct A475,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCJ} */
#pragma pack(push,4)
struct A476 { d m0; C m1; J m2; };
#pragma pack(pop)
int f_cmpA476(const struct A476 *x, const struct A476 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA476() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A476));
		AF('d',struct A476,m0,1)
		AF('C',struct A476,m1,1)
		AF('J',struct A476,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCfj{IICldsBSpBsJ}Cdicc{dCJ}p> */
#pragma pack(push,2)
union A477 { s m0; C m1; f m2; j m3; struct A475 m4; C m5; d m6; i m7; c m8; c m9; struct A476 m10; p m11; };
#pragma pack(pop)
int f_cmpA477(const union A477 *x, const union A477 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA475(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA476(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA477() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A477));
		AF('s',union A477,m0,1)
		AF('C',union A477,m1,1)
		AF('f',union A477,m2,1)
		AF('j',union A477,m3,1)
		AFa(union A477,m4,1,A475)
		AF('C',union A477,m5,1)
		AF('d',union A477,m6,1)
		AF('i',union A477,m7,1)
		AF('c',union A477,m8,1)
		AF('c',union A477,m9,1)
		AFa(union A477,m10,1,A476)
		AF('p',union A477,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JiBCsccpLli[4]S> */
#pragma pack(push,4)
union A478 { J m0; i m1; B m2; C m3; s m4; c m5; c m6; p m7; L m8; l m9; i m10[4]; S m11; };
#pragma pack(pop)
int f_cmpA478(const union A478 *x, const union A478 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA478() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A478));
		AF('J',union A478,m0,1)
		AF('i',union A478,m1,1)
		AF('B',union A478,m2,1)
		AF('C',union A478,m3,1)
		AF('s',union A478,m4,1)
		AF('c',union A478,m5,1)
		AF('c',union A478,m6,1)
		AF('p',union A478,m7,1)
		AF('L',union A478,m8,1)
		AF('l',union A478,m9,1)
		AF('i',union A478,m10,4)
		AF('S',union A478,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dBcjssfcLJIB> */
#pragma pack(push,4)
union A479 { d m0; B m1; c m2; j m3; s m4; s m5; f m6; c m7; L m8; J m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA479(const union A479 *x, const union A479 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA479() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A479));
		AF('d',union A479,m0,1)
		AF('B',union A479,m1,1)
		AF('c',union A479,m2,1)
		AF('j',union A479,m3,1)
		AF('s',union A479,m4,1)
		AF('s',union A479,m5,1)
		AF('f',union A479,m6,1)
		AF('c',union A479,m7,1)
		AF('L',union A479,m8,1)
		AF('J',union A479,m9,1)
		AF('I',union A479,m10,1)
		AF('B',union A479,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cic> */
#pragma pack(push,8)
union A480 { c m0; i m1; c m2; };
#pragma pack(pop)
int f_cmpA480(const union A480 *x, const union A480 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA480() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A480));
		AF('c',union A480,m0,1)
		AF('i',union A480,m1,1)
		AF('c',union A480,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcLp<dBcjssfcLJIB>sILJ[7]<cic>Sc> */
#pragma pack(push,4)
union A481 { B m0; c m1; L m2; p m3; union A479 m4; s m5; I m6; L m7; J m8[7]; union A480 m9; S m10; c m11; };
#pragma pack(pop)
int f_cmpA481(const union A481 *x, const union A481 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA479(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && f_cmpA480(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA481() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A481));
		AF('B',union A481,m0,1)
		AF('c',union A481,m1,1)
		AF('L',union A481,m2,1)
		AF('p',union A481,m3,1)
		AFa(union A481,m4,1,A479)
		AF('s',union A481,m5,1)
		AF('I',union A481,m6,1)
		AF('L',union A481,m7,1)
		AF('J',union A481,m8,7)
		AFa(union A481,m9,1,A480)
		AF('S',union A481,m10,1)
		AF('c',union A481,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sClILcdIBBdB> */
#pragma pack(push,4)
union A482 { s m0; C m1; l m2; I m3; L m4; c m5; d m6; I m7; B m8; B m9; d m10; B m11; };
#pragma pack(pop)
int f_cmpA482(const union A482 *x, const union A482 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA482() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A482));
		AF('s',union A482,m0,1)
		AF('C',union A482,m1,1)
		AF('l',union A482,m2,1)
		AF('I',union A482,m3,1)
		AF('L',union A482,m4,1)
		AF('c',union A482,m5,1)
		AF('d',union A482,m6,1)
		AF('I',union A482,m7,1)
		AF('B',union A482,m8,1)
		AF('B',union A482,m9,1)
		AF('d',union A482,m10,1)
		AF('B',union A482,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fsJiccif} */
#pragma pack(push,4)
struct A483 { f m0; s m1; J m2; i m3; c m4; c m5; i m6; f m7; };
#pragma pack(pop)
int f_cmpA483(const struct A483 *x, const struct A483 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA483() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A483));
		AF('f',struct A483,m0,1)
		AF('s',struct A483,m1,1)
		AF('J',struct A483,m2,1)
		AF('i',struct A483,m3,1)
		AF('c',struct A483,m4,1)
		AF('c',struct A483,m5,1)
		AF('i',struct A483,m6,1)
		AF('f',struct A483,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SdLsJSCBC{fsJiccif}CC} */
#pragma pack(push,1)
struct A484 { S m0; d m1; L m2; s m3; J m4; S m5; C m6; B m7; C m8; struct A483 m9; C m10; C m11; };
#pragma pack(pop)
int f_cmpA484(const struct A484 *x, const struct A484 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA483(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA484() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A484));
		AF('S',struct A484,m0,1)
		AF('d',struct A484,m1,1)
		AF('L',struct A484,m2,1)
		AF('s',struct A484,m3,1)
		AF('J',struct A484,m4,1)
		AF('S',struct A484,m5,1)
		AF('C',struct A484,m6,1)
		AF('B',struct A484,m7,1)
		AF('C',struct A484,m8,1)
		AFa(struct A484,m9,1,A483)
		AF('C',struct A484,m10,1)
		AF('C',struct A484,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lCppL{SdLsJSCBC{fsJiccif}CC}c} */
#pragma pack(push,4)
struct A485 { l m0; C m1; p m2; p m3; L m4; struct A484 m5; c m6; };
#pragma pack(pop)
int f_cmpA485(const struct A485 *x, const struct A485 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA484(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA485() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A485));
		AF('l',struct A485,m0,1)
		AF('C',struct A485,m1,1)
		AF('p',struct A485,m2,1)
		AF('p',struct A485,m3,1)
		AF('L',struct A485,m4,1)
		AFa(struct A485,m5,1,A484)
		AF('c',struct A485,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cCCjI[16]SCiscfC> */
#pragma pack(push,8)
union A486 { c m0; C m1; C m2; j m3; I m4[16]; S m5; C m6; i m7; s m8; c m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA486(const union A486 *x, const union A486 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m4[14] == y->m4[14] && x->m4[15] == y->m4[15] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA486() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A486));
		AF('c',union A486,m0,1)
		AF('C',union A486,m1,1)
		AF('C',union A486,m2,1)
		AF('j',union A486,m3,1)
		AF('I',union A486,m4,16)
		AF('S',union A486,m5,1)
		AF('C',union A486,m6,1)
		AF('i',union A486,m7,1)
		AF('s',union A486,m8,1)
		AF('c',union A486,m9,1)
		AF('f',union A486,m10,1)
		AF('C',union A486,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JiJ} */
#pragma pack(push,4)
struct A487 { J m0; i m1; J m2; };
#pragma pack(pop)
int f_cmpA487(const struct A487 *x, const struct A487 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA487() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A487));
		AF('J',struct A487,m0,1)
		AF('i',struct A487,m1,1)
		AF('J',struct A487,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLLJSpLsfslp> */
#pragma pack(push,4)
union A488 { S m0; L m1; L m2; J m3; S m4; p m5; L m6; s m7; f m8; s m9; l m10; p m11; };
#pragma pack(pop)
int f_cmpA488(const union A488 *x, const union A488 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA488() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A488));
		AF('S',union A488,m0,1)
		AF('L',union A488,m1,1)
		AF('L',union A488,m2,1)
		AF('J',union A488,m3,1)
		AF('S',union A488,m4,1)
		AF('p',union A488,m5,1)
		AF('L',union A488,m6,1)
		AF('s',union A488,m7,1)
		AF('f',union A488,m8,1)
		AF('s',union A488,m9,1)
		AF('l',union A488,m10,1)
		AF('p',union A488,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S{JiJ}BccsS<SLLJSpLsfslp>pSJc> */
#pragma pack(push,8)
union A489 { S m0; struct A487 m1; B m2; c m3; c m4; s m5; S m6; union A488 m7; p m8; S m9; J m10; c m11; };
#pragma pack(pop)
int f_cmpA489(const union A489 *x, const union A489 *y) { return x->m0 == y->m0 && f_cmpA487(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA488(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA489() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A489));
		AF('S',union A489,m0,1)
		AFa(union A489,m1,1,A487)
		AF('B',union A489,m2,1)
		AF('c',union A489,m3,1)
		AF('c',union A489,m4,1)
		AF('s',union A489,m5,1)
		AF('S',union A489,m6,1)
		AFa(union A489,m7,1,A488)
		AF('p',union A489,m8,1)
		AF('S',union A489,m9,1)
		AF('J',union A489,m10,1)
		AF('c',union A489,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B<>f<S{JiJ}BccsS<SLLJSpLsfslp>pSJc>csLSiBcL> */
#pragma pack(push,4)
union A490 { B m0; union A30 m1; f m2; union A489 m3; c m4; s m5; L m6; S m7; i m8; B m9; c m10; L m11; };
#pragma pack(pop)
int f_cmpA490(const union A490 *x, const union A490 *y) { return x->m0 == y->m0 && f_cmpA30(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA489(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA490() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A490));
		AF('B',union A490,m0,1)
		AFa(union A490,m1,1,A30)
		AF('f',union A490,m2,1)
		AFa(union A490,m3,1,A489)
		AF('c',union A490,m4,1)
		AF('s',union A490,m5,1)
		AF('L',union A490,m6,1)
		AF('S',union A490,m7,1)
		AF('i',union A490,m8,1)
		AF('B',union A490,m9,1)
		AF('c',union A490,m10,1)
		AF('L',union A490,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ljjsLlIJcsp} */
#pragma pack(push,4)
struct A491 { l m0; j m1; j m2; s m3; L m4; l m5; I m6; J m7; c m8; s m9; p m10; };
#pragma pack(pop)
int f_cmpA491(const struct A491 *x, const struct A491 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA491() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A491));
		AF('l',struct A491,m0,1)
		AF('j',struct A491,m1,1)
		AF('j',struct A491,m2,1)
		AF('s',struct A491,m3,1)
		AF('L',struct A491,m4,1)
		AF('l',struct A491,m5,1)
		AF('I',struct A491,m6,1)
		AF('J',struct A491,m7,1)
		AF('c',struct A491,m8,1)
		AF('s',struct A491,m9,1)
		AF('p',struct A491,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dIJcdL> */
#pragma pack(push,2)
union A492 { d m0; I m1; J m2; c m3; d m4; L m5; };
#pragma pack(pop)
int f_cmpA492(const union A492 *x, const union A492 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA492() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A492));
		AF('d',union A492,m0,1)
		AF('I',union A492,m1,1)
		AF('J',union A492,m2,1)
		AF('c',union A492,m3,1)
		AF('d',union A492,m4,1)
		AF('L',union A492,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iICBcs{ljjsLlIJcsp}IL<dIJcdL>jS} */
#pragma pack(push,4)
struct A493 { i m0; I m1; C m2; B m3; c m4; s m5; struct A491 m6; I m7; L m8; union A492 m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA493(const struct A493 *x, const struct A493 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA491(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA492(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA493() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A493));
		AF('i',struct A493,m0,1)
		AF('I',struct A493,m1,1)
		AF('C',struct A493,m2,1)
		AF('B',struct A493,m3,1)
		AF('c',struct A493,m4,1)
		AF('s',struct A493,m5,1)
		AFa(struct A493,m6,1,A491)
		AF('I',struct A493,m7,1)
		AF('L',struct A493,m8,1)
		AFa(struct A493,m9,1,A492)
		AF('j',struct A493,m10,1)
		AF('S',struct A493,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCfl[9]dsIBjfJI} */
#pragma pack(push,1)
struct A494 { S m0; C m1; f m2; l m3[9]; d m4; s m5; I m6; B m7; j m8; f m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA494(const struct A494 *x, const struct A494 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA494() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A494));
		AF('S',struct A494,m0,1)
		AF('C',struct A494,m1,1)
		AF('f',struct A494,m2,1)
		AF('l',struct A494,m3,9)
		AF('d',struct A494,m4,1)
		AF('s',struct A494,m5,1)
		AF('I',struct A494,m6,1)
		AF('B',struct A494,m7,1)
		AF('j',struct A494,m8,1)
		AF('f',struct A494,m9,1)
		AF('J',struct A494,m10,1)
		AF('I',struct A494,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cIffC[14]Is{j}dLfl} */
#pragma pack(push,4)
struct A495 { c m0; I m1; f m2; f m3; C m4[14]; I m5; s m6; struct A80 m7; d m8; L m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA495(const struct A495 *x, const struct A495 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA80(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA495() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A495));
		AF('c',struct A495,m0,1)
		AF('I',struct A495,m1,1)
		AF('f',struct A495,m2,1)
		AF('f',struct A495,m3,1)
		AF('C',struct A495,m4,14)
		AF('I',struct A495,m5,1)
		AF('s',struct A495,m6,1)
		AFa(struct A495,m7,1,A80)
		AF('d',struct A495,m8,1)
		AF('L',struct A495,m9,1)
		AF('f',struct A495,m10,1)
		AF('l',struct A495,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{cIffC[14]Is{j}dLfl}BIJIIpl> */
#pragma pack(push,8)
union A496 { struct A495 m0; B m1; I m2; J m3; I m4; I m5; p m6; l m7; };
#pragma pack(pop)
int f_cmpA496(const union A496 *x, const union A496 *y) { return f_cmpA495(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA496() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A496));
		AFa(union A496,m0,1,A495)
		AF('B',union A496,m1,1)
		AF('I',union A496,m2,1)
		AF('J',union A496,m3,1)
		AF('I',union A496,m4,1)
		AF('I',union A496,m5,1)
		AF('p',union A496,m6,1)
		AF('l',union A496,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iCscilILcCCs} */
#pragma pack(push,2)
struct A497 { i m0; C m1; s m2; c m3; i m4; l m5; I m6; L m7; c m8; C m9; C m10; s m11; };
#pragma pack(pop)
int f_cmpA497(const struct A497 *x, const struct A497 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA497() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A497));
		AF('i',struct A497,m0,1)
		AF('C',struct A497,m1,1)
		AF('s',struct A497,m2,1)
		AF('c',struct A497,m3,1)
		AF('i',struct A497,m4,1)
		AF('l',struct A497,m5,1)
		AF('I',struct A497,m6,1)
		AF('L',struct A497,m7,1)
		AF('c',struct A497,m8,1)
		AF('C',struct A497,m9,1)
		AF('C',struct A497,m10,1)
		AF('s',struct A497,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jBcCjC> */
#pragma pack(push,4)
union A498 { j m0; B m1; c m2; C m3; j m4; C m5; };
#pragma pack(pop)
int f_cmpA498(const union A498 *x, const union A498 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA498() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A498));
		AF('j',union A498,m0,1)
		AF('B',union A498,m1,1)
		AF('c',union A498,m2,1)
		AF('C',union A498,m3,1)
		AF('j',union A498,m4,1)
		AF('C',union A498,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sfIi} */
#pragma pack(push,4)
struct A499 { s m0; f m1; I m2; i m3; };
#pragma pack(pop)
int f_cmpA499(const struct A499 *x, const struct A499 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA499() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A499));
		AF('s',struct A499,m0,1)
		AF('f',struct A499,m1,1)
		AF('I',struct A499,m2,1)
		AF('i',struct A499,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{sfIi}dl> */
#pragma pack(push,4)
union A500 { struct A499 m0; d m1; l m2; };
#pragma pack(pop)
int f_cmpA500(const union A500 *x, const union A500 *y) { return f_cmpA499(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA500() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A500));
		AFa(union A500,m0,1,A499)
		AF('d',union A500,m1,1)
		AF('l',union A500,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBcL} */
#pragma pack(push,4)
struct A501 { S m0; B m1; c m2; L m3; };
#pragma pack(pop)
int f_cmpA501(const struct A501 *x, const struct A501 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA501() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A501));
		AF('S',struct A501,m0,1)
		AF('B',struct A501,m1,1)
		AF('c',struct A501,m2,1)
		AF('L',struct A501,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bcjifdsi[16]dsiI> */
#pragma pack(push,4)
union A502 { B m0; c m1; j m2; i m3; f m4; d m5; s m6; i m7[16]; d m8; s m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA502(const union A502 *x, const union A502 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m7[14] == y->m7[14] && x->m7[15] == y->m7[15] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA502() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A502));
		AF('B',union A502,m0,1)
		AF('c',union A502,m1,1)
		AF('j',union A502,m2,1)
		AF('i',union A502,m3,1)
		AF('f',union A502,m4,1)
		AF('d',union A502,m5,1)
		AF('s',union A502,m6,1)
		AF('i',union A502,m7,16)
		AF('d',union A502,m8,1)
		AF('s',union A502,m9,1)
		AF('i',union A502,m10,1)
		AF('I',union A502,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dsjdIcj[4]lpIjf} */
#pragma pack(push,4)
struct A503 { d m0; s m1; j m2; d m3; I m4; c m5; j m6[4]; l m7; p m8; I m9; j m10; f m11; };
#pragma pack(pop)
int f_cmpA503(const struct A503 *x, const struct A503 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA503() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A503));
		AF('d',struct A503,m0,1)
		AF('s',struct A503,m1,1)
		AF('j',struct A503,m2,1)
		AF('d',struct A503,m3,1)
		AF('I',struct A503,m4,1)
		AF('c',struct A503,m5,1)
		AF('j',struct A503,m6,4)
		AF('l',struct A503,m7,1)
		AF('p',struct A503,m8,1)
		AF('I',struct A503,m9,1)
		AF('j',struct A503,m10,1)
		AF('f',struct A503,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Li> */
#pragma pack(push,1)
union A504 { L m0; i m1; };
#pragma pack(pop)
int f_cmpA504(const union A504 *x, const union A504 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA504() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A504));
		AF('L',union A504,m0,1)
		AF('i',union A504,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lsd[8]SppL> */
#pragma pack(push,4)
union A505 { L m0; s m1; d m2[8]; S m3; p m4; p m5; L m6; };
#pragma pack(pop)
int f_cmpA505(const union A505 *x, const union A505 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA505() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A505));
		AF('L',union A505,m0,1)
		AF('s',union A505,m1,1)
		AF('d',union A505,m2,8)
		AF('S',union A505,m3,1)
		AF('p',union A505,m4,1)
		AF('p',union A505,m5,1)
		AF('L',union A505,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {C{dsjdIcj[4]lpIjf}IJILd<Li><Lsd[8]SppL>} */
#pragma pack(push,4)
struct A506 { C m0; struct A503 m1; I m2; J m3; I m4; L m5; d m6; union A504 m7; union A505 m8; };
#pragma pack(pop)
int f_cmpA506(const struct A506 *x, const struct A506 *y) { return x->m0 == y->m0 && f_cmpA503(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA504(&x->m7, &y->m7) && f_cmpA505(&x->m8, &y->m8); };
DCaggr* f_touchA506() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A506));
		AF('C',struct A506,m0,1)
		AFa(struct A506,m1,1,A503)
		AF('I',struct A506,m2,1)
		AF('J',struct A506,m3,1)
		AF('I',struct A506,m4,1)
		AF('L',struct A506,m5,1)
		AF('d',struct A506,m6,1)
		AFa(struct A506,m7,1,A504)
		AFa(struct A506,m8,1,A505)
		dcCloseAggr(a);
	}
	return a;
};
/* <JIIfdj> */
#pragma pack(push,4)
union A507 { J m0; I m1; I m2; f m3; d m4; j m5; };
#pragma pack(pop)
int f_cmpA507(const union A507 *x, const union A507 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA507() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A507));
		AF('J',union A507,m0,1)
		AF('I',union A507,m1,1)
		AF('I',union A507,m2,1)
		AF('f',union A507,m3,1)
		AF('d',union A507,m4,1)
		AF('j',union A507,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SfppLBBCpscf> */
#pragma pack(push,4)
union A508 { S m0; f m1; p m2; p m3; L m4; B m5; B m6; C m7; p m8; s m9; c m10; f m11; };
#pragma pack(pop)
int f_cmpA508(const union A508 *x, const union A508 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA508() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A508));
		AF('S',union A508,m0,1)
		AF('f',union A508,m1,1)
		AF('p',union A508,m2,1)
		AF('p',union A508,m3,1)
		AF('L',union A508,m4,1)
		AF('B',union A508,m5,1)
		AF('B',union A508,m6,1)
		AF('C',union A508,m7,1)
		AF('p',union A508,m8,1)
		AF('s',union A508,m9,1)
		AF('c',union A508,m10,1)
		AF('f',union A508,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijIJS> */
#pragma pack(push,1)
union A509 { i m0; j m1; I m2; J m3; S m4; };
#pragma pack(pop)
int f_cmpA509(const union A509 *x, const union A509 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA509() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A509));
		AF('i',union A509,m0,1)
		AF('j',union A509,m1,1)
		AF('I',union A509,m2,1)
		AF('J',union A509,m3,1)
		AF('S',union A509,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JBL<ijIJS>csCSsBfj} */
#pragma pack(push,2)
struct A510 { J m0; B m1; L m2; union A509 m3; c m4; s m5; C m6; S m7; s m8; B m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA510(const struct A510 *x, const struct A510 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA509(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA510() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A510));
		AF('J',struct A510,m0,1)
		AF('B',struct A510,m1,1)
		AF('L',struct A510,m2,1)
		AFa(struct A510,m3,1,A509)
		AF('c',struct A510,m4,1)
		AF('s',struct A510,m5,1)
		AF('C',struct A510,m6,1)
		AF('S',struct A510,m7,1)
		AF('s',struct A510,m8,1)
		AF('B',struct A510,m9,1)
		AF('f',struct A510,m10,1)
		AF('j',struct A510,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JIL<JIIfdj><SfppLBBCpscf>lBd{JBL<ijIJS>csCSsBfj}fc[11]C> */
#pragma pack(push,4)
union A511 { J m0; I m1; L m2; union A507 m3; union A508 m4; l m5; B m6; d m7; struct A510 m8; f m9; c m10[11]; C m11; };
#pragma pack(pop)
int f_cmpA511(const union A511 *x, const union A511 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA507(&x->m3, &y->m3) && f_cmpA508(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA510(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m11 == y->m11; };
DCaggr* f_touchA511() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A511));
		AF('J',union A511,m0,1)
		AF('I',union A511,m1,1)
		AF('L',union A511,m2,1)
		AFa(union A511,m3,1,A507)
		AFa(union A511,m4,1,A508)
		AF('l',union A511,m5,1)
		AF('B',union A511,m6,1)
		AF('d',union A511,m7,1)
		AFa(union A511,m8,1,A510)
		AF('f',union A511,m9,1)
		AF('c',union A511,m10,11)
		AF('C',union A511,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cisScSJdLL> */
#pragma pack(push,4)
union A512 { c m0; i m1; s m2; S m3; c m4; S m5; J m6; d m7; L m8; L m9; };
#pragma pack(pop)
int f_cmpA512(const union A512 *x, const union A512 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA512() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A512));
		AF('c',union A512,m0,1)
		AF('i',union A512,m1,1)
		AF('s',union A512,m2,1)
		AF('S',union A512,m3,1)
		AF('c',union A512,m4,1)
		AF('S',union A512,m5,1)
		AF('J',union A512,m6,1)
		AF('d',union A512,m7,1)
		AF('L',union A512,m8,1)
		AF('L',union A512,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Blil[12]c<cisScSJdLL>BjcCCc> */
#pragma pack(push,4)
union A513 { B m0; l m1; i m2; l m3[12]; c m4; union A512 m5; B m6; j m7; c m8; C m9; C m10; c m11; };
#pragma pack(pop)
int f_cmpA513(const union A513 *x, const union A513 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m4 == y->m4 && f_cmpA512(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA513() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A513));
		AF('B',union A513,m0,1)
		AF('l',union A513,m1,1)
		AF('i',union A513,m2,1)
		AF('l',union A513,m3,12)
		AF('c',union A513,m4,1)
		AFa(union A513,m5,1,A512)
		AF('B',union A513,m6,1)
		AF('j',union A513,m7,1)
		AF('c',union A513,m8,1)
		AF('C',union A513,m9,1)
		AF('C',union A513,m10,1)
		AF('c',union A513,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ccjC} */
#pragma pack(push,2)
struct A514 { c m0; c m1; j m2; C m3; };
#pragma pack(pop)
int f_cmpA514(const struct A514 *x, const struct A514 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA514() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A514));
		AF('c',struct A514,m0,1)
		AF('c',struct A514,m1,1)
		AF('j',struct A514,m2,1)
		AF('C',struct A514,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCjJjiSifJpC> */
#pragma pack(push,4)
union A515 { J m0; C m1; j m2; J m3; j m4; i m5; S m6; i m7; f m8; J m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA515(const union A515 *x, const union A515 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA515() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A515));
		AF('J',union A515,m0,1)
		AF('C',union A515,m1,1)
		AF('j',union A515,m2,1)
		AF('J',union A515,m3,1)
		AF('j',union A515,m4,1)
		AF('i',union A515,m5,1)
		AF('S',union A515,m6,1)
		AF('i',union A515,m7,1)
		AF('f',union A515,m8,1)
		AF('J',union A515,m9,1)
		AF('p',union A515,m10,1)
		AF('C',union A515,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dJLi{ccjC}dd<JCjJjiSifJpC>diIj> */
#pragma pack(push,2)
union A516 { d m0; J m1; L m2; i m3; struct A514 m4; d m5; d m6; union A515 m7; d m8; i m9; I m10; j m11; };
#pragma pack(pop)
int f_cmpA516(const union A516 *x, const union A516 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA514(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA515(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA516() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A516));
		AF('d',union A516,m0,1)
		AF('J',union A516,m1,1)
		AF('L',union A516,m2,1)
		AF('i',union A516,m3,1)
		AFa(union A516,m4,1,A514)
		AF('d',union A516,m5,1)
		AF('d',union A516,m6,1)
		AFa(union A516,m7,1,A515)
		AF('d',union A516,m8,1)
		AF('i',union A516,m9,1)
		AF('I',union A516,m10,1)
		AF('j',union A516,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sSJlJC} */
#pragma pack(push,2)
struct A517 { s m0; S m1; J m2; l m3; J m4; C m5; };
#pragma pack(pop)
int f_cmpA517(const struct A517 *x, const struct A517 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA517() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A517));
		AF('s',struct A517,m0,1)
		AF('S',struct A517,m1,1)
		AF('J',struct A517,m2,1)
		AF('l',struct A517,m3,1)
		AF('J',struct A517,m4,1)
		AF('C',struct A517,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfpijijBJifi} */
#pragma pack(push,4)
struct A518 { c m0; f m1; p m2; i m3; j m4; i m5; j m6; B m7; J m8; i m9; f m10; i m11; };
#pragma pack(pop)
int f_cmpA518(const struct A518 *x, const struct A518 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA518() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A518));
		AF('c',struct A518,m0,1)
		AF('f',struct A518,m1,1)
		AF('p',struct A518,m2,1)
		AF('i',struct A518,m3,1)
		AF('j',struct A518,m4,1)
		AF('i',struct A518,m5,1)
		AF('j',struct A518,m6,1)
		AF('B',struct A518,m7,1)
		AF('J',struct A518,m8,1)
		AF('i',struct A518,m9,1)
		AF('f',struct A518,m10,1)
		AF('i',struct A518,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{cfpijijBJifi}} */
#pragma pack(push,4)
struct A519 { p m0; struct A518 m1; };
#pragma pack(pop)
int f_cmpA519(const struct A519 *x, const struct A519 *y) { return x->m0 == y->m0 && f_cmpA518(&x->m1, &y->m1); };
DCaggr* f_touchA519() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A519));
		AF('p',struct A519,m0,1)
		AFa(struct A519,m1,1,A518)
		dcCloseAggr(a);
	}
	return a;
};
/* <fp> */
#pragma pack(push,2)
union A520 { f m0; p m1; };
#pragma pack(pop)
int f_cmpA520(const union A520 *x, const union A520 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA520() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A520));
		AF('f',union A520,m0,1)
		AF('p',union A520,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <l<fp>LJsffcsdls> */
#pragma pack(push,2)
union A521 { l m0; union A520 m1; L m2; J m3; s m4; f m5; f m6; c m7; s m8; d m9; l m10; s m11; };
#pragma pack(pop)
int f_cmpA521(const union A521 *x, const union A521 *y) { return x->m0 == y->m0 && f_cmpA520(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA521() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A521));
		AF('l',union A521,m0,1)
		AFa(union A521,m1,1,A520)
		AF('L',union A521,m2,1)
		AF('J',union A521,m3,1)
		AF('s',union A521,m4,1)
		AF('f',union A521,m5,1)
		AF('f',union A521,m6,1)
		AF('c',union A521,m7,1)
		AF('s',union A521,m8,1)
		AF('d',union A521,m9,1)
		AF('l',union A521,m10,1)
		AF('s',union A521,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {siCIdp} */
#pragma pack(push,2)
struct A522 { s m0; i m1; C m2; I m3; d m4; p m5; };
#pragma pack(pop)
int f_cmpA522(const struct A522 *x, const struct A522 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA522() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A522));
		AF('s',struct A522,m0,1)
		AF('i',struct A522,m1,1)
		AF('C',struct A522,m2,1)
		AF('I',struct A522,m3,1)
		AF('d',struct A522,m4,1)
		AF('p',struct A522,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fjLspCjfIll{siCIdp}} */
#pragma pack(push,4)
struct A523 { f m0; j m1; L m2; s m3; p m4; C m5; j m6; f m7; I m8; l m9; l m10; struct A522 m11; };
#pragma pack(pop)
int f_cmpA523(const struct A523 *x, const struct A523 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA522(&x->m11, &y->m11); };
DCaggr* f_touchA523() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A523));
		AF('f',struct A523,m0,1)
		AF('j',struct A523,m1,1)
		AF('L',struct A523,m2,1)
		AF('s',struct A523,m3,1)
		AF('p',struct A523,m4,1)
		AF('C',struct A523,m5,1)
		AF('j',struct A523,m6,1)
		AF('f',struct A523,m7,1)
		AF('I',struct A523,m8,1)
		AF('l',struct A523,m9,1)
		AF('l',struct A523,m10,1)
		AFa(struct A523,m11,1,A522)
		dcCloseAggr(a);
	}
	return a;
};
/* <JL[9]dc<l<fp>LJsffcsdls>{fjLspCjfIll{siCIdp}}jCjdsC> */
#pragma pack(push,4)
union A524 { J m0; L m1[9]; d m2; c m3; union A521 m4; struct A523 m5; j m6; C m7; j m8; d m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA524(const union A524 *x, const union A524 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA521(&x->m4, &y->m4) && f_cmpA523(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA524() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A524));
		AF('J',union A524,m0,1)
		AF('L',union A524,m1,9)
		AF('d',union A524,m2,1)
		AF('c',union A524,m3,1)
		AFa(union A524,m4,1,A521)
		AFa(union A524,m5,1,A523)
		AF('j',union A524,m6,1)
		AF('C',union A524,m7,1)
		AF('j',union A524,m8,1)
		AF('d',union A524,m9,1)
		AF('s',union A524,m10,1)
		AF('C',union A524,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdiCsfSSsi} */
#pragma pack(push,2)
struct A525 { C m0; d m1; i m2; C m3; s m4; f m5; S m6; S m7; s m8; i m9; };
#pragma pack(pop)
int f_cmpA525(const struct A525 *x, const struct A525 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA525() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A525));
		AF('C',struct A525,m0,1)
		AF('d',struct A525,m1,1)
		AF('i',struct A525,m2,1)
		AF('C',struct A525,m3,1)
		AF('s',struct A525,m4,1)
		AF('f',struct A525,m5,1)
		AF('S',struct A525,m6,1)
		AF('S',struct A525,m7,1)
		AF('s',struct A525,m8,1)
		AF('i',struct A525,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fjp[5]CfipdS} */
#pragma pack(push,2)
struct A526 { f m0; j m1; p m2[5]; C m3; f m4; i m5; p m6; d m7; S m8; };
#pragma pack(pop)
int f_cmpA526(const struct A526 *x, const struct A526 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA526() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A526));
		AF('f',struct A526,m0,1)
		AF('j',struct A526,m1,1)
		AF('p',struct A526,m2,5)
		AF('C',struct A526,m3,1)
		AF('f',struct A526,m4,1)
		AF('i',struct A526,m5,1)
		AF('p',struct A526,m6,1)
		AF('d',struct A526,m7,1)
		AF('S',struct A526,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C> */
#pragma pack(push,4)
union A527 { C m0; };
#pragma pack(pop)
int f_cmpA527(const union A527 *x, const union A527 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA527() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A527));
		AF('C',union A527,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<l>SJCLjSJ<C>LCc} */
#pragma pack(push,4)
struct A528 { union A104 m0; S m1; J m2; C m3; L m4; j m5; S m6; J m7; union A527 m8; L m9; C m10; c m11; };
#pragma pack(pop)
int f_cmpA528(const struct A528 *x, const struct A528 *y) { return f_cmpA104(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA527(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA528() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A528));
		AFa(struct A528,m0,1,A104)
		AF('S',struct A528,m1,1)
		AF('J',struct A528,m2,1)
		AF('C',struct A528,m3,1)
		AF('L',struct A528,m4,1)
		AF('j',struct A528,m5,1)
		AF('S',struct A528,m6,1)
		AF('J',struct A528,m7,1)
		AFa(struct A528,m8,1,A527)
		AF('L',struct A528,m9,1)
		AF('C',struct A528,m10,1)
		AF('c',struct A528,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SpdLLfsf} */
#pragma pack(push,1)
struct A529 { S m0; p m1; d m2; L m3; L m4; f m5; s m6; f m7; };
#pragma pack(pop)
int f_cmpA529(const struct A529 *x, const struct A529 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA529() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A529));
		AF('S',struct A529,m0,1)
		AF('p',struct A529,m1,1)
		AF('d',struct A529,m2,1)
		AF('L',struct A529,m3,1)
		AF('L',struct A529,m4,1)
		AF('f',struct A529,m5,1)
		AF('s',struct A529,m6,1)
		AF('f',struct A529,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dffBClflcSpi> */
#pragma pack(push,4)
union A530 { d m0; f m1; f m2; B m3; C m4; l m5; f m6; l m7; c m8; S m9; p m10; i m11; };
#pragma pack(pop)
int f_cmpA530(const union A530 *x, const union A530 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA530() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A530));
		AF('d',union A530,m0,1)
		AF('f',union A530,m1,1)
		AF('f',union A530,m2,1)
		AF('B',union A530,m3,1)
		AF('C',union A530,m4,1)
		AF('l',union A530,m5,1)
		AF('f',union A530,m6,1)
		AF('l',union A530,m7,1)
		AF('c',union A530,m8,1)
		AF('S',union A530,m9,1)
		AF('p',union A530,m10,1)
		AF('i',union A530,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SlS> */
#pragma pack(push,1)
union A531 { S m0; l m1; S m2; };
#pragma pack(pop)
int f_cmpA531(const union A531 *x, const union A531 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA531() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A531));
		AF('S',union A531,m0,1)
		AF('l',union A531,m1,1)
		AF('S',union A531,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJLIpipLsCBJ> */
#pragma pack(push,4)
union A532 { s m0; J m1; L m2; I m3; p m4; i m5; p m6; L m7; s m8; C m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA532(const union A532 *x, const union A532 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA532() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A532));
		AF('s',union A532,m0,1)
		AF('J',union A532,m1,1)
		AF('L',union A532,m2,1)
		AF('I',union A532,m3,1)
		AF('p',union A532,m4,1)
		AF('i',union A532,m5,1)
		AF('p',union A532,m6,1)
		AF('L',union A532,m7,1)
		AF('s',union A532,m8,1)
		AF('C',union A532,m9,1)
		AF('B',union A532,m10,1)
		AF('J',union A532,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sj} */
#pragma pack(push,1)
struct A533 { s m0; j m1; };
#pragma pack(pop)
int f_cmpA533(const struct A533 *x, const struct A533 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA533() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A533));
		AF('s',struct A533,m0,1)
		AF('j',struct A533,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLBjLIdJsLLS> */
#pragma pack(push,4)
union A534 { s m0; L m1; B m2; j m3; L m4; I m5; d m6; J m7; s m8; L m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA534(const union A534 *x, const union A534 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA534() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A534));
		AF('s',union A534,m0,1)
		AF('L',union A534,m1,1)
		AF('B',union A534,m2,1)
		AF('j',union A534,m3,1)
		AF('L',union A534,m4,1)
		AF('I',union A534,m5,1)
		AF('d',union A534,m6,1)
		AF('J',union A534,m7,1)
		AF('s',union A534,m8,1)
		AF('L',union A534,m9,1)
		AF('L',union A534,m10,1)
		AF('S',union A534,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jl> */
#pragma pack(push,4)
union A535 { J m0; l m1; };
#pragma pack(pop)
int f_cmpA535(const union A535 *x, const union A535 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA535() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A535));
		AF('J',union A535,m0,1)
		AF('l',union A535,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jjL> */
#pragma pack(push,4)
union A536 { j m0; j m1; L m2; };
#pragma pack(pop)
int f_cmpA536(const union A536 *x, const union A536 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA536() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A536));
		AF('j',union A536,m0,1)
		AF('j',union A536,m1,1)
		AF('L',union A536,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iCcpljS<Jl>IfB<jjL>} */
#pragma pack(push,2)
struct A537 { i m0; C m1; c m2; p m3; l m4; j m5; S m6; union A535 m7; I m8; f m9; B m10; union A536 m11; };
#pragma pack(pop)
int f_cmpA537(const struct A537 *x, const struct A537 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA535(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA536(&x->m11, &y->m11); };
DCaggr* f_touchA537() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A537));
		AF('i',struct A537,m0,1)
		AF('C',struct A537,m1,1)
		AF('c',struct A537,m2,1)
		AF('p',struct A537,m3,1)
		AF('l',struct A537,m4,1)
		AF('j',struct A537,m5,1)
		AF('S',struct A537,m6,1)
		AFa(struct A537,m7,1,A535)
		AF('I',struct A537,m8,1)
		AF('f',struct A537,m9,1)
		AF('B',struct A537,m10,1)
		AFa(struct A537,m11,1,A536)
		dcCloseAggr(a);
	}
	return a;
};
/* <{iCcpljS<Jl>IfB<jjL>}sfLc> */
#pragma pack(push,4)
union A538 { struct A537 m0; s m1; f m2; L m3; c m4; };
#pragma pack(pop)
int f_cmpA538(const union A538 *x, const union A538 *y) { return f_cmpA537(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA538() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A538));
		AFa(union A538,m0,1,A537)
		AF('s',union A538,m1,1)
		AF('f',union A538,m2,1)
		AF('L',union A538,m3,1)
		AF('c',union A538,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ils} */
#pragma pack(push,2)
struct A539 { i m0; l m1; s m2; };
#pragma pack(pop)
int f_cmpA539(const struct A539 *x, const struct A539 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA539() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A539));
		AF('i',struct A539,m0,1)
		AF('l',struct A539,m1,1)
		AF('s',struct A539,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cBCfLjfLBdsI} */
#pragma pack(push,2)
struct A540 { c m0; B m1; C m2; f m3; L m4; j m5; f m6; L m7; B m8; d m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA540(const struct A540 *x, const struct A540 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA540() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A540));
		AF('c',struct A540,m0,1)
		AF('B',struct A540,m1,1)
		AF('C',struct A540,m2,1)
		AF('f',struct A540,m3,1)
		AF('L',struct A540,m4,1)
		AF('j',struct A540,m5,1)
		AF('f',struct A540,m6,1)
		AF('L',struct A540,m7,1)
		AF('B',struct A540,m8,1)
		AF('d',struct A540,m9,1)
		AF('s',struct A540,m10,1)
		AF('I',struct A540,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIsCCj{cBCfLjfLBdsI}S> */
#pragma pack(push,8)
union A541 { p m0; I m1; s m2; C m3; C m4; j m5; struct A540 m6; S m7; };
#pragma pack(pop)
int f_cmpA541(const union A541 *x, const union A541 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA540(&x->m6, &y->m6) && x->m7 == y->m7; };
DCaggr* f_touchA541() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A541));
		AF('p',union A541,m0,1)
		AF('I',union A541,m1,1)
		AF('s',union A541,m2,1)
		AF('C',union A541,m3,1)
		AF('C',union A541,m4,1)
		AF('j',union A541,m5,1)
		AFa(union A541,m6,1,A540)
		AF('S',union A541,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dSddCisJf> */
#pragma pack(push,8)
union A542 { d m0; S m1; d m2; d m3; C m4; i m5; s m6; J m7; f m8; };
#pragma pack(pop)
int f_cmpA542(const union A542 *x, const union A542 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA542() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A542));
		AF('d',union A542,m0,1)
		AF('S',union A542,m1,1)
		AF('d',union A542,m2,1)
		AF('d',union A542,m3,1)
		AF('C',union A542,m4,1)
		AF('i',union A542,m5,1)
		AF('s',union A542,m6,1)
		AF('J',union A542,m7,1)
		AF('f',union A542,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<dSddCisJf>cCJlClfl[4]Is> */
#pragma pack(push,1)
union A543 { union A542 m0; c m1; C m2; J m3; l m4; C m5; l m6; f m7; l m8[4]; I m9; s m10; };
#pragma pack(pop)
int f_cmpA543(const union A543 *x, const union A543 *y) { return f_cmpA542(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA543() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A543));
		AFa(union A543,m0,1,A542)
		AF('c',union A543,m1,1)
		AF('C',union A543,m2,1)
		AF('J',union A543,m3,1)
		AF('l',union A543,m4,1)
		AF('C',union A543,m5,1)
		AF('l',union A543,m6,1)
		AF('f',union A543,m7,1)
		AF('l',union A543,m8,4)
		AF('I',union A543,m9,1)
		AF('s',union A543,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CS[8]} */
#pragma pack(push,4)
struct A544 { C m0; S m1[8]; };
#pragma pack(pop)
int f_cmpA544(const struct A544 *x, const struct A544 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7]; };
DCaggr* f_touchA544() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A544));
		AF('C',struct A544,m0,1)
		AF('S',struct A544,m1,8)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIiSjfSCIidj> */
#pragma pack(push,2)
union A545 { l m0; I m1; i m2; S m3; j m4; f m5; S m6; C m7; I m8; i m9; d m10; j m11; };
#pragma pack(pop)
int f_cmpA545(const union A545 *x, const union A545 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA545() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A545));
		AF('l',union A545,m0,1)
		AF('I',union A545,m1,1)
		AF('i',union A545,m2,1)
		AF('S',union A545,m3,1)
		AF('j',union A545,m4,1)
		AF('f',union A545,m5,1)
		AF('S',union A545,m6,1)
		AF('C',union A545,m7,1)
		AF('I',union A545,m8,1)
		AF('i',union A545,m9,1)
		AF('d',union A545,m10,1)
		AF('j',union A545,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sSJ} */
#pragma pack(push,4)
struct A546 { s m0; S m1; J m2; };
#pragma pack(pop)
int f_cmpA546(const struct A546 *x, const struct A546 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA546() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A546));
		AF('s',struct A546,m0,1)
		AF('S',struct A546,m1,1)
		AF('J',struct A546,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SijiLlii{sSJ}lJs> */
#pragma pack(push,2)
union A547 { S m0; i m1; j m2; i m3; L m4; l m5; i m6; i m7; struct A546 m8; l m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA547(const union A547 *x, const union A547 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA546(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA547() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A547));
		AF('S',union A547,m0,1)
		AF('i',union A547,m1,1)
		AF('j',union A547,m2,1)
		AF('i',union A547,m3,1)
		AF('L',union A547,m4,1)
		AF('l',union A547,m5,1)
		AF('i',union A547,m6,1)
		AF('i',union A547,m7,1)
		AFa(union A547,m8,1,A546)
		AF('l',union A547,m9,1)
		AF('J',union A547,m10,1)
		AF('s',union A547,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sIfCJsfJBBdi> */
#pragma pack(push,4)
union A548 { s m0; I m1; f m2; C m3; J m4; s m5; f m6; J m7; B m8; B m9; d m10; i m11; };
#pragma pack(pop)
int f_cmpA548(const union A548 *x, const union A548 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA548() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A548));
		AF('s',union A548,m0,1)
		AF('I',union A548,m1,1)
		AF('f',union A548,m2,1)
		AF('C',union A548,m3,1)
		AF('J',union A548,m4,1)
		AF('s',union A548,m5,1)
		AF('f',union A548,m6,1)
		AF('J',union A548,m7,1)
		AF('B',union A548,m8,1)
		AF('B',union A548,m9,1)
		AF('d',union A548,m10,1)
		AF('i',union A548,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B[8]LBBSjfBCdLs} */
#pragma pack(push,2)
struct A549 { B m0[8]; L m1; B m2; B m3; S m4; j m5; f m6; B m7; C m8; d m9; L m10; s m11; };
#pragma pack(pop)
int f_cmpA549(const struct A549 *x, const struct A549 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA549() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A549));
		AF('B',struct A549,m0,8)
		AF('L',struct A549,m1,1)
		AF('B',struct A549,m2,1)
		AF('B',struct A549,m3,1)
		AF('S',struct A549,m4,1)
		AF('j',struct A549,m5,1)
		AF('f',struct A549,m6,1)
		AF('B',struct A549,m7,1)
		AF('C',struct A549,m8,1)
		AF('d',struct A549,m9,1)
		AF('L',struct A549,m10,1)
		AF('s',struct A549,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jc[3]dJ{B[8]LBBSjfBCdLs}[12]sjsfj} */
#pragma pack(push,8)
struct A550 { J m0; c m1[3]; d m2; J m3; struct A549 m4[12]; s m5; j m6; s m7; f m8; j m9; };
#pragma pack(pop)
int f_cmpA550(const struct A550 *x, const struct A550 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA549(&x->m4[0], &y->m4[0]) && f_cmpA549(&x->m4[1], &y->m4[1]) && f_cmpA549(&x->m4[2], &y->m4[2]) && f_cmpA549(&x->m4[3], &y->m4[3]) && f_cmpA549(&x->m4[4], &y->m4[4]) && f_cmpA549(&x->m4[5], &y->m4[5]) && f_cmpA549(&x->m4[6], &y->m4[6]) && f_cmpA549(&x->m4[7], &y->m4[7]) && f_cmpA549(&x->m4[8], &y->m4[8]) && f_cmpA549(&x->m4[9], &y->m4[9]) && f_cmpA549(&x->m4[10], &y->m4[10]) && f_cmpA549(&x->m4[11], &y->m4[11]) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA550() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A550));
		AF('J',struct A550,m0,1)
		AF('c',struct A550,m1,3)
		AF('d',struct A550,m2,1)
		AF('J',struct A550,m3,1)
		AFa(struct A550,m4,12,A549)
		AF('s',struct A550,m5,1)
		AF('j',struct A550,m6,1)
		AF('s',struct A550,m7,1)
		AF('f',struct A550,m8,1)
		AF('j',struct A550,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {icBjSLCCcljC} */
#pragma pack(push,8)
struct A551 { i m0; c m1; B m2; j m3; S m4; L m5; C m6; C m7; c m8; l m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA551(const struct A551 *x, const struct A551 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA551() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A551));
		AF('i',struct A551,m0,1)
		AF('c',struct A551,m1,1)
		AF('B',struct A551,m2,1)
		AF('j',struct A551,m3,1)
		AF('S',struct A551,m4,1)
		AF('L',struct A551,m5,1)
		AF('C',struct A551,m6,1)
		AF('C',struct A551,m7,1)
		AF('c',struct A551,m8,1)
		AF('l',struct A551,m9,1)
		AF('j',struct A551,m10,1)
		AF('C',struct A551,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {S} */
#pragma pack(push,4)
struct A552 { S m0; };
#pragma pack(pop)
int f_cmpA552(const struct A552 *x, const struct A552 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA552() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A552));
		AF('S',struct A552,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {I{icBjSLCCcljC}BdB<>csf{S}ip} */
#pragma pack(push,2)
struct A553 { I m0; struct A551 m1; B m2; d m3; B m4; union A30 m5; c m6; s m7; f m8; struct A552 m9; i m10; p m11; };
#pragma pack(pop)
int f_cmpA553(const struct A553 *x, const struct A553 *y) { return x->m0 == y->m0 && f_cmpA551(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA30(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA552(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA553() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A553));
		AF('I',struct A553,m0,1)
		AFa(struct A553,m1,1,A551)
		AF('B',struct A553,m2,1)
		AF('d',struct A553,m3,1)
		AF('B',struct A553,m4,1)
		AFa(struct A553,m5,1,A30)
		AF('c',struct A553,m6,1)
		AF('s',struct A553,m7,1)
		AF('f',struct A553,m8,1)
		AFa(struct A553,m9,1,A552)
		AF('i',struct A553,m10,1)
		AF('p',struct A553,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lSdIclBdILdd> */
#pragma pack(push,4)
union A554 { l m0; S m1; d m2; I m3; c m4; l m5; B m6; d m7; I m8; L m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA554(const union A554 *x, const union A554 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA554() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A554));
		AF('l',union A554,m0,1)
		AF('S',union A554,m1,1)
		AF('d',union A554,m2,1)
		AF('I',union A554,m3,1)
		AF('c',union A554,m4,1)
		AF('l',union A554,m5,1)
		AF('B',union A554,m6,1)
		AF('d',union A554,m7,1)
		AF('I',union A554,m8,1)
		AF('L',union A554,m9,1)
		AF('d',union A554,m10,1)
		AF('d',union A554,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {icf} */
#pragma pack(push,2)
struct A555 { i m0; c m1; f m2; };
#pragma pack(pop)
int f_cmpA555(const struct A555 *x, const struct A555 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA555() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A555));
		AF('i',struct A555,m0,1)
		AF('c',struct A555,m1,1)
		AF('f',struct A555,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jJllBC{icf}SL} */
#pragma pack(push,4)
struct A556 { j m0; J m1; l m2; l m3; B m4; C m5; struct A555 m6; S m7; L m8; };
#pragma pack(pop)
int f_cmpA556(const struct A556 *x, const struct A556 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA555(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA556() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A556));
		AF('j',struct A556,m0,1)
		AF('J',struct A556,m1,1)
		AF('l',struct A556,m2,1)
		AF('l',struct A556,m3,1)
		AF('B',struct A556,m4,1)
		AF('C',struct A556,m5,1)
		AFa(struct A556,m6,1,A555)
		AF('S',struct A556,m7,1)
		AF('L',struct A556,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fisLS} */
#pragma pack(push,4)
struct A557 { f m0; i m1; s m2; L m3; S m4; };
#pragma pack(pop)
int f_cmpA557(const struct A557 *x, const struct A557 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA557() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A557));
		AF('f',struct A557,m0,1)
		AF('i',struct A557,m1,1)
		AF('s',struct A557,m2,1)
		AF('L',struct A557,m3,1)
		AF('S',struct A557,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dLjjJljJls[13]pd} */
#pragma pack(push,4)
struct A558 { d m0; L m1; j m2; j m3; J m4; l m5; j m6; J m7; l m8; s m9[13]; p m10; d m11; };
#pragma pack(pop)
int f_cmpA558(const struct A558 *x, const struct A558 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA558() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A558));
		AF('d',struct A558,m0,1)
		AF('L',struct A558,m1,1)
		AF('j',struct A558,m2,1)
		AF('j',struct A558,m3,1)
		AF('J',struct A558,m4,1)
		AF('l',struct A558,m5,1)
		AF('j',struct A558,m6,1)
		AF('J',struct A558,m7,1)
		AF('l',struct A558,m8,1)
		AF('s',struct A558,m9,13)
		AF('p',struct A558,m10,1)
		AF('d',struct A558,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <llBdIsf> */
#pragma pack(push,1)
union A559 { l m0; l m1; B m2; d m3; I m4; s m5; f m6; };
#pragma pack(pop)
int f_cmpA559(const union A559 *x, const union A559 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA559() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A559));
		AF('l',union A559,m0,1)
		AF('l',union A559,m1,1)
		AF('B',union A559,m2,1)
		AF('d',union A559,m3,1)
		AF('I',union A559,m4,1)
		AF('s',union A559,m5,1)
		AF('f',union A559,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ciIIJBslJfsi} */
#pragma pack(push,4)
struct A560 { c m0; i m1; I m2; I m3; J m4; B m5; s m6; l m7; J m8; f m9; s m10; i m11; };
#pragma pack(pop)
int f_cmpA560(const struct A560 *x, const struct A560 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA560() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A560));
		AF('c',struct A560,m0,1)
		AF('i',struct A560,m1,1)
		AF('I',struct A560,m2,1)
		AF('I',struct A560,m3,1)
		AF('J',struct A560,m4,1)
		AF('B',struct A560,m5,1)
		AF('s',struct A560,m6,1)
		AF('l',struct A560,m7,1)
		AF('J',struct A560,m8,1)
		AF('f',struct A560,m9,1)
		AF('s',struct A560,m10,1)
		AF('i',struct A560,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ci{ciIIJBslJfsi}SlL} */
#pragma pack(push,2)
struct A561 { c m0; i m1; struct A560 m2; S m3; l m4; L m5; };
#pragma pack(pop)
int f_cmpA561(const struct A561 *x, const struct A561 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA560(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA561() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A561));
		AF('c',struct A561,m0,1)
		AF('i',struct A561,m1,1)
		AFa(struct A561,m2,1,A560)
		AF('S',struct A561,m3,1)
		AF('l',struct A561,m4,1)
		AF('L',struct A561,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBsjCjdpLJJs} */
#pragma pack(push,1)
struct A562 { I m0; B m1; s m2; j m3; C m4; j m5; d m6; p m7; L m8; J m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA562(const struct A562 *x, const struct A562 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA562() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A562));
		AF('I',struct A562,m0,1)
		AF('B',struct A562,m1,1)
		AF('s',struct A562,m2,1)
		AF('j',struct A562,m3,1)
		AF('C',struct A562,m4,1)
		AF('j',struct A562,m5,1)
		AF('d',struct A562,m6,1)
		AF('p',struct A562,m7,1)
		AF('L',struct A562,m8,1)
		AF('J',struct A562,m9,1)
		AF('J',struct A562,m10,1)
		AF('s',struct A562,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S{IBsjCjdpLJJs}psBIj> */
#pragma pack(push,4)
union A563 { S m0; struct A562 m1; p m2; s m3; B m4; I m5; j m6; };
#pragma pack(pop)
int f_cmpA563(const union A563 *x, const union A563 *y) { return x->m0 == y->m0 && f_cmpA562(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA563() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A563));
		AF('S',union A563,m0,1)
		AFa(union A563,m1,1,A562)
		AF('p',union A563,m2,1)
		AF('s',union A563,m3,1)
		AF('B',union A563,m4,1)
		AF('I',union A563,m5,1)
		AF('j',union A563,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <B> */
#pragma pack(push,2)
union A564 { B m0; };
#pragma pack(pop)
int f_cmpA564(const union A564 *x, const union A564 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA564() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A564));
		AF('B',union A564,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ICpIpISIflBl> */
#pragma pack(push,4)
union A565 { I m0; C m1; p m2; I m3; p m4; I m5; S m6; I m7; f m8; l m9; B m10; l m11; };
#pragma pack(pop)
int f_cmpA565(const union A565 *x, const union A565 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA565() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A565));
		AF('I',union A565,m0,1)
		AF('C',union A565,m1,1)
		AF('p',union A565,m2,1)
		AF('I',union A565,m3,1)
		AF('p',union A565,m4,1)
		AF('I',union A565,m5,1)
		AF('S',union A565,m6,1)
		AF('I',union A565,m7,1)
		AF('f',union A565,m8,1)
		AF('l',union A565,m9,1)
		AF('B',union A565,m10,1)
		AF('l',union A565,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ffBdLlBCIl> */
#pragma pack(push,2)
union A566 { f m0; f m1; B m2; d m3; L m4; l m5; B m6; C m7; I m8; l m9; };
#pragma pack(pop)
int f_cmpA566(const union A566 *x, const union A566 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA566() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A566));
		AF('f',union A566,m0,1)
		AF('f',union A566,m1,1)
		AF('B',union A566,m2,1)
		AF('d',union A566,m3,1)
		AF('L',union A566,m4,1)
		AF('l',union A566,m5,1)
		AF('B',union A566,m6,1)
		AF('C',union A566,m7,1)
		AF('I',union A566,m8,1)
		AF('l',union A566,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BfLllc} */
#pragma pack(push,4)
struct A567 { B m0; f m1; L m2; l m3; l m4; c m5; };
#pragma pack(pop)
int f_cmpA567(const struct A567 *x, const struct A567 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA567() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A567));
		AF('B',struct A567,m0,1)
		AF('f',struct A567,m1,1)
		AF('L',struct A567,m2,1)
		AF('l',struct A567,m3,1)
		AF('l',struct A567,m4,1)
		AF('c',struct A567,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fsd{BfLllc}fpCiL> */
#pragma pack(push,4)
union A568 { f m0; s m1; d m2; struct A567 m3; f m4; p m5; C m6; i m7; L m8; };
#pragma pack(pop)
int f_cmpA568(const union A568 *x, const union A568 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA567(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA568() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A568));
		AF('f',union A568,m0,1)
		AF('s',union A568,m1,1)
		AF('d',union A568,m2,1)
		AFa(union A568,m3,1,A567)
		AF('f',union A568,m4,1)
		AF('p',union A568,m5,1)
		AF('C',union A568,m6,1)
		AF('i',union A568,m7,1)
		AF('L',union A568,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjBfpCCBBSIp} */
#pragma pack(push,8)
struct A569 { s m0; j m1; B m2; f m3; p m4; C m5; C m6; B m7; B m8; S m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA569(const struct A569 *x, const struct A569 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA569() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A569));
		AF('s',struct A569,m0,1)
		AF('j',struct A569,m1,1)
		AF('B',struct A569,m2,1)
		AF('f',struct A569,m3,1)
		AF('p',struct A569,m4,1)
		AF('C',struct A569,m5,1)
		AF('C',struct A569,m6,1)
		AF('B',struct A569,m7,1)
		AF('B',struct A569,m8,1)
		AF('S',struct A569,m9,1)
		AF('I',struct A569,m10,1)
		AF('p',struct A569,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cfcdBp> */
#pragma pack(push,2)
union A570 { c m0; f m1; c m2; d m3; B m4; p m5; };
#pragma pack(pop)
int f_cmpA570(const union A570 *x, const union A570 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA570() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A570));
		AF('c',union A570,m0,1)
		AF('f',union A570,m1,1)
		AF('c',union A570,m2,1)
		AF('d',union A570,m3,1)
		AF('B',union A570,m4,1)
		AF('p',union A570,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sSfCCflj[10]ICJI> */
#pragma pack(push,1)
union A571 { s m0; S m1; f m2; C m3; C m4; f m5; l m6; j m7[10]; I m8; C m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA571(const union A571 *x, const union A571 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA571() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A571));
		AF('s',union A571,m0,1)
		AF('S',union A571,m1,1)
		AF('f',union A571,m2,1)
		AF('C',union A571,m3,1)
		AF('C',union A571,m4,1)
		AF('f',union A571,m5,1)
		AF('l',union A571,m6,1)
		AF('j',union A571,m7,10)
		AF('I',union A571,m8,1)
		AF('C',union A571,m9,1)
		AF('J',union A571,m10,1)
		AF('I',union A571,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {issJicL} */
#pragma pack(push,8)
struct A572 { i m0; s m1; s m2; J m3; i m4; c m5; L m6; };
#pragma pack(pop)
int f_cmpA572(const struct A572 *x, const struct A572 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA572() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A572));
		AF('i',struct A572,m0,1)
		AF('s',struct A572,m1,1)
		AF('s',struct A572,m2,1)
		AF('J',struct A572,m3,1)
		AF('i',struct A572,m4,1)
		AF('c',struct A572,m5,1)
		AF('L',struct A572,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ssBcL> */
#pragma pack(push,2)
union A573 { s m0; s m1; B m2; c m3; L m4; };
#pragma pack(pop)
int f_cmpA573(const union A573 *x, const union A573 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA573() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A573));
		AF('s',union A573,m0,1)
		AF('s',union A573,m1,1)
		AF('B',union A573,m2,1)
		AF('c',union A573,m3,1)
		AF('L',union A573,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fjdj[7]<sSfCCflj[10]ICJI>I{issJicL}p<ssBcL>pdd> */
#pragma pack(push,2)
union A574 { f m0; j m1; d m2; j m3[7]; union A571 m4; I m5; struct A572 m6; p m7; union A573 m8; p m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA574(const union A574 *x, const union A574 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && f_cmpA571(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA572(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA573(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA574() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A574));
		AF('f',union A574,m0,1)
		AF('j',union A574,m1,1)
		AF('d',union A574,m2,1)
		AF('j',union A574,m3,7)
		AFa(union A574,m4,1,A571)
		AF('I',union A574,m5,1)
		AFa(union A574,m6,1,A572)
		AF('p',union A574,m7,1)
		AFa(union A574,m8,1,A573)
		AF('p',union A574,m9,1)
		AF('d',union A574,m10,1)
		AF('d',union A574,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jcI[2]cIsIBci[12]C> */
#pragma pack(push,4)
union A575 { j m0; c m1; I m2[2]; c m3; I m4; s m5; I m6; B m7; c m8; i m9[12]; C m10; };
#pragma pack(pop)
int f_cmpA575(const union A575 *x, const union A575 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m10 == y->m10; };
DCaggr* f_touchA575() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A575));
		AF('j',union A575,m0,1)
		AF('c',union A575,m1,1)
		AF('I',union A575,m2,2)
		AF('c',union A575,m3,1)
		AF('I',union A575,m4,1)
		AF('s',union A575,m5,1)
		AF('I',union A575,m6,1)
		AF('B',union A575,m7,1)
		AF('c',union A575,m8,1)
		AF('i',union A575,m9,12)
		AF('C',union A575,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<jcI[2]cIsIBci[12]C>iscJC> */
#pragma pack(push,4)
union A576 { union A575 m0; i m1; s m2; c m3; J m4; C m5; };
#pragma pack(pop)
int f_cmpA576(const union A576 *x, const union A576 *y) { return f_cmpA575(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA576() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A576));
		AFa(union A576,m0,1,A575)
		AF('i',union A576,m1,1)
		AF('s',union A576,m2,1)
		AF('c',union A576,m3,1)
		AF('J',union A576,m4,1)
		AF('C',union A576,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ciSIJsLfid} */
#pragma pack(push,1)
struct A577 { c m0; i m1; S m2; I m3; J m4; s m5; L m6; f m7; i m8; d m9; };
#pragma pack(pop)
int f_cmpA577(const struct A577 *x, const struct A577 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA577() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A577));
		AF('c',struct A577,m0,1)
		AF('i',struct A577,m1,1)
		AF('S',struct A577,m2,1)
		AF('I',struct A577,m3,1)
		AF('J',struct A577,m4,1)
		AF('s',struct A577,m5,1)
		AF('L',struct A577,m6,1)
		AF('f',struct A577,m7,1)
		AF('i',struct A577,m8,1)
		AF('d',struct A577,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cdJsL{ciSIJsLfid}f> */
#pragma pack(push,4)
union A578 { c m0; d m1; J m2; s m3; L m4; struct A577 m5; f m6; };
#pragma pack(pop)
int f_cmpA578(const union A578 *x, const union A578 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA577(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA578() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A578));
		AF('c',union A578,m0,1)
		AF('d',union A578,m1,1)
		AF('J',union A578,m2,1)
		AF('s',union A578,m3,1)
		AF('L',union A578,m4,1)
		AFa(union A578,m5,1,A577)
		AF('f',union A578,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LSfdIif[7]Idslj} */
#pragma pack(push,2)
struct A579 { L m0; S m1; f m2; d m3; I m4; i m5; f m6[7]; I m7; d m8; s m9; l m10; j m11; };
#pragma pack(pop)
int f_cmpA579(const struct A579 *x, const struct A579 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA579() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A579));
		AF('L',struct A579,m0,1)
		AF('S',struct A579,m1,1)
		AF('f',struct A579,m2,1)
		AF('d',struct A579,m3,1)
		AF('I',struct A579,m4,1)
		AF('i',struct A579,m5,1)
		AF('f',struct A579,m6,7)
		AF('I',struct A579,m7,1)
		AF('d',struct A579,m8,1)
		AF('s',struct A579,m9,1)
		AF('l',struct A579,m10,1)
		AF('j',struct A579,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL> */
#pragma pack(push,2)
union A580 { J m0; p m1; B m2; union A578 m3; C m4; i m5; L m6; L m7; B m8; struct A579 m9; l m10; L m11; };
#pragma pack(pop)
int f_cmpA580(const union A580 *x, const union A580 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA578(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA579(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA580() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A580));
		AF('J',union A580,m0,1)
		AF('p',union A580,m1,1)
		AF('B',union A580,m2,1)
		AFa(union A580,m3,1,A578)
		AF('C',union A580,m4,1)
		AF('i',union A580,m5,1)
		AF('L',union A580,m6,1)
		AF('L',union A580,m7,1)
		AF('B',union A580,m8,1)
		AFa(union A580,m9,1,A579)
		AF('l',union A580,m10,1)
		AF('L',union A580,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dCf[12]Jfpd> */
#pragma pack(push,4)
union A581 { d m0; C m1; f m2[12]; J m3; f m4; p m5; d m6; };
#pragma pack(pop)
int f_cmpA581(const union A581 *x, const union A581 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA581() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A581));
		AF('d',union A581,m0,1)
		AF('C',union A581,m1,1)
		AF('f',union A581,m2,12)
		AF('J',union A581,m3,1)
		AF('f',union A581,m4,1)
		AF('p',union A581,m5,1)
		AF('d',union A581,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJilSIdcJsC> */
#pragma pack(push,1)
union A582 { C m0; J m1; i m2; l m3; S m4; I m5; d m6; c m7; J m8; s m9; C m10; };
#pragma pack(pop)
int f_cmpA582(const union A582 *x, const union A582 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA582() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A582));
		AF('C',union A582,m0,1)
		AF('J',union A582,m1,1)
		AF('i',union A582,m2,1)
		AF('l',union A582,m3,1)
		AF('S',union A582,m4,1)
		AF('I',union A582,m5,1)
		AF('d',union A582,m6,1)
		AF('c',union A582,m7,1)
		AF('J',union A582,m8,1)
		AF('s',union A582,m9,1)
		AF('C',union A582,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdJBpcfBIiBS> */
#pragma pack(push,4)
union A583 { C m0; d m1; J m2; B m3; p m4; c m5; f m6; B m7; I m8; i m9; B m10; S m11; };
#pragma pack(pop)
int f_cmpA583(const union A583 *x, const union A583 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA583() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A583));
		AF('C',union A583,m0,1)
		AF('d',union A583,m1,1)
		AF('J',union A583,m2,1)
		AF('B',union A583,m3,1)
		AF('p',union A583,m4,1)
		AF('c',union A583,m5,1)
		AF('f',union A583,m6,1)
		AF('B',union A583,m7,1)
		AF('I',union A583,m8,1)
		AF('i',union A583,m9,1)
		AF('B',union A583,m10,1)
		AF('S',union A583,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {illCJldj} */
#pragma pack(push,1)
struct A584 { i m0; l m1; l m2; C m3; J m4; l m5; d m6; j m7; };
#pragma pack(pop)
int f_cmpA584(const struct A584 *x, const struct A584 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA584() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A584));
		AF('i',struct A584,m0,1)
		AF('l',struct A584,m1,1)
		AF('l',struct A584,m2,1)
		AF('C',struct A584,m3,1)
		AF('J',struct A584,m4,1)
		AF('l',struct A584,m5,1)
		AF('d',struct A584,m6,1)
		AF('j',struct A584,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj} */
#pragma pack(push,4)
struct A585 { j m0; c m1[4]; union A581 m2; c m3; s m4; C m5; union A582 m6; union A583 m7; struct A584 m8; s m9; I m10; j m11; };
#pragma pack(pop)
int f_cmpA585(const struct A585 *x, const struct A585 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && f_cmpA581(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA582(&x->m6, &y->m6) && f_cmpA583(&x->m7, &y->m7) && f_cmpA584(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA585() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A585));
		AF('j',struct A585,m0,1)
		AF('c',struct A585,m1,4)
		AFa(struct A585,m2,1,A581)
		AF('c',struct A585,m3,1)
		AF('s',struct A585,m4,1)
		AF('C',struct A585,m5,1)
		AFa(struct A585,m6,1,A582)
		AFa(struct A585,m7,1,A583)
		AFa(struct A585,m8,1,A584)
		AF('s',struct A585,m9,1)
		AF('I',struct A585,m10,1)
		AF('j',struct A585,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C} */
#pragma pack(push,8)
struct A586 { l m0; s m1; I m2; l m3; s m4; struct A585 m5; C m6; };
#pragma pack(pop)
int f_cmpA586(const struct A586 *x, const struct A586 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA585(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA586() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A586));
		AF('l',struct A586,m0,1)
		AF('s',struct A586,m1,1)
		AF('I',struct A586,m2,1)
		AF('l',struct A586,m3,1)
		AF('s',struct A586,m4,1)
		AFa(struct A586,m5,1,A585)
		AF('C',struct A586,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cjlIccJBs} */
#pragma pack(push,4)
struct A587 { c m0; j m1; l m2; I m3; c m4; c m5; J m6; B m7; s m8; };
#pragma pack(pop)
int f_cmpA587(const struct A587 *x, const struct A587 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA587() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A587));
		AF('c',struct A587,m0,1)
		AF('j',struct A587,m1,1)
		AF('l',struct A587,m2,1)
		AF('I',struct A587,m3,1)
		AF('c',struct A587,m4,1)
		AF('c',struct A587,m5,1)
		AF('J',struct A587,m6,1)
		AF('B',struct A587,m7,1)
		AF('s',struct A587,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cpd} */
#pragma pack(push,2)
struct A588 { c m0; p m1; d m2; };
#pragma pack(pop)
int f_cmpA588(const struct A588 *x, const struct A588 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA588() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A588));
		AF('c',struct A588,m0,1)
		AF('p',struct A588,m1,1)
		AF('d',struct A588,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JpCcdll<p>ffi> */
#pragma pack(push,4)
union A589 { J m0; p m1; C m2; c m3; d m4; l m5; l m6; union A56 m7; f m8; f m9; i m10; };
#pragma pack(pop)
int f_cmpA589(const union A589 *x, const union A589 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA56(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA589() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A589));
		AF('J',union A589,m0,1)
		AF('p',union A589,m1,1)
		AF('C',union A589,m2,1)
		AF('c',union A589,m3,1)
		AF('d',union A589,m4,1)
		AF('l',union A589,m5,1)
		AF('l',union A589,m6,1)
		AFa(union A589,m7,1,A56)
		AF('f',union A589,m8,1)
		AF('f',union A589,m9,1)
		AF('i',union A589,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {csB} */
#pragma pack(push,4)
struct A590 { c m0; s m1; B m2; };
#pragma pack(pop)
int f_cmpA590(const struct A590 *x, const struct A590 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA590() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A590));
		AF('c',struct A590,m0,1)
		AF('s',struct A590,m1,1)
		AF('B',struct A590,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ClIjIpfcISji> */
#pragma pack(push,4)
union A591 { C m0; l m1; I m2; j m3; I m4; p m5; f m6; c m7; I m8; S m9; j m10; i m11; };
#pragma pack(pop)
int f_cmpA591(const union A591 *x, const union A591 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA591() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A591));
		AF('C',union A591,m0,1)
		AF('l',union A591,m1,1)
		AF('I',union A591,m2,1)
		AF('j',union A591,m3,1)
		AF('I',union A591,m4,1)
		AF('p',union A591,m5,1)
		AF('f',union A591,m6,1)
		AF('c',union A591,m7,1)
		AF('I',union A591,m8,1)
		AF('S',union A591,m9,1)
		AF('j',union A591,m10,1)
		AF('i',union A591,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IpcS[7]fIcdlfls} */
#pragma pack(push,8)
struct A592 { I m0; p m1; c m2; S m3[7]; f m4; I m5; c m6; d m7; l m8; f m9; l m10; s m11; };
#pragma pack(pop)
int f_cmpA592(const struct A592 *x, const struct A592 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA592() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A592));
		AF('I',struct A592,m0,1)
		AF('p',struct A592,m1,1)
		AF('c',struct A592,m2,1)
		AF('S',struct A592,m3,7)
		AF('f',struct A592,m4,1)
		AF('I',struct A592,m5,1)
		AF('c',struct A592,m6,1)
		AF('d',struct A592,m7,1)
		AF('l',struct A592,m8,1)
		AF('f',struct A592,m9,1)
		AF('l',struct A592,m10,1)
		AF('s',struct A592,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ijdIll{IpcS[7]fIcdlfls}cSScs} */
#pragma pack(push,4)
struct A593 { i m0; j m1; d m2; I m3; l m4; l m5; struct A592 m6; c m7; S m8; S m9; c m10; s m11; };
#pragma pack(pop)
int f_cmpA593(const struct A593 *x, const struct A593 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA592(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA593() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A593));
		AF('i',struct A593,m0,1)
		AF('j',struct A593,m1,1)
		AF('d',struct A593,m2,1)
		AF('I',struct A593,m3,1)
		AF('l',struct A593,m4,1)
		AF('l',struct A593,m5,1)
		AFa(struct A593,m6,1,A592)
		AF('c',struct A593,m7,1)
		AF('S',struct A593,m8,1)
		AF('S',struct A593,m9,1)
		AF('c',struct A593,m10,1)
		AF('s',struct A593,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LC{ijdIll{IpcS[7]fIcdlfls}cSScs}fisIpcS[8]dp[16]> */
#pragma pack(push,2)
union A594 { L m0; C m1; struct A593 m2; f m3; i m4; s m5; I m6; p m7; c m8; S m9[8]; d m10; p m11[16]; };
#pragma pack(pop)
int f_cmpA594(const union A594 *x, const union A594 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA593(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8] && x->m11[9] == y->m11[9] && x->m11[10] == y->m11[10] && x->m11[11] == y->m11[11] && x->m11[12] == y->m11[12] && x->m11[13] == y->m11[13] && x->m11[14] == y->m11[14] && x->m11[15] == y->m11[15]; };
DCaggr* f_touchA594() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A594));
		AF('L',union A594,m0,1)
		AF('C',union A594,m1,1)
		AFa(union A594,m2,1,A593)
		AF('f',union A594,m3,1)
		AF('i',union A594,m4,1)
		AF('s',union A594,m5,1)
		AF('I',union A594,m6,1)
		AF('p',union A594,m7,1)
		AF('c',union A594,m8,1)
		AF('S',union A594,m9,8)
		AF('d',union A594,m10,1)
		AF('p',union A594,m11,16)
		dcCloseAggr(a);
	}
	return a;
};
/* {iLjJlsfslfsL} */
#pragma pack(push,2)
struct A595 { i m0; L m1; j m2; J m3; l m4; s m5; f m6; s m7; l m8; f m9; s m10; L m11; };
#pragma pack(pop)
int f_cmpA595(const struct A595 *x, const struct A595 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA595() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A595));
		AF('i',struct A595,m0,1)
		AF('L',struct A595,m1,1)
		AF('j',struct A595,m2,1)
		AF('J',struct A595,m3,1)
		AF('l',struct A595,m4,1)
		AF('s',struct A595,m5,1)
		AF('f',struct A595,m6,1)
		AF('s',struct A595,m7,1)
		AF('l',struct A595,m8,1)
		AF('f',struct A595,m9,1)
		AF('s',struct A595,m10,1)
		AF('L',struct A595,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JpcJpi> */
#pragma pack(push,2)
union A596 { J m0; p m1; c m2; J m3; p m4; i m5; };
#pragma pack(pop)
int f_cmpA596(const union A596 *x, const union A596 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA596() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A596));
		AF('J',union A596,m0,1)
		AF('p',union A596,m1,1)
		AF('c',union A596,m2,1)
		AF('J',union A596,m3,1)
		AF('p',union A596,m4,1)
		AF('i',union A596,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i{iLjJlsfslfsL}{}LccfJsIi<JpcJpi>} */
#pragma pack(push,4)
struct A597 { i m0; struct A595 m1; struct A24 m2; L m3; c m4; c m5; f m6; J m7; s m8; I m9; i m10; union A596 m11; };
#pragma pack(pop)
int f_cmpA597(const struct A597 *x, const struct A597 *y) { return x->m0 == y->m0 && f_cmpA595(&x->m1, &y->m1) && f_cmpA24(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA596(&x->m11, &y->m11); };
DCaggr* f_touchA597() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A597));
		AF('i',struct A597,m0,1)
		AFa(struct A597,m1,1,A595)
		AFa(struct A597,m2,1,A24)
		AF('L',struct A597,m3,1)
		AF('c',struct A597,m4,1)
		AF('c',struct A597,m5,1)
		AF('f',struct A597,m6,1)
		AF('J',struct A597,m7,1)
		AF('s',struct A597,m8,1)
		AF('I',struct A597,m9,1)
		AF('i',struct A597,m10,1)
		AFa(struct A597,m11,1,A596)
		dcCloseAggr(a);
	}
	return a;
};
/* <B[12]jfpfBBLL<>> */
#pragma pack(push,1)
union A598 { B m0[12]; j m1; f m2; p m3; f m4; B m5; B m6; L m7; L m8; union A30 m9; };
#pragma pack(pop)
int f_cmpA598(const union A598 *x, const union A598 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA30(&x->m9, &y->m9); };
DCaggr* f_touchA598() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A598));
		AF('B',union A598,m0,12)
		AF('j',union A598,m1,1)
		AF('f',union A598,m2,1)
		AF('p',union A598,m3,1)
		AF('f',union A598,m4,1)
		AF('B',union A598,m5,1)
		AF('B',union A598,m6,1)
		AF('L',union A598,m7,1)
		AF('L',union A598,m8,1)
		AFa(union A598,m9,1,A30)
		dcCloseAggr(a);
	}
	return a;
};
/* {jB} */
#pragma pack(push,1)
struct A599 { j m0; B m1; };
#pragma pack(pop)
int f_cmpA599(const struct A599 *x, const struct A599 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA599() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A599));
		AF('j',struct A599,m0,1)
		AF('B',struct A599,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dI[8]icIJ{jB}jLdSs} */
#pragma pack(push,4)
struct A600 { d m0; I m1[8]; i m2; c m3; I m4; J m5; struct A599 m6; j m7; L m8; d m9; S m10; s m11; };
#pragma pack(pop)
int f_cmpA600(const struct A600 *x, const struct A600 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA599(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA600() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A600));
		AF('d',struct A600,m0,1)
		AF('I',struct A600,m1,8)
		AF('i',struct A600,m2,1)
		AF('c',struct A600,m3,1)
		AF('I',struct A600,m4,1)
		AF('J',struct A600,m5,1)
		AFa(struct A600,m6,1,A599)
		AF('j',struct A600,m7,1)
		AF('L',struct A600,m8,1)
		AF('d',struct A600,m9,1)
		AF('S',struct A600,m10,1)
		AF('s',struct A600,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BJsBssI[13]fCJlJ> */
#pragma pack(push,2)
union A601 { B m0; J m1; s m2; B m3; s m4; s m5; I m6[13]; f m7; C m8; J m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA601(const union A601 *x, const union A601 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m6[12] == y->m6[12] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA601() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A601));
		AF('B',union A601,m0,1)
		AF('J',union A601,m1,1)
		AF('s',union A601,m2,1)
		AF('B',union A601,m3,1)
		AF('s',union A601,m4,1)
		AF('s',union A601,m5,1)
		AF('I',union A601,m6,13)
		AF('f',union A601,m7,1)
		AF('C',union A601,m8,1)
		AF('J',union A601,m9,1)
		AF('l',union A601,m10,1)
		AF('J',union A601,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dI> */
#pragma pack(push,2)
union A602 { d m0; I m1; };
#pragma pack(pop)
int f_cmpA602(const union A602 *x, const union A602 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA602() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A602));
		AF('d',union A602,m0,1)
		AF('I',union A602,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICilisciS<dI>Ci} */
#pragma pack(push,4)
struct A603 { I m0; C m1; i m2; l m3; i m4; s m5; c m6; i m7; S m8; union A602 m9; C m10; i m11; };
#pragma pack(pop)
int f_cmpA603(const struct A603 *x, const struct A603 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA602(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA603() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A603));
		AF('I',struct A603,m0,1)
		AF('C',struct A603,m1,1)
		AF('i',struct A603,m2,1)
		AF('l',struct A603,m3,1)
		AF('i',struct A603,m4,1)
		AF('s',struct A603,m5,1)
		AF('c',struct A603,m6,1)
		AF('i',struct A603,m7,1)
		AF('S',struct A603,m8,1)
		AFa(struct A603,m9,1,A602)
		AF('C',struct A603,m10,1)
		AF('i',struct A603,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {clLdCiLC} */
#pragma pack(push,4)
struct A604 { c m0; l m1; L m2; d m3; C m4; i m5; L m6; C m7; };
#pragma pack(pop)
int f_cmpA604(const struct A604 *x, const struct A604 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA604() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A604));
		AF('c',struct A604,m0,1)
		AF('l',struct A604,m1,1)
		AF('L',struct A604,m2,1)
		AF('d',struct A604,m3,1)
		AF('C',struct A604,m4,1)
		AF('i',struct A604,m5,1)
		AF('L',struct A604,m6,1)
		AF('C',struct A604,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fIpLIJil> */
#pragma pack(push,2)
union A605 { f m0; I m1; p m2; L m3; I m4; J m5; i m6; l m7; };
#pragma pack(pop)
int f_cmpA605(const union A605 *x, const union A605 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA605() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A605));
		AF('f',union A605,m0,1)
		AF('I',union A605,m1,1)
		AF('p',union A605,m2,1)
		AF('L',union A605,m3,1)
		AF('I',union A605,m4,1)
		AF('J',union A605,m5,1)
		AF('i',union A605,m6,1)
		AF('l',union A605,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IsLiJdLf} */
#pragma pack(push,2)
struct A606 { I m0; s m1; L m2; i m3; J m4; d m5; L m6; f m7; };
#pragma pack(pop)
int f_cmpA606(const struct A606 *x, const struct A606 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA606() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A606));
		AF('I',struct A606,m0,1)
		AF('s',struct A606,m1,1)
		AF('L',struct A606,m2,1)
		AF('i',struct A606,m3,1)
		AF('J',struct A606,m4,1)
		AF('d',struct A606,m5,1)
		AF('L',struct A606,m6,1)
		AF('f',struct A606,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdcjJllfB<fIpLIJil>B{IsLiJdLf}> */
#pragma pack(push,8)
union A607 { j m0; d m1; c m2; j m3; J m4; l m5; l m6; f m7; B m8; union A605 m9; B m10; struct A606 m11; };
#pragma pack(pop)
int f_cmpA607(const union A607 *x, const union A607 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA605(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA606(&x->m11, &y->m11); };
DCaggr* f_touchA607() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A607));
		AF('j',union A607,m0,1)
		AF('d',union A607,m1,1)
		AF('c',union A607,m2,1)
		AF('j',union A607,m3,1)
		AF('J',union A607,m4,1)
		AF('l',union A607,m5,1)
		AF('l',union A607,m6,1)
		AF('f',union A607,m7,1)
		AF('B',union A607,m8,1)
		AFa(union A607,m9,1,A605)
		AF('B',union A607,m10,1)
		AFa(union A607,m11,1,A606)
		dcCloseAggr(a);
	}
	return a;
};
/* <cLJfLiB[10]JfJJI> */
#pragma pack(push,4)
union A608 { c m0; L m1; J m2; f m3; L m4; i m5; B m6[10]; J m7; f m8; J m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA608(const union A608 *x, const union A608 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA608() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A608));
		AF('c',union A608,m0,1)
		AF('L',union A608,m1,1)
		AF('J',union A608,m2,1)
		AF('f',union A608,m3,1)
		AF('L',union A608,m4,1)
		AF('i',union A608,m5,1)
		AF('B',union A608,m6,10)
		AF('J',union A608,m7,1)
		AF('f',union A608,m8,1)
		AF('J',union A608,m9,1)
		AF('J',union A608,m10,1)
		AF('I',union A608,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIJjCcljCjBL> */
#pragma pack(push,2)
union A609 { l m0; I m1; J m2; j m3; C m4; c m5; l m6; j m7; C m8; j m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA609(const union A609 *x, const union A609 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA609() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A609));
		AF('l',union A609,m0,1)
		AF('I',union A609,m1,1)
		AF('J',union A609,m2,1)
		AF('j',union A609,m3,1)
		AF('C',union A609,m4,1)
		AF('c',union A609,m5,1)
		AF('l',union A609,m6,1)
		AF('j',union A609,m7,1)
		AF('C',union A609,m8,1)
		AF('j',union A609,m9,1)
		AF('B',union A609,m10,1)
		AF('L',union A609,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JI[15]JdLd<lIJjCcljCjBL>sSlCL> */
#pragma pack(push,1)
union A610 { J m0; I m1[15]; J m2; d m3; L m4; d m5; union A609 m6; s m7; S m8; l m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA610(const union A610 *x, const union A610 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA609(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA610() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A610));
		AF('J',union A610,m0,1)
		AF('I',union A610,m1,15)
		AF('J',union A610,m2,1)
		AF('d',union A610,m3,1)
		AF('L',union A610,m4,1)
		AF('d',union A610,m5,1)
		AFa(union A610,m6,1,A609)
		AF('s',union A610,m7,1)
		AF('S',union A610,m8,1)
		AF('l',union A610,m9,1)
		AF('C',union A610,m10,1)
		AF('L',union A610,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCjLjls} */
#pragma pack(push,4)
struct A611 { p m0; C m1; j m2; L m3; j m4; l m5; s m6; };
#pragma pack(pop)
int f_cmpA611(const struct A611 *x, const struct A611 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA611() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A611));
		AF('p',struct A611,m0,1)
		AF('C',struct A611,m1,1)
		AF('j',struct A611,m2,1)
		AF('L',struct A611,m3,1)
		AF('j',struct A611,m4,1)
		AF('l',struct A611,m5,1)
		AF('s',struct A611,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fsiCLiCB{pCjLjls}CJ> */
#pragma pack(push,8)
union A612 { f m0; s m1; i m2; C m3; L m4; i m5; C m6; B m7; struct A611 m8; C m9; J m10; };
#pragma pack(pop)
int f_cmpA612(const union A612 *x, const union A612 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA611(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA612() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A612));
		AF('f',union A612,m0,1)
		AF('s',union A612,m1,1)
		AF('i',union A612,m2,1)
		AF('C',union A612,m3,1)
		AF('L',union A612,m4,1)
		AF('i',union A612,m5,1)
		AF('C',union A612,m6,1)
		AF('B',union A612,m7,1)
		AFa(union A612,m8,1,A611)
		AF('C',union A612,m9,1)
		AF('J',union A612,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JBccfIJBIBBj> */
#pragma pack(push,2)
union A613 { J m0; B m1; c m2; c m3; f m4; I m5; J m6; B m7; I m8; B m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA613(const union A613 *x, const union A613 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA613() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A613));
		AF('J',union A613,m0,1)
		AF('B',union A613,m1,1)
		AF('c',union A613,m2,1)
		AF('c',union A613,m3,1)
		AF('f',union A613,m4,1)
		AF('I',union A613,m5,1)
		AF('J',union A613,m6,1)
		AF('B',union A613,m7,1)
		AF('I',union A613,m8,1)
		AF('B',union A613,m9,1)
		AF('B',union A613,m10,1)
		AF('j',union A613,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{S}> */
#pragma pack(push,2)
union A614 { struct A552 m0; };
#pragma pack(pop)
int f_cmpA614(const union A614 *x, const union A614 *y) { return f_cmpA552(&x->m0, &y->m0); };
DCaggr* f_touchA614() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A614));
		AFa(union A614,m0,1,A552)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCpdlscd[8]dlj} */
#pragma pack(push,8)
struct A615 { p m0; C m1; p m2; d m3; l m4; s m5; c m6; d m7[8]; d m8; l m9; j m10; };
#pragma pack(pop)
int f_cmpA615(const struct A615 *x, const struct A615 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA615() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A615));
		AF('p',struct A615,m0,1)
		AF('C',struct A615,m1,1)
		AF('p',struct A615,m2,1)
		AF('d',struct A615,m3,1)
		AF('l',struct A615,m4,1)
		AF('s',struct A615,m5,1)
		AF('c',struct A615,m6,1)
		AF('d',struct A615,m7,8)
		AF('d',struct A615,m8,1)
		AF('l',struct A615,m9,1)
		AF('j',struct A615,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsJIILSsSs> */
#pragma pack(push,4)
union A616 { S m0; s m1; J m2; I m3; I m4; L m5; S m6; s m7; S m8; s m9; };
#pragma pack(pop)
int f_cmpA616(const union A616 *x, const union A616 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA616() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A616));
		AF('S',union A616,m0,1)
		AF('s',union A616,m1,1)
		AF('J',union A616,m2,1)
		AF('I',union A616,m3,1)
		AF('I',union A616,m4,1)
		AF('L',union A616,m5,1)
		AF('S',union A616,m6,1)
		AF('s',union A616,m7,1)
		AF('S',union A616,m8,1)
		AF('s',union A616,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SsJIILSsSs>J} */
#pragma pack(push,2)
struct A617 { union A616 m0; J m1; };
#pragma pack(pop)
int f_cmpA617(const struct A617 *x, const struct A617 *y) { return f_cmpA616(&x->m0, &y->m0) && x->m1 == y->m1; };
DCaggr* f_touchA617() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A617));
		AFa(struct A617,m0,1,A616)
		AF('J',struct A617,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d[9]jJjLcjI> */
#pragma pack(push,4)
union A618 { d m0[9]; j m1; J m2; j m3; L m4; c m5; j m6; I m7; };
#pragma pack(pop)
int f_cmpA618(const union A618 *x, const union A618 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA618() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A618));
		AF('d',union A618,m0,9)
		AF('j',union A618,m1,1)
		AF('J',union A618,m2,1)
		AF('j',union A618,m3,1)
		AF('L',union A618,m4,1)
		AF('c',union A618,m5,1)
		AF('j',union A618,m6,1)
		AF('I',union A618,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BlfBSfJpBf<d[9]jJjLcjI>l> */
#pragma pack(push,8)
union A619 { B m0; l m1; f m2; B m3; S m4; f m5; J m6; p m7; B m8; f m9; union A618 m10; l m11; };
#pragma pack(pop)
int f_cmpA619(const union A619 *x, const union A619 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA618(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA619() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A619));
		AF('B',union A619,m0,1)
		AF('l',union A619,m1,1)
		AF('f',union A619,m2,1)
		AF('B',union A619,m3,1)
		AF('S',union A619,m4,1)
		AF('f',union A619,m5,1)
		AF('J',union A619,m6,1)
		AF('p',union A619,m7,1)
		AF('B',union A619,m8,1)
		AF('f',union A619,m9,1)
		AFa(union A619,m10,1,A618)
		AF('l',union A619,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iIBlJlplCpjC> */
#pragma pack(push,1)
union A620 { i m0; I m1; B m2; l m3; J m4; l m5; p m6; l m7; C m8; p m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA620(const union A620 *x, const union A620 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA620() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A620));
		AF('i',union A620,m0,1)
		AF('I',union A620,m1,1)
		AF('B',union A620,m2,1)
		AF('l',union A620,m3,1)
		AF('J',union A620,m4,1)
		AF('l',union A620,m5,1)
		AF('p',union A620,m6,1)
		AF('l',union A620,m7,1)
		AF('C',union A620,m8,1)
		AF('p',union A620,m9,1)
		AF('j',union A620,m10,1)
		AF('C',union A620,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {l} */
#pragma pack(push,1)
struct A621 { l m0; };
#pragma pack(pop)
int f_cmpA621(const struct A621 *x, const struct A621 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA621() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A621));
		AF('l',struct A621,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{l}cBj} */
#pragma pack(push,4)
struct A622 { struct A621 m0; c m1; B m2; j m3; };
#pragma pack(pop)
int f_cmpA622(const struct A622 *x, const struct A622 *y) { return f_cmpA621(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA622() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A622));
		AFa(struct A622,m0,1,A621)
		AF('c',struct A622,m1,1)
		AF('B',struct A622,m2,1)
		AF('j',struct A622,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JIS<iIBlJlplCpjC>LJB{{l}cBj}BBlS} */
#pragma pack(push,8)
struct A623 { J m0; I m1; S m2; union A620 m3; L m4; J m5; B m6; struct A622 m7; B m8; B m9; l m10; S m11; };
#pragma pack(pop)
int f_cmpA623(const struct A623 *x, const struct A623 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA620(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA622(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA623() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A623));
		AF('J',struct A623,m0,1)
		AF('I',struct A623,m1,1)
		AF('S',struct A623,m2,1)
		AFa(struct A623,m3,1,A620)
		AF('L',struct A623,m4,1)
		AF('J',struct A623,m5,1)
		AF('B',struct A623,m6,1)
		AFa(struct A623,m7,1,A622)
		AF('B',struct A623,m8,1)
		AF('B',struct A623,m9,1)
		AF('l',struct A623,m10,1)
		AF('S',struct A623,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sfdJCcB} */
#pragma pack(push,4)
struct A624 { s m0; f m1; d m2; J m3; C m4; c m5; B m6; };
#pragma pack(pop)
int f_cmpA624(const struct A624 *x, const struct A624 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA624() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A624));
		AF('s',struct A624,m0,1)
		AF('f',struct A624,m1,1)
		AF('d',struct A624,m2,1)
		AF('J',struct A624,m3,1)
		AF('C',struct A624,m4,1)
		AF('c',struct A624,m5,1)
		AF('B',struct A624,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <J{sfdJCcB}lLJlBjJBBl> */
#pragma pack(push,2)
union A625 { J m0; struct A624 m1; l m2; L m3; J m4; l m5; B m6; j m7; J m8; B m9; B m10; l m11; };
#pragma pack(pop)
int f_cmpA625(const union A625 *x, const union A625 *y) { return x->m0 == y->m0 && f_cmpA624(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA625() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A625));
		AF('J',union A625,m0,1)
		AFa(union A625,m1,1,A624)
		AF('l',union A625,m2,1)
		AF('L',union A625,m3,1)
		AF('J',union A625,m4,1)
		AF('l',union A625,m5,1)
		AF('B',union A625,m6,1)
		AF('j',union A625,m7,1)
		AF('J',union A625,m8,1)
		AF('B',union A625,m9,1)
		AF('B',union A625,m10,1)
		AF('l',union A625,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJlslfCJl<J{sfdJCcB}lLJlBjJBBl>Cl> */
#pragma pack(push,2)
union A626 { f m0; J m1; l m2; s m3; l m4; f m5; C m6; J m7; l m8; union A625 m9; C m10; l m11; };
#pragma pack(pop)
int f_cmpA626(const union A626 *x, const union A626 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA625(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA626() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A626));
		AF('f',union A626,m0,1)
		AF('J',union A626,m1,1)
		AF('l',union A626,m2,1)
		AF('s',union A626,m3,1)
		AF('l',union A626,m4,1)
		AF('f',union A626,m5,1)
		AF('C',union A626,m6,1)
		AF('J',union A626,m7,1)
		AF('l',union A626,m8,1)
		AFa(union A626,m9,1,A625)
		AF('C',union A626,m10,1)
		AF('l',union A626,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <djLj> */
#pragma pack(push,2)
union A627 { d m0; j m1; L m2; j m3; };
#pragma pack(pop)
int f_cmpA627(const union A627 *x, const union A627 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA627() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A627));
		AF('d',union A627,m0,1)
		AF('j',union A627,m1,1)
		AF('L',union A627,m2,1)
		AF('j',union A627,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IdjpfIlcpC<djLj>c} */
#pragma pack(push,8)
struct A628 { I m0; d m1; j m2; p m3; f m4; I m5; l m6; c m7; p m8; C m9; union A627 m10; c m11; };
#pragma pack(pop)
int f_cmpA628(const struct A628 *x, const struct A628 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA627(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA628() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A628));
		AF('I',struct A628,m0,1)
		AF('d',struct A628,m1,1)
		AF('j',struct A628,m2,1)
		AF('p',struct A628,m3,1)
		AF('f',struct A628,m4,1)
		AF('I',struct A628,m5,1)
		AF('l',struct A628,m6,1)
		AF('c',struct A628,m7,1)
		AF('p',struct A628,m8,1)
		AF('C',struct A628,m9,1)
		AFa(struct A628,m10,1,A627)
		AF('c',struct A628,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBcJsiiCLljS> */
#pragma pack(push,2)
union A629 { B m0; B m1; c m2; J m3; s m4; i m5; i m6; C m7; L m8; l m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA629(const union A629 *x, const union A629 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA629() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A629));
		AF('B',union A629,m0,1)
		AF('B',union A629,m1,1)
		AF('c',union A629,m2,1)
		AF('J',union A629,m3,1)
		AF('s',union A629,m4,1)
		AF('i',union A629,m5,1)
		AF('i',union A629,m6,1)
		AF('C',union A629,m7,1)
		AF('L',union A629,m8,1)
		AF('l',union A629,m9,1)
		AF('j',union A629,m10,1)
		AF('S',union A629,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp[16]lICcSjJpBS} */
#pragma pack(push,2)
struct A630 { S m0; p m1[16]; l m2; I m3; C m4; c m5; S m6; j m7; J m8; p m9; B m10; S m11; };
#pragma pack(pop)
int f_cmpA630(const struct A630 *x, const struct A630 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m1[14] == y->m1[14] && x->m1[15] == y->m1[15] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA630() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A630));
		AF('S',struct A630,m0,1)
		AF('p',struct A630,m1,16)
		AF('l',struct A630,m2,1)
		AF('I',struct A630,m3,1)
		AF('C',struct A630,m4,1)
		AF('c',struct A630,m5,1)
		AF('S',struct A630,m6,1)
		AF('j',struct A630,m7,1)
		AF('J',struct A630,m8,1)
		AF('p',struct A630,m9,1)
		AF('B',struct A630,m10,1)
		AF('S',struct A630,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS} */
#pragma pack(push,4)
struct A631 { l m0; j m1; j m2; union A629 m3; d m4; C m5; d m6[4]; s m7; j m8; struct A630 m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA631(const struct A631 *x, const struct A631 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA629(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA630(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA631() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A631));
		AF('l',struct A631,m0,1)
		AF('j',struct A631,m1,1)
		AF('j',struct A631,m2,1)
		AFa(struct A631,m3,1,A629)
		AF('d',struct A631,m4,1)
		AF('C',struct A631,m5,1)
		AF('d',struct A631,m6,4)
		AF('s',struct A631,m7,1)
		AF('j',struct A631,m8,1)
		AFa(struct A631,m9,1,A630)
		AF('c',struct A631,m10,1)
		AF('S',struct A631,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JclL} */
#pragma pack(push,4)
struct A632 { J m0; c m1; l m2; L m3; };
#pragma pack(pop)
int f_cmpA632(const struct A632 *x, const struct A632 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA632() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A632));
		AF('J',struct A632,m0,1)
		AF('c',struct A632,m1,1)
		AF('l',struct A632,m2,1)
		AF('L',struct A632,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJs> */
#pragma pack(push,4)
union A633 { S m0; J m1; s m2; };
#pragma pack(pop)
int f_cmpA633(const union A633 *x, const union A633 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA633() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A633));
		AF('S',union A633,m0,1)
		AF('J',union A633,m1,1)
		AF('s',union A633,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bf} */
#pragma pack(push,2)
struct A634 { B m0; f m1; };
#pragma pack(pop)
int f_cmpA634(const struct A634 *x, const struct A634 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA634() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A634));
		AF('B',struct A634,m0,1)
		AF('f',struct A634,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SJs>Blllip{Bf}} */
#pragma pack(push,1)
struct A635 { union A633 m0; B m1; l m2; l m3; l m4; i m5; p m6; struct A634 m7; };
#pragma pack(pop)
int f_cmpA635(const struct A635 *x, const struct A635 *y) { return f_cmpA633(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA634(&x->m7, &y->m7); };
DCaggr* f_touchA635() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A635));
		AFa(struct A635,m0,1,A633)
		AF('B',struct A635,m1,1)
		AF('l',struct A635,m2,1)
		AF('l',struct A635,m3,1)
		AF('l',struct A635,m4,1)
		AF('i',struct A635,m5,1)
		AF('p',struct A635,m6,1)
		AFa(struct A635,m7,1,A634)
		dcCloseAggr(a);
	}
	return a;
};
/* <B{JclL}LdpSI{<SJs>Blllip{Bf}}ip> */
#pragma pack(push,4)
union A636 { B m0; struct A632 m1; L m2; d m3; p m4; S m5; I m6; struct A635 m7; i m8; p m9; };
#pragma pack(pop)
int f_cmpA636(const union A636 *x, const union A636 *y) { return x->m0 == y->m0 && f_cmpA632(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA635(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA636() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A636));
		AF('B',union A636,m0,1)
		AFa(union A636,m1,1,A632)
		AF('L',union A636,m2,1)
		AF('d',union A636,m3,1)
		AF('p',union A636,m4,1)
		AF('S',union A636,m5,1)
		AF('I',union A636,m6,1)
		AFa(union A636,m7,1,A635)
		AF('i',union A636,m8,1)
		AF('p',union A636,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LfsJsJdcL> */
#pragma pack(push,4)
union A637 { L m0; f m1; s m2; J m3; s m4; J m5; d m6; c m7; L m8; };
#pragma pack(pop)
int f_cmpA637(const union A637 *x, const union A637 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA637() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A637));
		AF('L',union A637,m0,1)
		AF('f',union A637,m1,1)
		AF('s',union A637,m2,1)
		AF('J',union A637,m3,1)
		AF('s',union A637,m4,1)
		AF('J',union A637,m5,1)
		AF('d',union A637,m6,1)
		AF('c',union A637,m7,1)
		AF('L',union A637,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lifc> */
#pragma pack(push,8)
union A638 { l m0; i m1; f m2; c m3; };
#pragma pack(pop)
int f_cmpA638(const union A638 *x, const union A638 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA638() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A638));
		AF('l',union A638,m0,1)
		AF('i',union A638,m1,1)
		AF('f',union A638,m2,1)
		AF('c',union A638,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ldd} */
#pragma pack(push,2)
struct A639 { L m0; d m1; d m2; };
#pragma pack(pop)
int f_cmpA639(const struct A639 *x, const struct A639 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA639() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A639));
		AF('L',struct A639,m0,1)
		AF('d',struct A639,m1,1)
		AF('d',struct A639,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fffplCplC> */
#pragma pack(push,4)
union A640 { f m0; f m1; f m2; p m3; l m4; C m5; p m6; l m7; C m8; };
#pragma pack(pop)
int f_cmpA640(const union A640 *x, const union A640 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA640() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A640));
		AF('f',union A640,m0,1)
		AF('f',union A640,m1,1)
		AF('f',union A640,m2,1)
		AF('p',union A640,m3,1)
		AF('l',union A640,m4,1)
		AF('C',union A640,m5,1)
		AF('p',union A640,m6,1)
		AF('l',union A640,m7,1)
		AF('C',union A640,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JJJS<fffplCplC>iSfjipC} */
#pragma pack(push,1)
struct A641 { J m0; J m1; J m2; S m3; union A640 m4; i m5; S m6; f m7; j m8; i m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA641(const struct A641 *x, const struct A641 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA640(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA641() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A641));
		AF('J',struct A641,m0,1)
		AF('J',struct A641,m1,1)
		AF('J',struct A641,m2,1)
		AF('S',struct A641,m3,1)
		AFa(struct A641,m4,1,A640)
		AF('i',struct A641,m5,1)
		AF('S',struct A641,m6,1)
		AF('f',struct A641,m7,1)
		AF('j',struct A641,m8,1)
		AF('i',struct A641,m9,1)
		AF('p',struct A641,m10,1)
		AF('C',struct A641,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJdiL> */
#pragma pack(push,4)
union A642 { S m0; J m1; d m2; i m3; L m4; };
#pragma pack(pop)
int f_cmpA642(const union A642 *x, const union A642 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA642() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A642));
		AF('S',union A642,m0,1)
		AF('J',union A642,m1,1)
		AF('d',union A642,m2,1)
		AF('i',union A642,m3,1)
		AF('L',union A642,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dp> */
#pragma pack(push,4)
union A643 { d m0; p m1; };
#pragma pack(pop)
int f_cmpA643(const union A643 *x, const union A643 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA643() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A643));
		AF('d',union A643,m0,1)
		AF('p',union A643,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BfdCsCclcjjC> */
#pragma pack(push,2)
union A644 { B m0; f m1; d m2; C m3; s m4; C m5; c m6; l m7; c m8; j m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA644(const union A644 *x, const union A644 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA644() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A644));
		AF('B',union A644,m0,1)
		AF('f',union A644,m1,1)
		AF('d',union A644,m2,1)
		AF('C',union A644,m3,1)
		AF('s',union A644,m4,1)
		AF('C',union A644,m5,1)
		AF('c',union A644,m6,1)
		AF('l',union A644,m7,1)
		AF('c',union A644,m8,1)
		AF('j',union A644,m9,1)
		AF('j',union A644,m10,1)
		AF('C',union A644,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d<dp>L<BfdCsCclcjjC>i> */
#pragma pack(push,2)
union A645 { d m0; union A643 m1; L m2; union A644 m3; i m4; };
#pragma pack(pop)
int f_cmpA645(const union A645 *x, const union A645 *y) { return x->m0 == y->m0 && f_cmpA643(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA644(&x->m3, &y->m3) && x->m4 == y->m4; };
DCaggr* f_touchA645() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A645));
		AF('d',union A645,m0,1)
		AFa(union A645,m1,1,A643)
		AF('L',union A645,m2,1)
		AFa(union A645,m3,1,A644)
		AF('i',union A645,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bi<d<dp>L<BfdCsCclcjjC>i>ccfjJJlCd> */
#pragma pack(push,4)
union A646 { B m0; i m1; union A645 m2; c m3; c m4; f m5; j m6; J m7; J m8; l m9; C m10; d m11; };
#pragma pack(pop)
int f_cmpA646(const union A646 *x, const union A646 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA645(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA646() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A646));
		AF('B',union A646,m0,1)
		AF('i',union A646,m1,1)
		AFa(union A646,m2,1,A645)
		AF('c',union A646,m3,1)
		AF('c',union A646,m4,1)
		AF('f',union A646,m5,1)
		AF('j',union A646,m6,1)
		AF('J',union A646,m7,1)
		AF('J',union A646,m8,1)
		AF('l',union A646,m9,1)
		AF('C',union A646,m10,1)
		AF('d',union A646,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBccLlSpccCl> */
#pragma pack(push,1)
union A647 { i m0; B m1; c m2; c m3; L m4; l m5; S m6; p m7; c m8; c m9; C m10; l m11; };
#pragma pack(pop)
int f_cmpA647(const union A647 *x, const union A647 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA647() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A647));
		AF('i',union A647,m0,1)
		AF('B',union A647,m1,1)
		AF('c',union A647,m2,1)
		AF('c',union A647,m3,1)
		AF('L',union A647,m4,1)
		AF('l',union A647,m5,1)
		AF('S',union A647,m6,1)
		AF('p',union A647,m7,1)
		AF('c',union A647,m8,1)
		AF('c',union A647,m9,1)
		AF('C',union A647,m10,1)
		AF('l',union A647,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCLLIclLBLij> */
#pragma pack(push,4)
union A648 { p m0; C m1; L m2; L m3; I m4; c m5; l m6; L m7; B m8; L m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA648(const union A648 *x, const union A648 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA648() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A648));
		AF('p',union A648,m0,1)
		AF('C',union A648,m1,1)
		AF('L',union A648,m2,1)
		AF('L',union A648,m3,1)
		AF('I',union A648,m4,1)
		AF('c',union A648,m5,1)
		AF('l',union A648,m6,1)
		AF('L',union A648,m7,1)
		AF('B',union A648,m8,1)
		AF('L',union A648,m9,1)
		AF('i',union A648,m10,1)
		AF('j',union A648,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Scflpd<pCLLIclLBLij>LLsLj> */
#pragma pack(push,8)
union A649 { S m0; c m1; f m2; l m3; p m4; d m5; union A648 m6; L m7; L m8; s m9; L m10; j m11; };
#pragma pack(pop)
int f_cmpA649(const union A649 *x, const union A649 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA648(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA649() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A649));
		AF('S',union A649,m0,1)
		AF('c',union A649,m1,1)
		AF('f',union A649,m2,1)
		AF('l',union A649,m3,1)
		AF('p',union A649,m4,1)
		AF('d',union A649,m5,1)
		AFa(union A649,m6,1,A648)
		AF('L',union A649,m7,1)
		AF('L',union A649,m8,1)
		AF('s',union A649,m9,1)
		AF('L',union A649,m10,1)
		AF('j',union A649,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lccIiiffcjL> */
#pragma pack(push,8)
union A650 { l m0; c m1; c m2; I m3; i m4; i m5; f m6; f m7; c m8; j m9; L m10; };
#pragma pack(pop)
int f_cmpA650(const union A650 *x, const union A650 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA650() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A650));
		AF('l',union A650,m0,1)
		AF('c',union A650,m1,1)
		AF('c',union A650,m2,1)
		AF('I',union A650,m3,1)
		AF('i',union A650,m4,1)
		AF('i',union A650,m5,1)
		AF('f',union A650,m6,1)
		AF('f',union A650,m7,1)
		AF('c',union A650,m8,1)
		AF('j',union A650,m9,1)
		AF('L',union A650,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ci<lccIiiffcjL>ddJpJfscC} */
#pragma pack(push,4)
struct A651 { C m0; i m1; union A650 m2; d m3; d m4; J m5; p m6; J m7; f m8; s m9; c m10; C m11; };
#pragma pack(pop)
int f_cmpA651(const struct A651 *x, const struct A651 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA650(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA651() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A651));
		AF('C',struct A651,m0,1)
		AF('i',struct A651,m1,1)
		AFa(struct A651,m2,1,A650)
		AF('d',struct A651,m3,1)
		AF('d',struct A651,m4,1)
		AF('J',struct A651,m5,1)
		AF('p',struct A651,m6,1)
		AF('J',struct A651,m7,1)
		AF('f',struct A651,m8,1)
		AF('s',struct A651,m9,1)
		AF('c',struct A651,m10,1)
		AF('C',struct A651,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djiBpiJIIpfp} */
#pragma pack(push,1)
struct A652 { d m0; j m1; i m2; B m3; p m4; i m5; J m6; I m7; I m8; p m9; f m10; p m11; };
#pragma pack(pop)
int f_cmpA652(const struct A652 *x, const struct A652 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA652() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A652));
		AF('d',struct A652,m0,1)
		AF('j',struct A652,m1,1)
		AF('i',struct A652,m2,1)
		AF('B',struct A652,m3,1)
		AF('p',struct A652,m4,1)
		AF('i',struct A652,m5,1)
		AF('J',struct A652,m6,1)
		AF('I',struct A652,m7,1)
		AF('I',struct A652,m8,1)
		AF('p',struct A652,m9,1)
		AF('f',struct A652,m10,1)
		AF('p',struct A652,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sdsS> */
#pragma pack(push,4)
union A653 { s m0; d m1; s m2; S m3; };
#pragma pack(pop)
int f_cmpA653(const union A653 *x, const union A653 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA653() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A653));
		AF('s',union A653,m0,1)
		AF('d',union A653,m1,1)
		AF('s',union A653,m2,1)
		AF('S',union A653,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ddcsBsjBBLdj} */
#pragma pack(push,4)
struct A654 { d m0; d m1; c m2; s m3; B m4; s m5; j m6; B m7; B m8; L m9; d m10; j m11; };
#pragma pack(pop)
int f_cmpA654(const struct A654 *x, const struct A654 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA654() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A654));
		AF('d',struct A654,m0,1)
		AF('d',struct A654,m1,1)
		AF('c',struct A654,m2,1)
		AF('s',struct A654,m3,1)
		AF('B',struct A654,m4,1)
		AF('s',struct A654,m5,1)
		AF('j',struct A654,m6,1)
		AF('B',struct A654,m7,1)
		AF('B',struct A654,m8,1)
		AF('L',struct A654,m9,1)
		AF('d',struct A654,m10,1)
		AF('j',struct A654,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dpCJliL[11]JS} */
#pragma pack(push,8)
struct A655 { d m0; p m1; C m2; J m3; l m4; i m5; L m6[11]; J m7; S m8; };
#pragma pack(pop)
int f_cmpA655(const struct A655 *x, const struct A655 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA655() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A655));
		AF('d',struct A655,m0,1)
		AF('p',struct A655,m1,1)
		AF('C',struct A655,m2,1)
		AF('J',struct A655,m3,1)
		AF('l',struct A655,m4,1)
		AF('i',struct A655,m5,1)
		AF('L',struct A655,m6,11)
		AF('J',struct A655,m7,1)
		AF('S',struct A655,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{ddcsBsjBBLdj}sBIJJ{dpCJliL[11]JS}j> */
#pragma pack(push,8)
union A656 { struct A654 m0; s m1; B m2; I m3; J m4; J m5; struct A655 m6; j m7; };
#pragma pack(pop)
int f_cmpA656(const union A656 *x, const union A656 *y) { return f_cmpA654(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA655(&x->m6, &y->m6) && x->m7 == y->m7; };
DCaggr* f_touchA656() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A656));
		AFa(union A656,m0,1,A654)
		AF('s',union A656,m1,1)
		AF('B',union A656,m2,1)
		AF('I',union A656,m3,1)
		AF('J',union A656,m4,1)
		AF('J',union A656,m5,1)
		AFa(union A656,m6,1,A655)
		AF('j',union A656,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJdLJIdLLiJ[6]C> */
#pragma pack(push,4)
union A657 { s m0; J m1; d m2; L m3; J m4; I m5; d m6; L m7; L m8; i m9; J m10[6]; C m11; };
#pragma pack(pop)
int f_cmpA657(const union A657 *x, const union A657 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m11 == y->m11; };
DCaggr* f_touchA657() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A657));
		AF('s',union A657,m0,1)
		AF('J',union A657,m1,1)
		AF('d',union A657,m2,1)
		AF('L',union A657,m3,1)
		AF('J',union A657,m4,1)
		AF('I',union A657,m5,1)
		AF('d',union A657,m6,1)
		AF('L',union A657,m7,1)
		AF('L',union A657,m8,1)
		AF('i',union A657,m9,1)
		AF('J',union A657,m10,6)
		AF('C',union A657,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<sJdLJIdLLiJ[6]C>cLJflfc} */
#pragma pack(push,1)
struct A658 { union A657 m0; c m1; L m2; J m3; f m4; l m5; f m6; c m7; };
#pragma pack(pop)
int f_cmpA658(const struct A658 *x, const struct A658 *y) { return f_cmpA657(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA658() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A658));
		AFa(struct A658,m0,1,A657)
		AF('c',struct A658,m1,1)
		AF('L',struct A658,m2,1)
		AF('J',struct A658,m3,1)
		AF('f',struct A658,m4,1)
		AF('l',struct A658,m5,1)
		AF('f',struct A658,m6,1)
		AF('c',struct A658,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj} */
#pragma pack(push,4)
struct A659 { s m0; B m1; struct A658 m2[16]; S m3; J m4; j m5; };
#pragma pack(pop)
int f_cmpA659(const struct A659 *x, const struct A659 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA658(&x->m2[0], &y->m2[0]) && f_cmpA658(&x->m2[1], &y->m2[1]) && f_cmpA658(&x->m2[2], &y->m2[2]) && f_cmpA658(&x->m2[3], &y->m2[3]) && f_cmpA658(&x->m2[4], &y->m2[4]) && f_cmpA658(&x->m2[5], &y->m2[5]) && f_cmpA658(&x->m2[6], &y->m2[6]) && f_cmpA658(&x->m2[7], &y->m2[7]) && f_cmpA658(&x->m2[8], &y->m2[8]) && f_cmpA658(&x->m2[9], &y->m2[9]) && f_cmpA658(&x->m2[10], &y->m2[10]) && f_cmpA658(&x->m2[11], &y->m2[11]) && f_cmpA658(&x->m2[12], &y->m2[12]) && f_cmpA658(&x->m2[13], &y->m2[13]) && f_cmpA658(&x->m2[14], &y->m2[14]) && f_cmpA658(&x->m2[15], &y->m2[15]) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA659() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A659));
		AF('s',struct A659,m0,1)
		AF('B',struct A659,m1,1)
		AFa(struct A659,m2,16,A658)
		AF('S',struct A659,m3,1)
		AF('J',struct A659,m4,1)
		AF('j',struct A659,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IspBfiLI[7]J} */
#pragma pack(push,8)
struct A660 { I m0; s m1; p m2; B m3; f m4; i m5; L m6; I m7[7]; J m8; };
#pragma pack(pop)
int f_cmpA660(const struct A660 *x, const struct A660 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m8 == y->m8; };
DCaggr* f_touchA660() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A660));
		AF('I',struct A660,m0,1)
		AF('s',struct A660,m1,1)
		AF('p',struct A660,m2,1)
		AF('B',struct A660,m3,1)
		AF('f',struct A660,m4,1)
		AF('i',struct A660,m5,1)
		AF('L',struct A660,m6,1)
		AF('I',struct A660,m7,7)
		AF('J',struct A660,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s> */
#pragma pack(push,2)
union A661 { s m0; };
#pragma pack(pop)
int f_cmpA661(const union A661 *x, const union A661 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA661() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A661));
		AF('s',union A661,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fBdCICLJfICL> */
#pragma pack(push,4)
union A662 { f m0; B m1; d m2; C m3; I m4; C m5; L m6; J m7; f m8; I m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA662(const union A662 *x, const union A662 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA662() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A662));
		AF('f',union A662,m0,1)
		AF('B',union A662,m1,1)
		AF('d',union A662,m2,1)
		AF('C',union A662,m3,1)
		AF('I',union A662,m4,1)
		AF('C',union A662,m5,1)
		AF('L',union A662,m6,1)
		AF('J',union A662,m7,1)
		AF('f',union A662,m8,1)
		AF('I',union A662,m9,1)
		AF('C',union A662,m10,1)
		AF('L',union A662,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpIdplcjd[12]l<fBdCICLJfICL>C} */
#pragma pack(push,4)
struct A663 { j m0; p m1; I m2; d m3; p m4; l m5; c m6; j m7; d m8[12]; l m9; union A662 m10; C m11; };
#pragma pack(pop)
int f_cmpA663(const struct A663 *x, const struct A663 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m9 == y->m9 && f_cmpA662(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA663() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A663));
		AF('j',struct A663,m0,1)
		AF('p',struct A663,m1,1)
		AF('I',struct A663,m2,1)
		AF('d',struct A663,m3,1)
		AF('p',struct A663,m4,1)
		AF('l',struct A663,m5,1)
		AF('c',struct A663,m6,1)
		AF('j',struct A663,m7,1)
		AF('d',struct A663,m8,12)
		AF('l',struct A663,m9,1)
		AFa(struct A663,m10,1,A662)
		AF('C',struct A663,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff> */
#pragma pack(push,4)
union A664 { union A120 m0; d m1; J m2; s m3; union A661 m4; struct A663 m5; j m6; f m7; f m8; };
#pragma pack(pop)
int f_cmpA664(const union A664 *x, const union A664 *y) { return f_cmpA120(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA661(&x->m4, &y->m4) && f_cmpA663(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA664() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A664));
		AFa(union A664,m0,1,A120)
		AF('d',union A664,m1,1)
		AF('J',union A664,m2,1)
		AF('s',union A664,m3,1)
		AFa(union A664,m4,1,A661)
		AFa(union A664,m5,1,A663)
		AF('j',union A664,m6,1)
		AF('f',union A664,m7,1)
		AF('f',union A664,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <piJjCfLCSI> */
#pragma pack(push,4)
union A665 { p m0; i m1; J m2; j m3; C m4; f m5; L m6; C m7; S m8; I m9; };
#pragma pack(pop)
int f_cmpA665(const union A665 *x, const union A665 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA665() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A665));
		AF('p',union A665,m0,1)
		AF('i',union A665,m1,1)
		AF('J',union A665,m2,1)
		AF('j',union A665,m3,1)
		AF('C',union A665,m4,1)
		AF('f',union A665,m5,1)
		AF('L',union A665,m6,1)
		AF('C',union A665,m7,1)
		AF('S',union A665,m8,1)
		AF('I',union A665,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pISICSs[4]p[13]Icl} */
#pragma pack(push,4)
struct A666 { p m0; I m1; S m2; I m3; C m4; S m5; s m6[4]; p m7[13]; I m8; c m9; l m10; };
#pragma pack(pop)
int f_cmpA666(const struct A666 *x, const struct A666 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA666() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A666));
		AF('p',struct A666,m0,1)
		AF('I',struct A666,m1,1)
		AF('S',struct A666,m2,1)
		AF('I',struct A666,m3,1)
		AF('C',struct A666,m4,1)
		AF('S',struct A666,m5,1)
		AF('s',struct A666,m6,4)
		AF('p',struct A666,m7,13)
		AF('I',struct A666,m8,1)
		AF('c',struct A666,m9,1)
		AF('l',struct A666,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{pISICSs[4]p[13]Icl}sCJfs} */
#pragma pack(push,4)
struct A667 { p m0; struct A666 m1; s m2; C m3; J m4; f m5; s m6; };
#pragma pack(pop)
int f_cmpA667(const struct A667 *x, const struct A667 *y) { return x->m0 == y->m0 && f_cmpA666(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA667() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A667));
		AF('p',struct A667,m0,1)
		AFa(struct A667,m1,1,A666)
		AF('s',struct A667,m2,1)
		AF('C',struct A667,m3,1)
		AF('J',struct A667,m4,1)
		AF('f',struct A667,m5,1)
		AF('s',struct A667,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldCjiS> */
#pragma pack(push,8)
union A668 { l m0; d m1; C m2; j m3; i m4; S m5; };
#pragma pack(pop)
int f_cmpA668(const union A668 *x, const union A668 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA668() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A668));
		AF('l',union A668,m0,1)
		AF('d',union A668,m1,1)
		AF('C',union A668,m2,1)
		AF('j',union A668,m3,1)
		AF('i',union A668,m4,1)
		AF('S',union A668,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lflf<ldCjiS>SfSiBIL> */
#pragma pack(push,4)
union A669 { L m0; f m1; l m2; f m3; union A668 m4; S m5; f m6; S m7; i m8; B m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA669(const union A669 *x, const union A669 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA668(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA669() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A669));
		AF('L',union A669,m0,1)
		AF('f',union A669,m1,1)
		AF('l',union A669,m2,1)
		AF('f',union A669,m3,1)
		AFa(union A669,m4,1,A668)
		AF('S',union A669,m5,1)
		AF('f',union A669,m6,1)
		AF('S',union A669,m7,1)
		AF('i',union A669,m8,1)
		AF('B',union A669,m9,1)
		AF('I',union A669,m10,1)
		AF('L',union A669,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLpdsljpfI[4]p[2]s> */
#pragma pack(push,4)
union A670 { J m0; L m1; p m2; d m3; s m4; l m5; j m6; p m7; f m8; I m9[4]; p m10[2]; s m11; };
#pragma pack(pop)
int f_cmpA670(const union A670 *x, const union A670 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m11 == y->m11; };
DCaggr* f_touchA670() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A670));
		AF('J',union A670,m0,1)
		AF('L',union A670,m1,1)
		AF('p',union A670,m2,1)
		AF('d',union A670,m3,1)
		AF('s',union A670,m4,1)
		AF('l',union A670,m5,1)
		AF('j',union A670,m6,1)
		AF('p',union A670,m7,1)
		AF('f',union A670,m8,1)
		AF('I',union A670,m9,4)
		AF('p',union A670,m10,2)
		AF('s',union A670,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IjcJBpCBfCd> */
#pragma pack(push,4)
union A671 { I m0; j m1; c m2; J m3; B m4; p m5; C m6; B m7; f m8; C m9; d m10; };
#pragma pack(pop)
int f_cmpA671(const union A671 *x, const union A671 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA671() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A671));
		AF('I',union A671,m0,1)
		AF('j',union A671,m1,1)
		AF('c',union A671,m2,1)
		AF('J',union A671,m3,1)
		AF('B',union A671,m4,1)
		AF('p',union A671,m5,1)
		AF('C',union A671,m6,1)
		AF('B',union A671,m7,1)
		AF('f',union A671,m8,1)
		AF('C',union A671,m9,1)
		AF('d',union A671,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdSBpSJds> */
#pragma pack(push,4)
union A672 { j m0; d m1; S m2; B m3; p m4; S m5; J m6; d m7; s m8; };
#pragma pack(pop)
int f_cmpA672(const union A672 *x, const union A672 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA672() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A672));
		AF('j',union A672,m0,1)
		AF('d',union A672,m1,1)
		AF('S',union A672,m2,1)
		AF('B',union A672,m3,1)
		AF('p',union A672,m4,1)
		AF('S',union A672,m5,1)
		AF('J',union A672,m6,1)
		AF('d',union A672,m7,1)
		AF('s',union A672,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<>JiBdd<IjcJBpCBfCd><jdSBpSJds>iCIc> */
#pragma pack(push,4)
union A673 { union A30 m0; J m1; i m2; B m3; d m4; d m5; union A671 m6; union A672 m7; i m8; C m9; I m10; c m11; };
#pragma pack(pop)
int f_cmpA673(const union A673 *x, const union A673 *y) { return f_cmpA30(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA671(&x->m6, &y->m6) && f_cmpA672(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA673() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A673));
		AFa(union A673,m0,1,A30)
		AF('J',union A673,m1,1)
		AF('i',union A673,m2,1)
		AF('B',union A673,m3,1)
		AF('d',union A673,m4,1)
		AF('d',union A673,m5,1)
		AFa(union A673,m6,1,A671)
		AFa(union A673,m7,1,A672)
		AF('i',union A673,m8,1)
		AF('C',union A673,m9,1)
		AF('I',union A673,m10,1)
		AF('c',union A673,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLjjSjidifJd} */
#pragma pack(push,1)
struct A674 { J m0; L m1; j m2; j m3; S m4; j m5; i m6; d m7; i m8; f m9; J m10; d m11; };
#pragma pack(pop)
int f_cmpA674(const struct A674 *x, const struct A674 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA674() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A674));
		AF('J',struct A674,m0,1)
		AF('L',struct A674,m1,1)
		AF('j',struct A674,m2,1)
		AF('j',struct A674,m3,1)
		AF('S',struct A674,m4,1)
		AF('j',struct A674,m5,1)
		AF('i',struct A674,m6,1)
		AF('d',struct A674,m7,1)
		AF('i',struct A674,m8,1)
		AF('f',struct A674,m9,1)
		AF('J',struct A674,m10,1)
		AF('d',struct A674,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<>JiBdd<IjcJBpCBfCd><jdSBpSJds>iCIc>IIld{JLjjSjidifJd}LB} */
#pragma pack(push,8)
struct A675 { union A669 m0; union A670 m1; I m2; L m3; union A673 m4; I m5; I m6; l m7; d m8; struct A674 m9; L m10; B m11; };
#pragma pack(pop)
int f_cmpA675(const struct A675 *x, const struct A675 *y) { return f_cmpA669(&x->m0, &y->m0) && f_cmpA670(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA673(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA674(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA675() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A675));
		AFa(struct A675,m0,1,A669)
		AFa(struct A675,m1,1,A670)
		AF('I',struct A675,m2,1)
		AF('L',struct A675,m3,1)
		AFa(struct A675,m4,1,A673)
		AF('I',struct A675,m5,1)
		AF('I',struct A675,m6,1)
		AF('l',struct A675,m7,1)
		AF('d',struct A675,m8,1)
		AFa(struct A675,m9,1,A674)
		AF('L',struct A675,m10,1)
		AF('B',struct A675,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iiIpJlCjjsBj} */
#pragma pack(push,4)
struct A676 { i m0; i m1; I m2; p m3; J m4; l m5; C m6; j m7; j m8; s m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA676(const struct A676 *x, const struct A676 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA676() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A676));
		AF('i',struct A676,m0,1)
		AF('i',struct A676,m1,1)
		AF('I',struct A676,m2,1)
		AF('p',struct A676,m3,1)
		AF('J',struct A676,m4,1)
		AF('l',struct A676,m5,1)
		AF('C',struct A676,m6,1)
		AF('j',struct A676,m7,1)
		AF('j',struct A676,m8,1)
		AF('s',struct A676,m9,1)
		AF('B',struct A676,m10,1)
		AF('j',struct A676,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LJ> */
#pragma pack(push,4)
union A677 { L m0; J m1; };
#pragma pack(pop)
int f_cmpA677(const union A677 *x, const union A677 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA677() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A677));
		AF('L',union A677,m0,1)
		AF('J',union A677,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SSJccdBBlSli} */
#pragma pack(push,8)
struct A678 { S m0; S m1; J m2; c m3; c m4; d m5; B m6; B m7; l m8; S m9; l m10; i m11; };
#pragma pack(pop)
int f_cmpA678(const struct A678 *x, const struct A678 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA678() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A678));
		AF('S',struct A678,m0,1)
		AF('S',struct A678,m1,1)
		AF('J',struct A678,m2,1)
		AF('c',struct A678,m3,1)
		AF('c',struct A678,m4,1)
		AF('d',struct A678,m5,1)
		AF('B',struct A678,m6,1)
		AF('B',struct A678,m7,1)
		AF('l',struct A678,m8,1)
		AF('S',struct A678,m9,1)
		AF('l',struct A678,m10,1)
		AF('i',struct A678,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jjssfliSJLIS> */
#pragma pack(push,2)
union A679 { j m0; j m1; s m2; s m3; f m4; l m5; i m6; S m7; J m8; L m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA679(const union A679 *x, const union A679 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA679() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A679));
		AF('j',union A679,m0,1)
		AF('j',union A679,m1,1)
		AF('s',union A679,m2,1)
		AF('s',union A679,m3,1)
		AF('f',union A679,m4,1)
		AF('l',union A679,m5,1)
		AF('i',union A679,m6,1)
		AF('S',union A679,m7,1)
		AF('J',union A679,m8,1)
		AF('L',union A679,m9,1)
		AF('I',union A679,m10,1)
		AF('S',union A679,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sBIJBj<jjssfliSJLIS>fIdSB> */
#pragma pack(push,4)
union A680 { s m0; B m1; I m2; J m3; B m4; j m5; union A679 m6; f m7; I m8; d m9; S m10; B m11; };
#pragma pack(pop)
int f_cmpA680(const union A680 *x, const union A680 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA679(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA680() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A680));
		AF('s',union A680,m0,1)
		AF('B',union A680,m1,1)
		AF('I',union A680,m2,1)
		AF('J',union A680,m3,1)
		AF('B',union A680,m4,1)
		AF('j',union A680,m5,1)
		AFa(union A680,m6,1,A679)
		AF('f',union A680,m7,1)
		AF('I',union A680,m8,1)
		AF('d',union A680,m9,1)
		AF('S',union A680,m10,1)
		AF('B',union A680,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjBlIj} */
#pragma pack(push,8)
struct A681 { L m0; j m1; B m2; l m3; I m4; j m5; };
#pragma pack(pop)
int f_cmpA681(const struct A681 *x, const struct A681 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA681() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A681));
		AF('L',struct A681,m0,1)
		AF('j',struct A681,m1,1)
		AF('B',struct A681,m2,1)
		AF('l',struct A681,m3,1)
		AF('I',struct A681,m4,1)
		AF('j',struct A681,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fSC[5]LCJii[6]fl> */
#pragma pack(push,4)
union A682 { f m0; S m1; C m2[5]; L m3; C m4; J m5; i m6; i m7[6]; f m8; l m9; };
#pragma pack(pop)
int f_cmpA682(const union A682 *x, const union A682 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA682() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A682));
		AF('f',union A682,m0,1)
		AF('S',union A682,m1,1)
		AF('C',union A682,m2,5)
		AF('L',union A682,m3,1)
		AF('C',union A682,m4,1)
		AF('J',union A682,m5,1)
		AF('i',union A682,m6,1)
		AF('i',union A682,m7,6)
		AF('f',union A682,m8,1)
		AF('l',union A682,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijlsB[3]{LjBlIj}LJ{}<fSC[5]LCJii[6]fl>Bj> */
#pragma pack(push,4)
union A683 { i m0; j m1; l m2; s m3; B m4[3]; struct A681 m5; L m6; J m7; struct A24 m8; union A682 m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA683(const union A683 *x, const union A683 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && f_cmpA681(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA24(&x->m8, &y->m8) && f_cmpA682(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA683() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A683));
		AF('i',union A683,m0,1)
		AF('j',union A683,m1,1)
		AF('l',union A683,m2,1)
		AF('s',union A683,m3,1)
		AF('B',union A683,m4,3)
		AFa(union A683,m5,1,A681)
		AF('L',union A683,m6,1)
		AF('J',union A683,m7,1)
		AFa(union A683,m8,1,A24)
		AFa(union A683,m9,1,A682)
		AF('B',union A683,m10,1)
		AF('j',union A683,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fBffLJSdScl[5]> */
#pragma pack(push,4)
union A684 { f m0; B m1; f m2; f m3; L m4; J m5; S m6; d m7; S m8; c m9; l m10[5]; };
#pragma pack(pop)
int f_cmpA684(const union A684 *x, const union A684 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4]; };
DCaggr* f_touchA684() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A684));
		AF('f',union A684,m0,1)
		AF('B',union A684,m1,1)
		AF('f',union A684,m2,1)
		AF('f',union A684,m3,1)
		AF('L',union A684,m4,1)
		AF('J',union A684,m5,1)
		AF('S',union A684,m6,1)
		AF('d',union A684,m7,1)
		AF('S',union A684,m8,1)
		AF('c',union A684,m9,1)
		AF('l',union A684,m10,5)
		dcCloseAggr(a);
	}
	return a;
};
/* <LCSijLSfjifS> */
#pragma pack(push,2)
union A685 { L m0; C m1; S m2; i m3; j m4; L m5; S m6; f m7; j m8; i m9; f m10; S m11; };
#pragma pack(pop)
int f_cmpA685(const union A685 *x, const union A685 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA685() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A685));
		AF('L',union A685,m0,1)
		AF('C',union A685,m1,1)
		AF('S',union A685,m2,1)
		AF('i',union A685,m3,1)
		AF('j',union A685,m4,1)
		AF('L',union A685,m5,1)
		AF('S',union A685,m6,1)
		AF('f',union A685,m7,1)
		AF('j',union A685,m8,1)
		AF('i',union A685,m9,1)
		AF('f',union A685,m10,1)
		AF('S',union A685,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dSJdLdlpLdj> */
#pragma pack(push,4)
union A686 { d m0; S m1; J m2; d m3; L m4; d m5; l m6; p m7; L m8; d m9; j m10; };
#pragma pack(pop)
int f_cmpA686(const union A686 *x, const union A686 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA686() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A686));
		AF('d',union A686,m0,1)
		AF('S',union A686,m1,1)
		AF('J',union A686,m2,1)
		AF('d',union A686,m3,1)
		AF('L',union A686,m4,1)
		AF('d',union A686,m5,1)
		AF('l',union A686,m6,1)
		AF('p',union A686,m7,1)
		AF('L',union A686,m8,1)
		AF('d',union A686,m9,1)
		AF('j',union A686,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JjJJl<dSJdLdlpLdj>{}L} */
#pragma pack(push,4)
struct A687 { J m0; j m1; J m2; J m3; l m4; union A686 m5; struct A24 m6; L m7; };
#pragma pack(pop)
int f_cmpA687(const struct A687 *x, const struct A687 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA686(&x->m5, &y->m5) && f_cmpA24(&x->m6, &y->m6) && x->m7 == y->m7; };
DCaggr* f_touchA687() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A687));
		AF('J',struct A687,m0,1)
		AF('j',struct A687,m1,1)
		AF('J',struct A687,m2,1)
		AF('J',struct A687,m3,1)
		AF('l',struct A687,m4,1)
		AFa(struct A687,m5,1,A686)
		AFa(struct A687,m6,1,A24)
		AF('L',struct A687,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BJcsBSjSsipB} */
#pragma pack(push,4)
struct A688 { B m0; J m1; c m2; s m3; B m4; S m5; j m6; S m7; s m8; i m9; p m10; B m11; };
#pragma pack(pop)
int f_cmpA688(const struct A688 *x, const struct A688 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA688() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A688));
		AF('B',struct A688,m0,1)
		AF('J',struct A688,m1,1)
		AF('c',struct A688,m2,1)
		AF('s',struct A688,m3,1)
		AF('B',struct A688,m4,1)
		AF('S',struct A688,m5,1)
		AF('j',struct A688,m6,1)
		AF('S',struct A688,m7,1)
		AF('s',struct A688,m8,1)
		AF('i',struct A688,m9,1)
		AF('p',struct A688,m10,1)
		AF('B',struct A688,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CIcSBcpLpcd{BJcsBSjSsipB}> */
#pragma pack(push,4)
union A689 { C m0; I m1; c m2; S m3; B m4; c m5; p m6; L m7; p m8; c m9; d m10; struct A688 m11; };
#pragma pack(pop)
int f_cmpA689(const union A689 *x, const union A689 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA688(&x->m11, &y->m11); };
DCaggr* f_touchA689() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A689));
		AF('C',union A689,m0,1)
		AF('I',union A689,m1,1)
		AF('c',union A689,m2,1)
		AF('S',union A689,m3,1)
		AF('B',union A689,m4,1)
		AF('c',union A689,m5,1)
		AF('p',union A689,m6,1)
		AF('L',union A689,m7,1)
		AF('p',union A689,m8,1)
		AF('c',union A689,m9,1)
		AF('d',union A689,m10,1)
		AFa(union A689,m11,1,A688)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdJjjCpscIdI> */
#pragma pack(push,4)
union A690 { I m0; d m1; J m2; j m3; j m4; C m5; p m6; s m7; c m8; I m9; d m10; I m11; };
#pragma pack(pop)
int f_cmpA690(const union A690 *x, const union A690 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA690() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A690));
		AF('I',union A690,m0,1)
		AF('d',union A690,m1,1)
		AF('J',union A690,m2,1)
		AF('j',union A690,m3,1)
		AF('j',union A690,m4,1)
		AF('C',union A690,m5,1)
		AF('p',union A690,m6,1)
		AF('s',union A690,m7,1)
		AF('c',union A690,m8,1)
		AF('I',union A690,m9,1)
		AF('d',union A690,m10,1)
		AF('I',union A690,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLc{}J<>p> */
#pragma pack(push,4)
union A691 { s m0; L m1; c m2; struct A24 m3; J m4; union A30 m5; p m6; };
#pragma pack(pop)
int f_cmpA691(const union A691 *x, const union A691 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA24(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA30(&x->m5, &y->m5) && x->m6 == y->m6; };
DCaggr* f_touchA691() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A691));
		AF('s',union A691,m0,1)
		AF('L',union A691,m1,1)
		AF('c',union A691,m2,1)
		AFa(union A691,m3,1,A24)
		AF('J',union A691,m4,1)
		AFa(union A691,m5,1,A30)
		AF('p',union A691,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<sLc{}J<>p>JJf} */
#pragma pack(push,4)
struct A692 { union A691 m0; J m1; J m2; f m3; };
#pragma pack(pop)
int f_cmpA692(const struct A692 *x, const struct A692 *y) { return f_cmpA691(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA692() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A692));
		AFa(struct A692,m0,1,A691)
		AF('J',struct A692,m1,1)
		AF('J',struct A692,m2,1)
		AF('f',struct A692,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldld[4]ICpLBBJ> */
#pragma pack(push,4)
union A693 { l m0; d m1; l m2; d m3[4]; I m4; C m5; p m6; L m7; B m8; B m9; J m10; };
#pragma pack(pop)
int f_cmpA693(const union A693 *x, const union A693 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA693() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A693));
		AF('l',union A693,m0,1)
		AF('d',union A693,m1,1)
		AF('l',union A693,m2,1)
		AF('d',union A693,m3,4)
		AF('I',union A693,m4,1)
		AF('C',union A693,m5,1)
		AF('p',union A693,m6,1)
		AF('L',union A693,m7,1)
		AF('B',union A693,m8,1)
		AF('B',union A693,m9,1)
		AF('J',union A693,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lll} */
#pragma pack(push,4)
struct A694 { L m0; l m1; l m2; };
#pragma pack(pop)
int f_cmpA694(const struct A694 *x, const struct A694 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA694() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A694));
		AF('L',struct A694,m0,1)
		AF('l',struct A694,m1,1)
		AF('l',struct A694,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cdf<ldld[4]ICpLBBJ>f{Lll}[11]csj> */
#pragma pack(push,4)
union A695 { C m0; d m1; f m2; union A693 m3; f m4; struct A694 m5[11]; c m6; s m7; j m8; };
#pragma pack(pop)
int f_cmpA695(const union A695 *x, const union A695 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA693(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA694(&x->m5[0], &y->m5[0]) && f_cmpA694(&x->m5[1], &y->m5[1]) && f_cmpA694(&x->m5[2], &y->m5[2]) && f_cmpA694(&x->m5[3], &y->m5[3]) && f_cmpA694(&x->m5[4], &y->m5[4]) && f_cmpA694(&x->m5[5], &y->m5[5]) && f_cmpA694(&x->m5[6], &y->m5[6]) && f_cmpA694(&x->m5[7], &y->m5[7]) && f_cmpA694(&x->m5[8], &y->m5[8]) && f_cmpA694(&x->m5[9], &y->m5[9]) && f_cmpA694(&x->m5[10], &y->m5[10]) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA695() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A695));
		AF('C',union A695,m0,1)
		AF('d',union A695,m1,1)
		AF('f',union A695,m2,1)
		AFa(union A695,m3,1,A693)
		AF('f',union A695,m4,1)
		AFa(union A695,m5,11,A694)
		AF('c',union A695,m6,1)
		AF('s',union A695,m7,1)
		AF('j',union A695,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Lf<Cdf<ldld[4]ICpLBBJ>f{Lll}[11]csj>Jjl> */
#pragma pack(push,2)
union A696 { L m0; f m1; union A695 m2; J m3; j m4; l m5; };
#pragma pack(pop)
int f_cmpA696(const union A696 *x, const union A696 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA695(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA696() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A696));
		AF('L',union A696,m0,1)
		AF('f',union A696,m1,1)
		AFa(union A696,m2,1,A695)
		AF('J',union A696,m3,1)
		AF('j',union A696,m4,1)
		AF('l',union A696,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBjl> */
#pragma pack(push,8)
union A697 { S m0; B m1; j m2; l m3; };
#pragma pack(pop)
int f_cmpA697(const union A697 *x, const union A697 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA697() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A697));
		AF('S',union A697,m0,1)
		AF('B',union A697,m1,1)
		AF('j',union A697,m2,1)
		AF('l',union A697,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dBpcIJLsJLlc} */
#pragma pack(push,2)
struct A698 { d m0; B m1; p m2; c m3; I m4; J m5; L m6; s m7; J m8; L m9; l m10; c m11; };
#pragma pack(pop)
int f_cmpA698(const struct A698 *x, const struct A698 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA698() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A698));
		AF('d',struct A698,m0,1)
		AF('B',struct A698,m1,1)
		AF('p',struct A698,m2,1)
		AF('c',struct A698,m3,1)
		AF('I',struct A698,m4,1)
		AF('J',struct A698,m5,1)
		AF('L',struct A698,m6,1)
		AF('s',struct A698,m7,1)
		AF('J',struct A698,m8,1)
		AF('L',struct A698,m9,1)
		AF('l',struct A698,m10,1)
		AF('c',struct A698,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IjsIfJJfdfsS} */
#pragma pack(push,2)
struct A699 { I m0; j m1; s m2; I m3; f m4; J m5; J m6; f m7; d m8; f m9; s m10; S m11; };
#pragma pack(pop)
int f_cmpA699(const struct A699 *x, const struct A699 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA699() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A699));
		AF('I',struct A699,m0,1)
		AF('j',struct A699,m1,1)
		AF('s',struct A699,m2,1)
		AF('I',struct A699,m3,1)
		AF('f',struct A699,m4,1)
		AF('J',struct A699,m5,1)
		AF('J',struct A699,m6,1)
		AF('f',struct A699,m7,1)
		AF('d',struct A699,m8,1)
		AF('f',struct A699,m9,1)
		AF('s',struct A699,m10,1)
		AF('S',struct A699,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pplCdcdILBlJ} */
#pragma pack(push,4)
struct A700 { p m0; p m1; l m2; C m3; d m4; c m5; d m6; I m7; L m8; B m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA700(const struct A700 *x, const struct A700 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA700() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A700));
		AF('p',struct A700,m0,1)
		AF('p',struct A700,m1,1)
		AF('l',struct A700,m2,1)
		AF('C',struct A700,m3,1)
		AF('d',struct A700,m4,1)
		AF('c',struct A700,m5,1)
		AF('d',struct A700,m6,1)
		AF('I',struct A700,m7,1)
		AF('L',struct A700,m8,1)
		AF('B',struct A700,m9,1)
		AF('l',struct A700,m10,1)
		AF('J',struct A700,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IdfJlcl} */
#pragma pack(push,8)
struct A701 { I m0; d m1; f m2; J m3; l m4; c m5; l m6; };
#pragma pack(pop)
int f_cmpA701(const struct A701 *x, const struct A701 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA701() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A701));
		AF('I',struct A701,m0,1)
		AF('d',struct A701,m1,1)
		AF('f',struct A701,m2,1)
		AF('J',struct A701,m3,1)
		AF('l',struct A701,m4,1)
		AF('c',struct A701,m5,1)
		AF('l',struct A701,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jpJdid> */
#pragma pack(push,4)
union A702 { j m0; p m1; J m2; d m3; i m4; d m5; };
#pragma pack(pop)
int f_cmpA702(const union A702 *x, const union A702 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA702() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A702));
		AF('j',union A702,m0,1)
		AF('p',union A702,m1,1)
		AF('J',union A702,m2,1)
		AF('d',union A702,m3,1)
		AF('i',union A702,m4,1)
		AF('d',union A702,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dJS{IdfJlcl}JSjisdJ<jpJdid>> */
#pragma pack(push,1)
union A703 { d m0; J m1; S m2; struct A701 m3; J m4; S m5; j m6; i m7; s m8; d m9; J m10; union A702 m11; };
#pragma pack(pop)
int f_cmpA703(const union A703 *x, const union A703 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA701(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA702(&x->m11, &y->m11); };
DCaggr* f_touchA703() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A703));
		AF('d',union A703,m0,1)
		AF('J',union A703,m1,1)
		AF('S',union A703,m2,1)
		AFa(union A703,m3,1,A701)
		AF('J',union A703,m4,1)
		AF('S',union A703,m5,1)
		AF('j',union A703,m6,1)
		AF('i',union A703,m7,1)
		AF('s',union A703,m8,1)
		AF('d',union A703,m9,1)
		AF('J',union A703,m10,1)
		AFa(union A703,m11,1,A702)
		dcCloseAggr(a);
	}
	return a;
};
/* <C<dJS{IdfJlcl}JSjisdJ<jpJdid>>fdf[6]<>JcSCLB> */
#pragma pack(push,4)
union A704 { C m0; union A703 m1; f m2; d m3; f m4[6]; union A30 m5; J m6; c m7; S m8; C m9; L m10; B m11; };
#pragma pack(pop)
int f_cmpA704(const union A704 *x, const union A704 *y) { return x->m0 == y->m0 && f_cmpA703(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && f_cmpA30(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA704() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A704));
		AF('C',union A704,m0,1)
		AFa(union A704,m1,1,A703)
		AF('f',union A704,m2,1)
		AF('d',union A704,m3,1)
		AF('f',union A704,m4,6)
		AFa(union A704,m5,1,A30)
		AF('J',union A704,m6,1)
		AF('c',union A704,m7,1)
		AF('S',union A704,m8,1)
		AF('C',union A704,m9,1)
		AF('L',union A704,m10,1)
		AF('B',union A704,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SfSjIclCfSsl} */
#pragma pack(push,8)
struct A705 { S m0; f m1; S m2; j m3; I m4; c m5; l m6; C m7; f m8; S m9; s m10; l m11; };
#pragma pack(pop)
int f_cmpA705(const struct A705 *x, const struct A705 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA705() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A705));
		AF('S',struct A705,m0,1)
		AF('f',struct A705,m1,1)
		AF('S',struct A705,m2,1)
		AF('j',struct A705,m3,1)
		AF('I',struct A705,m4,1)
		AF('c',struct A705,m5,1)
		AF('l',struct A705,m6,1)
		AF('C',struct A705,m7,1)
		AF('f',struct A705,m8,1)
		AF('S',struct A705,m9,1)
		AF('s',struct A705,m10,1)
		AF('l',struct A705,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcjcIdCjc<C>JL} */
#pragma pack(push,8)
struct A706 { I m0; c m1; j m2; c m3; I m4; d m5; C m6; j m7; c m8; union A527 m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA706(const struct A706 *x, const struct A706 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA527(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA706() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A706));
		AF('I',struct A706,m0,1)
		AF('c',struct A706,m1,1)
		AF('j',struct A706,m2,1)
		AF('c',struct A706,m3,1)
		AF('I',struct A706,m4,1)
		AF('d',struct A706,m5,1)
		AF('C',struct A706,m6,1)
		AF('j',struct A706,m7,1)
		AF('c',struct A706,m8,1)
		AFa(struct A706,m9,1,A527)
		AF('J',struct A706,m10,1)
		AF('L',struct A706,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IfJB> */
#pragma pack(push,2)
union A707 { I m0; f m1; J m2; B m3; };
#pragma pack(pop)
int f_cmpA707(const union A707 *x, const union A707 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA707() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A707));
		AF('I',union A707,m0,1)
		AF('f',union A707,m1,1)
		AF('J',union A707,m2,1)
		AF('B',union A707,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jpJIJjsfifIs> */
#pragma pack(push,4)
union A708 { j m0; p m1; J m2; I m3; J m4; j m5; s m6; f m7; i m8; f m9; I m10; s m11; };
#pragma pack(pop)
int f_cmpA708(const union A708 *x, const union A708 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA708() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A708));
		AF('j',union A708,m0,1)
		AF('p',union A708,m1,1)
		AF('J',union A708,m2,1)
		AF('I',union A708,m3,1)
		AF('J',union A708,m4,1)
		AF('j',union A708,m5,1)
		AF('s',union A708,m6,1)
		AF('f',union A708,m7,1)
		AF('i',union A708,m8,1)
		AF('f',union A708,m9,1)
		AF('I',union A708,m10,1)
		AF('s',union A708,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jSBIdpsjlBJL> */
#pragma pack(push,8)
union A709 { j m0; S m1; B m2; I m3; d m4; p m5; s m6; j m7; l m8; B m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA709(const union A709 *x, const union A709 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA709() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A709));
		AF('j',union A709,m0,1)
		AF('S',union A709,m1,1)
		AF('B',union A709,m2,1)
		AF('I',union A709,m3,1)
		AF('d',union A709,m4,1)
		AF('p',union A709,m5,1)
		AF('s',union A709,m6,1)
		AF('j',union A709,m7,1)
		AF('l',union A709,m8,1)
		AF('B',union A709,m9,1)
		AF('J',union A709,m10,1)
		AF('L',union A709,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sILLBfCcLslJ> */
#pragma pack(push,4)
union A710 { s m0; I m1; L m2; L m3; B m4; f m5; C m6; c m7; L m8; s m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA710(const union A710 *x, const union A710 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA710() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A710));
		AF('s',union A710,m0,1)
		AF('I',union A710,m1,1)
		AF('L',union A710,m2,1)
		AF('L',union A710,m3,1)
		AF('B',union A710,m4,1)
		AF('f',union A710,m5,1)
		AF('C',union A710,m6,1)
		AF('c',union A710,m7,1)
		AF('L',union A710,m8,1)
		AF('s',union A710,m9,1)
		AF('l',union A710,m10,1)
		AF('J',union A710,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sJILd<jSBIdpsjlBJL>{}[3]<sILLBfCcLslJ>SfB{}} */
#pragma pack(push,8)
struct A711 { s m0; J m1; I m2; L m3; d m4; union A709 m5; struct A24 m6[3]; union A710 m7; S m8; f m9; B m10; struct A24 m11; };
#pragma pack(pop)
int f_cmpA711(const struct A711 *x, const struct A711 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA709(&x->m5, &y->m5) && f_cmpA24(&x->m6[0], &y->m6[0]) && f_cmpA24(&x->m6[1], &y->m6[1]) && f_cmpA24(&x->m6[2], &y->m6[2]) && f_cmpA710(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA24(&x->m11, &y->m11); };
DCaggr* f_touchA711() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A711));
		AF('s',struct A711,m0,1)
		AF('J',struct A711,m1,1)
		AF('I',struct A711,m2,1)
		AF('L',struct A711,m3,1)
		AF('d',struct A711,m4,1)
		AFa(struct A711,m5,1,A709)
		AFa(struct A711,m6,3,A24)
		AFa(struct A711,m7,1,A710)
		AF('S',struct A711,m8,1)
		AF('f',struct A711,m9,1)
		AF('B',struct A711,m10,1)
		AFa(struct A711,m11,1,A24)
		dcCloseAggr(a);
	}
	return a;
};
/* {SdIIppS} */
#pragma pack(push,4)
struct A712 { S m0; d m1; I m2; I m3; p m4; p m5; S m6; };
#pragma pack(pop)
int f_cmpA712(const struct A712 *x, const struct A712 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA712() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A712));
		AF('S',struct A712,m0,1)
		AF('d',struct A712,m1,1)
		AF('I',struct A712,m2,1)
		AF('I',struct A712,m3,1)
		AF('p',struct A712,m4,1)
		AF('p',struct A712,m5,1)
		AF('S',struct A712,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LfISIfjfBicC} */
#pragma pack(push,1)
struct A713 { L m0; f m1; I m2; S m3; I m4; f m5; j m6; f m7; B m8; i m9; c m10; C m11; };
#pragma pack(pop)
int f_cmpA713(const struct A713 *x, const struct A713 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA713() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A713));
		AF('L',struct A713,m0,1)
		AF('f',struct A713,m1,1)
		AF('I',struct A713,m2,1)
		AF('S',struct A713,m3,1)
		AF('I',struct A713,m4,1)
		AF('f',struct A713,m5,1)
		AF('j',struct A713,m6,1)
		AF('f',struct A713,m7,1)
		AF('B',struct A713,m8,1)
		AF('i',struct A713,m9,1)
		AF('c',struct A713,m10,1)
		AF('C',struct A713,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pLcs} */
#pragma pack(push,4)
struct A714 { p m0; L m1; c m2; s m3; };
#pragma pack(pop)
int f_cmpA714(const struct A714 *x, const struct A714 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA714() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A714));
		AF('p',struct A714,m0,1)
		AF('L',struct A714,m1,1)
		AF('c',struct A714,m2,1)
		AF('s',struct A714,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JSlBddCCj{LfISIfjfBicC}S{pLcs}} */
#pragma pack(push,4)
struct A715 { J m0; S m1; l m2; B m3; d m4; d m5; C m6; C m7; j m8; struct A713 m9; S m10; struct A714 m11; };
#pragma pack(pop)
int f_cmpA715(const struct A715 *x, const struct A715 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA713(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA714(&x->m11, &y->m11); };
DCaggr* f_touchA715() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A715));
		AF('J',struct A715,m0,1)
		AF('S',struct A715,m1,1)
		AF('l',struct A715,m2,1)
		AF('B',struct A715,m3,1)
		AF('d',struct A715,m4,1)
		AF('d',struct A715,m5,1)
		AF('C',struct A715,m6,1)
		AF('C',struct A715,m7,1)
		AF('j',struct A715,m8,1)
		AFa(struct A715,m9,1,A713)
		AF('S',struct A715,m10,1)
		AFa(struct A715,m11,1,A714)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpcsiIIiIfC{JSlBddCCj{LfISIfjfBicC}S{pLcs}}} */
#pragma pack(push,2)
struct A716 { f m0; p m1; c m2; s m3; i m4; I m5; I m6; i m7; I m8; f m9; C m10; struct A715 m11; };
#pragma pack(pop)
int f_cmpA716(const struct A716 *x, const struct A716 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA715(&x->m11, &y->m11); };
DCaggr* f_touchA716() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A716));
		AF('f',struct A716,m0,1)
		AF('p',struct A716,m1,1)
		AF('c',struct A716,m2,1)
		AF('s',struct A716,m3,1)
		AF('i',struct A716,m4,1)
		AF('I',struct A716,m5,1)
		AF('I',struct A716,m6,1)
		AF('i',struct A716,m7,1)
		AF('I',struct A716,m8,1)
		AF('f',struct A716,m9,1)
		AF('C',struct A716,m10,1)
		AFa(struct A716,m11,1,A715)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpssLf[6]Ii} */
#pragma pack(push,8)
struct A717 { f m0; p m1; s m2; s m3; L m4; f m5[6]; I m6; i m7; };
#pragma pack(pop)
int f_cmpA717(const struct A717 *x, const struct A717 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA717() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A717));
		AF('f',struct A717,m0,1)
		AF('p',struct A717,m1,1)
		AF('s',struct A717,m2,1)
		AF('s',struct A717,m3,1)
		AF('L',struct A717,m4,1)
		AF('f',struct A717,m5,6)
		AF('I',struct A717,m6,1)
		AF('i',struct A717,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JB[13]} */
#pragma pack(push,1)
struct A718 { J m0; B m1[13]; };
#pragma pack(pop)
int f_cmpA718(const struct A718 *x, const struct A718 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12]; };
DCaggr* f_touchA718() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A718));
		AF('J',struct A718,m0,1)
		AF('B',struct A718,m1,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {B[8]<l>B{JB[13]}fIsBj} */
#pragma pack(push,8)
struct A719 { B m0[8]; union A104 m1; B m2; struct A718 m3; f m4; I m5; s m6; B m7; j m8; };
#pragma pack(pop)
int f_cmpA719(const struct A719 *x, const struct A719 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && f_cmpA104(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA718(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA719() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A719));
		AF('B',struct A719,m0,8)
		AFa(struct A719,m1,1,A104)
		AF('B',struct A719,m2,1)
		AFa(struct A719,m3,1,A718)
		AF('f',struct A719,m4,1)
		AF('I',struct A719,m5,1)
		AF('s',struct A719,m6,1)
		AF('B',struct A719,m7,1)
		AF('j',struct A719,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bffpi[9]J} */
#pragma pack(push,4)
struct A720 { B m0; f m1; f m2; p m3; i m4[9]; J m5; };
#pragma pack(pop)
int f_cmpA720(const struct A720 *x, const struct A720 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m5 == y->m5; };
DCaggr* f_touchA720() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A720));
		AF('B',struct A720,m0,1)
		AF('f',struct A720,m1,1)
		AF('f',struct A720,m2,1)
		AF('p',struct A720,m3,1)
		AF('i',struct A720,m4,9)
		AF('J',struct A720,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dJClCLL[7]dScs{Bffpi[9]J}} */
#pragma pack(push,4)
struct A721 { d m0; J m1; C m2; l m3; C m4; L m5; L m6[7]; d m7; S m8; c m9; s m10; struct A720 m11; };
#pragma pack(pop)
int f_cmpA721(const struct A721 *x, const struct A721 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA720(&x->m11, &y->m11); };
DCaggr* f_touchA721() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A721));
		AF('d',struct A721,m0,1)
		AF('J',struct A721,m1,1)
		AF('C',struct A721,m2,1)
		AF('l',struct A721,m3,1)
		AF('C',struct A721,m4,1)
		AF('L',struct A721,m5,1)
		AF('L',struct A721,m6,7)
		AF('d',struct A721,m7,1)
		AF('S',struct A721,m8,1)
		AF('c',struct A721,m9,1)
		AF('s',struct A721,m10,1)
		AFa(struct A721,m11,1,A720)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCis> */
#pragma pack(push,4)
union A722 { C m0; C m1; i m2; s m3; };
#pragma pack(pop)
int f_cmpA722(const union A722 *x, const union A722 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA722() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A722));
		AF('C',union A722,m0,1)
		AF('C',union A722,m1,1)
		AF('i',union A722,m2,1)
		AF('s',union A722,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SSjcsS[8]L<CCis>L} */
#pragma pack(push,2)
struct A723 { S m0; S m1; j m2; c m3; s m4; S m5[8]; L m6; union A722 m7; L m8; };
#pragma pack(pop)
int f_cmpA723(const struct A723 *x, const struct A723 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m6 == y->m6 && f_cmpA722(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA723() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A723));
		AF('S',struct A723,m0,1)
		AF('S',struct A723,m1,1)
		AF('j',struct A723,m2,1)
		AF('c',struct A723,m3,1)
		AF('s',struct A723,m4,1)
		AF('S',struct A723,m5,8)
		AF('L',struct A723,m6,1)
		AFa(struct A723,m7,1,A722)
		AF('L',struct A723,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IIjCCjSLfCdp} */
#pragma pack(push,2)
struct A724 { I m0; I m1; j m2; C m3; C m4; j m5; S m6; L m7; f m8; C m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA724(const struct A724 *x, const struct A724 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA724() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A724));
		AF('I',struct A724,m0,1)
		AF('I',struct A724,m1,1)
		AF('j',struct A724,m2,1)
		AF('C',struct A724,m3,1)
		AF('C',struct A724,m4,1)
		AF('j',struct A724,m5,1)
		AF('S',struct A724,m6,1)
		AF('L',struct A724,m7,1)
		AF('f',struct A724,m8,1)
		AF('C',struct A724,m9,1)
		AF('d',struct A724,m10,1)
		AF('p',struct A724,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cBi[4]cdlSJdSSp> */
#pragma pack(push,2)
union A725 { c m0; B m1; i m2[4]; c m3; d m4; l m5; S m6; J m7; d m8; S m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA725(const union A725 *x, const union A725 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA725() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A725));
		AF('c',union A725,m0,1)
		AF('B',union A725,m1,1)
		AF('i',union A725,m2,4)
		AF('c',union A725,m3,1)
		AF('d',union A725,m4,1)
		AF('l',union A725,m5,1)
		AF('S',union A725,m6,1)
		AF('J',union A725,m7,1)
		AF('d',union A725,m8,1)
		AF('S',union A725,m9,1)
		AF('S',union A725,m10,1)
		AF('p',union A725,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {idiL[2]lcJcfSId} */
#pragma pack(push,8)
struct A726 { i m0; d m1; i m2; L m3[2]; l m4; c m5; J m6; c m7; f m8; S m9; I m10; d m11; };
#pragma pack(pop)
int f_cmpA726(const struct A726 *x, const struct A726 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA726() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A726));
		AF('i',struct A726,m0,1)
		AF('d',struct A726,m1,1)
		AF('i',struct A726,m2,1)
		AF('L',struct A726,m3,2)
		AF('l',struct A726,m4,1)
		AF('c',struct A726,m5,1)
		AF('J',struct A726,m6,1)
		AF('c',struct A726,m7,1)
		AF('f',struct A726,m8,1)
		AF('S',struct A726,m9,1)
		AF('I',struct A726,m10,1)
		AF('d',struct A726,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCs<cBi[4]cdlSJdSSp>[8]{idiL[2]lcJcfSId}SsjCLjj} */
#pragma pack(push,4)
struct A727 { d m0; C m1; s m2; union A725 m3[8]; struct A726 m4; S m5; s m6; j m7; C m8; L m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA727(const struct A727 *x, const struct A727 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA725(&x->m3[0], &y->m3[0]) && f_cmpA725(&x->m3[1], &y->m3[1]) && f_cmpA725(&x->m3[2], &y->m3[2]) && f_cmpA725(&x->m3[3], &y->m3[3]) && f_cmpA725(&x->m3[4], &y->m3[4]) && f_cmpA725(&x->m3[5], &y->m3[5]) && f_cmpA725(&x->m3[6], &y->m3[6]) && f_cmpA725(&x->m3[7], &y->m3[7]) && f_cmpA726(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA727() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A727));
		AF('d',struct A727,m0,1)
		AF('C',struct A727,m1,1)
		AF('s',struct A727,m2,1)
		AFa(struct A727,m3,8,A725)
		AFa(struct A727,m4,1,A726)
		AF('S',struct A727,m5,1)
		AF('s',struct A727,m6,1)
		AF('j',struct A727,m7,1)
		AF('C',struct A727,m8,1)
		AF('L',struct A727,m9,1)
		AF('j',struct A727,m10,1)
		AF('j',struct A727,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlsiLcJJjSf} */
#pragma pack(push,2)
struct A728 { S m0; l m1; s m2; i m3; L m4; c m5; J m6; J m7; j m8; S m9; f m10; };
#pragma pack(pop)
int f_cmpA728(const struct A728 *x, const struct A728 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA728() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A728));
		AF('S',struct A728,m0,1)
		AF('l',struct A728,m1,1)
		AF('s',struct A728,m2,1)
		AF('i',struct A728,m3,1)
		AF('L',struct A728,m4,1)
		AF('c',struct A728,m5,1)
		AF('J',struct A728,m6,1)
		AF('J',struct A728,m7,1)
		AF('j',struct A728,m8,1)
		AF('S',struct A728,m9,1)
		AF('f',struct A728,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LiLJciScl} */
#pragma pack(push,1)
struct A729 { L m0; i m1; L m2; J m3; c m4; i m5; S m6; c m7; l m8; };
#pragma pack(pop)
int f_cmpA729(const struct A729 *x, const struct A729 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA729() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A729));
		AF('L',struct A729,m0,1)
		AF('i',struct A729,m1,1)
		AF('L',struct A729,m2,1)
		AF('J',struct A729,m3,1)
		AF('c',struct A729,m4,1)
		AF('i',struct A729,m5,1)
		AF('S',struct A729,m6,1)
		AF('c',struct A729,m7,1)
		AF('l',struct A729,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CpiC> */
#pragma pack(push,4)
union A730 { C m0; p m1; i m2; C m3; };
#pragma pack(pop)
int f_cmpA730(const union A730 *x, const union A730 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA730() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A730));
		AF('C',union A730,m0,1)
		AF('p',union A730,m1,1)
		AF('i',union A730,m2,1)
		AF('C',union A730,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j{LiLJciScl}c<CpiC>} */
#pragma pack(push,4)
struct A731 { j m0; struct A729 m1; c m2; union A730 m3; };
#pragma pack(pop)
int f_cmpA731(const struct A731 *x, const struct A731 *y) { return x->m0 == y->m0 && f_cmpA729(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA730(&x->m3, &y->m3); };
DCaggr* f_touchA731() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A731));
		AF('j',struct A731,m0,1)
		AFa(struct A731,m1,1,A729)
		AF('c',struct A731,m2,1)
		AFa(struct A731,m3,1,A730)
		dcCloseAggr(a);
	}
	return a;
};
/* <d[1]fJj> */
#pragma pack(push,8)
union A732 { d m0[1]; f m1; J m2; j m3; };
#pragma pack(pop)
int f_cmpA732(const union A732 *x, const union A732 *y) { return x->m0[0] == y->m0[0] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA732() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A732));
		AF('d',union A732,m0,1)
		AF('f',union A732,m1,1)
		AF('J',union A732,m2,1)
		AF('j',union A732,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jjSlBSjBlff<d[1]fJj>} */
#pragma pack(push,4)
struct A733 { j m0; j m1; S m2; l m3; B m4; S m5; j m6; B m7; l m8; f m9; f m10; union A732 m11; };
#pragma pack(pop)
int f_cmpA733(const struct A733 *x, const struct A733 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA732(&x->m11, &y->m11); };
DCaggr* f_touchA733() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A733));
		AF('j',struct A733,m0,1)
		AF('j',struct A733,m1,1)
		AF('S',struct A733,m2,1)
		AF('l',struct A733,m3,1)
		AF('B',struct A733,m4,1)
		AF('S',struct A733,m5,1)
		AF('j',struct A733,m6,1)
		AF('B',struct A733,m7,1)
		AF('l',struct A733,m8,1)
		AF('f',struct A733,m9,1)
		AF('f',struct A733,m10,1)
		AFa(struct A733,m11,1,A732)
		dcCloseAggr(a);
	}
	return a;
};
/* <diJjCidlslIs> */
#pragma pack(push,4)
union A734 { d m0; i m1; J m2; j m3; C m4; i m5; d m6; l m7; s m8; l m9; I m10; s m11; };
#pragma pack(pop)
int f_cmpA734(const union A734 *x, const union A734 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA734() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A734));
		AF('d',union A734,m0,1)
		AF('i',union A734,m1,1)
		AF('J',union A734,m2,1)
		AF('j',union A734,m3,1)
		AF('C',union A734,m4,1)
		AF('i',union A734,m5,1)
		AF('d',union A734,m6,1)
		AF('l',union A734,m7,1)
		AF('s',union A734,m8,1)
		AF('l',union A734,m9,1)
		AF('I',union A734,m10,1)
		AF('s',union A734,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BdIIcdjsdBBd} */
#pragma pack(push,4)
struct A735 { B m0; d m1; I m2; I m3; c m4; d m5; j m6; s m7; d m8; B m9; B m10; d m11; };
#pragma pack(pop)
int f_cmpA735(const struct A735 *x, const struct A735 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA735() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A735));
		AF('B',struct A735,m0,1)
		AF('d',struct A735,m1,1)
		AF('I',struct A735,m2,1)
		AF('I',struct A735,m3,1)
		AF('c',struct A735,m4,1)
		AF('d',struct A735,m5,1)
		AF('j',struct A735,m6,1)
		AF('s',struct A735,m7,1)
		AF('d',struct A735,m8,1)
		AF('B',struct A735,m9,1)
		AF('B',struct A735,m10,1)
		AF('d',struct A735,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <slSSCc{BdIIcdjsdBBd}iJ[4]fIp> */
#pragma pack(push,4)
union A736 { s m0; l m1; S m2; S m3; C m4; c m5; struct A735 m6; i m7; J m8[4]; f m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA736(const union A736 *x, const union A736 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA735(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA736() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A736));
		AF('s',union A736,m0,1)
		AF('l',union A736,m1,1)
		AF('S',union A736,m2,1)
		AF('S',union A736,m3,1)
		AF('C',union A736,m4,1)
		AF('c',union A736,m5,1)
		AFa(union A736,m6,1,A735)
		AF('i',union A736,m7,1)
		AF('J',union A736,m8,4)
		AF('f',union A736,m9,1)
		AF('I',union A736,m10,1)
		AF('p',union A736,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBddiCsJpCl<slSSCc{BdIIcdjsdBBd}iJ[4]fIp>} */
#pragma pack(push,4)
struct A737 { S m0; B m1; d m2; d m3; i m4; C m5; s m6; J m7; p m8; C m9; l m10; union A736 m11; };
#pragma pack(pop)
int f_cmpA737(const struct A737 *x, const struct A737 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA736(&x->m11, &y->m11); };
DCaggr* f_touchA737() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A737));
		AF('S',struct A737,m0,1)
		AF('B',struct A737,m1,1)
		AF('d',struct A737,m2,1)
		AF('d',struct A737,m3,1)
		AF('i',struct A737,m4,1)
		AF('C',struct A737,m5,1)
		AF('s',struct A737,m6,1)
		AF('J',struct A737,m7,1)
		AF('p',struct A737,m8,1)
		AF('C',struct A737,m9,1)
		AF('l',struct A737,m10,1)
		AFa(struct A737,m11,1,A736)
		dcCloseAggr(a);
	}
	return a;
};
/* <cs> */
#pragma pack(push,4)
union A738 { c m0; s m1; };
#pragma pack(pop)
int f_cmpA738(const union A738 *x, const union A738 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA738() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A738));
		AF('c',union A738,m0,1)
		AF('s',union A738,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{p}sB} */
#pragma pack(push,1)
struct A739 { struct A230 m0; s m1; B m2; };
#pragma pack(pop)
int f_cmpA739(const struct A739 *x, const struct A739 *y) { return f_cmpA230(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA739() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A739));
		AFa(struct A739,m0,1,A230)
		AF('s',struct A739,m1,1)
		AF('B',struct A739,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {s} */
#pragma pack(push,4)
struct A740 { s m0; };
#pragma pack(pop)
int f_cmpA740(const struct A740 *x, const struct A740 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA740() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A740));
		AF('s',struct A740,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIBCciciIs} */
#pragma pack(push,8)
struct A741 { f m0; I m1; B m2; C m3; c m4; i m5; c m6; i m7; I m8; s m9; };
#pragma pack(pop)
int f_cmpA741(const struct A741 *x, const struct A741 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA741() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A741));
		AF('f',struct A741,m0,1)
		AF('I',struct A741,m1,1)
		AF('B',struct A741,m2,1)
		AF('C',struct A741,m3,1)
		AF('c',struct A741,m4,1)
		AF('i',struct A741,m5,1)
		AF('c',struct A741,m6,1)
		AF('i',struct A741,m7,1)
		AF('I',struct A741,m8,1)
		AF('s',struct A741,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cdc> */
#pragma pack(push,8)
union A742 { C m0; d m1; c m2; };
#pragma pack(pop)
int f_cmpA742(const union A742 *x, const union A742 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA742() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A742));
		AF('C',union A742,m0,1)
		AF('d',union A742,m1,1)
		AF('c',union A742,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d[15]CjII<Cdc>i[13]CjfsL> */
#pragma pack(push,2)
union A743 { d m0[15]; C m1; j m2; I m3; I m4; union A742 m5; i m6[13]; C m7; j m8; f m9; s m10; L m11; };
#pragma pack(pop)
int f_cmpA743(const union A743 *x, const union A743 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA742(&x->m5, &y->m5) && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m6[12] == y->m6[12] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA743() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A743));
		AF('d',union A743,m0,15)
		AF('C',union A743,m1,1)
		AF('j',union A743,m2,1)
		AF('I',union A743,m3,1)
		AF('I',union A743,m4,1)
		AFa(union A743,m5,1,A742)
		AF('i',union A743,m6,13)
		AF('C',union A743,m7,1)
		AF('j',union A743,m8,1)
		AF('f',union A743,m9,1)
		AF('s',union A743,m10,1)
		AF('L',union A743,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CB[9]pJlSIc> */
#pragma pack(push,1)
union A744 { C m0; B m1[9]; p m2; J m3; l m4; S m5; I m6; c m7; };
#pragma pack(pop)
int f_cmpA744(const union A744 *x, const union A744 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA744() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A744));
		AF('C',union A744,m0,1)
		AF('B',union A744,m1,9)
		AF('p',union A744,m2,1)
		AF('J',union A744,m3,1)
		AF('l',union A744,m4,1)
		AF('S',union A744,m5,1)
		AF('I',union A744,m6,1)
		AF('c',union A744,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBsLilBcppSI> */
#pragma pack(push,2)
union A745 { B m0; B m1; s m2; L m3; i m4; l m5; B m6; c m7; p m8; p m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA745(const union A745 *x, const union A745 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA745() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A745));
		AF('B',union A745,m0,1)
		AF('B',union A745,m1,1)
		AF('s',union A745,m2,1)
		AF('L',union A745,m3,1)
		AF('i',union A745,m4,1)
		AF('l',union A745,m5,1)
		AF('B',union A745,m6,1)
		AF('c',union A745,m7,1)
		AF('p',union A745,m8,1)
		AF('p',union A745,m9,1)
		AF('S',union A745,m10,1)
		AF('I',union A745,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBSSSpSfsp[6]ii> */
#pragma pack(push,4)
union A746 { B m0; B m1; S m2; S m3; S m4; p m5; S m6; f m7; s m8; p m9[6]; i m10; i m11; };
#pragma pack(pop)
int f_cmpA746(const union A746 *x, const union A746 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA746() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A746));
		AF('B',union A746,m0,1)
		AF('B',union A746,m1,1)
		AF('S',union A746,m2,1)
		AF('S',union A746,m3,1)
		AF('S',union A746,m4,1)
		AF('p',union A746,m5,1)
		AF('S',union A746,m6,1)
		AF('f',union A746,m7,1)
		AF('s',union A746,m8,1)
		AF('p',union A746,m9,6)
		AF('i',union A746,m10,1)
		AF('i',union A746,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcJjlfljJiCl> */
#pragma pack(push,2)
union A747 { B m0; c m1; J m2; j m3; l m4; f m5; l m6; j m7; J m8; i m9; C m10; l m11; };
#pragma pack(pop)
int f_cmpA747(const union A747 *x, const union A747 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA747() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A747));
		AF('B',union A747,m0,1)
		AF('c',union A747,m1,1)
		AF('J',union A747,m2,1)
		AF('j',union A747,m3,1)
		AF('l',union A747,m4,1)
		AF('f',union A747,m5,1)
		AF('l',union A747,m6,1)
		AF('j',union A747,m7,1)
		AF('J',union A747,m8,1)
		AF('i',union A747,m9,1)
		AF('C',union A747,m10,1)
		AF('l',union A747,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dfpSjS} */
#pragma pack(push,2)
struct A748 { d m0; f m1; p m2; S m3; j m4; S m5; };
#pragma pack(pop)
int f_cmpA748(const struct A748 *x, const struct A748 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA748() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A748));
		AF('d',struct A748,m0,1)
		AF('f',struct A748,m1,1)
		AF('p',struct A748,m2,1)
		AF('S',struct A748,m3,1)
		AF('j',struct A748,m4,1)
		AF('S',struct A748,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sClcd<BcJjlfljJiCl>iclc{dfpSjS}J> */
#pragma pack(push,8)
union A749 { s m0; C m1; l m2; c m3; d m4; union A747 m5; i m6; c m7; l m8; c m9; struct A748 m10; J m11; };
#pragma pack(pop)
int f_cmpA749(const union A749 *x, const union A749 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA747(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA748(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA749() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A749));
		AF('s',union A749,m0,1)
		AF('C',union A749,m1,1)
		AF('l',union A749,m2,1)
		AF('c',union A749,m3,1)
		AF('d',union A749,m4,1)
		AFa(union A749,m5,1,A747)
		AF('i',union A749,m6,1)
		AF('c',union A749,m7,1)
		AF('l',union A749,m8,1)
		AF('c',union A749,m9,1)
		AFa(union A749,m10,1,A748)
		AF('J',union A749,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iCSd<BBSSSpSfsp[6]ii><sClcd<BcJjlfljJiCl>iclc{dfpSjS}J>j[11]c> */
#pragma pack(push,2)
union A750 { i m0; C m1; S m2; d m3; union A746 m4; union A749 m5; j m6[11]; c m7; };
#pragma pack(pop)
int f_cmpA750(const union A750 *x, const union A750 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA746(&x->m4, &y->m4) && f_cmpA749(&x->m5, &y->m5) && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m7 == y->m7; };
DCaggr* f_touchA750() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A750));
		AF('i',union A750,m0,1)
		AF('C',union A750,m1,1)
		AF('S',union A750,m2,1)
		AF('d',union A750,m3,1)
		AFa(union A750,m4,1,A746)
		AFa(union A750,m5,1,A749)
		AF('j',union A750,m6,11)
		AF('c',union A750,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CSJpsf[3]SIdC[5]jc> */
#pragma pack(push,4)
union A751 { C m0; S m1; J m2; p m3; s m4; f m5[3]; S m6; I m7; d m8; C m9[5]; j m10; c m11; };
#pragma pack(pop)
int f_cmpA751(const union A751 *x, const union A751 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA751() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A751));
		AF('C',union A751,m0,1)
		AF('S',union A751,m1,1)
		AF('J',union A751,m2,1)
		AF('p',union A751,m3,1)
		AF('s',union A751,m4,1)
		AF('f',union A751,m5,3)
		AF('S',union A751,m6,1)
		AF('I',union A751,m7,1)
		AF('d',union A751,m8,1)
		AF('C',union A751,m9,5)
		AF('j',union A751,m10,1)
		AF('c',union A751,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LpipS> */
#pragma pack(push,4)
union A752 { L m0; p m1; i m2; p m3; S m4; };
#pragma pack(pop)
int f_cmpA752(const union A752 *x, const union A752 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA752() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A752));
		AF('L',union A752,m0,1)
		AF('p',union A752,m1,1)
		AF('i',union A752,m2,1)
		AF('p',union A752,m3,1)
		AF('S',union A752,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CcBd> */
#pragma pack(push,1)
union A753 { C m0; c m1; B m2; d m3; };
#pragma pack(pop)
int f_cmpA753(const union A753 *x, const union A753 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA753() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A753));
		AF('C',union A753,m0,1)
		AF('c',union A753,m1,1)
		AF('B',union A753,m2,1)
		AF('d',union A753,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <c<CSJpsf[3]SIdC[5]jc>pJls<LpipS>S{i}dB<CcBd>> */
#pragma pack(push,1)
union A754 { c m0; union A751 m1; p m2; J m3; l m4; s m5; union A752 m6; S m7; struct A47 m8; d m9; B m10; union A753 m11; };
#pragma pack(pop)
int f_cmpA754(const union A754 *x, const union A754 *y) { return x->m0 == y->m0 && f_cmpA751(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA752(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA47(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA753(&x->m11, &y->m11); };
DCaggr* f_touchA754() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A754));
		AF('c',union A754,m0,1)
		AFa(union A754,m1,1,A751)
		AF('p',union A754,m2,1)
		AF('J',union A754,m3,1)
		AF('l',union A754,m4,1)
		AF('s',union A754,m5,1)
		AFa(union A754,m6,1,A752)
		AF('S',union A754,m7,1)
		AFa(union A754,m8,1,A47)
		AF('d',union A754,m9,1)
		AF('B',union A754,m10,1)
		AFa(union A754,m11,1,A753)
		dcCloseAggr(a);
	}
	return a;
};
/* <<L>> */
#pragma pack(push,4)
union A755 { union A160 m0; };
#pragma pack(pop)
int f_cmpA755(const union A755 *x, const union A755 *y) { return f_cmpA160(&x->m0, &y->m0); };
DCaggr* f_touchA755() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A755));
		AFa(union A755,m0,1,A160)
		dcCloseAggr(a);
	}
	return a;
};
/* <dfpjpc<c<CSJpsf[3]SIdC[5]jc>pJls<LpipS>S{i}dB<CcBd>>Sf<<L>>C> */
#pragma pack(push,2)
union A756 { d m0; f m1; p m2; j m3; p m4; c m5; union A754 m6; S m7; f m8; union A755 m9; C m10; };
#pragma pack(pop)
int f_cmpA756(const union A756 *x, const union A756 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA754(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA755(&x->m9, &y->m9) && x->m10 == y->m10; };
DCaggr* f_touchA756() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A756));
		AF('d',union A756,m0,1)
		AF('f',union A756,m1,1)
		AF('p',union A756,m2,1)
		AF('j',union A756,m3,1)
		AF('p',union A756,m4,1)
		AF('c',union A756,m5,1)
		AFa(union A756,m6,1,A754)
		AF('S',union A756,m7,1)
		AF('f',union A756,m8,1)
		AFa(union A756,m9,1,A755)
		AF('C',union A756,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jIpfCCcfdBLp> */
#pragma pack(push,8)
union A757 { j m0; I m1; p m2; f m3; C m4; C m5; c m6; f m7; d m8; B m9; L m10; p m11; };
#pragma pack(pop)
int f_cmpA757(const union A757 *x, const union A757 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA757() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A757));
		AF('j',union A757,m0,1)
		AF('I',union A757,m1,1)
		AF('p',union A757,m2,1)
		AF('f',union A757,m3,1)
		AF('C',union A757,m4,1)
		AF('C',union A757,m5,1)
		AF('c',union A757,m6,1)
		AF('f',union A757,m7,1)
		AF('d',union A757,m8,1)
		AF('B',union A757,m9,1)
		AF('L',union A757,m10,1)
		AF('p',union A757,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LppdILdJdifS> */
#pragma pack(push,2)
union A758 { L m0; p m1; p m2; d m3; I m4; L m5; d m6; J m7; d m8; i m9; f m10; S m11; };
#pragma pack(pop)
int f_cmpA758(const union A758 *x, const union A758 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA758() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A758));
		AF('L',union A758,m0,1)
		AF('p',union A758,m1,1)
		AF('p',union A758,m2,1)
		AF('d',union A758,m3,1)
		AF('I',union A758,m4,1)
		AF('L',union A758,m5,1)
		AF('d',union A758,m6,1)
		AF('J',union A758,m7,1)
		AF('d',union A758,m8,1)
		AF('i',union A758,m9,1)
		AF('f',union A758,m10,1)
		AF('S',union A758,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lBCcIS[8]<LppdILdJdifS>> */
#pragma pack(push,2)
union A759 { l m0; B m1; C m2; c m3; I m4; S m5[8]; union A758 m6; };
#pragma pack(pop)
int f_cmpA759(const union A759 *x, const union A759 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && f_cmpA758(&x->m6, &y->m6); };
DCaggr* f_touchA759() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A759));
		AF('l',union A759,m0,1)
		AF('B',union A759,m1,1)
		AF('C',union A759,m2,1)
		AF('c',union A759,m3,1)
		AF('I',union A759,m4,1)
		AF('S',union A759,m5,8)
		AFa(union A759,m6,1,A758)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSJ<lBCcIS[8]<LppdILdJdifS>>} */
#pragma pack(push,1)
struct A760 { d m0; S m1; J m2; union A759 m3; };
#pragma pack(pop)
int f_cmpA760(const struct A760 *x, const struct A760 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA759(&x->m3, &y->m3); };
DCaggr* f_touchA760() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A760));
		AF('d',struct A760,m0,1)
		AF('S',struct A760,m1,1)
		AF('J',struct A760,m2,1)
		AFa(struct A760,m3,1,A759)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBdI> */
#pragma pack(push,1)
union A761 { B m0; B m1; d m2; I m3; };
#pragma pack(pop)
int f_cmpA761(const union A761 *x, const union A761 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA761() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A761));
		AF('B',union A761,m0,1)
		AF('B',union A761,m1,1)
		AF('d',union A761,m2,1)
		AF('I',union A761,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsLsIjJslCBC> */
#pragma pack(push,8)
union A762 { S m0; s m1; L m2; s m3; I m4; j m5; J m6; s m7; l m8; C m9; B m10; C m11; };
#pragma pack(pop)
int f_cmpA762(const union A762 *x, const union A762 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA762() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A762));
		AF('S',union A762,m0,1)
		AF('s',union A762,m1,1)
		AF('L',union A762,m2,1)
		AF('s',union A762,m3,1)
		AF('I',union A762,m4,1)
		AF('j',union A762,m5,1)
		AF('J',union A762,m6,1)
		AF('s',union A762,m7,1)
		AF('l',union A762,m8,1)
		AF('C',union A762,m9,1)
		AF('B',union A762,m10,1)
		AF('C',union A762,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pI[5]jifpcfsIfl> */
#pragma pack(push,1)
union A763 { p m0; I m1[5]; j m2; i m3; f m4; p m5; c m6; f m7; s m8; I m9; f m10; l m11; };
#pragma pack(pop)
int f_cmpA763(const union A763 *x, const union A763 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA763() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A763));
		AF('p',union A763,m0,1)
		AF('I',union A763,m1,5)
		AF('j',union A763,m2,1)
		AF('i',union A763,m3,1)
		AF('f',union A763,m4,1)
		AF('p',union A763,m5,1)
		AF('c',union A763,m6,1)
		AF('f',union A763,m7,1)
		AF('s',union A763,m8,1)
		AF('I',union A763,m9,1)
		AF('f',union A763,m10,1)
		AF('l',union A763,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CfLCjLdsJcLi} */
#pragma pack(push,4)
struct A764 { C m0; f m1; L m2; C m3; j m4; L m5; d m6; s m7; J m8; c m9; L m10; i m11; };
#pragma pack(pop)
int f_cmpA764(const struct A764 *x, const struct A764 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA764() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A764));
		AF('C',struct A764,m0,1)
		AF('f',struct A764,m1,1)
		AF('L',struct A764,m2,1)
		AF('C',struct A764,m3,1)
		AF('j',struct A764,m4,1)
		AF('L',struct A764,m5,1)
		AF('d',struct A764,m6,1)
		AF('s',struct A764,m7,1)
		AF('J',struct A764,m8,1)
		AF('c',struct A764,m9,1)
		AF('L',struct A764,m10,1)
		AF('i',struct A764,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Idjd[13]IfpIifcI[2]> */
#pragma pack(push,4)
union A765 { I m0; d m1; j m2; d m3[13]; I m4; f m5; p m6; I m7; i m8; f m9; c m10; I m11[2]; };
#pragma pack(pop)
int f_cmpA765(const union A765 *x, const union A765 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1]; };
DCaggr* f_touchA765() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A765));
		AF('I',union A765,m0,1)
		AF('d',union A765,m1,1)
		AF('j',union A765,m2,1)
		AF('d',union A765,m3,13)
		AF('I',union A765,m4,1)
		AF('f',union A765,m5,1)
		AF('p',union A765,m6,1)
		AF('I',union A765,m7,1)
		AF('i',union A765,m8,1)
		AF('f',union A765,m9,1)
		AF('c',union A765,m10,1)
		AF('I',union A765,m11,2)
		dcCloseAggr(a);
	}
	return a;
};
/* <p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl> */
#pragma pack(push,4)
union A766 { p m0; union A763 m1; struct A764 m2; union A765 m3; f m4; f m5; i m6; d m7; j m8; f m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA766(const union A766 *x, const union A766 *y) { return x->m0 == y->m0 && f_cmpA763(&x->m1, &y->m1) && f_cmpA764(&x->m2, &y->m2) && f_cmpA765(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA766() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A766));
		AF('p',union A766,m0,1)
		AFa(union A766,m1,1,A763)
		AFa(union A766,m2,1,A764)
		AFa(union A766,m3,1,A765)
		AF('f',union A766,m4,1)
		AF('f',union A766,m5,1)
		AF('i',union A766,m6,1)
		AF('d',union A766,m7,1)
		AF('j',union A766,m8,1)
		AF('f',union A766,m9,1)
		AF('L',union A766,m10,1)
		AF('l',union A766,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jlfcJpi} */
#pragma pack(push,2)
struct A767 { j m0; l m1; f m2; c m3; J m4; p m5; i m6; };
#pragma pack(pop)
int f_cmpA767(const struct A767 *x, const struct A767 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA767() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A767));
		AF('j',struct A767,m0,1)
		AF('l',struct A767,m1,1)
		AF('f',struct A767,m2,1)
		AF('c',struct A767,m3,1)
		AF('J',struct A767,m4,1)
		AF('p',struct A767,m5,1)
		AF('i',struct A767,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JfflBIdjcjjc} */
#pragma pack(push,2)
struct A768 { J m0; f m1; f m2; l m3; B m4; I m5; d m6; j m7; c m8; j m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA768(const struct A768 *x, const struct A768 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA768() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A768));
		AF('J',struct A768,m0,1)
		AF('f',struct A768,m1,1)
		AF('f',struct A768,m2,1)
		AF('l',struct A768,m3,1)
		AF('B',struct A768,m4,1)
		AF('I',struct A768,m5,1)
		AF('d',struct A768,m6,1)
		AF('j',struct A768,m7,1)
		AF('c',struct A768,m8,1)
		AF('j',struct A768,m9,1)
		AF('j',struct A768,m10,1)
		AF('c',struct A768,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BpdJppipssfC} */
#pragma pack(push,8)
struct A769 { B m0; p m1; d m2; J m3; p m4; p m5; i m6; p m7; s m8; s m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA769(const struct A769 *x, const struct A769 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA769() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A769));
		AF('B',struct A769,m0,1)
		AF('p',struct A769,m1,1)
		AF('d',struct A769,m2,1)
		AF('J',struct A769,m3,1)
		AF('p',struct A769,m4,1)
		AF('p',struct A769,m5,1)
		AF('i',struct A769,m6,1)
		AF('p',struct A769,m7,1)
		AF('s',struct A769,m8,1)
		AF('s',struct A769,m9,1)
		AF('f',struct A769,m10,1)
		AF('C',struct A769,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{BpdJppipssfC}C{}BBcdJijd{}} */
#pragma pack(push,4)
struct A770 { struct A769 m0; C m1; struct A24 m2; B m3; B m4; c m5; d m6; J m7; i m8; j m9; d m10; struct A24 m11; };
#pragma pack(pop)
int f_cmpA770(const struct A770 *x, const struct A770 *y) { return f_cmpA769(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA24(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA24(&x->m11, &y->m11); };
DCaggr* f_touchA770() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A770));
		AFa(struct A770,m0,1,A769)
		AF('C',struct A770,m1,1)
		AFa(struct A770,m2,1,A24)
		AF('B',struct A770,m3,1)
		AF('B',struct A770,m4,1)
		AF('c',struct A770,m5,1)
		AF('d',struct A770,m6,1)
		AF('J',struct A770,m7,1)
		AF('i',struct A770,m8,1)
		AF('j',struct A770,m9,1)
		AF('d',struct A770,m10,1)
		AFa(struct A770,m11,1,A24)
		dcCloseAggr(a);
	}
	return a;
};
/* <iflJICpcSCfj> */
#pragma pack(push,4)
union A771 { i m0; f m1; l m2; J m3; I m4; C m5; p m6; c m7; S m8; C m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA771(const union A771 *x, const union A771 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA771() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A771));
		AF('i',union A771,m0,1)
		AF('f',union A771,m1,1)
		AF('l',union A771,m2,1)
		AF('J',union A771,m3,1)
		AF('I',union A771,m4,1)
		AF('C',union A771,m5,1)
		AF('p',union A771,m6,1)
		AF('c',union A771,m7,1)
		AF('S',union A771,m8,1)
		AF('C',union A771,m9,1)
		AF('f',union A771,m10,1)
		AF('j',union A771,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<iflJICpcSCfj>jCs} */
#pragma pack(push,8)
struct A772 { union A771 m0; j m1; C m2; s m3; };
#pragma pack(pop)
int f_cmpA772(const struct A772 *x, const struct A772 *y) { return f_cmpA771(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA772() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A772));
		AFa(struct A772,m0,1,A771)
		AF('j',struct A772,m1,1)
		AF('C',struct A772,m2,1)
		AF('s',struct A772,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdIB} */
#pragma pack(push,2)
struct A773 { j m0; d m1; I m2; B m3; };
#pragma pack(pop)
int f_cmpA773(const struct A773 *x, const struct A773 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA773() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A773));
		AF('j',struct A773,m0,1)
		AF('d',struct A773,m1,1)
		AF('I',struct A773,m2,1)
		AF('B',struct A773,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jjJCpJJJ} */
#pragma pack(push,2)
struct A774 { j m0; j m1; J m2; C m3; p m4; J m5; J m6; J m7; };
#pragma pack(pop)
int f_cmpA774(const struct A774 *x, const struct A774 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA774() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A774));
		AF('j',struct A774,m0,1)
		AF('j',struct A774,m1,1)
		AF('J',struct A774,m2,1)
		AF('C',struct A774,m3,1)
		AF('p',struct A774,m4,1)
		AF('J',struct A774,m5,1)
		AF('J',struct A774,m6,1)
		AF('J',struct A774,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SC[11]s[7]IpssJ} */
#pragma pack(push,8)
struct A775 { S m0; C m1[11]; s m2[7]; I m3; p m4; s m5; s m6; J m7; };
#pragma pack(pop)
int f_cmpA775(const struct A775 *x, const struct A775 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA775() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A775));
		AF('S',struct A775,m0,1)
		AF('C',struct A775,m1,11)
		AF('s',struct A775,m2,7)
		AF('I',struct A775,m3,1)
		AF('p',struct A775,m4,1)
		AF('s',struct A775,m5,1)
		AF('s',struct A775,m6,1)
		AF('J',struct A775,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ld{SC[11]s[7]IpssJ}sBsjSf[14]fCB> */
#pragma pack(push,4)
union A776 { L m0; d m1; struct A775 m2; s m3; B m4; s m5; j m6; S m7; f m8[14]; f m9; C m10; B m11; };
#pragma pack(pop)
int f_cmpA776(const union A776 *x, const union A776 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA775(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA776() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A776));
		AF('L',union A776,m0,1)
		AF('d',union A776,m1,1)
		AFa(union A776,m2,1,A775)
		AF('s',union A776,m3,1)
		AF('B',union A776,m4,1)
		AF('s',union A776,m5,1)
		AF('j',union A776,m6,1)
		AF('S',union A776,m7,1)
		AF('f',union A776,m8,14)
		AF('f',union A776,m9,1)
		AF('C',union A776,m10,1)
		AF('B',union A776,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JLilSC> */
#pragma pack(push,1)
union A777 { J m0; L m1; i m2; l m3; S m4; C m5; };
#pragma pack(pop)
int f_cmpA777(const union A777 *x, const union A777 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA777() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A777));
		AF('J',union A777,m0,1)
		AF('L',union A777,m1,1)
		AF('i',union A777,m2,1)
		AF('l',union A777,m3,1)
		AF('S',union A777,m4,1)
		AF('C',union A777,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SJf<JLilSC>cBsfJi> */
#pragma pack(push,2)
union A778 { S m0; J m1; f m2; union A777 m3; c m4; B m5; s m6; f m7; J m8; i m9; };
#pragma pack(pop)
int f_cmpA778(const union A778 *x, const union A778 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA777(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA778() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A778));
		AF('S',union A778,m0,1)
		AF('J',union A778,m1,1)
		AF('f',union A778,m2,1)
		AFa(union A778,m3,1,A777)
		AF('c',union A778,m4,1)
		AF('B',union A778,m5,1)
		AF('s',union A778,m6,1)
		AF('f',union A778,m7,1)
		AF('J',union A778,m8,1)
		AF('i',union A778,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pLscS<SJf<JLilSC>cBsfJi>lpplSc> */
#pragma pack(push,4)
union A779 { p m0; L m1; s m2; c m3; S m4; union A778 m5; l m6; p m7; p m8; l m9; S m10; c m11; };
#pragma pack(pop)
int f_cmpA779(const union A779 *x, const union A779 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA778(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA779() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A779));
		AF('p',union A779,m0,1)
		AF('L',union A779,m1,1)
		AF('s',union A779,m2,1)
		AF('c',union A779,m3,1)
		AF('S',union A779,m4,1)
		AFa(union A779,m5,1,A778)
		AF('l',union A779,m6,1)
		AF('p',union A779,m7,1)
		AF('p',union A779,m8,1)
		AF('l',union A779,m9,1)
		AF('S',union A779,m10,1)
		AF('c',union A779,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pjC> */
#pragma pack(push,8)
union A780 { p m0; j m1; C m2; };
#pragma pack(pop)
int f_cmpA780(const union A780 *x, const union A780 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA780() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A780));
		AF('p',union A780,m0,1)
		AF('j',union A780,m1,1)
		AF('C',union A780,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJfJd} */
#pragma pack(push,4)
struct A781 { p m0; J m1; f m2; J m3; d m4; };
#pragma pack(pop)
int f_cmpA781(const struct A781 *x, const struct A781 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA781() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A781));
		AF('p',struct A781,m0,1)
		AF('J',struct A781,m1,1)
		AF('f',struct A781,m2,1)
		AF('J',struct A781,m3,1)
		AF('d',struct A781,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j{pJfJd}cL<>lJJ} */
#pragma pack(push,4)
struct A782 { j m0; struct A781 m1; c m2; L m3; union A30 m4; l m5; J m6; J m7; };
#pragma pack(pop)
int f_cmpA782(const struct A782 *x, const struct A782 *y) { return x->m0 == y->m0 && f_cmpA781(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA30(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA782() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A782));
		AF('j',struct A782,m0,1)
		AFa(struct A782,m1,1,A781)
		AF('c',struct A782,m2,1)
		AF('L',struct A782,m3,1)
		AFa(struct A782,m4,1,A30)
		AF('l',struct A782,m5,1)
		AF('J',struct A782,m6,1)
		AF('J',struct A782,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CiCBfJLSJjLc} */
#pragma pack(push,4)
struct A783 { C m0; i m1; C m2; B m3; f m4; J m5; L m6; S m7; J m8; j m9; L m10; c m11; };
#pragma pack(pop)
int f_cmpA783(const struct A783 *x, const struct A783 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA783() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A783));
		AF('C',struct A783,m0,1)
		AF('i',struct A783,m1,1)
		AF('C',struct A783,m2,1)
		AF('B',struct A783,m3,1)
		AF('f',struct A783,m4,1)
		AF('J',struct A783,m5,1)
		AF('L',struct A783,m6,1)
		AF('S',struct A783,m7,1)
		AF('J',struct A783,m8,1)
		AF('j',struct A783,m9,1)
		AF('L',struct A783,m10,1)
		AF('c',struct A783,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SC} */
#pragma pack(push,4)
struct A784 { S m0; C m1; };
#pragma pack(pop)
int f_cmpA784(const struct A784 *x, const struct A784 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA784() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A784));
		AF('S',struct A784,m0,1)
		AF('C',struct A784,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBlssJJS{SC}djS> */
#pragma pack(push,4)
union A785 { p m0; B m1; l m2; s m3; s m4; J m5; J m6; S m7; struct A784 m8; d m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA785(const union A785 *x, const union A785 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA784(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA785() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A785));
		AF('p',union A785,m0,1)
		AF('B',union A785,m1,1)
		AF('l',union A785,m2,1)
		AF('s',union A785,m3,1)
		AF('s',union A785,m4,1)
		AF('J',union A785,m5,1)
		AF('J',union A785,m6,1)
		AF('S',union A785,m7,1)
		AFa(union A785,m8,1,A784)
		AF('d',union A785,m9,1)
		AF('j',union A785,m10,1)
		AF('S',union A785,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fiiiC[15]cSiJSBJ} */
#pragma pack(push,1)
struct A786 { f m0; i m1; i m2; i m3; C m4[15]; c m5; S m6; i m7; J m8; S m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA786(const struct A786 *x, const struct A786 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m4[14] == y->m4[14] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA786() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A786));
		AF('f',struct A786,m0,1)
		AF('i',struct A786,m1,1)
		AF('i',struct A786,m2,1)
		AF('i',struct A786,m3,1)
		AF('C',struct A786,m4,15)
		AF('c',struct A786,m5,1)
		AF('S',struct A786,m6,1)
		AF('i',struct A786,m7,1)
		AF('J',struct A786,m8,1)
		AF('S',struct A786,m9,1)
		AF('B',struct A786,m10,1)
		AF('J',struct A786,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bf{fiiiC[15]cSiJSBJ}lcfs> */
#pragma pack(push,4)
union A787 { B m0; f m1; struct A786 m2; l m3; c m4; f m5; s m6; };
#pragma pack(pop)
int f_cmpA787(const union A787 *x, const union A787 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA786(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA787() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A787));
		AF('B',union A787,m0,1)
		AF('f',union A787,m1,1)
		AFa(union A787,m2,1,A786)
		AF('l',union A787,m3,1)
		AF('c',union A787,m4,1)
		AF('f',union A787,m5,1)
		AF('s',union A787,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JijCilIscp} */
#pragma pack(push,4)
struct A788 { J m0; i m1; j m2; C m3; i m4; l m5; I m6; s m7; c m8; p m9; };
#pragma pack(pop)
int f_cmpA788(const struct A788 *x, const struct A788 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA788() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A788));
		AF('J',struct A788,m0,1)
		AF('i',struct A788,m1,1)
		AF('j',struct A788,m2,1)
		AF('C',struct A788,m3,1)
		AF('i',struct A788,m4,1)
		AF('l',struct A788,m5,1)
		AF('I',struct A788,m6,1)
		AF('s',struct A788,m7,1)
		AF('c',struct A788,m8,1)
		AF('p',struct A788,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LlCLSL{JijCilIscp}cLJjp> */
#pragma pack(push,2)
union A789 { L m0; l m1; C m2; L m3; S m4; L m5; struct A788 m6; c m7; L m8; J m9; j m10; p m11; };
#pragma pack(pop)
int f_cmpA789(const union A789 *x, const union A789 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA788(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA789() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A789));
		AF('L',union A789,m0,1)
		AF('l',union A789,m1,1)
		AF('C',union A789,m2,1)
		AF('L',union A789,m3,1)
		AF('S',union A789,m4,1)
		AF('L',union A789,m5,1)
		AFa(union A789,m6,1,A788)
		AF('c',union A789,m7,1)
		AF('L',union A789,m8,1)
		AF('J',union A789,m9,1)
		AF('j',union A789,m10,1)
		AF('p',union A789,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf> */
#pragma pack(push,8)
union A790 { union A785 m0; J m1; S m2; f m3; L m4; union A787 m5; union A789 m6; J m7; d m8; d m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA790(const union A790 *x, const union A790 *y) { return f_cmpA785(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA787(&x->m5, &y->m5) && f_cmpA789(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA790() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A790));
		AFa(union A790,m0,1,A785)
		AF('J',union A790,m1,1)
		AF('S',union A790,m2,1)
		AF('f',union A790,m3,1)
		AF('L',union A790,m4,1)
		AFa(union A790,m5,1,A787)
		AFa(union A790,m6,1,A789)
		AF('J',union A790,m7,1)
		AF('d',union A790,m8,1)
		AF('d',union A790,m9,1)
		AF('C',union A790,m10,1)
		AF('f',union A790,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlJfjl[3]l[12]Lcj[4]dj> */
#pragma pack(push,4)
union A791 { I m0; l m1; J m2; f m3; j m4; l m5[3]; l m6[12]; L m7; c m8; j m9[4]; d m10; j m11; };
#pragma pack(pop)
int f_cmpA791(const union A791 *x, const union A791 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m6[10] == y->m6[10] && x->m6[11] == y->m6[11] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA791() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A791));
		AF('I',union A791,m0,1)
		AF('l',union A791,m1,1)
		AF('J',union A791,m2,1)
		AF('f',union A791,m3,1)
		AF('j',union A791,m4,1)
		AF('l',union A791,m5,3)
		AF('l',union A791,m6,12)
		AF('L',union A791,m7,1)
		AF('c',union A791,m8,1)
		AF('j',union A791,m9,4)
		AF('d',union A791,m10,1)
		AF('j',union A791,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IJjCfiLiSJpd} */
#pragma pack(push,4)
struct A792 { I m0; J m1; j m2; C m3; f m4; i m5; L m6; i m7; S m8; J m9; p m10; d m11; };
#pragma pack(pop)
int f_cmpA792(const struct A792 *x, const struct A792 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA792() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A792));
		AF('I',struct A792,m0,1)
		AF('J',struct A792,m1,1)
		AF('j',struct A792,m2,1)
		AF('C',struct A792,m3,1)
		AF('f',struct A792,m4,1)
		AF('i',struct A792,m5,1)
		AF('L',struct A792,m6,1)
		AF('i',struct A792,m7,1)
		AF('S',struct A792,m8,1)
		AF('J',struct A792,m9,1)
		AF('p',struct A792,m10,1)
		AF('d',struct A792,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BCjJpCfIsI{IJjCfiLiSJpd}J> */
#pragma pack(push,8)
union A793 { B m0; C m1; j m2; J m3; p m4; C m5; f m6; I m7; s m8; I m9; struct A792 m10; J m11; };
#pragma pack(pop)
int f_cmpA793(const union A793 *x, const union A793 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA792(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA793() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A793));
		AF('B',union A793,m0,1)
		AF('C',union A793,m1,1)
		AF('j',union A793,m2,1)
		AF('J',union A793,m3,1)
		AF('p',union A793,m4,1)
		AF('C',union A793,m5,1)
		AF('f',union A793,m6,1)
		AF('I',union A793,m7,1)
		AF('s',union A793,m8,1)
		AF('I',union A793,m9,1)
		AFa(union A793,m10,1,A792)
		AF('J',union A793,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cdIsiLcjfd> */
#pragma pack(push,4)
union A794 { c m0; d m1; I m2; s m3; i m4; L m5; c m6; j m7; f m8; d m9; };
#pragma pack(pop)
int f_cmpA794(const union A794 *x, const union A794 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA794() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A794));
		AF('c',union A794,m0,1)
		AF('d',union A794,m1,1)
		AF('I',union A794,m2,1)
		AF('s',union A794,m3,1)
		AF('i',union A794,m4,1)
		AF('L',union A794,m5,1)
		AF('c',union A794,m6,1)
		AF('j',union A794,m7,1)
		AF('f',union A794,m8,1)
		AF('d',union A794,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[8]cs<cdIsiLcjfd>} */
#pragma pack(push,2)
struct A795 { d m0[8]; c m1; s m2; union A794 m3; };
#pragma pack(pop)
int f_cmpA795(const struct A795 *x, const struct A795 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA794(&x->m3, &y->m3); };
DCaggr* f_touchA795() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A795));
		AF('d',struct A795,m0,8)
		AF('c',struct A795,m1,1)
		AF('s',struct A795,m2,1)
		AFa(struct A795,m3,1,A794)
		dcCloseAggr(a);
	}
	return a;
};
/* {jdidf{d[8]cs<cdIsiLcjfd>}SJJB[9]id} */
#pragma pack(push,4)
struct A796 { j m0; d m1; i m2; d m3; f m4; struct A795 m5; S m6; J m7; J m8; B m9[9]; i m10; d m11; };
#pragma pack(pop)
int f_cmpA796(const struct A796 *x, const struct A796 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA795(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA796() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A796));
		AF('j',struct A796,m0,1)
		AF('d',struct A796,m1,1)
		AF('i',struct A796,m2,1)
		AF('d',struct A796,m3,1)
		AF('f',struct A796,m4,1)
		AFa(struct A796,m5,1,A795)
		AF('S',struct A796,m6,1)
		AF('J',struct A796,m7,1)
		AF('J',struct A796,m8,1)
		AF('B',struct A796,m9,9)
		AF('i',struct A796,m10,1)
		AF('d',struct A796,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SCpjidISjlfB> */
#pragma pack(push,8)
union A797 { S m0; C m1; p m2; j m3; i m4; d m5; I m6; S m7; j m8; l m9; f m10; B m11; };
#pragma pack(pop)
int f_cmpA797(const union A797 *x, const union A797 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA797() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A797));
		AF('S',union A797,m0,1)
		AF('C',union A797,m1,1)
		AF('p',union A797,m2,1)
		AF('j',union A797,m3,1)
		AF('i',union A797,m4,1)
		AF('d',union A797,m5,1)
		AF('I',union A797,m6,1)
		AF('S',union A797,m7,1)
		AF('j',union A797,m8,1)
		AF('l',union A797,m9,1)
		AF('f',union A797,m10,1)
		AF('B',union A797,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L[12]IJBsfCljCBL} */
#pragma pack(push,4)
struct A798 { L m0[12]; I m1; J m2; B m3; s m4; f m5; C m6; l m7; j m8; C m9; B m10; L m11; };
#pragma pack(pop)
int f_cmpA798(const struct A798 *x, const struct A798 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA798() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A798));
		AF('L',struct A798,m0,12)
		AF('I',struct A798,m1,1)
		AF('J',struct A798,m2,1)
		AF('B',struct A798,m3,1)
		AF('s',struct A798,m4,1)
		AF('f',struct A798,m5,1)
		AF('C',struct A798,m6,1)
		AF('l',struct A798,m7,1)
		AF('j',struct A798,m8,1)
		AF('C',struct A798,m9,1)
		AF('B',struct A798,m10,1)
		AF('L',struct A798,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JCllicLCCIJj> */
#pragma pack(push,4)
union A799 { J m0; C m1; l m2; l m3; i m4; c m5; L m6; C m7; C m8; I m9; J m10; j m11; };
#pragma pack(pop)
int f_cmpA799(const union A799 *x, const union A799 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA799() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A799));
		AF('J',union A799,m0,1)
		AF('C',union A799,m1,1)
		AF('l',union A799,m2,1)
		AF('l',union A799,m3,1)
		AF('i',union A799,m4,1)
		AF('c',union A799,m5,1)
		AF('L',union A799,m6,1)
		AF('C',union A799,m7,1)
		AF('C',union A799,m8,1)
		AF('I',union A799,m9,1)
		AF('J',union A799,m10,1)
		AF('j',union A799,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SjiCCj> */
#pragma pack(push,8)
union A800 { S m0; j m1; i m2; C m3; C m4; j m5; };
#pragma pack(pop)
int f_cmpA800(const union A800 *x, const union A800 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA800() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A800));
		AF('S',union A800,m0,1)
		AF('j',union A800,m1,1)
		AF('i',union A800,m2,1)
		AF('C',union A800,m3,1)
		AF('C',union A800,m4,1)
		AF('j',union A800,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LIBsBifSJSIL} */
#pragma pack(push,8)
struct A801 { L m0; I m1; B m2; s m3; B m4; i m5; f m6; S m7; J m8; S m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA801(const struct A801 *x, const struct A801 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA801() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A801));
		AF('L',struct A801,m0,1)
		AF('I',struct A801,m1,1)
		AF('B',struct A801,m2,1)
		AF('s',struct A801,m3,1)
		AF('B',struct A801,m4,1)
		AF('i',struct A801,m5,1)
		AF('f',struct A801,m6,1)
		AF('S',struct A801,m7,1)
		AF('J',struct A801,m8,1)
		AF('S',struct A801,m9,1)
		AF('I',struct A801,m10,1)
		AF('L',struct A801,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dfjjBp} */
#pragma pack(push,4)
struct A802 { d m0; f m1; j m2; j m3; B m4; p m5; };
#pragma pack(pop)
int f_cmpA802(const struct A802 *x, const struct A802 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA802() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A802));
		AF('d',struct A802,m0,1)
		AF('f',struct A802,m1,1)
		AF('j',struct A802,m2,1)
		AF('j',struct A802,m3,1)
		AF('B',struct A802,m4,1)
		AF('p',struct A802,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<SjiCCj>Jil{LIBsBifSJSIL}iCi{dfjjBp}> */
#pragma pack(push,8)
union A803 { union A800 m0; J m1; i m2; l m3; struct A801 m4; i m5; C m6; i m7; struct A802 m8; };
#pragma pack(pop)
int f_cmpA803(const union A803 *x, const union A803 *y) { return f_cmpA800(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA801(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA802(&x->m8, &y->m8); };
DCaggr* f_touchA803() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A803));
		AFa(union A803,m0,1,A800)
		AF('J',union A803,m1,1)
		AF('i',union A803,m2,1)
		AF('l',union A803,m3,1)
		AFa(union A803,m4,1,A801)
		AF('i',union A803,m5,1)
		AF('C',union A803,m6,1)
		AF('i',union A803,m7,1)
		AFa(union A803,m8,1,A802)
		dcCloseAggr(a);
	}
	return a;
};
/* {sIcjBiCJfcjL} */
#pragma pack(push,2)
struct A804 { s m0; I m1; c m2; j m3; B m4; i m5; C m6; J m7; f m8; c m9; j m10; L m11; };
#pragma pack(pop)
int f_cmpA804(const struct A804 *x, const struct A804 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA804() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A804));
		AF('s',struct A804,m0,1)
		AF('I',struct A804,m1,1)
		AF('c',struct A804,m2,1)
		AF('j',struct A804,m3,1)
		AF('B',struct A804,m4,1)
		AF('i',struct A804,m5,1)
		AF('C',struct A804,m6,1)
		AF('J',struct A804,m7,1)
		AF('f',struct A804,m8,1)
		AF('c',struct A804,m9,1)
		AF('j',struct A804,m10,1)
		AF('L',struct A804,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LICfSS> */
#pragma pack(push,4)
union A805 { L m0; I m1; C m2; f m3; S m4; S m5; };
#pragma pack(pop)
int f_cmpA805(const union A805 *x, const union A805 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA805() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A805));
		AF('L',union A805,m0,1)
		AF('I',union A805,m1,1)
		AF('C',union A805,m2,1)
		AF('f',union A805,m3,1)
		AF('S',union A805,m4,1)
		AF('S',union A805,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl> */
#pragma pack(push,8)
union A806 { B m0; d m1; S m2; l m3; I m4; j m5; L m6; struct A804 m7; union A805 m8; j m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA806(const union A806 *x, const union A806 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA804(&x->m7, &y->m7) && f_cmpA805(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA806() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A806));
		AF('B',union A806,m0,1)
		AF('d',union A806,m1,1)
		AF('S',union A806,m2,1)
		AF('l',union A806,m3,1)
		AF('I',union A806,m4,1)
		AF('j',union A806,m5,1)
		AF('L',union A806,m6,1)
		AFa(union A806,m7,1,A804)
		AFa(union A806,m8,1,A805)
		AF('j',union A806,m9,1)
		AF('c',union A806,m10,1)
		AF('l',union A806,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IlLppBSpiCpp} */
#pragma pack(push,4)
struct A807 { I m0; l m1; L m2; p m3; p m4; B m5; S m6; p m7; i m8; C m9; p m10; p m11; };
#pragma pack(pop)
int f_cmpA807(const struct A807 *x, const struct A807 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA807() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A807));
		AF('I',struct A807,m0,1)
		AF('l',struct A807,m1,1)
		AF('L',struct A807,m2,1)
		AF('p',struct A807,m3,1)
		AF('p',struct A807,m4,1)
		AF('B',struct A807,m5,1)
		AF('S',struct A807,m6,1)
		AF('p',struct A807,m7,1)
		AF('i',struct A807,m8,1)
		AF('C',struct A807,m9,1)
		AF('p',struct A807,m10,1)
		AF('p',struct A807,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{IlLppBSpiCpp}> */
#pragma pack(push,4)
union A808 { struct A807 m0; };
#pragma pack(pop)
int f_cmpA808(const union A808 *x, const union A808 *y) { return f_cmpA807(&x->m0, &y->m0); };
DCaggr* f_touchA808() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A808));
		AFa(union A808,m0,1,A807)
		dcCloseAggr(a);
	}
	return a;
};
/* <cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd> */
#pragma pack(push,1)
union A809 { c m0; j m1; s m2; J m3; union A806 m4; L m5; union A808 m6; p m7; L m8; L m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA809(const union A809 *x, const union A809 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA806(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA808(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA809() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A809));
		AF('c',union A809,m0,1)
		AF('j',union A809,m1,1)
		AF('s',union A809,m2,1)
		AF('J',union A809,m3,1)
		AFa(union A809,m4,1,A806)
		AF('L',union A809,m5,1)
		AFa(union A809,m6,1,A808)
		AF('p',union A809,m7,1)
		AF('L',union A809,m8,1)
		AF('L',union A809,m9,1)
		AF('s',union A809,m10,1)
		AF('d',union A809,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdsIICSBlijj> */
#pragma pack(push,4)
union A810 { I m0; d m1; s m2; I m3; I m4; C m5; S m6; B m7; l m8; i m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA810(const union A810 *x, const union A810 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA810() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A810));
		AF('I',union A810,m0,1)
		AF('d',union A810,m1,1)
		AF('s',union A810,m2,1)
		AF('I',union A810,m3,1)
		AF('I',union A810,m4,1)
		AF('C',union A810,m5,1)
		AF('S',union A810,m6,1)
		AF('B',union A810,m7,1)
		AF('l',union A810,m8,1)
		AF('i',union A810,m9,1)
		AF('j',union A810,m10,1)
		AF('j',union A810,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfS[4]} */
#pragma pack(push,4)
struct A811 { c m0; f m1; S m2[4]; };
#pragma pack(pop)
int f_cmpA811(const struct A811 *x, const struct A811 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3]; };
DCaggr* f_touchA811() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A811));
		AF('c',struct A811,m0,1)
		AF('f',struct A811,m1,1)
		AF('S',struct A811,m2,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <fcjdI> */
#pragma pack(push,4)
union A812 { f m0; c m1; j m2; d m3; I m4; };
#pragma pack(pop)
int f_cmpA812(const union A812 *x, const union A812 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA812() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A812));
		AF('f',union A812,m0,1)
		AF('c',union A812,m1,1)
		AF('j',union A812,m2,1)
		AF('d',union A812,m3,1)
		AF('I',union A812,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C[15]BBi[5]IISIII<fcjdI>J> */
#pragma pack(push,2)
union A813 { C m0[15]; B m1; B m2; i m3[5]; I m4; I m5; S m6; I m7; I m8; I m9; union A812 m10; J m11; };
#pragma pack(pop)
int f_cmpA813(const union A813 *x, const union A813 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA812(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA813() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A813));
		AF('C',union A813,m0,15)
		AF('B',union A813,m1,1)
		AF('B',union A813,m2,1)
		AF('i',union A813,m3,5)
		AF('I',union A813,m4,1)
		AF('I',union A813,m5,1)
		AF('S',union A813,m6,1)
		AF('I',union A813,m7,1)
		AF('I',union A813,m8,1)
		AF('I',union A813,m9,1)
		AFa(union A813,m10,1,A812)
		AF('J',union A813,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <csjdjsJcL[4]cfJ> */
#pragma pack(push,2)
union A814 { c m0; s m1; j m2; d m3; j m4; s m5; J m6; c m7; L m8[4]; c m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA814(const union A814 *x, const union A814 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA814() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A814));
		AF('c',union A814,m0,1)
		AF('s',union A814,m1,1)
		AF('j',union A814,m2,1)
		AF('d',union A814,m3,1)
		AF('j',union A814,m4,1)
		AF('s',union A814,m5,1)
		AF('J',union A814,m6,1)
		AF('c',union A814,m7,1)
		AF('L',union A814,m8,4)
		AF('c',union A814,m9,1)
		AF('f',union A814,m10,1)
		AF('J',union A814,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJ[9]sdfIlsjjLL} */
#pragma pack(push,8)
struct A815 { p m0; J m1[9]; s m2; d m3; f m4; I m5; l m6; s m7; j m8; j m9; L m10; L m11; };
#pragma pack(pop)
int f_cmpA815(const struct A815 *x, const struct A815 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA815() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A815));
		AF('p',struct A815,m0,1)
		AF('J',struct A815,m1,9)
		AF('s',struct A815,m2,1)
		AF('d',struct A815,m3,1)
		AF('f',struct A815,m4,1)
		AF('I',struct A815,m5,1)
		AF('l',struct A815,m6,1)
		AF('s',struct A815,m7,1)
		AF('j',struct A815,m8,1)
		AF('j',struct A815,m9,1)
		AF('L',struct A815,m10,1)
		AF('L',struct A815,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sfBfjSc[2]pcJBf} */
#pragma pack(push,4)
struct A816 { s m0; f m1; B m2; f m3; j m4; S m5; c m6[2]; p m7; c m8; J m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA816(const struct A816 *x, const struct A816 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA816() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A816));
		AF('s',struct A816,m0,1)
		AF('f',struct A816,m1,1)
		AF('B',struct A816,m2,1)
		AF('f',struct A816,m3,1)
		AF('j',struct A816,m4,1)
		AF('S',struct A816,m5,1)
		AF('c',struct A816,m6,2)
		AF('p',struct A816,m7,1)
		AF('c',struct A816,m8,1)
		AF('J',struct A816,m9,1)
		AF('B',struct A816,m10,1)
		AF('f',struct A816,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC> */
#pragma pack(push,2)
union A817 { union A814 m0; C m1; struct A815 m2; S m3; L m4; L m5; s m6; struct A816 m7; J m8; p m9; s m10; C m11; };
#pragma pack(pop)
int f_cmpA817(const union A817 *x, const union A817 *y) { return f_cmpA814(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA815(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA816(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA817() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A817));
		AFa(union A817,m0,1,A814)
		AF('C',union A817,m1,1)
		AFa(union A817,m2,1,A815)
		AF('S',union A817,m3,1)
		AF('L',union A817,m4,1)
		AF('L',union A817,m5,1)
		AF('s',union A817,m6,1)
		AFa(union A817,m7,1,A816)
		AF('J',union A817,m8,1)
		AF('p',union A817,m9,1)
		AF('s',union A817,m10,1)
		AF('C',union A817,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lfJLcSSc} */
#pragma pack(push,4)
struct A818 { l m0; f m1; J m2; L m3; c m4; S m5; S m6; c m7; };
#pragma pack(pop)
int f_cmpA818(const struct A818 *x, const struct A818 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA818() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A818));
		AF('l',struct A818,m0,1)
		AF('f',struct A818,m1,1)
		AF('J',struct A818,m2,1)
		AF('L',struct A818,m3,1)
		AF('c',struct A818,m4,1)
		AF('S',struct A818,m5,1)
		AF('S',struct A818,m6,1)
		AF('c',struct A818,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{lfJLcSSc}> */
#pragma pack(push,2)
union A819 { struct A818 m0; };
#pragma pack(pop)
int f_cmpA819(const union A819 *x, const union A819 *y) { return f_cmpA818(&x->m0, &y->m0); };
DCaggr* f_touchA819() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(union A819));
		AFa(union A819,m0,1,A818)
		dcCloseAggr(a);
	}
	return a;
};
/* {iisBScjSscJ[4]l} */
#pragma pack(push,4)
struct A820 { i m0; i m1; s m2; B m3; S m4; c m5; j m6; S m7; s m8; c m9; J m10[4]; l m11; };
#pragma pack(pop)
int f_cmpA820(const struct A820 *x, const struct A820 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA820() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A820));
		AF('i',struct A820,m0,1)
		AF('i',struct A820,m1,1)
		AF('s',struct A820,m2,1)
		AF('B',struct A820,m3,1)
		AF('S',struct A820,m4,1)
		AF('c',struct A820,m5,1)
		AF('j',struct A820,m6,1)
		AF('S',struct A820,m7,1)
		AF('s',struct A820,m8,1)
		AF('c',struct A820,m9,1)
		AF('J',struct A820,m10,4)
		AF('l',struct A820,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIjsfCjldsBf> */
#pragma pack(push,4)
union A821 { p m0; I m1; j m2; s m3; f m4; C m5; j m6; l m7; d m8; s m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA821(const union A821 *x, const union A821 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA821() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A821));
		AF('p',union A821,m0,1)
		AF('I',union A821,m1,1)
		AF('j',union A821,m2,1)
		AF('s',union A821,m3,1)
		AF('f',union A821,m4,1)
		AF('C',union A821,m5,1)
		AF('j',union A821,m6,1)
		AF('l',union A821,m7,1)
		AF('d',union A821,m8,1)
		AF('s',union A821,m9,1)
		AF('B',union A821,m10,1)
		AF('f',union A821,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cCic<pIjsfCjldsBf>s[7]j> */
#pragma pack(push,4)
union A822 { c m0; C m1; i m2; c m3; union A821 m4; s m5[7]; j m6; };
#pragma pack(pop)
int f_cmpA822(const union A822 *x, const union A822 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA821(&x->m4, &y->m4) && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m6 == y->m6; };
DCaggr* f_touchA822() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A822));
		AF('c',union A822,m0,1)
		AF('C',union A822,m1,1)
		AF('i',union A822,m2,1)
		AF('c',union A822,m3,1)
		AFa(union A822,m4,1,A821)
		AF('s',union A822,m5,7)
		AF('j',union A822,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iB> */
#pragma pack(push,2)
union A823 { i m0; B m1; };
#pragma pack(pop)
int f_cmpA823(const union A823 *x, const union A823 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA823() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A823));
		AF('i',union A823,m0,1)
		AF('B',union A823,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sLlIC> */
#pragma pack(push,4)
union A824 { s m0; L m1; l m2; I m3; C m4; };
#pragma pack(pop)
int f_cmpA824(const union A824 *x, const union A824 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA824() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A824));
		AF('s',union A824,m0,1)
		AF('L',union A824,m1,1)
		AF('l',union A824,m2,1)
		AF('I',union A824,m3,1)
		AF('C',union A824,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jcfIsICs} */
#pragma pack(push,4)
struct A825 { j m0; c m1; f m2; I m3; s m4; I m5; C m6; s m7; };
#pragma pack(pop)
int f_cmpA825(const struct A825 *x, const struct A825 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA825() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A825));
		AF('j',struct A825,m0,1)
		AF('c',struct A825,m1,1)
		AF('f',struct A825,m2,1)
		AF('I',struct A825,m3,1)
		AF('s',struct A825,m4,1)
		AF('I',struct A825,m5,1)
		AF('C',struct A825,m6,1)
		AF('s',struct A825,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lLlfsdfdCLid> */
#pragma pack(push,4)
union A826 { l m0; L m1; l m2; f m3; s m4; d m5; f m6; d m7; C m8; L m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA826(const union A826 *x, const union A826 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA826() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A826));
		AF('l',union A826,m0,1)
		AF('L',union A826,m1,1)
		AF('l',union A826,m2,1)
		AF('f',union A826,m3,1)
		AF('s',union A826,m4,1)
		AF('d',union A826,m5,1)
		AF('f',union A826,m6,1)
		AF('d',union A826,m7,1)
		AF('C',union A826,m8,1)
		AF('L',union A826,m9,1)
		AF('i',union A826,m10,1)
		AF('d',union A826,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jlps<lLlfsdfdCLid>BJLjCLJ> */
#pragma pack(push,1)
union A827 { j m0; l m1; p m2; s m3; union A826 m4; B m5; J m6; L m7; j m8; C m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA827(const union A827 *x, const union A827 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA826(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA827() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A827));
		AF('j',union A827,m0,1)
		AF('l',union A827,m1,1)
		AF('p',union A827,m2,1)
		AF('s',union A827,m3,1)
		AFa(union A827,m4,1,A826)
		AF('B',union A827,m5,1)
		AF('J',union A827,m6,1)
		AF('L',union A827,m7,1)
		AF('j',union A827,m8,1)
		AF('C',union A827,m9,1)
		AF('L',union A827,m10,1)
		AF('J',union A827,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdBLfpIfCL> */
#pragma pack(push,2)
union A828 { C m0; d m1; B m2; L m3; f m4; p m5; I m6; f m7; C m8; L m9; };
#pragma pack(pop)
int f_cmpA828(const union A828 *x, const union A828 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA828() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A828));
		AF('C',union A828,m0,1)
		AF('d',union A828,m1,1)
		AF('B',union A828,m2,1)
		AF('L',union A828,m3,1)
		AF('f',union A828,m4,1)
		AF('p',union A828,m5,1)
		AF('I',union A828,m6,1)
		AF('f',union A828,m7,1)
		AF('C',union A828,m8,1)
		AF('L',union A828,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dfd} */
#pragma pack(push,1)
struct A829 { d m0; f m1; d m2; };
#pragma pack(pop)
int f_cmpA829(const struct A829 *x, const struct A829 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA829() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A829));
		AF('d',struct A829,m0,1)
		AF('f',struct A829,m1,1)
		AF('d',struct A829,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BS[9]CjcILiJ<CdBLfpIfCL>B{dfd}} */
#pragma pack(push,8)
struct A830 { B m0; S m1[9]; C m2; j m3; c m4; I m5; L m6; i m7; J m8; union A828 m9; B m10; struct A829 m11; };
#pragma pack(pop)
int f_cmpA830(const struct A830 *x, const struct A830 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA828(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA829(&x->m11, &y->m11); };
DCaggr* f_touchA830() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A830));
		AF('B',struct A830,m0,1)
		AF('S',struct A830,m1,9)
		AF('C',struct A830,m2,1)
		AF('j',struct A830,m3,1)
		AF('c',struct A830,m4,1)
		AF('I',struct A830,m5,1)
		AF('L',struct A830,m6,1)
		AF('i',struct A830,m7,1)
		AF('J',struct A830,m8,1)
		AFa(struct A830,m9,1,A828)
		AF('B',struct A830,m10,1)
		AFa(struct A830,m11,1,A829)
		dcCloseAggr(a);
	}
	return a;
};
/* {siilCififLs} */
#pragma pack(push,2)
struct A831 { s m0; i m1; i m2; l m3; C m4; i m5; f m6; i m7; f m8; L m9; s m10; };
#pragma pack(pop)
int f_cmpA831(const struct A831 *x, const struct A831 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA831() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A831));
		AF('s',struct A831,m0,1)
		AF('i',struct A831,m1,1)
		AF('i',struct A831,m2,1)
		AF('l',struct A831,m3,1)
		AF('C',struct A831,m4,1)
		AF('i',struct A831,m5,1)
		AF('f',struct A831,m6,1)
		AF('i',struct A831,m7,1)
		AF('f',struct A831,m8,1)
		AF('L',struct A831,m9,1)
		AF('s',struct A831,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ic} */
#pragma pack(push,1)
struct A832 { i m0; c m1; };
#pragma pack(pop)
int f_cmpA832(const struct A832 *x, const struct A832 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA832() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A832));
		AF('i',struct A832,m0,1)
		AF('c',struct A832,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjJ} */
#pragma pack(push,4)
struct A833 { L m0; j m1; J m2; };
#pragma pack(pop)
int f_cmpA833(const struct A833 *x, const struct A833 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA833() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A833));
		AF('L',struct A833,m0,1)
		AF('j',struct A833,m1,1)
		AF('J',struct A833,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BdJcBi} */
#pragma pack(push,2)
struct A834 { B m0; d m1; J m2; c m3; B m4; i m5; };
#pragma pack(pop)
int f_cmpA834(const struct A834 *x, const struct A834 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA834() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A834));
		AF('B',struct A834,m0,1)
		AF('d',struct A834,m1,1)
		AF('J',struct A834,m2,1)
		AF('c',struct A834,m3,1)
		AF('B',struct A834,m4,1)
		AF('i',struct A834,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sp} */
#pragma pack(push,2)
struct A835 { s m0; p m1; };
#pragma pack(pop)
int f_cmpA835(const struct A835 *x, const struct A835 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA835() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A835));
		AF('s',struct A835,m0,1)
		AF('p',struct A835,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jId{LjJ}ffiS{BdJcBi}B{sp}I> */
#pragma pack(push,4)
union A836 { j m0; I m1; d m2; struct A833 m3; f m4; f m5; i m6; S m7; struct A834 m8; B m9; struct A835 m10; I m11; };
#pragma pack(pop)
int f_cmpA836(const union A836 *x, const union A836 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA833(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA834(&x->m8, &y->m8) && x->m9 == y->m9 && f_cmpA835(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA836() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A836));
		AF('j',union A836,m0,1)
		AF('I',union A836,m1,1)
		AF('d',union A836,m2,1)
		AFa(union A836,m3,1,A833)
		AF('f',union A836,m4,1)
		AF('f',union A836,m5,1)
		AF('i',union A836,m6,1)
		AF('S',union A836,m7,1)
		AFa(union A836,m8,1,A834)
		AF('B',union A836,m9,1)
		AFa(union A836,m10,1,A835)
		AF('I',union A836,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BJIdccIIsISf> */
#pragma pack(push,2)
union A837 { B m0; J m1; I m2; d m3; c m4; c m5; I m6; I m7; s m8; I m9; S m10; f m11; };
#pragma pack(pop)
int f_cmpA837(const union A837 *x, const union A837 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA837() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A837));
		AF('B',union A837,m0,1)
		AF('J',union A837,m1,1)
		AF('I',union A837,m2,1)
		AF('d',union A837,m3,1)
		AF('c',union A837,m4,1)
		AF('c',union A837,m5,1)
		AF('I',union A837,m6,1)
		AF('I',union A837,m7,1)
		AF('s',union A837,m8,1)
		AF('I',union A837,m9,1)
		AF('S',union A837,m10,1)
		AF('f',union A837,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <icisfJffIfCf> */
#pragma pack(push,1)
union A838 { i m0; c m1; i m2; s m3; f m4; J m5; f m6; f m7; I m8; f m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA838(const union A838 *x, const union A838 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA838() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A838));
		AF('i',union A838,m0,1)
		AF('c',union A838,m1,1)
		AF('i',union A838,m2,1)
		AF('s',union A838,m3,1)
		AF('f',union A838,m4,1)
		AF('J',union A838,m5,1)
		AF('f',union A838,m6,1)
		AF('f',union A838,m7,1)
		AF('I',union A838,m8,1)
		AF('f',union A838,m9,1)
		AF('C',union A838,m10,1)
		AF('f',union A838,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <j[7]sl{}cCB<icisfJffIfCf>IcsI> */
#pragma pack(push,2)
union A839 { j m0[7]; s m1; l m2; struct A24 m3; c m4; C m5; B m6; union A838 m7; I m8; c m9; s m10; I m11; };
#pragma pack(pop)
int f_cmpA839(const union A839 *x, const union A839 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA24(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA838(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA839() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A839));
		AF('j',union A839,m0,7)
		AF('s',union A839,m1,1)
		AF('l',union A839,m2,1)
		AFa(union A839,m3,1,A24)
		AF('c',union A839,m4,1)
		AF('C',union A839,m5,1)
		AF('B',union A839,m6,1)
		AFa(union A839,m7,1,A838)
		AF('I',union A839,m8,1)
		AF('c',union A839,m9,1)
		AF('s',union A839,m10,1)
		AF('I',union A839,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LpLCilJCSfJp} */
#pragma pack(push,2)
struct A840 { L m0; p m1; L m2; C m3; i m4; l m5; J m6; C m7; S m8; f m9; J m10; p m11; };
#pragma pack(pop)
int f_cmpA840(const struct A840 *x, const struct A840 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA840() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A840));
		AF('L',struct A840,m0,1)
		AF('p',struct A840,m1,1)
		AF('L',struct A840,m2,1)
		AF('C',struct A840,m3,1)
		AF('i',struct A840,m4,1)
		AF('l',struct A840,m5,1)
		AF('J',struct A840,m6,1)
		AF('C',struct A840,m7,1)
		AF('S',struct A840,m8,1)
		AF('f',struct A840,m9,1)
		AF('J',struct A840,m10,1)
		AF('p',struct A840,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sILC} */
#pragma pack(push,4)
struct A841 { s m0; I m1; L m2; C m3; };
#pragma pack(pop)
int f_cmpA841(const struct A841 *x, const struct A841 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA841() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A841));
		AF('s',struct A841,m0,1)
		AF('I',struct A841,m1,1)
		AF('L',struct A841,m2,1)
		AF('C',struct A841,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{}{LpLCilJCSfJp}iiSfcdccI{sILC}} */
#pragma pack(push,8)
struct A842 { struct A24 m0; struct A840 m1; i m2; i m3; S m4; f m5; c m6; d m7; c m8; c m9; I m10; struct A841 m11; };
#pragma pack(pop)
int f_cmpA842(const struct A842 *x, const struct A842 *y) { return f_cmpA24(&x->m0, &y->m0) && f_cmpA840(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA841(&x->m11, &y->m11); };
DCaggr* f_touchA842() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A842));
		AFa(struct A842,m0,1,A24)
		AFa(struct A842,m1,1,A840)
		AF('i',struct A842,m2,1)
		AF('i',struct A842,m3,1)
		AF('S',struct A842,m4,1)
		AF('f',struct A842,m5,1)
		AF('c',struct A842,m6,1)
		AF('d',struct A842,m7,1)
		AF('c',struct A842,m8,1)
		AF('c',struct A842,m9,1)
		AF('I',struct A842,m10,1)
		AFa(struct A842,m11,1,A841)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cs{{}{LpLCilJCSfJp}iiSfcdccI{sILC}}Bss> */
#pragma pack(push,4)
union A843 { C m0; s m1; struct A842 m2; B m3; s m4; s m5; };
#pragma pack(pop)
int f_cmpA843(const union A843 *x, const union A843 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA842(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA843() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A843));
		AF('C',union A843,m0,1)
		AF('s',union A843,m1,1)
		AFa(union A843,m2,1,A842)
		AF('B',union A843,m3,1)
		AF('s',union A843,m4,1)
		AF('s',union A843,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lJfSppIcSIjl> */
#pragma pack(push,8)
union A844 { l m0; J m1; f m2; S m3; p m4; p m5; I m6; c m7; S m8; I m9; j m10; l m11; };
#pragma pack(pop)
int f_cmpA844(const union A844 *x, const union A844 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA844() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A844));
		AF('l',union A844,m0,1)
		AF('J',union A844,m1,1)
		AF('f',union A844,m2,1)
		AF('S',union A844,m3,1)
		AF('p',union A844,m4,1)
		AF('p',union A844,m5,1)
		AF('I',union A844,m6,1)
		AF('c',union A844,m7,1)
		AF('S',union A844,m8,1)
		AF('I',union A844,m9,1)
		AF('j',union A844,m10,1)
		AF('l',union A844,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IsidcssLIBIc} */
#pragma pack(push,2)
struct A845 { I m0; s m1; i m2; d m3; c m4; s m5; s m6; L m7; I m8; B m9; I m10; c m11; };
#pragma pack(pop)
int f_cmpA845(const struct A845 *x, const struct A845 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA845() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A845));
		AF('I',struct A845,m0,1)
		AF('s',struct A845,m1,1)
		AF('i',struct A845,m2,1)
		AF('d',struct A845,m3,1)
		AF('c',struct A845,m4,1)
		AF('s',struct A845,m5,1)
		AF('s',struct A845,m6,1)
		AF('L',struct A845,m7,1)
		AF('I',struct A845,m8,1)
		AF('B',struct A845,m9,1)
		AF('I',struct A845,m10,1)
		AF('c',struct A845,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldlsCS} */
#pragma pack(push,4)
struct A846 { l m0; d m1; l m2; s m3; C m4; S m5; };
#pragma pack(pop)
int f_cmpA846(const struct A846 *x, const struct A846 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA846() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A846));
		AF('l',struct A846,m0,1)
		AF('d',struct A846,m1,1)
		AF('l',struct A846,m2,1)
		AF('s',struct A846,m3,1)
		AF('C',struct A846,m4,1)
		AF('S',struct A846,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sLdCpsiiflis} */
#pragma pack(push,4)
struct A847 { s m0; L m1; d m2; C m3; p m4; s m5; i m6; i m7; f m8; l m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA847(const struct A847 *x, const struct A847 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA847() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A847));
		AF('s',struct A847,m0,1)
		AF('L',struct A847,m1,1)
		AF('d',struct A847,m2,1)
		AF('C',struct A847,m3,1)
		AF('p',struct A847,m4,1)
		AF('s',struct A847,m5,1)
		AF('i',struct A847,m6,1)
		AF('i',struct A847,m7,1)
		AF('f',struct A847,m8,1)
		AF('l',struct A847,m9,1)
		AF('i',struct A847,m10,1)
		AF('s',struct A847,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BjlpcijfLjpL} */
#pragma pack(push,4)
struct A848 { B m0; j m1; l m2; p m3; c m4; i m5; j m6; f m7; L m8; j m9; p m10; L m11; };
#pragma pack(pop)
int f_cmpA848(const struct A848 *x, const struct A848 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA848() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A848));
		AF('B',struct A848,m0,1)
		AF('j',struct A848,m1,1)
		AF('l',struct A848,m2,1)
		AF('p',struct A848,m3,1)
		AF('c',struct A848,m4,1)
		AF('i',struct A848,m5,1)
		AF('j',struct A848,m6,1)
		AF('f',struct A848,m7,1)
		AF('L',struct A848,m8,1)
		AF('j',struct A848,m9,1)
		AF('p',struct A848,m10,1)
		AF('L',struct A848,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d[13]SsIsJJc} */
#pragma pack(push,2)
struct A849 { d m0[13]; S m1; s m2; I m3; s m4; J m5; J m6; c m7; };
#pragma pack(pop)
int f_cmpA849(const struct A849 *x, const struct A849 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA849() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A849));
		AF('d',struct A849,m0,13)
		AF('S',struct A849,m1,1)
		AF('s',struct A849,m2,1)
		AF('I',struct A849,m3,1)
		AF('s',struct A849,m4,1)
		AF('J',struct A849,m5,1)
		AF('J',struct A849,m6,1)
		AF('c',struct A849,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<lJfSppIcSIjl>{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls{d[13]SsIsJJc}C} */
#pragma pack(push,8)
struct A850 { union A844 m0; struct A845 m1; i m2; p m3; s m4; struct A846 m5; struct A847 m6; struct A848 m7; L m8; s m9; struct A849 m10; C m11; };
#pragma pack(pop)
int f_cmpA850(const struct A850 *x, const struct A850 *y) { return f_cmpA844(&x->m0, &y->m0) && f_cmpA845(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA846(&x->m5, &y->m5) && f_cmpA847(&x->m6, &y->m6) && f_cmpA848(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA849(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA850() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A850));
		AFa(struct A850,m0,1,A844)
		AFa(struct A850,m1,1,A845)
		AF('i',struct A850,m2,1)
		AF('p',struct A850,m3,1)
		AF('s',struct A850,m4,1)
		AFa(struct A850,m5,1,A846)
		AFa(struct A850,m6,1,A847)
		AFa(struct A850,m7,1,A848)
		AF('L',struct A850,m8,1)
		AF('s',struct A850,m9,1)
		AFa(struct A850,m10,1,A849)
		AF('C',struct A850,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fdCpdJIlj> */
#pragma pack(push,2)
union A851 { f m0; d m1; C m2; p m3; d m4; J m5; I m6; l m7; j m8; };
#pragma pack(pop)
int f_cmpA851(const union A851 *x, const union A851 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA851() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A851));
		AF('f',union A851,m0,1)
		AF('d',union A851,m1,1)
		AF('C',union A851,m2,1)
		AF('p',union A851,m3,1)
		AF('d',union A851,m4,1)
		AF('J',union A851,m5,1)
		AF('I',union A851,m6,1)
		AF('l',union A851,m7,1)
		AF('j',union A851,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCLSsd} */
#pragma pack(push,8)
struct A852 { S m0; C m1; L m2; S m3; s m4; d m5; };
#pragma pack(pop)
int f_cmpA852(const struct A852 *x, const struct A852 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA852() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A852));
		AF('S',struct A852,m0,1)
		AF('C',struct A852,m1,1)
		AF('L',struct A852,m2,1)
		AF('S',struct A852,m3,1)
		AF('s',struct A852,m4,1)
		AF('d',struct A852,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <i{SCLSsd}jclSssfClS[9]> */
#pragma pack(push,4)
union A853 { i m0; struct A852 m1; j m2; c m3; l m4; S m5; s m6; s m7; f m8; C m9; l m10; S m11[9]; };
#pragma pack(pop)
int f_cmpA853(const union A853 *x, const union A853 *y) { return x->m0 == y->m0 && f_cmpA852(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6] && x->m11[7] == y->m11[7] && x->m11[8] == y->m11[8]; };
DCaggr* f_touchA853() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A853));
		AF('i',union A853,m0,1)
		AFa(union A853,m1,1,A852)
		AF('j',union A853,m2,1)
		AF('c',union A853,m3,1)
		AF('l',union A853,m4,1)
		AF('S',union A853,m5,1)
		AF('s',union A853,m6,1)
		AF('s',union A853,m7,1)
		AF('f',union A853,m8,1)
		AF('C',union A853,m9,1)
		AF('l',union A853,m10,1)
		AF('S',union A853,m11,9)
		dcCloseAggr(a);
	}
	return a;
};
/* {pSLpi[13]} */
#pragma pack(push,2)
struct A854 { p m0; S m1; L m2; p m3; i m4[13]; };
#pragma pack(pop)
int f_cmpA854(const struct A854 *x, const struct A854 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12]; };
DCaggr* f_touchA854() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A854));
		AF('p',struct A854,m0,1)
		AF('S',struct A854,m1,1)
		AF('L',struct A854,m2,1)
		AF('p',struct A854,m3,1)
		AF('i',struct A854,m4,13)
		dcCloseAggr(a);
	}
	return a;
};
/* {CjplpiBB} */
#pragma pack(push,4)
struct A855 { C m0; j m1; p m2; l m3; p m4; i m5; B m6; B m7; };
#pragma pack(pop)
int f_cmpA855(const struct A855 *x, const struct A855 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA855() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A855));
		AF('C',struct A855,m0,1)
		AF('j',struct A855,m1,1)
		AF('p',struct A855,m2,1)
		AF('l',struct A855,m3,1)
		AF('p',struct A855,m4,1)
		AF('i',struct A855,m5,1)
		AF('B',struct A855,m6,1)
		AF('B',struct A855,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJiJsdsLSsdl> */
#pragma pack(push,2)
union A856 { c m0; J m1; i m2; J m3; s m4; d m5; s m6; L m7; S m8; s m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA856(const union A856 *x, const union A856 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA856() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A856));
		AF('c',union A856,m0,1)
		AF('J',union A856,m1,1)
		AF('i',union A856,m2,1)
		AF('J',union A856,m3,1)
		AF('s',union A856,m4,1)
		AF('d',union A856,m5,1)
		AF('s',union A856,m6,1)
		AF('L',union A856,m7,1)
		AF('S',union A856,m8,1)
		AF('s',union A856,m9,1)
		AF('d',union A856,m10,1)
		AF('l',union A856,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dljLiS} */
#pragma pack(push,4)
struct A857 { d m0; l m1; j m2; L m3; i m4; S m5; };
#pragma pack(pop)
int f_cmpA857(const struct A857 *x, const struct A857 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA857() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A857));
		AF('d',struct A857,m0,1)
		AF('l',struct A857,m1,1)
		AF('j',struct A857,m2,1)
		AF('L',struct A857,m3,1)
		AF('i',struct A857,m4,1)
		AF('S',struct A857,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{CjplpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}JjS} */
#pragma pack(push,4)
struct A858 { struct A855 m0; j m1; s m2; union A856 m3; C m4; c m5; C m6; i m7; struct A857 m8; J m9; j m10; S m11; };
#pragma pack(pop)
int f_cmpA858(const struct A858 *x, const struct A858 *y) { return f_cmpA855(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA856(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA857(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA858() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A858));
		AFa(struct A858,m0,1,A855)
		AF('j',struct A858,m1,1)
		AF('s',struct A858,m2,1)
		AFa(struct A858,m3,1,A856)
		AF('C',struct A858,m4,1)
		AF('c',struct A858,m5,1)
		AF('C',struct A858,m6,1)
		AF('i',struct A858,m7,1)
		AFa(struct A858,m8,1,A857)
		AF('J',struct A858,m9,1)
		AF('j',struct A858,m10,1)
		AF('S',struct A858,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BCjC{{CjplpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}JjS}fjILiJJ} */
#pragma pack(push,4)
struct A859 { B m0; C m1; j m2; C m3; struct A858 m4; f m5; j m6; I m7; L m8; i m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA859(const struct A859 *x, const struct A859 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA858(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA859() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A859));
		AF('B',struct A859,m0,1)
		AF('C',struct A859,m1,1)
		AF('j',struct A859,m2,1)
		AF('C',struct A859,m3,1)
		AFa(struct A859,m4,1,A858)
		AF('f',struct A859,m5,1)
		AF('j',struct A859,m6,1)
		AF('I',struct A859,m7,1)
		AF('L',struct A859,m8,1)
		AF('i',struct A859,m9,1)
		AF('J',struct A859,m10,1)
		AF('J',struct A859,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CBC} */
#pragma pack(push,4)
struct A860 { C m0; B m1; C m2; };
#pragma pack(pop)
int f_cmpA860(const struct A860 *x, const struct A860 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA860() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A860));
		AF('C',struct A860,m0,1)
		AF('B',struct A860,m1,1)
		AF('C',struct A860,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CspdsjL} */
#pragma pack(push,4)
struct A861 { C m0; s m1; p m2; d m3; s m4; j m5; L m6; };
#pragma pack(pop)
int f_cmpA861(const struct A861 *x, const struct A861 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA861() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A861));
		AF('C',struct A861,m0,1)
		AF('s',struct A861,m1,1)
		AF('p',struct A861,m2,1)
		AF('d',struct A861,m3,1)
		AF('s',struct A861,m4,1)
		AF('j',struct A861,m5,1)
		AF('L',struct A861,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lL[6]sIIcLC{CBC}jS{CspdsjL}} */
#pragma pack(push,8)
struct A862 { l m0; L m1[6]; s m2; I m3; I m4; c m5; L m6; C m7; struct A860 m8; j m9; S m10; struct A861 m11; };
#pragma pack(pop)
int f_cmpA862(const struct A862 *x, const struct A862 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA860(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA861(&x->m11, &y->m11); };
DCaggr* f_touchA862() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A862));
		AF('l',struct A862,m0,1)
		AF('L',struct A862,m1,6)
		AF('s',struct A862,m2,1)
		AF('I',struct A862,m3,1)
		AF('I',struct A862,m4,1)
		AF('c',struct A862,m5,1)
		AF('L',struct A862,m6,1)
		AF('C',struct A862,m7,1)
		AFa(struct A862,m8,1,A860)
		AF('j',struct A862,m9,1)
		AF('S',struct A862,m10,1)
		AFa(struct A862,m11,1,A861)
		dcCloseAggr(a);
	}
	return a;
};
/* <{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji> */
#pragma pack(push,4)
union A863 { struct A862 m0; L m1; c m2; j m3; i m4; };
#pragma pack(pop)
int f_cmpA863(const union A863 *x, const union A863 *y) { return f_cmpA862(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA863() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A863));
		AFa(union A863,m0,1,A862)
		AF('L',union A863,m1,1)
		AF('c',union A863,m2,1)
		AF('j',union A863,m3,1)
		AF('i',union A863,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CdsIJiLIcfCp} */
#pragma pack(push,1)
struct A864 { C m0; d m1; s m2; I m3; J m4; i m5; L m6; I m7; c m8; f m9; C m10; p m11; };
#pragma pack(pop)
int f_cmpA864(const struct A864 *x, const struct A864 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA864() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A864));
		AF('C',struct A864,m0,1)
		AF('d',struct A864,m1,1)
		AF('s',struct A864,m2,1)
		AF('I',struct A864,m3,1)
		AF('J',struct A864,m4,1)
		AF('i',struct A864,m5,1)
		AF('L',struct A864,m6,1)
		AF('I',struct A864,m7,1)
		AF('c',struct A864,m8,1)
		AF('f',struct A864,m9,1)
		AF('C',struct A864,m10,1)
		AF('p',struct A864,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lfC} */
#pragma pack(push,1)
struct A865 { l m0; f m1; C m2; };
#pragma pack(pop)
int f_cmpA865(const struct A865 *x, const struct A865 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA865() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A865));
		AF('l',struct A865,m0,1)
		AF('f',struct A865,m1,1)
		AF('C',struct A865,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pCds{lfC}dclfl[6]ds} */
#pragma pack(push,8)
struct A866 { p m0; C m1; d m2; s m3; struct A865 m4; d m5; c m6; l m7; f m8; l m9[6]; d m10; s m11; };
#pragma pack(pop)
int f_cmpA866(const struct A866 *x, const struct A866 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA865(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA866() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A866));
		AF('p',struct A866,m0,1)
		AF('C',struct A866,m1,1)
		AF('d',struct A866,m2,1)
		AF('s',struct A866,m3,1)
		AFa(struct A866,m4,1,A865)
		AF('d',struct A866,m5,1)
		AF('c',struct A866,m6,1)
		AF('l',struct A866,m7,1)
		AF('f',struct A866,m8,1)
		AF('l',struct A866,m9,6)
		AF('d',struct A866,m10,1)
		AF('s',struct A866,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lS{pCds{lfC}dclfl[6]ds}J} */
#pragma pack(push,4)
struct A867 { l m0; S m1; struct A866 m2; J m3; };
#pragma pack(pop)
int f_cmpA867(const struct A867 *x, const struct A867 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA866(&x->m2, &y->m2) && x->m3 == y->m3; };
DCaggr* f_touchA867() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A867));
		AF('l',struct A867,m0,1)
		AF('S',struct A867,m1,1)
		AFa(struct A867,m2,1,A866)
		AF('J',struct A867,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <plClJLjf> */
#pragma pack(push,2)
union A868 { p m0; l m1; C m2; l m3; J m4; L m5; j m6; f m7; };
#pragma pack(pop)
int f_cmpA868(const union A868 *x, const union A868 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA868() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A868));
		AF('p',union A868,m0,1)
		AF('l',union A868,m1,1)
		AF('C',union A868,m2,1)
		AF('l',union A868,m3,1)
		AF('J',union A868,m4,1)
		AF('L',union A868,m5,1)
		AF('j',union A868,m6,1)
		AF('f',union A868,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J<plClJLjf>ls} */
#pragma pack(push,1)
struct A869 { J m0; union A868 m1; l m2; s m3; };
#pragma pack(pop)
int f_cmpA869(const struct A869 *x, const struct A869 *y) { return x->m0 == y->m0 && f_cmpA868(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA869() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A869));
		AF('J',struct A869,m0,1)
		AFa(struct A869,m1,1,A868)
		AF('l',struct A869,m2,1)
		AF('s',struct A869,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IJdsiiBpScIC> */
#pragma pack(push,4)
union A870 { I m0; J m1; d m2; s m3; i m4; i m5; B m6; p m7; S m8; c m9; I m10; C m11; };
#pragma pack(pop)
int f_cmpA870(const union A870 *x, const union A870 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA870() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A870));
		AF('I',union A870,m0,1)
		AF('J',union A870,m1,1)
		AF('d',union A870,m2,1)
		AF('s',union A870,m3,1)
		AF('i',union A870,m4,1)
		AF('i',union A870,m5,1)
		AF('B',union A870,m6,1)
		AF('p',union A870,m7,1)
		AF('S',union A870,m8,1)
		AF('c',union A870,m9,1)
		AF('I',union A870,m10,1)
		AF('C',union A870,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {j<IJdsiiBpScIC>BllddBfBJs} */
#pragma pack(push,4)
struct A871 { j m0; union A870 m1; B m2; l m3; l m4; d m5; d m6; B m7; f m8; B m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA871(const struct A871 *x, const struct A871 *y) { return x->m0 == y->m0 && f_cmpA870(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA871() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A871));
		AF('j',struct A871,m0,1)
		AFa(struct A871,m1,1,A870)
		AF('B',struct A871,m2,1)
		AF('l',struct A871,m3,1)
		AF('l',struct A871,m4,1)
		AF('d',struct A871,m5,1)
		AF('d',struct A871,m6,1)
		AF('B',struct A871,m7,1)
		AF('f',struct A871,m8,1)
		AF('B',struct A871,m9,1)
		AF('J',struct A871,m10,1)
		AF('s',struct A871,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <scjcppLjISfj> */
#pragma pack(push,4)
union A872 { s m0; c m1; j m2; c m3; p m4; p m5; L m6; j m7; I m8; S m9; f m10; j m11; };
#pragma pack(pop)
int f_cmpA872(const union A872 *x, const union A872 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA872() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A872));
		AF('s',union A872,m0,1)
		AF('c',union A872,m1,1)
		AF('j',union A872,m2,1)
		AF('c',union A872,m3,1)
		AF('p',union A872,m4,1)
		AF('p',union A872,m5,1)
		AF('L',union A872,m6,1)
		AF('j',union A872,m7,1)
		AF('I',union A872,m8,1)
		AF('S',union A872,m9,1)
		AF('f',union A872,m10,1)
		AF('j',union A872,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cJ<scjcppLjISfj>} */
#pragma pack(push,4)
struct A873 { c m0; J m1; union A872 m2; };
#pragma pack(pop)
int f_cmpA873(const struct A873 *x, const struct A873 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA872(&x->m2, &y->m2); };
DCaggr* f_touchA873() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A873));
		AF('c',struct A873,m0,1)
		AF('J',struct A873,m1,1)
		AFa(struct A873,m2,1,A872)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijdiSCJBIiLS> */
#pragma pack(push,4)
union A874 { i m0; j m1; d m2; i m3; S m4; C m5; J m6; B m7; I m8; i m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA874(const union A874 *x, const union A874 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA874() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A874));
		AF('i',union A874,m0,1)
		AF('j',union A874,m1,1)
		AF('d',union A874,m2,1)
		AF('i',union A874,m3,1)
		AF('S',union A874,m4,1)
		AF('C',union A874,m5,1)
		AF('J',union A874,m6,1)
		AF('B',union A874,m7,1)
		AF('I',union A874,m8,1)
		AF('i',union A874,m9,1)
		AF('L',union A874,m10,1)
		AF('S',union A874,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <flpSdJiJcsdd> */
#pragma pack(push,4)
union A875 { f m0; l m1; p m2; S m3; d m4; J m5; i m6; J m7; c m8; s m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA875(const union A875 *x, const union A875 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA875() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A875));
		AF('f',union A875,m0,1)
		AF('l',union A875,m1,1)
		AF('p',union A875,m2,1)
		AF('S',union A875,m3,1)
		AF('d',union A875,m4,1)
		AF('J',union A875,m5,1)
		AF('i',union A875,m6,1)
		AF('J',union A875,m7,1)
		AF('c',union A875,m8,1)
		AF('s',union A875,m9,1)
		AF('d',union A875,m10,1)
		AF('d',union A875,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CpS> */
#pragma pack(push,4)
union A876 { C m0; p m1; S m2; };
#pragma pack(pop)
int f_cmpA876(const union A876 *x, const union A876 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA876() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A876));
		AF('C',union A876,m0,1)
		AF('p',union A876,m1,1)
		AF('S',union A876,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JJLsS[10]JjlIsBf> */
#pragma pack(push,2)
union A877 { J m0; J m1; L m2; s m3; S m4[10]; J m5; j m6; l m7; I m8; s m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA877(const union A877 *x, const union A877 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA877() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A877));
		AF('J',union A877,m0,1)
		AF('J',union A877,m1,1)
		AF('L',union A877,m2,1)
		AF('s',union A877,m3,1)
		AF('S',union A877,m4,10)
		AF('J',union A877,m5,1)
		AF('j',union A877,m6,1)
		AF('l',union A877,m7,1)
		AF('I',union A877,m8,1)
		AF('s',union A877,m9,1)
		AF('B',union A877,m10,1)
		AF('f',union A877,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d> */
#pragma pack(push,4)
union A878 { C m0[5]; d m1; c m2; j m3; S m4; p m5; B m6; union A876 m7; c m8; l m9; union A877 m10[13]; d m11; };
#pragma pack(pop)
int f_cmpA878(const union A878 *x, const union A878 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA876(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA877(&x->m10[0], &y->m10[0]) && f_cmpA877(&x->m10[1], &y->m10[1]) && f_cmpA877(&x->m10[2], &y->m10[2]) && f_cmpA877(&x->m10[3], &y->m10[3]) && f_cmpA877(&x->m10[4], &y->m10[4]) && f_cmpA877(&x->m10[5], &y->m10[5]) && f_cmpA877(&x->m10[6], &y->m10[6]) && f_cmpA877(&x->m10[7], &y->m10[7]) && f_cmpA877(&x->m10[8], &y->m10[8]) && f_cmpA877(&x->m10[9], &y->m10[9]) && f_cmpA877(&x->m10[10], &y->m10[10]) && f_cmpA877(&x->m10[11], &y->m10[11]) && f_cmpA877(&x->m10[12], &y->m10[12]) && x->m11 == y->m11; };
DCaggr* f_touchA878() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A878));
		AF('C',union A878,m0,5)
		AF('d',union A878,m1,1)
		AF('c',union A878,m2,1)
		AF('j',union A878,m3,1)
		AF('S',union A878,m4,1)
		AF('p',union A878,m5,1)
		AF('B',union A878,m6,1)
		AFa(union A878,m7,1,A876)
		AF('c',union A878,m8,1)
		AF('l',union A878,m9,1)
		AFa(union A878,m10,13,A877)
		AF('d',union A878,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bi[5]dsJIsdlIds} */
#pragma pack(push,2)
struct A879 { B m0; i m1[5]; d m2; s m3; J m4; I m5; s m6; d m7; l m8; I m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA879(const struct A879 *x, const struct A879 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA879() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A879));
		AF('B',struct A879,m0,1)
		AF('i',struct A879,m1,5)
		AF('d',struct A879,m2,1)
		AF('s',struct A879,m3,1)
		AF('J',struct A879,m4,1)
		AF('I',struct A879,m5,1)
		AF('s',struct A879,m6,1)
		AF('d',struct A879,m7,1)
		AF('l',struct A879,m8,1)
		AF('I',struct A879,m9,1)
		AF('d',struct A879,m10,1)
		AF('s',struct A879,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj> */
#pragma pack(push,4)
union A880 { d m0; d m1; struct A416 m2; d m3; union A878 m4; struct A879 m5; B m6; d m7; B m8; f m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA880(const union A880 *x, const union A880 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA416(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA878(&x->m4, &y->m4) && f_cmpA879(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA880() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A880));
		AF('d',union A880,m0,1)
		AF('d',union A880,m1,1)
		AFa(union A880,m2,1,A416)
		AF('d',union A880,m3,1)
		AFa(union A880,m4,1,A878)
		AFa(union A880,m5,1,A879)
		AF('B',union A880,m6,1)
		AF('d',union A880,m7,1)
		AF('B',union A880,m8,1)
		AF('f',union A880,m9,1)
		AF('j',union A880,m10,1)
		AF('j',union A880,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BC> */
#pragma pack(push,4)
union A881 { B m0; C m1; };
#pragma pack(pop)
int f_cmpA881(const union A881 *x, const union A881 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA881() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A881));
		AF('B',union A881,m0,1)
		AF('C',union A881,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILfBdBSf} */
#pragma pack(push,2)
struct A882 { I m0; L m1; f m2; B m3; d m4; B m5; S m6; f m7; };
#pragma pack(pop)
int f_cmpA882(const struct A882 *x, const struct A882 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA882() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A882));
		AF('I',struct A882,m0,1)
		AF('L',struct A882,m1,1)
		AF('f',struct A882,m2,1)
		AF('B',struct A882,m3,1)
		AF('d',struct A882,m4,1)
		AF('B',struct A882,m5,1)
		AF('S',struct A882,m6,1)
		AF('f',struct A882,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lsJJsfBdIiiB} */
#pragma pack(push,4)
struct A883 { l m0; s m1; J m2; J m3; s m4; f m5; B m6; d m7; I m8; i m9; i m10; B m11; };
#pragma pack(pop)
int f_cmpA883(const struct A883 *x, const struct A883 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA883() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A883));
		AF('l',struct A883,m0,1)
		AF('s',struct A883,m1,1)
		AF('J',struct A883,m2,1)
		AF('J',struct A883,m3,1)
		AF('s',struct A883,m4,1)
		AF('f',struct A883,m5,1)
		AF('B',struct A883,m6,1)
		AF('d',struct A883,m7,1)
		AF('I',struct A883,m8,1)
		AF('i',struct A883,m9,1)
		AF('i',struct A883,m10,1)
		AF('B',struct A883,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc> */
#pragma pack(push,2)
union A884 { C m0; s m1[6]; f m2; struct A882 m3; c m4; S m5; struct A883 m6; l m7; c m8; };
#pragma pack(pop)
int f_cmpA884(const union A884 *x, const union A884 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m2 == y->m2 && f_cmpA882(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA883(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA884() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A884));
		AF('C',union A884,m0,1)
		AF('s',union A884,m1,6)
		AF('f',union A884,m2,1)
		AFa(union A884,m3,1,A882)
		AF('c',union A884,m4,1)
		AF('S',union A884,m5,1)
		AFa(union A884,m6,1,A883)
		AF('l',union A884,m7,1)
		AF('c',union A884,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dpfLc} */
#pragma pack(push,4)
struct A885 { d m0; p m1; f m2; L m3; c m4; };
#pragma pack(pop)
int f_cmpA885(const struct A885 *x, const struct A885 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA885() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A885));
		AF('d',struct A885,m0,1)
		AF('p',struct A885,m1,1)
		AF('f',struct A885,m2,1)
		AF('L',struct A885,m3,1)
		AF('c',struct A885,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bdjssi} */
#pragma pack(push,8)
struct A886 { B m0; d m1; j m2; s m3; s m4; i m5; };
#pragma pack(pop)
int f_cmpA886(const struct A886 *x, const struct A886 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA886() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A886));
		AF('B',struct A886,m0,1)
		AF('d',struct A886,m1,1)
		AF('j',struct A886,m2,1)
		AF('s',struct A886,m3,1)
		AF('s',struct A886,m4,1)
		AF('i',struct A886,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBlsdjdS> */
#pragma pack(push,4)
union A887 { i m0; B m1; l m2; s m3; d m4; j m5; d m6; S m7; };
#pragma pack(pop)
int f_cmpA887(const union A887 *x, const union A887 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA887() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A887));
		AF('i',union A887,m0,1)
		AF('B',union A887,m1,1)
		AF('l',union A887,m2,1)
		AF('s',union A887,m3,1)
		AF('d',union A887,m4,1)
		AF('j',union A887,m5,1)
		AF('d',union A887,m6,1)
		AF('S',union A887,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S} */
#pragma pack(push,2)
struct A888 { d m0; s m1; J m2; s m3; I m4; struct A886 m5; I m6; union A887 m7; C m8; B m9; d m10[4]; S m11; };
#pragma pack(pop)
int f_cmpA888(const struct A888 *x, const struct A888 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA886(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA887(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m11 == y->m11; };
DCaggr* f_touchA888() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A888));
		AF('d',struct A888,m0,1)
		AF('s',struct A888,m1,1)
		AF('J',struct A888,m2,1)
		AF('s',struct A888,m3,1)
		AF('I',struct A888,m4,1)
		AFa(struct A888,m5,1,A886)
		AF('I',struct A888,m6,1)
		AFa(struct A888,m7,1,A887)
		AF('C',struct A888,m8,1)
		AF('B',struct A888,m9,1)
		AF('d',struct A888,m10,4)
		AF('S',struct A888,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cjB[9]lLjdIJ[14]pCf} */
#pragma pack(push,4)
struct A889 { c m0; j m1; B m2[9]; l m3; L m4; j m5; d m6; I m7; J m8[14]; p m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA889(const struct A889 *x, const struct A889 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m8[13] == y->m8[13] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA889() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A889));
		AF('c',struct A889,m0,1)
		AF('j',struct A889,m1,1)
		AF('B',struct A889,m2,9)
		AF('l',struct A889,m3,1)
		AF('L',struct A889,m4,1)
		AF('j',struct A889,m5,1)
		AF('d',struct A889,m6,1)
		AF('I',struct A889,m7,1)
		AF('J',struct A889,m8,14)
		AF('p',struct A889,m9,1)
		AF('C',struct A889,m10,1)
		AF('f',struct A889,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fpLLSdCIdjsJ} */
#pragma pack(push,1)
struct A890 { f m0; p m1; L m2; L m3; S m4; d m5; C m6; I m7; d m8; j m9; s m10; J m11; };
#pragma pack(pop)
int f_cmpA890(const struct A890 *x, const struct A890 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA890() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A890));
		AF('f',struct A890,m0,1)
		AF('p',struct A890,m1,1)
		AF('L',struct A890,m2,1)
		AF('L',struct A890,m3,1)
		AF('S',struct A890,m4,1)
		AF('d',struct A890,m5,1)
		AF('C',struct A890,m6,1)
		AF('I',struct A890,m7,1)
		AF('d',struct A890,m8,1)
		AF('j',struct A890,m9,1)
		AF('s',struct A890,m10,1)
		AF('J',struct A890,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICIdcLsl} */
#pragma pack(push,8)
struct A891 { I m0; C m1; I m2; d m3; c m4; L m5; s m6; l m7; };
#pragma pack(pop)
int f_cmpA891(const struct A891 *x, const struct A891 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA891() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A891));
		AF('I',struct A891,m0,1)
		AF('C',struct A891,m1,1)
		AF('I',struct A891,m2,1)
		AF('d',struct A891,m3,1)
		AF('c',struct A891,m4,1)
		AF('L',struct A891,m5,1)
		AF('s',struct A891,m6,1)
		AF('l',struct A891,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dsjdCI[2]{fpLLSdCIdjsJ}IBid{ICIdcLsl}> */
#pragma pack(push,8)
union A892 { d m0; s m1; j m2; d m3; C m4; I m5[2]; struct A890 m6; I m7; B m8; i m9; d m10; struct A891 m11; };
#pragma pack(pop)
int f_cmpA892(const union A892 *x, const union A892 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && f_cmpA890(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA891(&x->m11, &y->m11); };
DCaggr* f_touchA892() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A892));
		AF('d',union A892,m0,1)
		AF('s',union A892,m1,1)
		AF('j',union A892,m2,1)
		AF('d',union A892,m3,1)
		AF('C',union A892,m4,1)
		AF('I',union A892,m5,2)
		AFa(union A892,m6,1,A890)
		AF('I',union A892,m7,1)
		AF('B',union A892,m8,1)
		AF('i',union A892,m9,1)
		AF('d',union A892,m10,1)
		AFa(union A892,m11,1,A891)
		dcCloseAggr(a);
	}
	return a;
};
/* <jl> */
#pragma pack(push,8)
union A893 { j m0; l m1; };
#pragma pack(pop)
int f_cmpA893(const union A893 *x, const union A893 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA893() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A893));
		AF('j',union A893,m0,1)
		AF('l',union A893,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sl[2]SCijBIpJfC} */
#pragma pack(push,4)
struct A894 { S m0; l m1[2]; S m2; C m3; i m4; j m5; B m6; I m7; p m8; J m9; f m10; C m11; };
#pragma pack(pop)
int f_cmpA894(const struct A894 *x, const struct A894 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA894() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A894));
		AF('S',struct A894,m0,1)
		AF('l',struct A894,m1,2)
		AF('S',struct A894,m2,1)
		AF('C',struct A894,m3,1)
		AF('i',struct A894,m4,1)
		AF('j',struct A894,m5,1)
		AF('B',struct A894,m6,1)
		AF('I',struct A894,m7,1)
		AF('p',struct A894,m8,1)
		AF('J',struct A894,m9,1)
		AF('f',struct A894,m10,1)
		AF('C',struct A894,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LcIB} */
#pragma pack(push,1)
struct A895 { L m0; c m1; I m2; B m3; };
#pragma pack(pop)
int f_cmpA895(const struct A895 *x, const struct A895 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA895() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A895));
		AF('L',struct A895,m0,1)
		AF('c',struct A895,m1,1)
		AF('I',struct A895,m2,1)
		AF('B',struct A895,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Sdd{LcIB}lICLdsj> */
#pragma pack(push,1)
union A896 { S m0; d m1; d m2; struct A895 m3; l m4; I m5; C m6; L m7; d m8; s m9; j m10; };
#pragma pack(pop)
int f_cmpA896(const union A896 *x, const union A896 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA895(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA896() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A896));
		AF('S',union A896,m0,1)
		AF('d',union A896,m1,1)
		AF('d',union A896,m2,1)
		AFa(union A896,m3,1,A895)
		AF('l',union A896,m4,1)
		AF('I',union A896,m5,1)
		AF('C',union A896,m6,1)
		AF('L',union A896,m7,1)
		AF('d',union A896,m8,1)
		AF('s',union A896,m9,1)
		AF('j',union A896,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C[5]LJISS> */
#pragma pack(push,4)
union A897 { C m0[5]; L m1; J m2; I m3; S m4; S m5; };
#pragma pack(pop)
int f_cmpA897(const union A897 *x, const union A897 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA897() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A897));
		AF('C',union A897,m0,5)
		AF('L',union A897,m1,1)
		AF('J',union A897,m2,1)
		AF('I',union A897,m3,1)
		AF('S',union A897,m4,1)
		AF('S',union A897,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IISI<C[5]LJISS>CC} */
#pragma pack(push,4)
struct A898 { I m0; I m1; S m2; I m3; union A897 m4; C m5; C m6; };
#pragma pack(pop)
int f_cmpA898(const struct A898 *x, const struct A898 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA897(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA898() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A898));
		AF('I',struct A898,m0,1)
		AF('I',struct A898,m1,1)
		AF('S',struct A898,m2,1)
		AF('I',struct A898,m3,1)
		AFa(struct A898,m4,1,A897)
		AF('C',struct A898,m5,1)
		AF('C',struct A898,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <llISsLssfc[13]dp> */
#pragma pack(push,2)
union A899 { l m0; l m1; I m2; S m3; s m4; L m5; s m6; s m7; f m8; c m9[13]; d m10; p m11; };
#pragma pack(pop)
int f_cmpA899(const union A899 *x, const union A899 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA899() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A899));
		AF('l',union A899,m0,1)
		AF('l',union A899,m1,1)
		AF('I',union A899,m2,1)
		AF('S',union A899,m3,1)
		AF('s',union A899,m4,1)
		AF('L',union A899,m5,1)
		AF('s',union A899,m6,1)
		AF('s',union A899,m7,1)
		AF('f',union A899,m8,1)
		AF('c',union A899,m9,13)
		AF('d',union A899,m10,1)
		AF('p',union A899,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I{}<llISsLssfc[13]dp>ISfldSI> */
#pragma pack(push,4)
union A900 { I m0; struct A24 m1; union A899 m2; I m3; S m4; f m5; l m6; d m7; S m8; I m9; };
#pragma pack(pop)
int f_cmpA900(const union A900 *x, const union A900 *y) { return x->m0 == y->m0 && f_cmpA24(&x->m1, &y->m1) && f_cmpA899(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA900() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A900));
		AF('I',union A900,m0,1)
		AFa(union A900,m1,1,A24)
		AFa(union A900,m2,1,A899)
		AF('I',union A900,m3,1)
		AF('S',union A900,m4,1)
		AF('f',union A900,m5,1)
		AF('l',union A900,m6,1)
		AF('d',union A900,m7,1)
		AF('S',union A900,m8,1)
		AF('I',union A900,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CfjBSJdBpJJC[4]> */
#pragma pack(push,2)
union A901 { C m0; f m1; j m2; B m3; S m4; J m5; d m6; B m7; p m8; J m9; J m10; C m11[4]; };
#pragma pack(pop)
int f_cmpA901(const union A901 *x, const union A901 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3]; };
DCaggr* f_touchA901() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A901));
		AF('C',union A901,m0,1)
		AF('f',union A901,m1,1)
		AF('j',union A901,m2,1)
		AF('B',union A901,m3,1)
		AF('S',union A901,m4,1)
		AF('J',union A901,m5,1)
		AF('d',union A901,m6,1)
		AF('B',union A901,m7,1)
		AF('p',union A901,m8,1)
		AF('J',union A901,m9,1)
		AF('J',union A901,m10,1)
		AF('C',union A901,m11,4)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLdjj> */
#pragma pack(push,8)
union A902 { i m0; L m1; d m2; j m3; j m4; };
#pragma pack(pop)
int f_cmpA902(const union A902 *x, const union A902 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA902() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A902));
		AF('i',union A902,m0,1)
		AF('L',union A902,m1,1)
		AF('d',union A902,m2,1)
		AF('j',union A902,m3,1)
		AF('j',union A902,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fCpjCJJdclSd> */
#pragma pack(push,2)
union A903 { f m0; C m1; p m2; j m3; C m4; J m5; J m6; d m7; c m8; l m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA903(const union A903 *x, const union A903 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA903() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A903));
		AF('f',union A903,m0,1)
		AF('C',union A903,m1,1)
		AF('p',union A903,m2,1)
		AF('j',union A903,m3,1)
		AF('C',union A903,m4,1)
		AF('J',union A903,m5,1)
		AF('J',union A903,m6,1)
		AF('d',union A903,m7,1)
		AF('c',union A903,m8,1)
		AF('l',union A903,m9,1)
		AF('S',union A903,m10,1)
		AF('d',union A903,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCpsi} */
#pragma pack(push,4)
struct A904 { S m0; C m1; p m2; s m3; i m4; };
#pragma pack(pop)
int f_cmpA904(const struct A904 *x, const struct A904 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA904() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A904));
		AF('S',struct A904,m0,1)
		AF('C',struct A904,m1,1)
		AF('p',struct A904,m2,1)
		AF('s',struct A904,m3,1)
		AF('i',struct A904,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Jil> */
#pragma pack(push,2)
union A905 { J m0; i m1; l m2; };
#pragma pack(pop)
int f_cmpA905(const union A905 *x, const union A905 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA905() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A905));
		AF('J',union A905,m0,1)
		AF('i',union A905,m1,1)
		AF('l',union A905,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <icB{SCpsi}<Jil>lsdIBiI> */
#pragma pack(push,2)
union A906 { i m0; c m1; B m2; struct A904 m3; union A905 m4; l m5; s m6; d m7; I m8; B m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA906(const union A906 *x, const union A906 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA904(&x->m3, &y->m3) && f_cmpA905(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA906() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A906));
		AF('i',union A906,m0,1)
		AF('c',union A906,m1,1)
		AF('B',union A906,m2,1)
		AFa(union A906,m3,1,A904)
		AFa(union A906,m4,1,A905)
		AF('l',union A906,m5,1)
		AF('s',union A906,m6,1)
		AF('d',union A906,m7,1)
		AF('I',union A906,m8,1)
		AF('B',union A906,m9,1)
		AF('i',union A906,m10,1)
		AF('I',union A906,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {isipjdlsSjlS} */
#pragma pack(push,4)
struct A907 { i m0; s m1; i m2; p m3; j m4; d m5; l m6; s m7; S m8; j m9; l m10; S m11; };
#pragma pack(pop)
int f_cmpA907(const struct A907 *x, const struct A907 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA907() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A907));
		AF('i',struct A907,m0,1)
		AF('s',struct A907,m1,1)
		AF('i',struct A907,m2,1)
		AF('p',struct A907,m3,1)
		AF('j',struct A907,m4,1)
		AF('d',struct A907,m5,1)
		AF('l',struct A907,m6,1)
		AF('s',struct A907,m7,1)
		AF('S',struct A907,m8,1)
		AF('j',struct A907,m9,1)
		AF('l',struct A907,m10,1)
		AF('S',struct A907,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sjdci} */
#pragma pack(push,4)
struct A908 { s m0; j m1; d m2; c m3; i m4; };
#pragma pack(pop)
int f_cmpA908(const struct A908 *x, const struct A908 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA908() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A908));
		AF('s',struct A908,m0,1)
		AF('j',struct A908,m1,1)
		AF('d',struct A908,m2,1)
		AF('c',struct A908,m3,1)
		AF('i',struct A908,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BpfscIcLdCLd} */
#pragma pack(push,4)
struct A909 { B m0; p m1; f m2; s m3; c m4; I m5; c m6; L m7; d m8; C m9; L m10; d m11; };
#pragma pack(pop)
int f_cmpA909(const struct A909 *x, const struct A909 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA909() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A909));
		AF('B',struct A909,m0,1)
		AF('p',struct A909,m1,1)
		AF('f',struct A909,m2,1)
		AF('s',struct A909,m3,1)
		AF('c',struct A909,m4,1)
		AF('I',struct A909,m5,1)
		AF('c',struct A909,m6,1)
		AF('L',struct A909,m7,1)
		AF('d',struct A909,m8,1)
		AF('C',struct A909,m9,1)
		AF('L',struct A909,m10,1)
		AF('d',struct A909,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f{BpfscIcLdCLd}c> */
#pragma pack(push,4)
union A910 { f m0; struct A909 m1; c m2; };
#pragma pack(pop)
int f_cmpA910(const union A910 *x, const union A910 *y) { return x->m0 == y->m0 && f_cmpA909(&x->m1, &y->m1) && x->m2 == y->m2; };
DCaggr* f_touchA910() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A910));
		AF('f',union A910,m0,1)
		AFa(union A910,m1,1,A909)
		AF('c',union A910,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBpCspifsjlf> */
#pragma pack(push,1)
union A911 { p m0; B m1; p m2; C m3; s m4; p m5; i m6; f m7; s m8; j m9; l m10; f m11; };
#pragma pack(pop)
int f_cmpA911(const union A911 *x, const union A911 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA911() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A911));
		AF('p',union A911,m0,1)
		AF('B',union A911,m1,1)
		AF('p',union A911,m2,1)
		AF('C',union A911,m3,1)
		AF('s',union A911,m4,1)
		AF('p',union A911,m5,1)
		AF('i',union A911,m6,1)
		AF('f',union A911,m7,1)
		AF('s',union A911,m8,1)
		AF('j',union A911,m9,1)
		AF('l',union A911,m10,1)
		AF('f',union A911,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pfiiCdBj<pBpCspifsjlf>jfJ} */
#pragma pack(push,2)
struct A912 { p m0; f m1; i m2; i m3; C m4; d m5; B m6; j m7; union A911 m8; j m9; f m10; J m11; };
#pragma pack(pop)
int f_cmpA912(const struct A912 *x, const struct A912 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA911(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA912() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A912));
		AF('p',struct A912,m0,1)
		AF('f',struct A912,m1,1)
		AF('i',struct A912,m2,1)
		AF('i',struct A912,m3,1)
		AF('C',struct A912,m4,1)
		AF('d',struct A912,m5,1)
		AF('B',struct A912,m6,1)
		AF('j',struct A912,m7,1)
		AFa(struct A912,m8,1,A911)
		AF('j',struct A912,m9,1)
		AF('f',struct A912,m10,1)
		AF('J',struct A912,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CcLCfpCj} */
#pragma pack(push,2)
struct A913 { C m0; c m1; L m2; C m3; f m4; p m5; C m6; j m7; };
#pragma pack(pop)
int f_cmpA913(const struct A913 *x, const struct A913 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA913() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A913));
		AF('C',struct A913,m0,1)
		AF('c',struct A913,m1,1)
		AF('L',struct A913,m2,1)
		AF('C',struct A913,m3,1)
		AF('f',struct A913,m4,1)
		AF('p',struct A913,m5,1)
		AF('C',struct A913,m6,1)
		AF('j',struct A913,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {llfffsddlcjf} */
#pragma pack(push,4)
struct A914 { l m0; l m1; f m2; f m3; f m4; s m5; d m6; d m7; l m8; c m9; j m10; f m11; };
#pragma pack(pop)
int f_cmpA914(const struct A914 *x, const struct A914 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA914() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A914));
		AF('l',struct A914,m0,1)
		AF('l',struct A914,m1,1)
		AF('f',struct A914,m2,1)
		AF('f',struct A914,m3,1)
		AF('f',struct A914,m4,1)
		AF('s',struct A914,m5,1)
		AF('d',struct A914,m6,1)
		AF('d',struct A914,m7,1)
		AF('l',struct A914,m8,1)
		AF('c',struct A914,m9,1)
		AF('j',struct A914,m10,1)
		AF('f',struct A914,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp[7]s} */
#pragma pack(push,4)
struct A915 { S m0; p m1[7]; s m2; };
#pragma pack(pop)
int f_cmpA915(const struct A915 *x, const struct A915 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m2 == y->m2; };
DCaggr* f_touchA915() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A915));
		AF('S',struct A915,m0,1)
		AF('p',struct A915,m1,7)
		AF('s',struct A915,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cSCJJcSSjjiJ> */
#pragma pack(push,4)
union A916 { c m0; S m1; C m2; J m3; J m4; c m5; S m6; S m7; j m8; j m9; i m10; J m11; };
#pragma pack(pop)
int f_cmpA916(const union A916 *x, const union A916 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA916() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A916));
		AF('c',union A916,m0,1)
		AF('S',union A916,m1,1)
		AF('C',union A916,m2,1)
		AF('J',union A916,m3,1)
		AF('J',union A916,m4,1)
		AF('c',union A916,m5,1)
		AF('S',union A916,m6,1)
		AF('S',union A916,m7,1)
		AF('j',union A916,m8,1)
		AF('j',union A916,m9,1)
		AF('i',union A916,m10,1)
		AF('J',union A916,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ifcBjsdcCsjj} */
#pragma pack(push,4)
struct A917 { i m0; f m1; c m2; B m3; j m4; s m5; d m6; c m7; C m8; s m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA917(const struct A917 *x, const struct A917 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA917() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A917));
		AF('i',struct A917,m0,1)
		AF('f',struct A917,m1,1)
		AF('c',struct A917,m2,1)
		AF('B',struct A917,m3,1)
		AF('j',struct A917,m4,1)
		AF('s',struct A917,m5,1)
		AF('d',struct A917,m6,1)
		AF('c',struct A917,m7,1)
		AF('C',struct A917,m8,1)
		AF('s',struct A917,m9,1)
		AF('j',struct A917,m10,1)
		AF('j',struct A917,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SLfCsLSIISIS} */
#pragma pack(push,8)
struct A918 { S m0; L m1; f m2; C m3; s m4; L m5; S m6; I m7; I m8; S m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA918(const struct A918 *x, const struct A918 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA918() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A918));
		AF('S',struct A918,m0,1)
		AF('L',struct A918,m1,1)
		AF('f',struct A918,m2,1)
		AF('C',struct A918,m3,1)
		AF('s',struct A918,m4,1)
		AF('L',struct A918,m5,1)
		AF('S',struct A918,m6,1)
		AF('I',struct A918,m7,1)
		AF('I',struct A918,m8,1)
		AF('S',struct A918,m9,1)
		AF('I',struct A918,m10,1)
		AF('S',struct A918,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps} */
#pragma pack(push,1)
struct A919 { S m0; S m1; j m2; I m3; struct A915 m4; s m5; j m6; union A916 m7; struct A917 m8; struct A918 m9; p m10; s m11; };
#pragma pack(pop)
int f_cmpA919(const struct A919 *x, const struct A919 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA915(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA916(&x->m7, &y->m7) && f_cmpA917(&x->m8, &y->m8) && f_cmpA918(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA919() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A919));
		AF('S',struct A919,m0,1)
		AF('S',struct A919,m1,1)
		AF('j',struct A919,m2,1)
		AF('I',struct A919,m3,1)
		AFa(struct A919,m4,1,A915)
		AF('s',struct A919,m5,1)
		AF('j',struct A919,m6,1)
		AFa(struct A919,m7,1,A916)
		AFa(struct A919,m8,1,A917)
		AFa(struct A919,m9,1,A918)
		AF('p',struct A919,m10,1)
		AF('s',struct A919,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIjp> */
#pragma pack(push,8)
union A920 { p m0; I m1; j m2; p m3; };
#pragma pack(pop)
int f_cmpA920(const union A920 *x, const union A920 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA920() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A920));
		AF('p',union A920,m0,1)
		AF('I',union A920,m1,1)
		AF('j',union A920,m2,1)
		AF('p',union A920,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BJIJIcJ> */
#pragma pack(push,1)
union A921 { B m0; J m1; I m2; J m3; I m4; c m5; J m6; };
#pragma pack(pop)
int f_cmpA921(const union A921 *x, const union A921 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA921() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A921));
		AF('B',union A921,m0,1)
		AF('J',union A921,m1,1)
		AF('I',union A921,m2,1)
		AF('J',union A921,m3,1)
		AF('I',union A921,m4,1)
		AF('c',union A921,m5,1)
		AF('J',union A921,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cfSBc[8]> */
#pragma pack(push,8)
union A922 { c m0; f m1; S m2; B m3; c m4[8]; };
#pragma pack(pop)
int f_cmpA922(const union A922 *x, const union A922 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7]; };
DCaggr* f_touchA922() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A922));
		AF('c',union A922,m0,1)
		AF('f',union A922,m1,1)
		AF('S',union A922,m2,1)
		AF('B',union A922,m3,1)
		AF('c',union A922,m4,8)
		dcCloseAggr(a);
	}
	return a;
};
/* {sSisSCSifCcI} */
#pragma pack(push,4)
struct A923 { s m0; S m1; i m2; s m3; S m4; C m5; S m6; i m7; f m8; C m9; c m10; I m11; };
#pragma pack(pop)
int f_cmpA923(const struct A923 *x, const struct A923 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA923() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A923));
		AF('s',struct A923,m0,1)
		AF('S',struct A923,m1,1)
		AF('i',struct A923,m2,1)
		AF('s',struct A923,m3,1)
		AF('S',struct A923,m4,1)
		AF('C',struct A923,m5,1)
		AF('S',struct A923,m6,1)
		AF('i',struct A923,m7,1)
		AF('f',struct A923,m8,1)
		AF('C',struct A923,m9,1)
		AF('c',struct A923,m10,1)
		AF('I',struct A923,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SpfdfLI[8]SpLij} */
#pragma pack(push,8)
struct A924 { S m0; p m1; f m2; d m3; f m4; L m5; I m6[8]; S m7; p m8; L m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA924(const struct A924 *x, const struct A924 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA924() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A924));
		AF('S',struct A924,m0,1)
		AF('p',struct A924,m1,1)
		AF('f',struct A924,m2,1)
		AF('d',struct A924,m3,1)
		AF('f',struct A924,m4,1)
		AF('L',struct A924,m5,1)
		AF('I',struct A924,m6,8)
		AF('S',struct A924,m7,1)
		AF('p',struct A924,m8,1)
		AF('L',struct A924,m9,1)
		AF('i',struct A924,m10,1)
		AF('j',struct A924,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CJli[7]pcS} */
#pragma pack(push,4)
struct A925 { C m0; J m1; l m2; i m3[7]; p m4; c m5; S m6; };
#pragma pack(pop)
int f_cmpA925(const struct A925 *x, const struct A925 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA925() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A925));
		AF('C',struct A925,m0,1)
		AF('J',struct A925,m1,1)
		AF('l',struct A925,m2,1)
		AF('i',struct A925,m3,7)
		AF('p',struct A925,m4,1)
		AF('c',struct A925,m5,1)
		AF('S',struct A925,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<>BJ{sSisSCSifCcI}{SpfdfLI[8]SpLij}{CJli[7]pcS}cIBLCL} */
#pragma pack(push,8)
struct A926 { union A30 m0; B m1; J m2; struct A923 m3; struct A924 m4; struct A925 m5; c m6; I m7; B m8; L m9; C m10; L m11; };
#pragma pack(pop)
int f_cmpA926(const struct A926 *x, const struct A926 *y) { return f_cmpA30(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA923(&x->m3, &y->m3) && f_cmpA924(&x->m4, &y->m4) && f_cmpA925(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA926() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A926));
		AFa(struct A926,m0,1,A30)
		AF('B',struct A926,m1,1)
		AF('J',struct A926,m2,1)
		AFa(struct A926,m3,1,A923)
		AFa(struct A926,m4,1,A924)
		AFa(struct A926,m5,1,A925)
		AF('c',struct A926,m6,1)
		AF('I',struct A926,m7,1)
		AF('B',struct A926,m8,1)
		AF('L',struct A926,m9,1)
		AF('C',struct A926,m10,1)
		AF('L',struct A926,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iiC<cfSBc[8]>JLf<f>{<>BJ{sSisSCSifCcI}{SpfdfLI[8]SpLij}{CJli[7]pcS}cIBLCL}jdd> */
#pragma pack(push,1)
union A927 { i m0; i m1; C m2; union A922 m3; J m4; L m5; f m6; union A306 m7; struct A926 m8; j m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA927(const union A927 *x, const union A927 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA922(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA306(&x->m7, &y->m7) && f_cmpA926(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA927() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A927));
		AF('i',union A927,m0,1)
		AF('i',union A927,m1,1)
		AF('C',union A927,m2,1)
		AFa(union A927,m3,1,A922)
		AF('J',union A927,m4,1)
		AF('L',union A927,m5,1)
		AF('f',union A927,m6,1)
		AFa(union A927,m7,1,A306)
		AFa(union A927,m8,1,A926)
		AF('j',union A927,m9,1)
		AF('d',union A927,m10,1)
		AF('d',union A927,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CcSiffijcIiI> */
#pragma pack(push,1)
union A928 { C m0; c m1; S m2; i m3; f m4; f m5; i m6; j m7; c m8; I m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA928(const union A928 *x, const union A928 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA928() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A928));
		AF('C',union A928,m0,1)
		AF('c',union A928,m1,1)
		AF('S',union A928,m2,1)
		AF('i',union A928,m3,1)
		AF('f',union A928,m4,1)
		AF('f',union A928,m5,1)
		AF('i',union A928,m6,1)
		AF('j',union A928,m7,1)
		AF('c',union A928,m8,1)
		AF('I',union A928,m9,1)
		AF('i',union A928,m10,1)
		AF('I',union A928,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LpSdI<CcSiffijcIiI>} */
#pragma pack(push,4)
struct A929 { L m0; p m1; S m2; d m3; I m4; union A928 m5; };
#pragma pack(pop)
int f_cmpA929(const struct A929 *x, const struct A929 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA928(&x->m5, &y->m5); };
DCaggr* f_touchA929() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(struct A929));
		AF('L',struct A929,m0,1)
		AF('p',struct A929,m1,1)
		AF('S',struct A929,m2,1)
		AF('d',struct A929,m3,1)
		AF('I',struct A929,m4,1)
		AFa(struct A929,m5,1,A928)
		dcCloseAggr(a);
	}
	return a;
};
/* <lBSJpiSILpBp> */
#pragma pack(push,2)
union A930 { l m0; B m1; S m2; J m3; p m4; i m5; S m6; I m7; L m8; p m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA930(const union A930 *x, const union A930 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA930() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A930));
		AF('l',union A930,m0,1)
		AF('B',union A930,m1,1)
		AF('S',union A930,m2,1)
		AF('J',union A930,m3,1)
		AF('p',union A930,m4,1)
		AF('i',union A930,m5,1)
		AF('S',union A930,m6,1)
		AF('I',union A930,m7,1)
		AF('L',union A930,m8,1)
		AF('p',union A930,m9,1)
		AF('B',union A930,m10,1)
		AF('p',union A930,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcCjiisdCdif> */
#pragma pack(push,4)
union A931 { B m0; c m1; C m2; j m3; i m4; i m5; s m6; d m7; C m8; d m9; i m10; f m11; };
#pragma pack(pop)
int f_cmpA931(const union A931 *x, const union A931 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA931() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A931));
		AF('B',union A931,m0,1)
		AF('c',union A931,m1,1)
		AF('C',union A931,m2,1)
		AF('j',union A931,m3,1)
		AF('i',union A931,m4,1)
		AF('i',union A931,m5,1)
		AF('s',union A931,m6,1)
		AF('d',union A931,m7,1)
		AF('C',union A931,m8,1)
		AF('d',union A931,m9,1)
		AF('i',union A931,m10,1)
		AF('f',union A931,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CCsCjsCfLJBj> */
#pragma pack(push,4)
union A932 { C m0; C m1; s m2; C m3; j m4; s m5; C m6; f m7; L m8; J m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA932(const union A932 *x, const union A932 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA932() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A932));
		AF('C',union A932,m0,1)
		AF('C',union A932,m1,1)
		AF('s',union A932,m2,1)
		AF('C',union A932,m3,1)
		AF('j',union A932,m4,1)
		AF('s',union A932,m5,1)
		AF('C',union A932,m6,1)
		AF('f',union A932,m7,1)
		AF('L',union A932,m8,1)
		AF('J',union A932,m9,1)
		AF('B',union A932,m10,1)
		AF('j',union A932,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CiclSBBC<CCsCjsCfLJBj>dcd} */
#pragma pack(push,2)
struct A933 { C m0; i m1; c m2; l m3; S m4; B m5; B m6; C m7; union A932 m8; d m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA933(const struct A933 *x, const struct A933 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA932(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA933() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A933));
		AF('C',struct A933,m0,1)
		AF('i',struct A933,m1,1)
		AF('c',struct A933,m2,1)
		AF('l',struct A933,m3,1)
		AF('S',struct A933,m4,1)
		AF('B',struct A933,m5,1)
		AF('B',struct A933,m6,1)
		AF('C',struct A933,m7,1)
		AFa(struct A933,m8,1,A932)
		AF('d',struct A933,m9,1)
		AF('c',struct A933,m10,1)
		AF('d',struct A933,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cpp{CiclSBBC<CCsCjsCfLJBj>dcd}jssJSpsd} */
#pragma pack(push,1)
struct A934 { c m0; p m1; p m2; struct A933 m3; j m4; s m5; s m6; J m7; S m8; p m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA934(const struct A934 *x, const struct A934 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA933(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA934() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A934));
		AF('c',struct A934,m0,1)
		AF('p',struct A934,m1,1)
		AF('p',struct A934,m2,1)
		AFa(struct A934,m3,1,A933)
		AF('j',struct A934,m4,1)
		AF('s',struct A934,m5,1)
		AF('s',struct A934,m6,1)
		AF('J',struct A934,m7,1)
		AF('S',struct A934,m8,1)
		AF('p',struct A934,m9,1)
		AF('s',struct A934,m10,1)
		AF('d',struct A934,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jidd} */
#pragma pack(push,4)
struct A935 { J m0; i m1; d m2; d m3; };
#pragma pack(pop)
int f_cmpA935(const struct A935 *x, const struct A935 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA935() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A935));
		AF('J',struct A935,m0,1)
		AF('i',struct A935,m1,1)
		AF('d',struct A935,m2,1)
		AF('d',struct A935,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dCCLJs{Jidd}CfplS} */
#pragma pack(push,4)
struct A936 { d m0; C m1; C m2; L m3; J m4; s m5; struct A935 m6; C m7; f m8; p m9; l m10; S m11; };
#pragma pack(pop)
int f_cmpA936(const struct A936 *x, const struct A936 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA935(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA936() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A936));
		AF('d',struct A936,m0,1)
		AF('C',struct A936,m1,1)
		AF('C',struct A936,m2,1)
		AF('L',struct A936,m3,1)
		AF('J',struct A936,m4,1)
		AF('s',struct A936,m5,1)
		AFa(struct A936,m6,1,A935)
		AF('C',struct A936,m7,1)
		AF('f',struct A936,m8,1)
		AF('p',struct A936,m9,1)
		AF('l',struct A936,m10,1)
		AF('S',struct A936,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jids[12]BJLfscdC} */
#pragma pack(push,2)
struct A937 { J m0; i m1; d m2; s m3[12]; B m4; J m5; L m6; f m7; s m8; c m9; d m10; C m11; };
#pragma pack(pop)
int f_cmpA937(const struct A937 *x, const struct A937 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA937() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A937));
		AF('J',struct A937,m0,1)
		AF('i',struct A937,m1,1)
		AF('d',struct A937,m2,1)
		AF('s',struct A937,m3,12)
		AF('B',struct A937,m4,1)
		AF('J',struct A937,m5,1)
		AF('L',struct A937,m6,1)
		AF('f',struct A937,m7,1)
		AF('s',struct A937,m8,1)
		AF('c',struct A937,m9,1)
		AF('d',struct A937,m10,1)
		AF('C',struct A937,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pBisLdlidddd> */
#pragma pack(push,8)
union A938 { p m0; B m1; i m2; s m3; L m4; d m5; l m6; i m7; d m8; d m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA938(const union A938 *x, const union A938 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA938() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A938));
		AF('p',union A938,m0,1)
		AF('B',union A938,m1,1)
		AF('i',union A938,m2,1)
		AF('s',union A938,m3,1)
		AF('L',union A938,m4,1)
		AF('d',union A938,m5,1)
		AF('l',union A938,m6,1)
		AF('i',union A938,m7,1)
		AF('d',union A938,m8,1)
		AF('d',union A938,m9,1)
		AF('d',union A938,m10,1)
		AF('d',union A938,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ffIcdllIfiBj} */
#pragma pack(push,1)
struct A939 { f m0; f m1; I m2; c m3; d m4; l m5; l m6; I m7; f m8; i m9; B m10; j m11; };
#pragma pack(pop)
int f_cmpA939(const struct A939 *x, const struct A939 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA939() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A939));
		AF('f',struct A939,m0,1)
		AF('f',struct A939,m1,1)
		AF('I',struct A939,m2,1)
		AF('c',struct A939,m3,1)
		AF('d',struct A939,m4,1)
		AF('l',struct A939,m5,1)
		AF('l',struct A939,m6,1)
		AF('I',struct A939,m7,1)
		AF('f',struct A939,m8,1)
		AF('i',struct A939,m9,1)
		AF('B',struct A939,m10,1)
		AF('j',struct A939,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{ffIcdllIfiBj}jJjJSs} */
#pragma pack(push,4)
struct A940 { struct A939 m0; j m1; J m2; j m3; J m4; S m5; s m6; };
#pragma pack(pop)
int f_cmpA940(const struct A940 *x, const struct A940 *y) { return f_cmpA939(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA940() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A940));
		AFa(struct A940,m0,1,A939)
		AF('j',struct A940,m1,1)
		AF('J',struct A940,m2,1)
		AF('j',struct A940,m3,1)
		AF('J',struct A940,m4,1)
		AF('S',struct A940,m5,1)
		AF('s',struct A940,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LJJdLBcjJ} */
#pragma pack(push,4)
struct A941 { L m0; J m1; J m2; d m3; L m4; B m5; c m6; j m7; J m8; };
#pragma pack(pop)
int f_cmpA941(const struct A941 *x, const struct A941 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA941() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A941));
		AF('L',struct A941,m0,1)
		AF('J',struct A941,m1,1)
		AF('J',struct A941,m2,1)
		AF('d',struct A941,m3,1)
		AF('L',struct A941,m4,1)
		AF('B',struct A941,m5,1)
		AF('c',struct A941,m6,1)
		AF('j',struct A941,m7,1)
		AF('J',struct A941,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ddBCBJBf{LJJdLBcjJ}SS> */
#pragma pack(push,2)
union A942 { d m0; d m1; B m2; C m3; B m4; J m5; B m6; f m7; struct A941 m8; S m9; S m10; };
#pragma pack(pop)
int f_cmpA942(const union A942 *x, const union A942 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA941(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA942() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A942));
		AF('d',union A942,m0,1)
		AF('d',union A942,m1,1)
		AF('B',union A942,m2,1)
		AF('C',union A942,m3,1)
		AF('B',union A942,m4,1)
		AF('J',union A942,m5,1)
		AF('B',union A942,m6,1)
		AF('f',union A942,m7,1)
		AFa(union A942,m8,1,A941)
		AF('S',union A942,m9,1)
		AF('S',union A942,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jl{j}sISjSSpBB} */
#pragma pack(push,8)
struct A943 { j m0; l m1; struct A80 m2; s m3; I m4; S m5; j m6; S m7; S m8; p m9; B m10; B m11; };
#pragma pack(pop)
int f_cmpA943(const struct A943 *x, const struct A943 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA80(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA943() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A943));
		AF('j',struct A943,m0,1)
		AF('l',struct A943,m1,1)
		AFa(struct A943,m2,1,A80)
		AF('s',struct A943,m3,1)
		AF('I',struct A943,m4,1)
		AF('S',struct A943,m5,1)
		AF('j',struct A943,m6,1)
		AF('S',struct A943,m7,1)
		AF('S',struct A943,m8,1)
		AF('p',struct A943,m9,1)
		AF('B',struct A943,m10,1)
		AF('B',struct A943,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {L<ddBCBJBf{LJJdLBcjJ}SS>IjfJCBlSB{jl{j}sISjSSpBB}} */
#pragma pack(push,8)
struct A944 { L m0; union A942 m1; I m2; j m3; f m4; J m5; C m6; B m7; l m8; S m9; B m10; struct A943 m11; };
#pragma pack(pop)
int f_cmpA944(const struct A944 *x, const struct A944 *y) { return x->m0 == y->m0 && f_cmpA942(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA943(&x->m11, &y->m11); };
DCaggr* f_touchA944() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A944));
		AF('L',struct A944,m0,1)
		AFa(struct A944,m1,1,A942)
		AF('I',struct A944,m2,1)
		AF('j',struct A944,m3,1)
		AF('f',struct A944,m4,1)
		AF('J',struct A944,m5,1)
		AF('C',struct A944,m6,1)
		AF('B',struct A944,m7,1)
		AF('l',struct A944,m8,1)
		AF('S',struct A944,m9,1)
		AF('B',struct A944,m10,1)
		AFa(struct A944,m11,1,A943)
		dcCloseAggr(a);
	}
	return a;
};
/* {Jpi} */
#pragma pack(push,4)
struct A945 { J m0; p m1; i m2; };
#pragma pack(pop)
int f_cmpA945(const struct A945 *x, const struct A945 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA945() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A945));
		AF('J',struct A945,m0,1)
		AF('p',struct A945,m1,1)
		AF('i',struct A945,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sJCScsLsLSLL> */
#pragma pack(push,2)
union A946 { s m0; J m1; C m2; S m3; c m4; s m5; L m6; s m7; L m8; S m9; L m10; L m11; };
#pragma pack(pop)
int f_cmpA946(const union A946 *x, const union A946 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA946() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A946));
		AF('s',union A946,m0,1)
		AF('J',union A946,m1,1)
		AF('C',union A946,m2,1)
		AF('S',union A946,m3,1)
		AF('c',union A946,m4,1)
		AF('s',union A946,m5,1)
		AF('L',union A946,m6,1)
		AF('s',union A946,m7,1)
		AF('L',union A946,m8,1)
		AF('S',union A946,m9,1)
		AF('L',union A946,m10,1)
		AF('L',union A946,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jSfBBcJ{Jpi}ipJ<sJCScsLsLSLL>> */
#pragma pack(push,4)
union A947 { j m0; S m1; f m2; B m3; B m4; c m5; J m6; struct A945 m7; i m8; p m9; J m10; union A946 m11; };
#pragma pack(pop)
int f_cmpA947(const union A947 *x, const union A947 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA945(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA946(&x->m11, &y->m11); };
DCaggr* f_touchA947() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A947));
		AF('j',union A947,m0,1)
		AF('S',union A947,m1,1)
		AF('f',union A947,m2,1)
		AF('B',union A947,m3,1)
		AF('B',union A947,m4,1)
		AF('c',union A947,m5,1)
		AF('J',union A947,m6,1)
		AFa(union A947,m7,1,A945)
		AF('i',union A947,m8,1)
		AF('p',union A947,m9,1)
		AF('J',union A947,m10,1)
		AFa(union A947,m11,1,A946)
		dcCloseAggr(a);
	}
	return a;
};
/* {Lf} */
#pragma pack(push,2)
struct A948 { L m0; f m1; };
#pragma pack(pop)
int f_cmpA948(const struct A948 *x, const struct A948 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA948() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A948));
		AF('L',struct A948,m0,1)
		AF('f',struct A948,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sp[11]} */
#pragma pack(push,2)
struct A949 { S m0; p m1[11]; };
#pragma pack(pop)
int f_cmpA949(const struct A949 *x, const struct A949 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10]; };
DCaggr* f_touchA949() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A949));
		AF('S',struct A949,m0,1)
		AF('p',struct A949,m1,11)
		dcCloseAggr(a);
	}
	return a;
};
/* {{Sp[11]}} */
#pragma pack(push,4)
struct A950 { struct A949 m0; };
#pragma pack(pop)
int f_cmpA950(const struct A950 *x, const struct A950 *y) { return f_cmpA949(&x->m0, &y->m0); };
DCaggr* f_touchA950() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A950));
		AFa(struct A950,m0,1,A949)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bpifl{s}lIcfJL> */
#pragma pack(push,1)
union A951 { B m0; p m1; i m2; f m3; l m4; struct A740 m5; l m6; I m7; c m8; f m9; J m10; L m11; };
#pragma pack(pop)
int f_cmpA951(const union A951 *x, const union A951 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA740(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA951() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A951));
		AF('B',union A951,m0,1)
		AF('p',union A951,m1,1)
		AF('i',union A951,m2,1)
		AF('f',union A951,m3,1)
		AF('l',union A951,m4,1)
		AFa(union A951,m5,1,A740)
		AF('l',union A951,m6,1)
		AF('I',union A951,m7,1)
		AF('c',union A951,m8,1)
		AF('f',union A951,m9,1)
		AF('J',union A951,m10,1)
		AF('L',union A951,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j} */
#pragma pack(push,2)
struct A952 { l m0; f m1; f m2; struct A950 m3; j m4; c m5; d m6; i m7; C m8; union A951 m9; c m10[13]; j m11; };
#pragma pack(pop)
int f_cmpA952(const struct A952 *x, const struct A952 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA950(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA951(&x->m9, &y->m9) && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m10[11] == y->m10[11] && x->m10[12] == y->m10[12] && x->m11 == y->m11; };
DCaggr* f_touchA952() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A952));
		AF('l',struct A952,m0,1)
		AF('f',struct A952,m1,1)
		AF('f',struct A952,m2,1)
		AFa(struct A952,m3,1,A950)
		AF('j',struct A952,m4,1)
		AF('c',struct A952,m5,1)
		AF('d',struct A952,m6,1)
		AF('i',struct A952,m7,1)
		AF('C',struct A952,m8,1)
		AFa(struct A952,m9,1,A951)
		AF('c',struct A952,m10,13)
		AF('j',struct A952,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {li} */
#pragma pack(push,4)
struct A953 { l m0; i m1; };
#pragma pack(pop)
int f_cmpA953(const struct A953 *x, const struct A953 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA953() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A953));
		AF('l',struct A953,m0,1)
		AF('i',struct A953,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLlsiBljIJS[8]c> */
#pragma pack(push,8)
union A954 { i m0; L m1; l m2; s m3; i m4; B m5; l m6; j m7; I m8; J m9; S m10[8]; c m11; };
#pragma pack(pop)
int f_cmpA954(const union A954 *x, const union A954 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m11 == y->m11; };
DCaggr* f_touchA954() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A954));
		AF('i',union A954,m0,1)
		AF('L',union A954,m1,1)
		AF('l',union A954,m2,1)
		AF('s',union A954,m3,1)
		AF('i',union A954,m4,1)
		AF('B',union A954,m5,1)
		AF('l',union A954,m6,1)
		AF('j',union A954,m7,1)
		AF('I',union A954,m8,1)
		AF('J',union A954,m9,1)
		AF('S',union A954,m10,8)
		AF('c',union A954,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJCd{li}<iLlsiBljIJS[8]c>BpJcpL> */
#pragma pack(push,2)
union A955 { f m0; J m1; C m2; d m3; struct A953 m4; union A954 m5; B m6; p m7; J m8; c m9; p m10; L m11; };
#pragma pack(pop)
int f_cmpA955(const union A955 *x, const union A955 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA953(&x->m4, &y->m4) && f_cmpA954(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA955() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A955));
		AF('f',union A955,m0,1)
		AF('J',union A955,m1,1)
		AF('C',union A955,m2,1)
		AF('d',union A955,m3,1)
		AFa(union A955,m4,1,A953)
		AFa(union A955,m5,1,A954)
		AF('B',union A955,m6,1)
		AF('p',union A955,m7,1)
		AF('J',union A955,m8,1)
		AF('c',union A955,m9,1)
		AF('p',union A955,m10,1)
		AF('L',union A955,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI> */
#pragma pack(push,2)
union A956 { C m0; L m1; s m2; union A955 m3; d m4; p m5; C m6; f m7; I m8; };
#pragma pack(pop)
int f_cmpA956(const union A956 *x, const union A956 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA955(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA956() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A956));
		AF('C',union A956,m0,1)
		AF('L',union A956,m1,1)
		AF('s',union A956,m2,1)
		AFa(union A956,m3,1,A955)
		AF('d',union A956,m4,1)
		AF('p',union A956,m5,1)
		AF('C',union A956,m6,1)
		AF('f',union A956,m7,1)
		AF('I',union A956,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jIScpBCCdIJ} */
#pragma pack(push,4)
struct A957 { j m0; I m1; S m2; c m3; p m4; B m5; C m6; C m7; d m8; I m9; J m10; };
#pragma pack(pop)
int f_cmpA957(const struct A957 *x, const struct A957 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA957() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A957));
		AF('j',struct A957,m0,1)
		AF('I',struct A957,m1,1)
		AF('S',struct A957,m2,1)
		AF('c',struct A957,m3,1)
		AF('p',struct A957,m4,1)
		AF('B',struct A957,m5,1)
		AF('C',struct A957,m6,1)
		AF('C',struct A957,m7,1)
		AF('d',struct A957,m8,1)
		AF('I',struct A957,m9,1)
		AF('J',struct A957,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CjjBClii> */
#pragma pack(push,2)
union A958 { C m0; j m1; j m2; B m3; C m4; l m5; i m6; i m7; };
#pragma pack(pop)
int f_cmpA958(const union A958 *x, const union A958 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA958() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A958));
		AF('C',union A958,m0,1)
		AF('j',union A958,m1,1)
		AF('j',union A958,m2,1)
		AF('B',union A958,m3,1)
		AF('C',union A958,m4,1)
		AF('l',union A958,m5,1)
		AF('i',union A958,m6,1)
		AF('i',union A958,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LjciSBjJfp<CjjBClii>J> */
#pragma pack(push,2)
union A959 { L m0; j m1; c m2; i m3; S m4; B m5; j m6; J m7; f m8; p m9; union A958 m10; J m11; };
#pragma pack(pop)
int f_cmpA959(const union A959 *x, const union A959 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA958(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA959() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A959));
		AF('L',union A959,m0,1)
		AF('j',union A959,m1,1)
		AF('c',union A959,m2,1)
		AF('i',union A959,m3,1)
		AF('S',union A959,m4,1)
		AF('B',union A959,m5,1)
		AF('j',union A959,m6,1)
		AF('J',union A959,m7,1)
		AF('f',union A959,m8,1)
		AF('p',union A959,m9,1)
		AFa(union A959,m10,1,A958)
		AF('J',union A959,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BssijcJdsjid> */
#pragma pack(push,2)
union A960 { B m0; s m1; s m2; i m3; j m4; c m5; J m6; d m7; s m8; j m9; i m10; d m11; };
#pragma pack(pop)
int f_cmpA960(const union A960 *x, const union A960 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA960() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A960));
		AF('B',union A960,m0,1)
		AF('s',union A960,m1,1)
		AF('s',union A960,m2,1)
		AF('i',union A960,m3,1)
		AF('j',union A960,m4,1)
		AF('c',union A960,m5,1)
		AF('J',union A960,m6,1)
		AF('d',union A960,m7,1)
		AF('s',union A960,m8,1)
		AF('j',union A960,m9,1)
		AF('i',union A960,m10,1)
		AF('d',union A960,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fJd<BssijcJdsjid>dSCcIfcl> */
#pragma pack(push,4)
union A961 { f m0; J m1; d m2; union A960 m3; d m4; S m5; C m6; c m7; I m8; f m9; c m10; l m11; };
#pragma pack(pop)
int f_cmpA961(const union A961 *x, const union A961 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA960(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA961() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A961));
		AF('f',union A961,m0,1)
		AF('J',union A961,m1,1)
		AF('d',union A961,m2,1)
		AFa(union A961,m3,1,A960)
		AF('d',union A961,m4,1)
		AF('S',union A961,m5,1)
		AF('C',union A961,m6,1)
		AF('c',union A961,m7,1)
		AF('I',union A961,m8,1)
		AF('f',union A961,m9,1)
		AF('c',union A961,m10,1)
		AF('l',union A961,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is> */
#pragma pack(push,8)
union A962 { C m0; j m1; J m2; union A959 m3; C m4; B m5; union A961 m6; I m7; s m8; };
#pragma pack(pop)
int f_cmpA962(const union A962 *x, const union A962 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA959(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA961(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA962() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A962));
		AF('C',union A962,m0,1)
		AF('j',union A962,m1,1)
		AF('J',union A962,m2,1)
		AFa(union A962,m3,1,A959)
		AF('C',union A962,m4,1)
		AF('B',union A962,m5,1)
		AFa(union A962,m6,1,A961)
		AF('I',union A962,m7,1)
		AF('s',union A962,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IislccIiIiIl} */
#pragma pack(push,4)
struct A963 { I m0; i m1; s m2; l m3; c m4; c m5; I m6; i m7; I m8; i m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA963(const struct A963 *x, const struct A963 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA963() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A963));
		AF('I',struct A963,m0,1)
		AF('i',struct A963,m1,1)
		AF('s',struct A963,m2,1)
		AF('l',struct A963,m3,1)
		AF('c',struct A963,m4,1)
		AF('c',struct A963,m5,1)
		AF('I',struct A963,m6,1)
		AF('i',struct A963,m7,1)
		AF('I',struct A963,m8,1)
		AF('i',struct A963,m9,1)
		AF('I',struct A963,m10,1)
		AF('l',struct A963,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <f[15]f> */
#pragma pack(push,8)
union A964 { f m0[15]; f m1; };
#pragma pack(pop)
int f_cmpA964(const union A964 *x, const union A964 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && x->m0[9] == y->m0[9] && x->m0[10] == y->m0[10] && x->m0[11] == y->m0[11] && x->m0[12] == y->m0[12] && x->m0[13] == y->m0[13] && x->m0[14] == y->m0[14] && x->m1 == y->m1; };
DCaggr* f_touchA964() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A964));
		AF('f',union A964,m0,15)
		AF('f',union A964,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {i{IislccIiIiIl}Cd<f[15]f>fIji} */
#pragma pack(push,8)
struct A965 { i m0; struct A963 m1; C m2; d m3; union A964 m4; f m5; I m6; j m7; i m8; };
#pragma pack(pop)
int f_cmpA965(const struct A965 *x, const struct A965 *y) { return x->m0 == y->m0 && f_cmpA963(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA964(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA965() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A965));
		AF('i',struct A965,m0,1)
		AFa(struct A965,m1,1,A963)
		AF('C',struct A965,m2,1)
		AF('d',struct A965,m3,1)
		AFa(struct A965,m4,1,A964)
		AF('f',struct A965,m5,1)
		AF('I',struct A965,m6,1)
		AF('j',struct A965,m7,1)
		AF('i',struct A965,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LlI[4]I<>> */
#pragma pack(push,2)
union A966 { L m0; l m1; I m2[4]; I m3; union A30 m4; };
#pragma pack(pop)
int f_cmpA966(const union A966 *x, const union A966 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m3 == y->m3 && f_cmpA30(&x->m4, &y->m4); };
DCaggr* f_touchA966() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A966));
		AF('L',union A966,m0,1)
		AF('l',union A966,m1,1)
		AF('I',union A966,m2,4)
		AF('I',union A966,m3,1)
		AFa(union A966,m4,1,A30)
		dcCloseAggr(a);
	}
	return a;
};
/* <SdpSl> */
#pragma pack(push,4)
union A967 { S m0; d m1; p m2; S m3; l m4; };
#pragma pack(pop)
int f_cmpA967(const union A967 *x, const union A967 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA967() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A967));
		AF('S',union A967,m0,1)
		AF('d',union A967,m1,1)
		AF('p',union A967,m2,1)
		AF('S',union A967,m3,1)
		AF('l',union A967,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSldj} */
#pragma pack(push,1)
struct A968 { d m0; S m1; l m2; d m3; j m4; };
#pragma pack(pop)
int f_cmpA968(const struct A968 *x, const struct A968 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA968() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A968));
		AF('d',struct A968,m0,1)
		AF('S',struct A968,m1,1)
		AF('l',struct A968,m2,1)
		AF('d',struct A968,m3,1)
		AF('j',struct A968,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jpiSBdddLBIS} */
#pragma pack(push,2)
struct A969 { j m0; p m1; i m2; S m3; B m4; d m5; d m6; d m7; L m8; B m9; I m10; S m11; };
#pragma pack(pop)
int f_cmpA969(const struct A969 *x, const struct A969 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA969() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A969));
		AF('j',struct A969,m0,1)
		AF('p',struct A969,m1,1)
		AF('i',struct A969,m2,1)
		AF('S',struct A969,m3,1)
		AF('B',struct A969,m4,1)
		AF('d',struct A969,m5,1)
		AF('d',struct A969,m6,1)
		AF('d',struct A969,m7,1)
		AF('L',struct A969,m8,1)
		AF('B',struct A969,m9,1)
		AF('I',struct A969,m10,1)
		AF('S',struct A969,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CSLcCfLCLdiI} */
#pragma pack(push,4)
struct A970 { C m0; S m1; L m2; c m3; C m4; f m5; L m6; C m7; L m8; d m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA970(const struct A970 *x, const struct A970 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA970() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A970));
		AF('C',struct A970,m0,1)
		AF('S',struct A970,m1,1)
		AF('L',struct A970,m2,1)
		AF('c',struct A970,m3,1)
		AF('C',struct A970,m4,1)
		AF('f',struct A970,m5,1)
		AF('L',struct A970,m6,1)
		AF('C',struct A970,m7,1)
		AF('L',struct A970,m8,1)
		AF('d',struct A970,m9,1)
		AF('i',struct A970,m10,1)
		AF('I',struct A970,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pdfcLssL{CSLcCfLCLdiI}> */
#pragma pack(push,4)
union A971 { p m0; d m1; f m2; c m3; L m4; s m5; s m6; L m7; struct A970 m8; };
#pragma pack(pop)
int f_cmpA971(const union A971 *x, const union A971 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA970(&x->m8, &y->m8); };
DCaggr* f_touchA971() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A971));
		AF('p',union A971,m0,1)
		AF('d',union A971,m1,1)
		AF('f',union A971,m2,1)
		AF('c',union A971,m3,1)
		AF('L',union A971,m4,1)
		AF('s',union A971,m5,1)
		AF('s',union A971,m6,1)
		AF('L',union A971,m7,1)
		AFa(union A971,m8,1,A970)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIpSjjplsifI> */
#pragma pack(push,8)
union A972 { l m0; I m1; p m2; S m3; j m4; j m5; p m6; l m7; s m8; i m9; f m10; I m11; };
#pragma pack(pop)
int f_cmpA972(const union A972 *x, const union A972 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA972() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A972));
		AF('l',union A972,m0,1)
		AF('I',union A972,m1,1)
		AF('p',union A972,m2,1)
		AF('S',union A972,m3,1)
		AF('j',union A972,m4,1)
		AF('j',union A972,m5,1)
		AF('p',union A972,m6,1)
		AF('l',union A972,m7,1)
		AF('s',union A972,m8,1)
		AF('i',union A972,m9,1)
		AF('f',union A972,m10,1)
		AF('I',union A972,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SslspCBcpScS> */
#pragma pack(push,4)
union A973 { S m0; s m1; l m2; s m3; p m4; C m5; B m6; c m7; p m8; S m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA973(const union A973 *x, const union A973 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA973() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A973));
		AF('S',union A973,m0,1)
		AF('s',union A973,m1,1)
		AF('l',union A973,m2,1)
		AF('s',union A973,m3,1)
		AF('p',union A973,m4,1)
		AF('C',union A973,m5,1)
		AF('B',union A973,m6,1)
		AF('c',union A973,m7,1)
		AF('p',union A973,m8,1)
		AF('S',union A973,m9,1)
		AF('c',union A973,m10,1)
		AF('S',union A973,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pIBsBBJccSJB> */
#pragma pack(push,4)
union A974 { p m0; I m1; B m2; s m3; B m4; B m5; J m6; c m7; c m8; S m9; J m10; B m11; };
#pragma pack(pop)
int f_cmpA974(const union A974 *x, const union A974 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA974() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A974));
		AF('p',union A974,m0,1)
		AF('I',union A974,m1,1)
		AF('B',union A974,m2,1)
		AF('s',union A974,m3,1)
		AF('B',union A974,m4,1)
		AF('B',union A974,m5,1)
		AF('J',union A974,m6,1)
		AF('c',union A974,m7,1)
		AF('c',union A974,m8,1)
		AF('S',union A974,m9,1)
		AF('J',union A974,m10,1)
		AF('B',union A974,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<pIBsBBJccSJB>CISjiJ> */
#pragma pack(push,4)
union A975 { union A974 m0; C m1; I m2; S m3; j m4; i m5; J m6; };
#pragma pack(pop)
int f_cmpA975(const union A975 *x, const union A975 *y) { return f_cmpA974(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA975() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A975));
		AFa(union A975,m0,1,A974)
		AF('C',union A975,m1,1)
		AF('I',union A975,m2,1)
		AF('S',union A975,m3,1)
		AF('j',union A975,m4,1)
		AF('i',union A975,m5,1)
		AF('J',union A975,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fdCILSCdffJi} */
#pragma pack(push,4)
struct A976 { f m0; d m1; C m2; I m3; L m4; S m5; C m6; d m7; f m8; f m9; J m10; i m11; };
#pragma pack(pop)
int f_cmpA976(const struct A976 *x, const struct A976 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA976() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A976));
		AF('f',struct A976,m0,1)
		AF('d',struct A976,m1,1)
		AF('C',struct A976,m2,1)
		AF('I',struct A976,m3,1)
		AF('L',struct A976,m4,1)
		AF('S',struct A976,m5,1)
		AF('C',struct A976,m6,1)
		AF('d',struct A976,m7,1)
		AF('f',struct A976,m8,1)
		AF('f',struct A976,m9,1)
		AF('J',struct A976,m10,1)
		AF('i',struct A976,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {piCfIsp{sf}Lf{fdCILSCdffJi}p} */
#pragma pack(push,2)
struct A977 { p m0; i m1; C m2; f m3; I m4; s m5; p m6; struct A216 m7; L m8; f m9; struct A976 m10; p m11; };
#pragma pack(pop)
int f_cmpA977(const struct A977 *x, const struct A977 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA216(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA976(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA977() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A977));
		AF('p',struct A977,m0,1)
		AF('i',struct A977,m1,1)
		AF('C',struct A977,m2,1)
		AF('f',struct A977,m3,1)
		AF('I',struct A977,m4,1)
		AF('s',struct A977,m5,1)
		AF('p',struct A977,m6,1)
		AFa(struct A977,m7,1,A216)
		AF('L',struct A977,m8,1)
		AF('f',struct A977,m9,1)
		AFa(struct A977,m10,1,A976)
		AF('p',struct A977,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf> */
#pragma pack(push,4)
union A978 { C m0; p m1; i m2; j m3; struct A977 m4; C m5; C m6; S m7; c m8; B m9; d m10; f m11; };
#pragma pack(pop)
int f_cmpA978(const union A978 *x, const union A978 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA977(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA978() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A978));
		AF('C',union A978,m0,1)
		AF('p',union A978,m1,1)
		AF('i',union A978,m2,1)
		AF('j',union A978,m3,1)
		AFa(union A978,m4,1,A977)
		AF('C',union A978,m5,1)
		AF('C',union A978,m6,1)
		AF('S',union A978,m7,1)
		AF('c',union A978,m8,1)
		AF('B',union A978,m9,1)
		AF('d',union A978,m10,1)
		AF('f',union A978,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cCSBcdfjJ> */
#pragma pack(push,4)
union A979 { c m0; C m1; S m2; B m3; c m4; d m5; f m6; j m7; J m8; };
#pragma pack(pop)
int f_cmpA979(const union A979 *x, const union A979 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA979() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A979));
		AF('c',union A979,m0,1)
		AF('C',union A979,m1,1)
		AF('S',union A979,m2,1)
		AF('B',union A979,m3,1)
		AF('c',union A979,m4,1)
		AF('d',union A979,m5,1)
		AF('f',union A979,m6,1)
		AF('j',union A979,m7,1)
		AF('J',union A979,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ddijlJd} */
#pragma pack(push,4)
struct A980 { d m0; d m1; i m2; j m3; l m4; J m5; d m6; };
#pragma pack(pop)
int f_cmpA980(const struct A980 *x, const struct A980 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA980() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A980));
		AF('d',struct A980,m0,1)
		AF('d',struct A980,m1,1)
		AF('i',struct A980,m2,1)
		AF('j',struct A980,m3,1)
		AF('l',struct A980,m4,1)
		AF('J',struct A980,m5,1)
		AF('d',struct A980,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ji> */
#pragma pack(push,1)
union A981 { J m0; i m1; };
#pragma pack(pop)
int f_cmpA981(const union A981 *x, const union A981 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA981() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A981));
		AF('J',union A981,m0,1)
		AF('i',union A981,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J[9]<cCSBcdfjJ>[5]d{ddijlJd}<Ji>d[11]IJSBlL} */
#pragma pack(push,4)
struct A982 { J m0[9]; union A979 m1[5]; d m2; struct A980 m3; union A981 m4; d m5[11]; I m6; J m7; S m8; B m9; l m10; L m11; };
#pragma pack(pop)
int f_cmpA982(const struct A982 *x, const struct A982 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m0[7] == y->m0[7] && x->m0[8] == y->m0[8] && f_cmpA979(&x->m1[0], &y->m1[0]) && f_cmpA979(&x->m1[1], &y->m1[1]) && f_cmpA979(&x->m1[2], &y->m1[2]) && f_cmpA979(&x->m1[3], &y->m1[3]) && f_cmpA979(&x->m1[4], &y->m1[4]) && x->m2 == y->m2 && f_cmpA980(&x->m3, &y->m3) && f_cmpA981(&x->m4, &y->m4) && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA982() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A982));
		AF('J',struct A982,m0,9)
		AFa(struct A982,m1,5,A979)
		AF('d',struct A982,m2,1)
		AFa(struct A982,m3,1,A980)
		AFa(struct A982,m4,1,A981)
		AF('d',struct A982,m5,11)
		AF('I',struct A982,m6,1)
		AF('J',struct A982,m7,1)
		AF('S',struct A982,m8,1)
		AF('B',struct A982,m9,1)
		AF('l',struct A982,m10,1)
		AF('L',struct A982,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BciIsp> */
#pragma pack(push,4)
union A983 { B m0; c m1; i m2; I m3; s m4; p m5; };
#pragma pack(pop)
int f_cmpA983(const union A983 *x, const union A983 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA983() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A983));
		AF('B',union A983,m0,1)
		AF('c',union A983,m1,1)
		AF('i',union A983,m2,1)
		AF('I',union A983,m3,1)
		AF('s',union A983,m4,1)
		AF('p',union A983,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sdscC[8]IIjCfp} */
#pragma pack(push,4)
struct A984 { s m0; d m1; s m2; c m3; C m4[8]; I m5; I m6; j m7; C m8; f m9; p m10; };
#pragma pack(pop)
int f_cmpA984(const struct A984 *x, const struct A984 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA984() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A984));
		AF('s',struct A984,m0,1)
		AF('d',struct A984,m1,1)
		AF('s',struct A984,m2,1)
		AF('c',struct A984,m3,1)
		AF('C',struct A984,m4,8)
		AF('I',struct A984,m5,1)
		AF('I',struct A984,m6,1)
		AF('j',struct A984,m7,1)
		AF('C',struct A984,m8,1)
		AF('f',struct A984,m9,1)
		AF('p',struct A984,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCBBIpJJCJc> */
#pragma pack(push,4)
union A985 { s m0; C m1; B m2; B m3; I m4; p m5; J m6; J m7; C m8; J m9; c m10; };
#pragma pack(pop)
int f_cmpA985(const union A985 *x, const union A985 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA985() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A985));
		AF('s',union A985,m0,1)
		AF('C',union A985,m1,1)
		AF('B',union A985,m2,1)
		AF('B',union A985,m3,1)
		AF('I',union A985,m4,1)
		AF('p',union A985,m5,1)
		AF('J',union A985,m6,1)
		AF('J',union A985,m7,1)
		AF('C',union A985,m8,1)
		AF('J',union A985,m9,1)
		AF('c',union A985,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {icSiBljfcps} */
#pragma pack(push,1)
struct A986 { i m0; c m1; S m2; i m3; B m4; l m5; j m6; f m7; c m8; p m9; s m10; };
#pragma pack(pop)
int f_cmpA986(const struct A986 *x, const struct A986 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA986() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A986));
		AF('i',struct A986,m0,1)
		AF('c',struct A986,m1,1)
		AF('S',struct A986,m2,1)
		AF('i',struct A986,m3,1)
		AF('B',struct A986,m4,1)
		AF('l',struct A986,m5,1)
		AF('j',struct A986,m6,1)
		AF('f',struct A986,m7,1)
		AF('c',struct A986,m8,1)
		AF('p',struct A986,m9,1)
		AF('s',struct A986,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iBj} */
#pragma pack(push,8)
struct A987 { i m0; B m1; j m2; };
#pragma pack(pop)
int f_cmpA987(const struct A987 *x, const struct A987 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA987() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A987));
		AF('i',struct A987,m0,1)
		AF('B',struct A987,m1,1)
		AF('j',struct A987,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJBSiJjcIcSp} */
#pragma pack(push,4)
struct A988 { p m0; J m1; B m2; S m3; i m4; J m5; j m6; c m7; I m8; c m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA988(const struct A988 *x, const struct A988 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA988() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A988));
		AF('p',struct A988,m0,1)
		AF('J',struct A988,m1,1)
		AF('B',struct A988,m2,1)
		AF('S',struct A988,m3,1)
		AF('i',struct A988,m4,1)
		AF('J',struct A988,m5,1)
		AF('j',struct A988,m6,1)
		AF('c',struct A988,m7,1)
		AF('I',struct A988,m8,1)
		AF('c',struct A988,m9,1)
		AF('S',struct A988,m10,1)
		AF('p',struct A988,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lcddCJ> */
#pragma pack(push,2)
union A989 { l m0; c m1; d m2; d m3; C m4; J m5; };
#pragma pack(pop)
int f_cmpA989(const union A989 *x, const union A989 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA989() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A989));
		AF('l',union A989,m0,1)
		AF('c',union A989,m1,1)
		AF('d',union A989,m2,1)
		AF('d',union A989,m3,1)
		AF('C',union A989,m4,1)
		AF('J',union A989,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBi} */
#pragma pack(push,2)
struct A990 { I m0; B m1; i m2; };
#pragma pack(pop)
int f_cmpA990(const struct A990 *x, const struct A990 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA990() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A990));
		AF('I',struct A990,m0,1)
		AF('B',struct A990,m1,1)
		AF('i',struct A990,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JBspd{IBi}BlBpf> */
#pragma pack(push,4)
union A991 { J m0; B m1; s m2; p m3; d m4; struct A990 m5; B m6; l m7; B m8; p m9; f m10; };
#pragma pack(pop)
int f_cmpA991(const union A991 *x, const union A991 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA990(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA991() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A991));
		AF('J',union A991,m0,1)
		AF('B',union A991,m1,1)
		AF('s',union A991,m2,1)
		AF('p',union A991,m3,1)
		AF('d',union A991,m4,1)
		AFa(union A991,m5,1,A990)
		AF('B',union A991,m6,1)
		AF('l',union A991,m7,1)
		AF('B',union A991,m8,1)
		AF('p',union A991,m9,1)
		AF('f',union A991,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fBl} */
#pragma pack(push,8)
struct A992 { f m0; B m1; l m2; };
#pragma pack(pop)
int f_cmpA992(const struct A992 *x, const struct A992 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA992() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A992));
		AF('f',struct A992,m0,1)
		AF('B',struct A992,m1,1)
		AF('l',struct A992,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CLIfsBLCdspJ} */
#pragma pack(push,1)
struct A993 { C m0; L m1; I m2; f m3; s m4; B m5; L m6; C m7; d m8; s m9; p m10; J m11; };
#pragma pack(pop)
int f_cmpA993(const struct A993 *x, const struct A993 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA993() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A993));
		AF('C',struct A993,m0,1)
		AF('L',struct A993,m1,1)
		AF('I',struct A993,m2,1)
		AF('f',struct A993,m3,1)
		AF('s',struct A993,m4,1)
		AF('B',struct A993,m5,1)
		AF('L',struct A993,m6,1)
		AF('C',struct A993,m7,1)
		AF('d',struct A993,m8,1)
		AF('s',struct A993,m9,1)
		AF('p',struct A993,m10,1)
		AF('J',struct A993,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdcipJLcilpi[5]> */
#pragma pack(push,4)
union A994 { I m0; d m1; c m2; i m3; p m4; J m5; L m6; c m7; i m8; l m9; p m10; i m11[5]; };
#pragma pack(pop)
int f_cmpA994(const union A994 *x, const union A994 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4]; };
DCaggr* f_touchA994() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A994));
		AF('I',union A994,m0,1)
		AF('d',union A994,m1,1)
		AF('c',union A994,m2,1)
		AF('i',union A994,m3,1)
		AF('p',union A994,m4,1)
		AF('J',union A994,m5,1)
		AF('L',union A994,m6,1)
		AF('c',union A994,m7,1)
		AF('i',union A994,m8,1)
		AF('l',union A994,m9,1)
		AF('p',union A994,m10,1)
		AF('i',union A994,m11,5)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{j}sfCs{CLIfsBLCdspJ}<><IdcipJLcilpi[5]>sdc} */
#pragma pack(push,8)
struct A995 { p m0; struct A80 m1; s m2; f m3; C m4; s m5; struct A993 m6; union A30 m7; union A994 m8; s m9; d m10; c m11; };
#pragma pack(pop)
int f_cmpA995(const struct A995 *x, const struct A995 *y) { return x->m0 == y->m0 && f_cmpA80(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA993(&x->m6, &y->m6) && f_cmpA30(&x->m7, &y->m7) && f_cmpA994(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA995() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A995));
		AF('p',struct A995,m0,1)
		AFa(struct A995,m1,1,A80)
		AF('s',struct A995,m2,1)
		AF('f',struct A995,m3,1)
		AF('C',struct A995,m4,1)
		AF('s',struct A995,m5,1)
		AFa(struct A995,m6,1,A993)
		AFa(struct A995,m7,1,A30)
		AFa(struct A995,m8,1,A994)
		AF('s',struct A995,m9,1)
		AF('d',struct A995,m10,1)
		AF('c',struct A995,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {flJpj{fBl}f{p{j}sfCs{CLIfsBLCdspJ}<><IdcipJLcilpi[5]>sdc}} */
#pragma pack(push,8)
struct A996 { f m0; l m1; J m2; p m3; j m4; struct A992 m5; f m6; struct A995 m7; };
#pragma pack(pop)
int f_cmpA996(const struct A996 *x, const struct A996 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA992(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA995(&x->m7, &y->m7); };
DCaggr* f_touchA996() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A996));
		AF('f',struct A996,m0,1)
		AF('l',struct A996,m1,1)
		AF('J',struct A996,m2,1)
		AF('p',struct A996,m3,1)
		AF('j',struct A996,m4,1)
		AFa(struct A996,m5,1,A992)
		AF('f',struct A996,m6,1)
		AFa(struct A996,m7,1,A995)
		dcCloseAggr(a);
	}
	return a;
};
/* {iCIsLIlSfiIp} */
#pragma pack(push,4)
struct A997 { i m0; C m1; I m2; s m3; L m4; I m5; l m6; S m7; f m8; i m9; I m10; p m11; };
#pragma pack(pop)
int f_cmpA997(const struct A997 *x, const struct A997 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA997() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A997));
		AF('i',struct A997,m0,1)
		AF('C',struct A997,m1,1)
		AF('I',struct A997,m2,1)
		AF('s',struct A997,m3,1)
		AF('L',struct A997,m4,1)
		AF('I',struct A997,m5,1)
		AF('l',struct A997,m6,1)
		AF('S',struct A997,m7,1)
		AF('f',struct A997,m8,1)
		AF('i',struct A997,m9,1)
		AF('I',struct A997,m10,1)
		AF('p',struct A997,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fljiScBj[16]fLdf> */
#pragma pack(push,4)
union A998 { f m0; l m1; j m2; i m3; S m4; c m5; B m6; j m7[16]; f m8; L m9; d m10; f m11; };
#pragma pack(pop)
int f_cmpA998(const union A998 *x, const union A998 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m7[14] == y->m7[14] && x->m7[15] == y->m7[15] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA998() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A998));
		AF('f',union A998,m0,1)
		AF('l',union A998,m1,1)
		AF('j',union A998,m2,1)
		AF('i',union A998,m3,1)
		AF('S',union A998,m4,1)
		AF('c',union A998,m5,1)
		AF('B',union A998,m6,1)
		AF('j',union A998,m7,16)
		AF('f',union A998,m8,1)
		AF('L',union A998,m9,1)
		AF('d',union A998,m10,1)
		AF('f',union A998,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBscfICI> */
#pragma pack(push,8)
union A999 { S m0; B m1; s m2; c m3; f m4; I m5; C m6; I m7; };
#pragma pack(pop)
int f_cmpA999(const union A999 *x, const union A999 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA999() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A999));
		AF('S',union A999,m0,1)
		AF('B',union A999,m1,1)
		AF('s',union A999,m2,1)
		AF('c',union A999,m3,1)
		AF('f',union A999,m4,1)
		AF('I',union A999,m5,1)
		AF('C',union A999,m6,1)
		AF('I',union A999,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iJ<SBscfICI>Jj} */
#pragma pack(push,8)
struct A1000 { i m0; J m1; union A999 m2; J m3; j m4; };
#pragma pack(pop)
int f_cmpA1000(const struct A1000 *x, const struct A1000 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA999(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1000() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1000));
		AF('i',struct A1000,m0,1)
		AF('J',struct A1000,m1,1)
		AFa(struct A1000,m2,1,A999)
		AF('J',struct A1000,m3,1)
		AF('j',struct A1000,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{iCIsLIlSfiIp}SJpL<fljiScBj[16]fLdf>C{iJ<SBscfICI>Jj}l} */
#pragma pack(push,2)
struct A1001 { struct A997 m0; S m1; J m2; p m3; L m4; union A998 m5; C m6; struct A1000 m7; l m8; };
#pragma pack(pop)
int f_cmpA1001(const struct A1001 *x, const struct A1001 *y) { return f_cmpA997(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA998(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1000(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA1001() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1001));
		AFa(struct A1001,m0,1,A997)
		AF('S',struct A1001,m1,1)
		AF('J',struct A1001,m2,1)
		AF('p',struct A1001,m3,1)
		AF('L',struct A1001,m4,1)
		AFa(struct A1001,m5,1,A998)
		AF('C',struct A1001,m6,1)
		AFa(struct A1001,m7,1,A1000)
		AF('l',struct A1001,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cL[13]IBBsdLLcLI> */
#pragma pack(push,4)
union A1002 { c m0; L m1[13]; I m2; B m3; B m4; s m5; d m6; L m7; L m8; c m9; L m10; I m11; };
#pragma pack(pop)
int f_cmpA1002(const union A1002 *x, const union A1002 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1002() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1002));
		AF('c',union A1002,m0,1)
		AF('L',union A1002,m1,13)
		AF('I',union A1002,m2,1)
		AF('B',union A1002,m3,1)
		AF('B',union A1002,m4,1)
		AF('s',union A1002,m5,1)
		AF('d',union A1002,m6,1)
		AF('L',union A1002,m7,1)
		AF('L',union A1002,m8,1)
		AF('c',union A1002,m9,1)
		AF('L',union A1002,m10,1)
		AF('I',union A1002,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBLjBSCjL> */
#pragma pack(push,8)
union A1003 { i m0; B m1; L m2; j m3; B m4; S m5; C m6; j m7; L m8; };
#pragma pack(pop)
int f_cmpA1003(const union A1003 *x, const union A1003 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1003() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1003));
		AF('i',union A1003,m0,1)
		AF('B',union A1003,m1,1)
		AF('L',union A1003,m2,1)
		AF('j',union A1003,m3,1)
		AF('B',union A1003,m4,1)
		AF('S',union A1003,m5,1)
		AF('C',union A1003,m6,1)
		AF('j',union A1003,m7,1)
		AF('L',union A1003,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jL> */
#pragma pack(push,1)
union A1004 { j m0; L m1; };
#pragma pack(pop)
int f_cmpA1004(const union A1004 *x, const union A1004 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1004() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1004));
		AF('j',union A1004,m0,1)
		AF('L',union A1004,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B> */
#pragma pack(push,4)
union A1005 { union A1002 m0; c m1; J m2; s m3; union A1003 m4; L m5[14]; c m6; union A1004 m7; B m8; };
#pragma pack(pop)
int f_cmpA1005(const union A1005 *x, const union A1005 *y) { return f_cmpA1002(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1003(&x->m4, &y->m4) && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m6 == y->m6 && f_cmpA1004(&x->m7, &y->m7) && x->m8 == y->m8; };
DCaggr* f_touchA1005() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1005));
		AFa(union A1005,m0,1,A1002)
		AF('c',union A1005,m1,1)
		AF('J',union A1005,m2,1)
		AF('s',union A1005,m3,1)
		AFa(union A1005,m4,1,A1003)
		AF('L',union A1005,m5,14)
		AF('c',union A1005,m6,1)
		AFa(union A1005,m7,1,A1004)
		AF('B',union A1005,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LIfBLcc> */
#pragma pack(push,4)
union A1006 { L m0; I m1; f m2; B m3; L m4; c m5; c m6; };
#pragma pack(pop)
int f_cmpA1006(const union A1006 *x, const union A1006 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1006() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1006));
		AF('L',union A1006,m0,1)
		AF('I',union A1006,m1,1)
		AF('f',union A1006,m2,1)
		AF('B',union A1006,m3,1)
		AF('L',union A1006,m4,1)
		AF('c',union A1006,m5,1)
		AF('c',union A1006,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fISIspfJl> */
#pragma pack(push,4)
union A1007 { f m0; I m1; S m2; I m3; s m4; p m5; f m6; J m7; l m8; };
#pragma pack(pop)
int f_cmpA1007(const union A1007 *x, const union A1007 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1007() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1007));
		AF('f',union A1007,m0,1)
		AF('I',union A1007,m1,1)
		AF('S',union A1007,m2,1)
		AF('I',union A1007,m3,1)
		AF('s',union A1007,m4,1)
		AF('p',union A1007,m5,1)
		AF('f',union A1007,m6,1)
		AF('J',union A1007,m7,1)
		AF('l',union A1007,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LcJfldIidLJs> */
#pragma pack(push,4)
union A1008 { L m0; c m1; J m2; f m3; l m4; d m5; I m6; i m7; d m8; L m9; J m10; s m11; };
#pragma pack(pop)
int f_cmpA1008(const union A1008 *x, const union A1008 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1008() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1008));
		AF('L',union A1008,m0,1)
		AF('c',union A1008,m1,1)
		AF('J',union A1008,m2,1)
		AF('f',union A1008,m3,1)
		AF('l',union A1008,m4,1)
		AF('d',union A1008,m5,1)
		AF('I',union A1008,m6,1)
		AF('i',union A1008,m7,1)
		AF('d',union A1008,m8,1)
		AF('L',union A1008,m9,1)
		AF('J',union A1008,m10,1)
		AF('s',union A1008,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SBiCfCcLBSpc> */
#pragma pack(push,2)
union A1009 { S m0; B m1; i m2; C m3; f m4; C m5; c m6; L m7; B m8; S m9; p m10; c m11; };
#pragma pack(pop)
int f_cmpA1009(const union A1009 *x, const union A1009 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1009() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1009));
		AF('S',union A1009,m0,1)
		AF('B',union A1009,m1,1)
		AF('i',union A1009,m2,1)
		AF('C',union A1009,m3,1)
		AF('f',union A1009,m4,1)
		AF('C',union A1009,m5,1)
		AF('c',union A1009,m6,1)
		AF('L',union A1009,m7,1)
		AF('B',union A1009,m8,1)
		AF('S',union A1009,m9,1)
		AF('p',union A1009,m10,1)
		AF('c',union A1009,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <s<SBiCfCcLBSpc>cSBjB> */
#pragma pack(push,2)
union A1010 { s m0; union A1009 m1; c m2; S m3; B m4; j m5; B m6; };
#pragma pack(pop)
int f_cmpA1010(const union A1010 *x, const union A1010 *y) { return x->m0 == y->m0 && f_cmpA1009(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1010() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1010));
		AF('s',union A1010,m0,1)
		AFa(union A1010,m1,1,A1009)
		AF('c',union A1010,m2,1)
		AF('S',union A1010,m3,1)
		AF('B',union A1010,m4,1)
		AF('j',union A1010,m5,1)
		AF('B',union A1010,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ijC> */
#pragma pack(push,2)
union A1011 { i m0; j m1; C m2; };
#pragma pack(pop)
int f_cmpA1011(const union A1011 *x, const union A1011 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1011() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1011));
		AF('i',union A1011,m0,1)
		AF('j',union A1011,m1,1)
		AF('C',union A1011,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bj[11]iLBISJS> */
#pragma pack(push,2)
union A1012 { B m0; j m1[11]; i m2; L m3; B m4; I m5; S m6; J m7; S m8; };
#pragma pack(pop)
int f_cmpA1012(const union A1012 *x, const union A1012 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1012() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1012));
		AF('B',union A1012,m0,1)
		AF('j',union A1012,m1,11)
		AF('i',union A1012,m2,1)
		AF('L',union A1012,m3,1)
		AF('B',union A1012,m4,1)
		AF('I',union A1012,m5,1)
		AF('S',union A1012,m6,1)
		AF('J',union A1012,m7,1)
		AF('S',union A1012,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pJiLd> */
#pragma pack(push,8)
union A1013 { p m0; J m1; i m2; L m3; d m4; };
#pragma pack(pop)
int f_cmpA1013(const union A1013 *x, const union A1013 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1013() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1013));
		AF('p',union A1013,m0,1)
		AF('J',union A1013,m1,1)
		AF('i',union A1013,m2,1)
		AF('L',union A1013,m3,1)
		AF('d',union A1013,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>> */
#pragma pack(push,8)
union A1014 { B m0; d m1; d m2; union A1011 m3; S m4; C m5; union A1012 m6; j m7; i m8; i m9; S m10; union A1013 m11; };
#pragma pack(pop)
int f_cmpA1014(const union A1014 *x, const union A1014 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1011(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1012(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1013(&x->m11, &y->m11); };
DCaggr* f_touchA1014() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1014));
		AF('B',union A1014,m0,1)
		AF('d',union A1014,m1,1)
		AF('d',union A1014,m2,1)
		AFa(union A1014,m3,1,A1011)
		AF('S',union A1014,m4,1)
		AF('C',union A1014,m5,1)
		AFa(union A1014,m6,1,A1012)
		AF('j',union A1014,m7,1)
		AF('i',union A1014,m8,1)
		AF('i',union A1014,m9,1)
		AF('S',union A1014,m10,1)
		AFa(union A1014,m11,1,A1013)
		dcCloseAggr(a);
	}
	return a;
};
/* {cpddcC<>SflCd} */
#pragma pack(push,8)
struct A1015 { c m0; p m1; d m2; d m3; c m4; C m5; union A30 m6; S m7; f m8; l m9; C m10; d m11; };
#pragma pack(pop)
int f_cmpA1015(const struct A1015 *x, const struct A1015 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA30(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1015() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1015));
		AF('c',struct A1015,m0,1)
		AF('p',struct A1015,m1,1)
		AF('d',struct A1015,m2,1)
		AF('d',struct A1015,m3,1)
		AF('c',struct A1015,m4,1)
		AF('C',struct A1015,m5,1)
		AFa(struct A1015,m6,1,A30)
		AF('S',struct A1015,m7,1)
		AF('f',struct A1015,m8,1)
		AF('l',struct A1015,m9,1)
		AF('C',struct A1015,m10,1)
		AF('d',struct A1015,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<>SflCd}S> */
#pragma pack(push,4)
union A1016 { union A1014 m0; p m1; s m2; struct A1015 m3; S m4; };
#pragma pack(pop)
int f_cmpA1016(const union A1016 *x, const union A1016 *y) { return f_cmpA1014(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1015(&x->m3, &y->m3) && x->m4 == y->m4; };
DCaggr* f_touchA1016() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1016));
		AFa(union A1016,m0,1,A1014)
		AF('p',union A1016,m1,1)
		AF('s',union A1016,m2,1)
		AFa(union A1016,m3,1,A1015)
		AF('S',union A1016,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {liLLCpffJJpf} */
#pragma pack(push,8)
struct A1017 { l m0; i m1; L m2; L m3; C m4; p m5; f m6; f m7; J m8; J m9; p m10; f m11; };
#pragma pack(pop)
int f_cmpA1017(const struct A1017 *x, const struct A1017 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1017() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1017));
		AF('l',struct A1017,m0,1)
		AF('i',struct A1017,m1,1)
		AF('L',struct A1017,m2,1)
		AF('L',struct A1017,m3,1)
		AF('C',struct A1017,m4,1)
		AF('p',struct A1017,m5,1)
		AF('f',struct A1017,m6,1)
		AF('f',struct A1017,m7,1)
		AF('J',struct A1017,m8,1)
		AF('J',struct A1017,m9,1)
		AF('p',struct A1017,m10,1)
		AF('f',struct A1017,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bdisjps} */
#pragma pack(push,4)
struct A1018 { B m0; d m1; i m2; s m3; j m4; p m5; s m6; };
#pragma pack(pop)
int f_cmpA1018(const struct A1018 *x, const struct A1018 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1018() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1018));
		AF('B',struct A1018,m0,1)
		AF('d',struct A1018,m1,1)
		AF('i',struct A1018,m2,1)
		AF('s',struct A1018,m3,1)
		AF('j',struct A1018,m4,1)
		AF('p',struct A1018,m5,1)
		AF('s',struct A1018,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LccifffsJBSS} */
#pragma pack(push,1)
struct A1019 { L m0; c m1; c m2; i m3; f m4; f m5; f m6; s m7; J m8; B m9; S m10; S m11; };
#pragma pack(pop)
int f_cmpA1019(const struct A1019 *x, const struct A1019 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1019() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1019));
		AF('L',struct A1019,m0,1)
		AF('c',struct A1019,m1,1)
		AF('c',struct A1019,m2,1)
		AF('i',struct A1019,m3,1)
		AF('f',struct A1019,m4,1)
		AF('f',struct A1019,m5,1)
		AF('f',struct A1019,m6,1)
		AF('s',struct A1019,m7,1)
		AF('J',struct A1019,m8,1)
		AF('B',struct A1019,m9,1)
		AF('S',struct A1019,m10,1)
		AF('S',struct A1019,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LiI> */
#pragma pack(push,2)
union A1020 { L m0; i m1; I m2; };
#pragma pack(pop)
int f_cmpA1020(const union A1020 *x, const union A1020 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1020() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1020));
		AF('L',union A1020,m0,1)
		AF('i',union A1020,m1,1)
		AF('I',union A1020,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlJ> */
#pragma pack(push,8)
union A1021 { I m0; l m1; J m2; };
#pragma pack(pop)
int f_cmpA1021(const union A1021 *x, const union A1021 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1021() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1021));
		AF('I',union A1021,m0,1)
		AF('l',union A1021,m1,1)
		AF('J',union A1021,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBCc} */
#pragma pack(push,4)
struct A1022 { S m0; B m1; C m2; c m3; };
#pragma pack(pop)
int f_cmpA1022(const struct A1022 *x, const struct A1022 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1022() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1022));
		AF('S',struct A1022,m0,1)
		AF('B',struct A1022,m1,1)
		AF('C',struct A1022,m2,1)
		AF('c',struct A1022,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ss} */
#pragma pack(push,2)
struct A1023 { S m0; s m1; };
#pragma pack(pop)
int f_cmpA1023(const struct A1023 *x, const struct A1023 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1023() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1023));
		AF('S',struct A1023,m0,1)
		AF('s',struct A1023,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cfJlScdI> */
#pragma pack(push,1)
union A1024 { c m0; f m1; J m2; l m3; S m4; c m5; d m6; I m7; };
#pragma pack(pop)
int f_cmpA1024(const union A1024 *x, const union A1024 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1024() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1024));
		AF('c',union A1024,m0,1)
		AF('f',union A1024,m1,1)
		AF('J',union A1024,m2,1)
		AF('l',union A1024,m3,1)
		AF('S',union A1024,m4,1)
		AF('c',union A1024,m5,1)
		AF('d',union A1024,m6,1)
		AF('I',union A1024,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BcS<cfJlScdI>BpBdJSSd> */
#pragma pack(push,4)
union A1025 { B m0; c m1; S m2; union A1024 m3; B m4; p m5; B m6; d m7; J m8; S m9; S m10; d m11; };
#pragma pack(pop)
int f_cmpA1025(const union A1025 *x, const union A1025 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1024(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1025() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1025));
		AF('B',union A1025,m0,1)
		AF('c',union A1025,m1,1)
		AF('S',union A1025,m2,1)
		AFa(union A1025,m3,1,A1024)
		AF('B',union A1025,m4,1)
		AF('p',union A1025,m5,1)
		AF('B',union A1025,m6,1)
		AF('d',union A1025,m7,1)
		AF('J',union A1025,m8,1)
		AF('S',union A1025,m9,1)
		AF('S',union A1025,m10,1)
		AF('d',union A1025,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc} */
#pragma pack(push,2)
struct A1026 { c m0; j m1; S m2; struct A1023 m3; f m4; union A1025 m5; i m6; f m7; c m8; };
#pragma pack(pop)
int f_cmpA1026(const struct A1026 *x, const struct A1026 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1023(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1025(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1026() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1026));
		AF('c',struct A1026,m0,1)
		AF('j',struct A1026,m1,1)
		AF('S',struct A1026,m2,1)
		AFa(struct A1026,m3,1,A1023)
		AF('f',struct A1026,m4,1)
		AFa(struct A1026,m5,1,A1025)
		AF('i',struct A1026,m6,1)
		AF('f',struct A1026,m7,1)
		AF('c',struct A1026,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfiilBJIB} */
#pragma pack(push,8)
struct A1027 { I m0; f m1; i m2; i m3; l m4; B m5; J m6; I m7; B m8; };
#pragma pack(pop)
int f_cmpA1027(const struct A1027 *x, const struct A1027 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1027() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1027));
		AF('I',struct A1027,m0,1)
		AF('f',struct A1027,m1,1)
		AF('i',struct A1027,m2,1)
		AF('i',struct A1027,m3,1)
		AF('l',struct A1027,m4,1)
		AF('B',struct A1027,m5,1)
		AF('J',struct A1027,m6,1)
		AF('I',struct A1027,m7,1)
		AF('B',struct A1027,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSSsjS[15]BJc} */
#pragma pack(push,2)
struct A1028 { c m0; S m1; S m2; s m3; j m4; S m5[15]; B m6; J m7; c m8; };
#pragma pack(pop)
int f_cmpA1028(const struct A1028 *x, const struct A1028 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m5[13] == y->m5[13] && x->m5[14] == y->m5[14] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1028() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1028));
		AF('c',struct A1028,m0,1)
		AF('S',struct A1028,m1,1)
		AF('S',struct A1028,m2,1)
		AF('s',struct A1028,m3,1)
		AF('j',struct A1028,m4,1)
		AF('S',struct A1028,m5,15)
		AF('B',struct A1028,m6,1)
		AF('J',struct A1028,m7,1)
		AF('c',struct A1028,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfdBdl[5]SCIBjj} */
#pragma pack(push,4)
struct A1029 { c m0; f m1; d m2; B m3; d m4; l m5[5]; S m6; C m7; I m8; B m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA1029(const struct A1029 *x, const struct A1029 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1029() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1029));
		AF('c',struct A1029,m0,1)
		AF('f',struct A1029,m1,1)
		AF('d',struct A1029,m2,1)
		AF('B',struct A1029,m3,1)
		AF('d',struct A1029,m4,1)
		AF('l',struct A1029,m5,5)
		AF('S',struct A1029,m6,1)
		AF('C',struct A1029,m7,1)
		AF('I',struct A1029,m8,1)
		AF('B',struct A1029,m9,1)
		AF('j',struct A1029,m10,1)
		AF('j',struct A1029,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cSIBpLLlCBfs} */
#pragma pack(push,8)
struct A1030 { c m0; S m1; I m2; B m3; p m4; L m5; L m6; l m7; C m8; B m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA1030(const struct A1030 *x, const struct A1030 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1030() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1030));
		AF('c',struct A1030,m0,1)
		AF('S',struct A1030,m1,1)
		AF('I',struct A1030,m2,1)
		AF('B',struct A1030,m3,1)
		AF('p',struct A1030,m4,1)
		AF('L',struct A1030,m5,1)
		AF('L',struct A1030,m6,1)
		AF('l',struct A1030,m7,1)
		AF('C',struct A1030,m8,1)
		AF('B',struct A1030,m9,1)
		AF('f',struct A1030,m10,1)
		AF('s',struct A1030,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlsdI} */
#pragma pack(push,2)
struct A1031 { S m0; l m1; s m2; d m3; I m4; };
#pragma pack(pop)
int f_cmpA1031(const struct A1031 *x, const struct A1031 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1031() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1031));
		AF('S',struct A1031,m0,1)
		AF('l',struct A1031,m1,1)
		AF('s',struct A1031,m2,1)
		AF('d',struct A1031,m3,1)
		AF('I',struct A1031,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlC> */
#pragma pack(push,8)
union A1032 { I m0; l m1; C m2; };
#pragma pack(pop)
int f_cmpA1032(const union A1032 *x, const union A1032 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1032() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1032));
		AF('I',union A1032,m0,1)
		AF('l',union A1032,m1,1)
		AF('C',union A1032,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ppfBIlI> */
#pragma pack(push,4)
union A1033 { p m0; p m1; f m2; B m3; I m4; l m5; I m6; };
#pragma pack(pop)
int f_cmpA1033(const union A1033 *x, const union A1033 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1033() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1033));
		AF('p',union A1033,m0,1)
		AF('p',union A1033,m1,1)
		AF('f',union A1033,m2,1)
		AF('B',union A1033,m3,1)
		AF('I',union A1033,m4,1)
		AF('l',union A1033,m5,1)
		AF('I',union A1033,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SifC<IlC>J<ppfBIlI>{}sIij} */
#pragma pack(push,1)
struct A1034 { S m0; i m1; f m2; C m3; union A1032 m4; J m5; union A1033 m6; struct A24 m7; s m8; I m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA1034(const struct A1034 *x, const struct A1034 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1032(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1033(&x->m6, &y->m6) && f_cmpA24(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1034() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1034));
		AF('S',struct A1034,m0,1)
		AF('i',struct A1034,m1,1)
		AF('f',struct A1034,m2,1)
		AF('C',struct A1034,m3,1)
		AFa(struct A1034,m4,1,A1032)
		AF('J',struct A1034,m5,1)
		AFa(struct A1034,m6,1,A1033)
		AFa(struct A1034,m7,1,A24)
		AF('s',struct A1034,m8,1)
		AF('I',struct A1034,m9,1)
		AF('i',struct A1034,m10,1)
		AF('j',struct A1034,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fiJSj> */
#pragma pack(push,1)
union A1035 { f m0; i m1; J m2; S m3; j m4; };
#pragma pack(pop)
int f_cmpA1035(const union A1035 *x, const union A1035 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1035() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1035));
		AF('f',union A1035,m0,1)
		AF('i',union A1035,m1,1)
		AF('J',union A1035,m2,1)
		AF('S',union A1035,m3,1)
		AF('j',union A1035,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lScp<fiJSj>SLSC> */
#pragma pack(push,2)
union A1036 { l m0; S m1; c m2; p m3; union A1035 m4; S m5; L m6; S m7; C m8; };
#pragma pack(pop)
int f_cmpA1036(const union A1036 *x, const union A1036 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1035(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1036() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1036));
		AF('l',union A1036,m0,1)
		AF('S',union A1036,m1,1)
		AF('c',union A1036,m2,1)
		AF('p',union A1036,m3,1)
		AFa(union A1036,m4,1,A1035)
		AF('S',union A1036,m5,1)
		AF('L',union A1036,m6,1)
		AF('S',union A1036,m7,1)
		AF('C',union A1036,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<lScp<fiJSj>SLSC>JfICSL} */
#pragma pack(push,4)
struct A1037 { union A1036 m0; J m1; f m2; I m3; C m4; S m5; L m6; };
#pragma pack(pop)
int f_cmpA1037(const struct A1037 *x, const struct A1037 *y) { return f_cmpA1036(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1037() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1037));
		AFa(struct A1037,m0,1,A1036)
		AF('J',struct A1037,m1,1)
		AF('f',struct A1037,m2,1)
		AF('I',struct A1037,m3,1)
		AF('C',struct A1037,m4,1)
		AF('S',struct A1037,m5,1)
		AF('L',struct A1037,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICdidcl} */
#pragma pack(push,4)
struct A1038 { I m0; C m1; d m2; i m3; d m4; c m5; l m6; };
#pragma pack(pop)
int f_cmpA1038(const struct A1038 *x, const struct A1038 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1038() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1038));
		AF('I',struct A1038,m0,1)
		AF('C',struct A1038,m1,1)
		AF('d',struct A1038,m2,1)
		AF('i',struct A1038,m3,1)
		AF('d',struct A1038,m4,1)
		AF('c',struct A1038,m5,1)
		AF('l',struct A1038,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ICpS} */
#pragma pack(push,1)
struct A1039 { I m0; C m1; p m2; S m3; };
#pragma pack(pop)
int f_cmpA1039(const struct A1039 *x, const struct A1039 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1039() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1039));
		AF('I',struct A1039,m0,1)
		AF('C',struct A1039,m1,1)
		AF('p',struct A1039,m2,1)
		AF('S',struct A1039,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfcIcjpBCsJ> */
#pragma pack(push,8)
union A1040 { l m0; f m1; c m2; I m3; c m4; j m5; p m6; B m7; C m8; s m9; J m10; };
#pragma pack(pop)
int f_cmpA1040(const union A1040 *x, const union A1040 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1040() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1040));
		AF('l',union A1040,m0,1)
		AF('f',union A1040,m1,1)
		AF('c',union A1040,m2,1)
		AF('I',union A1040,m3,1)
		AF('c',union A1040,m4,1)
		AF('j',union A1040,m5,1)
		AF('p',union A1040,m6,1)
		AF('B',union A1040,m7,1)
		AF('C',union A1040,m8,1)
		AF('s',union A1040,m9,1)
		AF('J',union A1040,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<>jcCfLc{ICpS}I<lfcIcjpBCsJ><p>B} */
#pragma pack(push,4)
struct A1041 { union A30 m0; j m1; c m2; C m3; f m4; L m5; c m6; struct A1039 m7; I m8; union A1040 m9; union A56 m10; B m11; };
#pragma pack(pop)
int f_cmpA1041(const struct A1041 *x, const struct A1041 *y) { return f_cmpA30(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1039(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA1040(&x->m9, &y->m9) && f_cmpA56(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1041() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1041));
		AFa(struct A1041,m0,1,A30)
		AF('j',struct A1041,m1,1)
		AF('c',struct A1041,m2,1)
		AF('C',struct A1041,m3,1)
		AF('f',struct A1041,m4,1)
		AF('L',struct A1041,m5,1)
		AF('c',struct A1041,m6,1)
		AFa(struct A1041,m7,1,A1039)
		AF('I',struct A1041,m8,1)
		AFa(struct A1041,m9,1,A1040)
		AFa(struct A1041,m10,1,A56)
		AF('B',struct A1041,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CiJ[8]B> */
#pragma pack(push,2)
union A1042 { C m0; i m1; J m2[8]; B m3; };
#pragma pack(pop)
int f_cmpA1042(const union A1042 *x, const union A1042 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m3 == y->m3; };
DCaggr* f_touchA1042() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1042));
		AF('C',union A1042,m0,1)
		AF('i',union A1042,m1,1)
		AF('J',union A1042,m2,8)
		AF('B',union A1042,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<CiJ[8]B>cC[10]SispSl> */
#pragma pack(push,2)
union A1043 { union A1042 m0; c m1; C m2[10]; S m3; i m4; s m5; p m6; S m7; l m8; };
#pragma pack(pop)
int f_cmpA1043(const union A1043 *x, const union A1043 *y) { return f_cmpA1042(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1043() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1043));
		AFa(union A1043,m0,1,A1042)
		AF('c',union A1043,m1,1)
		AF('C',union A1043,m2,10)
		AF('S',union A1043,m3,1)
		AF('i',union A1043,m4,1)
		AF('s',union A1043,m5,1)
		AF('p',union A1043,m6,1)
		AF('S',union A1043,m7,1)
		AF('l',union A1043,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJL{ICdidcl}pcLlJ{<>jcCfLc{ICpS}I<lfcIcjpBCsJ><p>B}i<<CiJ[8]B>cC[10]SispSl>> */
#pragma pack(push,4)
union A1044 { c m0; J m1; L m2; struct A1038 m3; p m4; c m5; L m6; l m7; J m8; struct A1041 m9; i m10; union A1043 m11; };
#pragma pack(pop)
int f_cmpA1044(const union A1044 *x, const union A1044 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1038(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1041(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1043(&x->m11, &y->m11); };
DCaggr* f_touchA1044() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1044));
		AF('c',union A1044,m0,1)
		AF('J',union A1044,m1,1)
		AF('L',union A1044,m2,1)
		AFa(union A1044,m3,1,A1038)
		AF('p',union A1044,m4,1)
		AF('c',union A1044,m5,1)
		AF('L',union A1044,m6,1)
		AF('l',union A1044,m7,1)
		AF('J',union A1044,m8,1)
		AFa(union A1044,m9,1,A1041)
		AF('i',union A1044,m10,1)
		AFa(union A1044,m11,1,A1043)
		dcCloseAggr(a);
	}
	return a;
};
/* <fcLjSSSLiLJJ> */
#pragma pack(push,1)
union A1045 { f m0; c m1; L m2; j m3; S m4; S m5; S m6; L m7; i m8; L m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA1045(const union A1045 *x, const union A1045 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1045() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1045));
		AF('f',union A1045,m0,1)
		AF('c',union A1045,m1,1)
		AF('L',union A1045,m2,1)
		AF('j',union A1045,m3,1)
		AF('S',union A1045,m4,1)
		AF('S',union A1045,m5,1)
		AF('S',union A1045,m6,1)
		AF('L',union A1045,m7,1)
		AF('i',union A1045,m8,1)
		AF('L',union A1045,m9,1)
		AF('J',union A1045,m10,1)
		AF('J',union A1045,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {J<fcLjSSSLiLJJ>jB} */
#pragma pack(push,1)
struct A1046 { J m0; union A1045 m1; j m2; B m3; };
#pragma pack(pop)
int f_cmpA1046(const struct A1046 *x, const struct A1046 *y) { return x->m0 == y->m0 && f_cmpA1045(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1046() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1046));
		AF('J',struct A1046,m0,1)
		AFa(struct A1046,m1,1,A1045)
		AF('j',struct A1046,m2,1)
		AF('B',struct A1046,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pdJCId[10]LdIlSj} */
#pragma pack(push,4)
struct A1047 { p m0; d m1; J m2; C m3; I m4; d m5[10]; L m6; d m7; I m8; l m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA1047(const struct A1047 *x, const struct A1047 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1047() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1047));
		AF('p',struct A1047,m0,1)
		AF('d',struct A1047,m1,1)
		AF('J',struct A1047,m2,1)
		AF('C',struct A1047,m3,1)
		AF('I',struct A1047,m4,1)
		AF('d',struct A1047,m5,10)
		AF('L',struct A1047,m6,1)
		AF('d',struct A1047,m7,1)
		AF('I',struct A1047,m8,1)
		AF('l',struct A1047,m9,1)
		AF('S',struct A1047,m10,1)
		AF('j',struct A1047,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Ijdclc{pdJCId[10]LdIlSj}c{}JLc} */
#pragma pack(push,1)
struct A1048 { I m0; j m1; d m2; c m3; l m4; c m5; struct A1047 m6; c m7; struct A24 m8; J m9; L m10; c m11; };
#pragma pack(pop)
int f_cmpA1048(const struct A1048 *x, const struct A1048 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1047(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA24(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1048() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1048));
		AF('I',struct A1048,m0,1)
		AF('j',struct A1048,m1,1)
		AF('d',struct A1048,m2,1)
		AF('c',struct A1048,m3,1)
		AF('l',struct A1048,m4,1)
		AF('c',struct A1048,m5,1)
		AFa(struct A1048,m6,1,A1047)
		AF('c',struct A1048,m7,1)
		AFa(struct A1048,m8,1,A24)
		AF('J',struct A1048,m9,1)
		AF('L',struct A1048,m10,1)
		AF('c',struct A1048,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SCLCdiifLpcB> */
#pragma pack(push,8)
union A1049 { S m0; C m1; L m2; C m3; d m4; i m5; i m6; f m7; L m8; p m9; c m10; B m11; };
#pragma pack(pop)
int f_cmpA1049(const union A1049 *x, const union A1049 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1049() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1049));
		AF('S',union A1049,m0,1)
		AF('C',union A1049,m1,1)
		AF('L',union A1049,m2,1)
		AF('C',union A1049,m3,1)
		AF('d',union A1049,m4,1)
		AF('i',union A1049,m5,1)
		AF('i',union A1049,m6,1)
		AF('f',union A1049,m7,1)
		AF('L',union A1049,m8,1)
		AF('p',union A1049,m9,1)
		AF('c',union A1049,m10,1)
		AF('B',union A1049,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fIicBIs<SCLCdiifLpcB>> */
#pragma pack(push,4)
union A1050 { f m0; I m1; i m2; c m3; B m4; I m5; s m6; union A1049 m7; };
#pragma pack(pop)
int f_cmpA1050(const union A1050 *x, const union A1050 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1049(&x->m7, &y->m7); };
DCaggr* f_touchA1050() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1050));
		AF('f',union A1050,m0,1)
		AF('I',union A1050,m1,1)
		AF('i',union A1050,m2,1)
		AF('c',union A1050,m3,1)
		AF('B',union A1050,m4,1)
		AF('I',union A1050,m5,1)
		AF('s',union A1050,m6,1)
		AFa(union A1050,m7,1,A1049)
		dcCloseAggr(a);
	}
	return a;
};
/* {ds{J<fcLjSSSLiLJJ>jB}SL{Ijdclc{pdJCId[10]LdIlSj}c{}JLc}<fIicBIs<SCLCdiifLpcB>>iJcS} */
#pragma pack(push,2)
struct A1051 { d m0; s m1; struct A1046 m2; S m3; L m4; struct A1048 m5; union A1050 m6; i m7; J m8; c m9; S m10; };
#pragma pack(pop)
int f_cmpA1051(const struct A1051 *x, const struct A1051 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1046(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1048(&x->m5, &y->m5) && f_cmpA1050(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1051() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1051));
		AF('d',struct A1051,m0,1)
		AF('s',struct A1051,m1,1)
		AFa(struct A1051,m2,1,A1046)
		AF('S',struct A1051,m3,1)
		AF('L',struct A1051,m4,1)
		AFa(struct A1051,m5,1,A1048)
		AFa(struct A1051,m6,1,A1050)
		AF('i',struct A1051,m7,1)
		AF('J',struct A1051,m8,1)
		AF('c',struct A1051,m9,1)
		AF('S',struct A1051,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dL} */
#pragma pack(push,8)
struct A1052 { d m0; L m1; };
#pragma pack(pop)
int f_cmpA1052(const struct A1052 *x, const struct A1052 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1052() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1052));
		AF('d',struct A1052,m0,1)
		AF('L',struct A1052,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IiIlBsiIfssl} */
#pragma pack(push,2)
struct A1053 { I m0; i m1; I m2; l m3; B m4; s m5; i m6; I m7; f m8; s m9; s m10; l m11; };
#pragma pack(pop)
int f_cmpA1053(const struct A1053 *x, const struct A1053 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1053() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1053));
		AF('I',struct A1053,m0,1)
		AF('i',struct A1053,m1,1)
		AF('I',struct A1053,m2,1)
		AF('l',struct A1053,m3,1)
		AF('B',struct A1053,m4,1)
		AF('s',struct A1053,m5,1)
		AF('i',struct A1053,m6,1)
		AF('I',struct A1053,m7,1)
		AF('f',struct A1053,m8,1)
		AF('s',struct A1053,m9,1)
		AF('s',struct A1053,m10,1)
		AF('l',struct A1053,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcfdJLdiCcCf} */
#pragma pack(push,4)
struct A1054 { l m0; c m1; f m2; d m3; J m4; L m5; d m6; i m7; C m8; c m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA1054(const struct A1054 *x, const struct A1054 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1054() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1054));
		AF('l',struct A1054,m0,1)
		AF('c',struct A1054,m1,1)
		AF('f',struct A1054,m2,1)
		AF('d',struct A1054,m3,1)
		AF('J',struct A1054,m4,1)
		AF('L',struct A1054,m5,1)
		AF('d',struct A1054,m6,1)
		AF('i',struct A1054,m7,1)
		AF('C',struct A1054,m8,1)
		AF('c',struct A1054,m9,1)
		AF('C',struct A1054,m10,1)
		AF('f',struct A1054,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lcj} */
#pragma pack(push,8)
struct A1055 { l m0; c m1; j m2; };
#pragma pack(pop)
int f_cmpA1055(const struct A1055 *x, const struct A1055 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1055() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1055));
		AF('l',struct A1055,m0,1)
		AF('c',struct A1055,m1,1)
		AF('j',struct A1055,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJIs} */
#pragma pack(push,4)
struct A1056 { S m0; J m1; I m2; s m3; };
#pragma pack(pop)
int f_cmpA1056(const struct A1056 *x, const struct A1056 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1056() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1056));
		AF('S',struct A1056,m0,1)
		AF('J',struct A1056,m1,1)
		AF('I',struct A1056,m2,1)
		AF('s',struct A1056,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iSi<>f{IiIlBsiIfssl}{lcfdJLdiCcCf}BdJ{lcj}{SJIs}} */
#pragma pack(push,4)
struct A1057 { i m0; S m1; i m2; union A30 m3; f m4; struct A1053 m5; struct A1054 m6; B m7; d m8; J m9; struct A1055 m10; struct A1056 m11; };
#pragma pack(pop)
int f_cmpA1057(const struct A1057 *x, const struct A1057 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA30(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1053(&x->m5, &y->m5) && f_cmpA1054(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1055(&x->m10, &y->m10) && f_cmpA1056(&x->m11, &y->m11); };
DCaggr* f_touchA1057() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1057));
		AF('i',struct A1057,m0,1)
		AF('S',struct A1057,m1,1)
		AF('i',struct A1057,m2,1)
		AFa(struct A1057,m3,1,A30)
		AF('f',struct A1057,m4,1)
		AFa(struct A1057,m5,1,A1053)
		AFa(struct A1057,m6,1,A1054)
		AF('B',struct A1057,m7,1)
		AF('d',struct A1057,m8,1)
		AF('J',struct A1057,m9,1)
		AFa(struct A1057,m10,1,A1055)
		AFa(struct A1057,m11,1,A1056)
		dcCloseAggr(a);
	}
	return a;
};
/* <pL> */
#pragma pack(push,4)
union A1058 { p m0; L m1; };
#pragma pack(pop)
int f_cmpA1058(const union A1058 *x, const union A1058 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1058() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1058));
		AF('p',union A1058,m0,1)
		AF('L',union A1058,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cLBdI} */
#pragma pack(push,8)
struct A1059 { c m0; L m1; B m2; d m3; I m4; };
#pragma pack(pop)
int f_cmpA1059(const struct A1059 *x, const struct A1059 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1059() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1059));
		AF('c',struct A1059,m0,1)
		AF('L',struct A1059,m1,1)
		AF('B',struct A1059,m2,1)
		AF('d',struct A1059,m3,1)
		AF('I',struct A1059,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cildlLBsfl[15]Bl} */
#pragma pack(push,4)
struct A1060 { c m0; i m1; l m2; d m3; l m4; L m5; B m6; s m7; f m8; l m9[15]; B m10; l m11; };
#pragma pack(pop)
int f_cmpA1060(const struct A1060 *x, const struct A1060 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m9[9] == y->m9[9] && x->m9[10] == y->m9[10] && x->m9[11] == y->m9[11] && x->m9[12] == y->m9[12] && x->m9[13] == y->m9[13] && x->m9[14] == y->m9[14] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1060() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1060));
		AF('c',struct A1060,m0,1)
		AF('i',struct A1060,m1,1)
		AF('l',struct A1060,m2,1)
		AF('d',struct A1060,m3,1)
		AF('l',struct A1060,m4,1)
		AF('L',struct A1060,m5,1)
		AF('B',struct A1060,m6,1)
		AF('s',struct A1060,m7,1)
		AF('f',struct A1060,m8,1)
		AF('l',struct A1060,m9,15)
		AF('B',struct A1060,m10,1)
		AF('l',struct A1060,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CfJSpfScSdIJ} */
#pragma pack(push,4)
struct A1061 { C m0; f m1; J m2; S m3; p m4; f m5; S m6; c m7; S m8; d m9; I m10; J m11; };
#pragma pack(pop)
int f_cmpA1061(const struct A1061 *x, const struct A1061 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1061() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1061));
		AF('C',struct A1061,m0,1)
		AF('f',struct A1061,m1,1)
		AF('J',struct A1061,m2,1)
		AF('S',struct A1061,m3,1)
		AF('p',struct A1061,m4,1)
		AF('f',struct A1061,m5,1)
		AF('S',struct A1061,m6,1)
		AF('c',struct A1061,m7,1)
		AF('S',struct A1061,m8,1)
		AF('d',struct A1061,m9,1)
		AF('I',struct A1061,m10,1)
		AF('J',struct A1061,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<pL>JC{cLBdI}Icl{cildlLBsfl[15]Bl}dS{CfJSpfScSdIJ}} */
#pragma pack(push,1)
struct A1062 { union A1058 m0; J m1; C m2; struct A1059 m3; I m4; c m5; l m6; struct A1060 m7; d m8; S m9; struct A1061 m10; };
#pragma pack(pop)
int f_cmpA1062(const struct A1062 *x, const struct A1062 *y) { return f_cmpA1058(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1059(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1060(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1061(&x->m10, &y->m10); };
DCaggr* f_touchA1062() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1062));
		AFa(struct A1062,m0,1,A1058)
		AF('J',struct A1062,m1,1)
		AF('C',struct A1062,m2,1)
		AFa(struct A1062,m3,1,A1059)
		AF('I',struct A1062,m4,1)
		AF('c',struct A1062,m5,1)
		AF('l',struct A1062,m6,1)
		AFa(struct A1062,m7,1,A1060)
		AF('d',struct A1062,m8,1)
		AF('S',struct A1062,m9,1)
		AFa(struct A1062,m10,1,A1061)
		dcCloseAggr(a);
	}
	return a;
};
/* {fSsIsCfBJ} */
#pragma pack(push,4)
struct A1063 { f m0; S m1; s m2; I m3; s m4; C m5; f m6; B m7; J m8; };
#pragma pack(pop)
int f_cmpA1063(const struct A1063 *x, const struct A1063 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1063() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1063));
		AF('f',struct A1063,m0,1)
		AF('S',struct A1063,m1,1)
		AF('s',struct A1063,m2,1)
		AF('I',struct A1063,m3,1)
		AF('s',struct A1063,m4,1)
		AF('C',struct A1063,m5,1)
		AF('f',struct A1063,m6,1)
		AF('B',struct A1063,m7,1)
		AF('J',struct A1063,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SIifjBpCSiCB} */
#pragma pack(push,4)
struct A1064 { S m0; I m1; i m2; f m3; j m4; B m5; p m6; C m7; S m8; i m9; C m10; B m11; };
#pragma pack(pop)
int f_cmpA1064(const struct A1064 *x, const struct A1064 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1064() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1064));
		AF('S',struct A1064,m0,1)
		AF('I',struct A1064,m1,1)
		AF('i',struct A1064,m2,1)
		AF('f',struct A1064,m3,1)
		AF('j',struct A1064,m4,1)
		AF('B',struct A1064,m5,1)
		AF('p',struct A1064,m6,1)
		AF('C',struct A1064,m7,1)
		AF('S',struct A1064,m8,1)
		AF('i',struct A1064,m9,1)
		AF('C',struct A1064,m10,1)
		AF('B',struct A1064,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IjdpiLssldjC> */
#pragma pack(push,1)
union A1065 { I m0; j m1; d m2; p m3; i m4; L m5; s m6; s m7; l m8; d m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA1065(const union A1065 *x, const union A1065 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1065() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1065));
		AF('I',union A1065,m0,1)
		AF('j',union A1065,m1,1)
		AF('d',union A1065,m2,1)
		AF('p',union A1065,m3,1)
		AF('i',union A1065,m4,1)
		AF('L',union A1065,m5,1)
		AF('s',union A1065,m6,1)
		AF('s',union A1065,m7,1)
		AF('l',union A1065,m8,1)
		AF('d',union A1065,m9,1)
		AF('j',union A1065,m10,1)
		AF('C',union A1065,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>Is> */
#pragma pack(push,4)
union A1066 { l m0; I m1; s m2; s m3; l m4; l m5; C m6; struct A1064 m7; p m8; union A1065 m9; I m10; s m11; };
#pragma pack(pop)
int f_cmpA1066(const union A1066 *x, const union A1066 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1064(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA1065(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1066() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1066));
		AF('l',union A1066,m0,1)
		AF('I',union A1066,m1,1)
		AF('s',union A1066,m2,1)
		AF('s',union A1066,m3,1)
		AF('l',union A1066,m4,1)
		AF('l',union A1066,m5,1)
		AF('C',union A1066,m6,1)
		AFa(union A1066,m7,1,A1064)
		AF('p',union A1066,m8,1)
		AFa(union A1066,m9,1,A1065)
		AF('I',union A1066,m10,1)
		AF('s',union A1066,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SjJLLIp{<pL>JC{cLBdI}Icl{cildlLBsfl[15]Bl}dS{CfJSpfScSdIJ}}I{fSsIsCfBJ}<lIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>Is>l> */
#pragma pack(push,4)
union A1067 { S m0; j m1; J m2; L m3; L m4; I m5; p m6; struct A1062 m7; I m8; struct A1063 m9; union A1066 m10; l m11; };
#pragma pack(pop)
int f_cmpA1067(const union A1067 *x, const union A1067 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1062(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA1063(&x->m9, &y->m9) && f_cmpA1066(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1067() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1067));
		AF('S',union A1067,m0,1)
		AF('j',union A1067,m1,1)
		AF('J',union A1067,m2,1)
		AF('L',union A1067,m3,1)
		AF('L',union A1067,m4,1)
		AF('I',union A1067,m5,1)
		AF('p',union A1067,m6,1)
		AFa(union A1067,m7,1,A1062)
		AF('I',union A1067,m8,1)
		AFa(union A1067,m9,1,A1063)
		AFa(union A1067,m10,1,A1066)
		AF('l',union A1067,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JLjJJIjJs} */
#pragma pack(push,4)
struct A1068 { J m0; L m1; j m2; J m3; J m4; I m5; j m6; J m7; s m8; };
#pragma pack(pop)
int f_cmpA1068(const struct A1068 *x, const struct A1068 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1068() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1068));
		AF('J',struct A1068,m0,1)
		AF('L',struct A1068,m1,1)
		AF('j',struct A1068,m2,1)
		AF('J',struct A1068,m3,1)
		AF('J',struct A1068,m4,1)
		AF('I',struct A1068,m5,1)
		AF('j',struct A1068,m6,1)
		AF('J',struct A1068,m7,1)
		AF('s',struct A1068,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IcLiillIdBlL} */
#pragma pack(push,2)
struct A1069 { I m0; c m1; L m2; i m3; i m4; l m5; l m6; I m7; d m8; B m9; l m10; L m11; };
#pragma pack(pop)
int f_cmpA1069(const struct A1069 *x, const struct A1069 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1069() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1069));
		AF('I',struct A1069,m0,1)
		AF('c',struct A1069,m1,1)
		AF('L',struct A1069,m2,1)
		AF('i',struct A1069,m3,1)
		AF('i',struct A1069,m4,1)
		AF('l',struct A1069,m5,1)
		AF('l',struct A1069,m6,1)
		AF('I',struct A1069,m7,1)
		AF('d',struct A1069,m8,1)
		AF('B',struct A1069,m9,1)
		AF('l',struct A1069,m10,1)
		AF('L',struct A1069,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jLBIIBJjCSBC> */
#pragma pack(push,4)
union A1070 { j m0; L m1; B m2; I m3; I m4; B m5; J m6; j m7; C m8; S m9; B m10; C m11; };
#pragma pack(pop)
int f_cmpA1070(const union A1070 *x, const union A1070 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1070() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1070));
		AF('j',union A1070,m0,1)
		AF('L',union A1070,m1,1)
		AF('B',union A1070,m2,1)
		AF('I',union A1070,m3,1)
		AF('I',union A1070,m4,1)
		AF('B',union A1070,m5,1)
		AF('J',union A1070,m6,1)
		AF('j',union A1070,m7,1)
		AF('C',union A1070,m8,1)
		AF('S',union A1070,m9,1)
		AF('B',union A1070,m10,1)
		AF('C',union A1070,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CpidBsJdSpLJ} */
#pragma pack(push,4)
struct A1071 { C m0; p m1; i m2; d m3; B m4; s m5; J m6; d m7; S m8; p m9; L m10; J m11; };
#pragma pack(pop)
int f_cmpA1071(const struct A1071 *x, const struct A1071 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1071() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1071));
		AF('C',struct A1071,m0,1)
		AF('p',struct A1071,m1,1)
		AF('i',struct A1071,m2,1)
		AF('d',struct A1071,m3,1)
		AF('B',struct A1071,m4,1)
		AF('s',struct A1071,m5,1)
		AF('J',struct A1071,m6,1)
		AF('d',struct A1071,m7,1)
		AF('S',struct A1071,m8,1)
		AF('p',struct A1071,m9,1)
		AF('L',struct A1071,m10,1)
		AF('J',struct A1071,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Sj{}I{IcLiillIdBlL}c<jLBIIBJjCSBC>jSL{CpidBsJdSpLJ}s} */
#pragma pack(push,8)
struct A1072 { S m0; j m1; struct A24 m2; I m3; struct A1069 m4; c m5; union A1070 m6; j m7; S m8; L m9; struct A1071 m10; s m11; };
#pragma pack(pop)
int f_cmpA1072(const struct A1072 *x, const struct A1072 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA24(&x->m2, &y->m2) && x->m3 == y->m3 && f_cmpA1069(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1070(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1071(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1072() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1072));
		AF('S',struct A1072,m0,1)
		AF('j',struct A1072,m1,1)
		AFa(struct A1072,m2,1,A24)
		AF('I',struct A1072,m3,1)
		AFa(struct A1072,m4,1,A1069)
		AF('c',struct A1072,m5,1)
		AFa(struct A1072,m6,1,A1070)
		AF('j',struct A1072,m7,1)
		AF('S',struct A1072,m8,1)
		AF('L',struct A1072,m9,1)
		AFa(struct A1072,m10,1,A1071)
		AF('s',struct A1072,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cilCBBISl[13]idl> */
#pragma pack(push,8)
union A1073 { c m0; i m1; l m2; C m3; B m4; B m5; I m6; S m7; l m8[13]; i m9; d m10; l m11; };
#pragma pack(pop)
int f_cmpA1073(const union A1073 *x, const union A1073 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m8[1] == y->m8[1] && x->m8[2] == y->m8[2] && x->m8[3] == y->m8[3] && x->m8[4] == y->m8[4] && x->m8[5] == y->m8[5] && x->m8[6] == y->m8[6] && x->m8[7] == y->m8[7] && x->m8[8] == y->m8[8] && x->m8[9] == y->m8[9] && x->m8[10] == y->m8[10] && x->m8[11] == y->m8[11] && x->m8[12] == y->m8[12] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1073() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1073));
		AF('c',union A1073,m0,1)
		AF('i',union A1073,m1,1)
		AF('l',union A1073,m2,1)
		AF('C',union A1073,m3,1)
		AF('B',union A1073,m4,1)
		AF('B',union A1073,m5,1)
		AF('I',union A1073,m6,1)
		AF('S',union A1073,m7,1)
		AF('l',union A1073,m8,13)
		AF('i',union A1073,m9,1)
		AF('d',union A1073,m10,1)
		AF('l',union A1073,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ip> */
#pragma pack(push,4)
union A1074 { i m0; p m1; };
#pragma pack(pop)
int f_cmpA1074(const union A1074 *x, const union A1074 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1074() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1074));
		AF('i',union A1074,m0,1)
		AF('p',union A1074,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCSB> */
#pragma pack(push,4)
union A1075 { p m0; C m1; S m2; B m3; };
#pragma pack(pop)
int f_cmpA1075(const union A1075 *x, const union A1075 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1075() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1075));
		AF('p',union A1075,m0,1)
		AF('C',union A1075,m1,1)
		AF('S',union A1075,m2,1)
		AF('B',union A1075,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CJd> */
#pragma pack(push,1)
union A1076 { C m0; J m1; d m2; };
#pragma pack(pop)
int f_cmpA1076(const union A1076 *x, const union A1076 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1076() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1076));
		AF('C',union A1076,m0,1)
		AF('J',union A1076,m1,1)
		AF('d',union A1076,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iBid<CJd>LBLSjjC> */
#pragma pack(push,8)
union A1077 { i m0; B m1; i m2; d m3; union A1076 m4; L m5; B m6; L m7; S m8; j m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA1077(const union A1077 *x, const union A1077 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1076(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1077() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1077));
		AF('i',union A1077,m0,1)
		AF('B',union A1077,m1,1)
		AF('i',union A1077,m2,1)
		AF('d',union A1077,m3,1)
		AFa(union A1077,m4,1,A1076)
		AF('L',union A1077,m5,1)
		AF('B',union A1077,m6,1)
		AF('L',union A1077,m7,1)
		AF('S',union A1077,m8,1)
		AF('j',union A1077,m9,1)
		AF('j',union A1077,m10,1)
		AF('C',union A1077,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {d} */
#pragma pack(push,2)
struct A1078 { d m0; };
#pragma pack(pop)
int f_cmpA1078(const struct A1078 *x, const struct A1078 *y) { return x->m0 == y->m0; };
DCaggr* f_touchA1078() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(1, sizeof(struct A1078));
		AF('d',struct A1078,m0,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fjBjpfCidfpB> */
#pragma pack(push,1)
union A1079 { f m0; j m1; B m2; j m3; p m4; f m5; C m6; i m7; d m8; f m9; p m10; B m11; };
#pragma pack(pop)
int f_cmpA1079(const union A1079 *x, const union A1079 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1079() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1079));
		AF('f',union A1079,m0,1)
		AF('j',union A1079,m1,1)
		AF('B',union A1079,m2,1)
		AF('j',union A1079,m3,1)
		AF('p',union A1079,m4,1)
		AF('f',union A1079,m5,1)
		AF('C',union A1079,m6,1)
		AF('i',union A1079,m7,1)
		AF('d',union A1079,m8,1)
		AF('f',union A1079,m9,1)
		AF('p',union A1079,m10,1)
		AF('B',union A1079,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<fjBjpfCidfpB>SScflJ<Sl>i[1]{}jj> */
#pragma pack(push,8)
union A1080 { union A1079 m0; S m1; S m2; c m3; f m4; l m5; J m6; union A107 m7; i m8[1]; struct A24 m9; j m10; j m11; };
#pragma pack(pop)
int f_cmpA1080(const union A1080 *x, const union A1080 *y) { return f_cmpA1079(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA107(&x->m7, &y->m7) && x->m8[0] == y->m8[0] && f_cmpA24(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1080() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1080));
		AFa(union A1080,m0,1,A1079)
		AF('S',union A1080,m1,1)
		AF('S',union A1080,m2,1)
		AF('c',union A1080,m3,1)
		AF('f',union A1080,m4,1)
		AF('l',union A1080,m5,1)
		AF('J',union A1080,m6,1)
		AFa(union A1080,m7,1,A107)
		AF('i',union A1080,m8,1)
		AFa(union A1080,m9,1,A24)
		AF('j',union A1080,m10,1)
		AF('j',union A1080,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LCiBlj> */
#pragma pack(push,4)
union A1081 { L m0; C m1; i m2; B m3; l m4; j m5; };
#pragma pack(pop)
int f_cmpA1081(const union A1081 *x, const union A1081 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1081() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1081));
		AF('L',union A1081,m0,1)
		AF('C',union A1081,m1,1)
		AF('i',union A1081,m2,1)
		AF('B',union A1081,m3,1)
		AF('l',union A1081,m4,1)
		AF('j',union A1081,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cpCBdcL[10]i[14]l[1]LlJ} */
#pragma pack(push,4)
struct A1082 { c m0; p m1; C m2; B m3; d m4; c m5; L m6[10]; i m7[14]; l m8[1]; L m9; l m10; J m11; };
#pragma pack(pop)
int f_cmpA1082(const struct A1082 *x, const struct A1082 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m6[9] == y->m6[9] && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m8[0] == y->m8[0] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1082() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1082));
		AF('c',struct A1082,m0,1)
		AF('p',struct A1082,m1,1)
		AF('C',struct A1082,m2,1)
		AF('B',struct A1082,m3,1)
		AF('d',struct A1082,m4,1)
		AF('c',struct A1082,m5,1)
		AF('L',struct A1082,m6,10)
		AF('i',struct A1082,m7,14)
		AF('l',struct A1082,m8,1)
		AF('L',struct A1082,m9,1)
		AF('l',struct A1082,m10,1)
		AF('J',struct A1082,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ScJ> */
#pragma pack(push,4)
union A1083 { S m0; c m1; J m2; };
#pragma pack(pop)
int f_cmpA1083(const union A1083 *x, const union A1083 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1083() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1083));
		AF('S',union A1083,m0,1)
		AF('c',union A1083,m1,1)
		AF('J',union A1083,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pJ} */
#pragma pack(push,1)
struct A1084 { p m0; J m1; };
#pragma pack(pop)
int f_cmpA1084(const struct A1084 *x, const struct A1084 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1084() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1084));
		AF('p',struct A1084,m0,1)
		AF('J',struct A1084,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JccSBc[12]LJSfSs} */
#pragma pack(push,8)
struct A1085 { J m0; c m1; c m2; S m3; B m4; c m5[12]; L m6; J m7; S m8; f m9; S m10; s m11; };
#pragma pack(pop)
int f_cmpA1085(const struct A1085 *x, const struct A1085 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1085() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1085));
		AF('J',struct A1085,m0,1)
		AF('c',struct A1085,m1,1)
		AF('c',struct A1085,m2,1)
		AF('S',struct A1085,m3,1)
		AF('B',struct A1085,m4,1)
		AF('c',struct A1085,m5,12)
		AF('L',struct A1085,m6,1)
		AF('J',struct A1085,m7,1)
		AF('S',struct A1085,m8,1)
		AF('f',struct A1085,m9,1)
		AF('S',struct A1085,m10,1)
		AF('s',struct A1085,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LjifIf{pJ}[4]J[15]{JccSBc[12]LJSfSs}BJp} */
#pragma pack(push,4)
struct A1086 { L m0; j m1; i m2; f m3; I m4; f m5; struct A1084 m6[4]; J m7[15]; struct A1085 m8; B m9; J m10; p m11; };
#pragma pack(pop)
int f_cmpA1086(const struct A1086 *x, const struct A1086 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1084(&x->m6[0], &y->m6[0]) && f_cmpA1084(&x->m6[1], &y->m6[1]) && f_cmpA1084(&x->m6[2], &y->m6[2]) && f_cmpA1084(&x->m6[3], &y->m6[3]) && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m7[5] == y->m7[5] && x->m7[6] == y->m7[6] && x->m7[7] == y->m7[7] && x->m7[8] == y->m7[8] && x->m7[9] == y->m7[9] && x->m7[10] == y->m7[10] && x->m7[11] == y->m7[11] && x->m7[12] == y->m7[12] && x->m7[13] == y->m7[13] && x->m7[14] == y->m7[14] && f_cmpA1085(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1086() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1086));
		AF('L',struct A1086,m0,1)
		AF('j',struct A1086,m1,1)
		AF('i',struct A1086,m2,1)
		AF('f',struct A1086,m3,1)
		AF('I',struct A1086,m4,1)
		AF('f',struct A1086,m5,1)
		AFa(struct A1086,m6,4,A1084)
		AF('J',struct A1086,m7,15)
		AFa(struct A1086,m8,1,A1085)
		AF('B',struct A1086,m9,1)
		AF('J',struct A1086,m10,1)
		AF('p',struct A1086,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<L>jIIff{LjifIf{pJ}[4]J[15]{JccSBc[12]LJSfSs}BJp}dpi> */
#pragma pack(push,4)
union A1087 { union A160 m0; j m1; I m2; I m3; f m4; f m5; struct A1086 m6; d m7; p m8; i m9; };
#pragma pack(pop)
int f_cmpA1087(const union A1087 *x, const union A1087 *y) { return f_cmpA160(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1086(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1087() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1087));
		AFa(union A1087,m0,1,A160)
		AF('j',union A1087,m1,1)
		AF('I',union A1087,m2,1)
		AF('I',union A1087,m3,1)
		AF('f',union A1087,m4,1)
		AF('f',union A1087,m5,1)
		AFa(union A1087,m6,1,A1086)
		AF('d',union A1087,m7,1)
		AF('p',union A1087,m8,1)
		AF('i',union A1087,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJfcjjJlS> */
#pragma pack(push,4)
union A1088 { c m0; J m1; f m2; c m3; j m4; j m5; J m6; l m7; S m8; };
#pragma pack(pop)
int f_cmpA1088(const union A1088 *x, const union A1088 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1088() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1088));
		AF('c',union A1088,m0,1)
		AF('J',union A1088,m1,1)
		AF('f',union A1088,m2,1)
		AF('c',union A1088,m3,1)
		AF('j',union A1088,m4,1)
		AF('j',union A1088,m5,1)
		AF('J',union A1088,m6,1)
		AF('l',union A1088,m7,1)
		AF('S',union A1088,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Scij> */
#pragma pack(push,4)
union A1089 { S m0; c m1; i m2; j m3; };
#pragma pack(pop)
int f_cmpA1089(const union A1089 *x, const union A1089 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1089() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1089));
		AF('S',union A1089,m0,1)
		AF('c',union A1089,m1,1)
		AF('i',union A1089,m2,1)
		AF('j',union A1089,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iLd<Scij>plsjJJcS> */
#pragma pack(push,4)
union A1090 { i m0; L m1; d m2; union A1089 m3; p m4; l m5; s m6; j m7; J m8; J m9; c m10; S m11; };
#pragma pack(pop)
int f_cmpA1090(const union A1090 *x, const union A1090 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1089(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1090() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1090));
		AF('i',union A1090,m0,1)
		AF('L',union A1090,m1,1)
		AF('d',union A1090,m2,1)
		AFa(union A1090,m3,1,A1089)
		AF('p',union A1090,m4,1)
		AF('l',union A1090,m5,1)
		AF('s',union A1090,m6,1)
		AF('j',union A1090,m7,1)
		AF('J',union A1090,m8,1)
		AF('J',union A1090,m9,1)
		AF('c',union A1090,m10,1)
		AF('S',union A1090,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cjsdLdBIBBlL> */
#pragma pack(push,2)
union A1091 { c m0; j m1; s m2; d m3; L m4; d m5; B m6; I m7; B m8; B m9; l m10; L m11; };
#pragma pack(pop)
int f_cmpA1091(const union A1091 *x, const union A1091 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1091() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1091));
		AF('c',union A1091,m0,1)
		AF('j',union A1091,m1,1)
		AF('s',union A1091,m2,1)
		AF('d',union A1091,m3,1)
		AF('L',union A1091,m4,1)
		AF('d',union A1091,m5,1)
		AF('B',union A1091,m6,1)
		AF('I',union A1091,m7,1)
		AF('B',union A1091,m8,1)
		AF('B',union A1091,m9,1)
		AF('l',union A1091,m10,1)
		AF('L',union A1091,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cJBSdBfCJJ} */
#pragma pack(push,2)
struct A1092 { c m0; J m1; B m2; S m3; d m4; B m5; f m6; C m7; J m8; J m9; };
#pragma pack(pop)
int f_cmpA1092(const struct A1092 *x, const struct A1092 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1092() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(struct A1092));
		AF('c',struct A1092,m0,1)
		AF('J',struct A1092,m1,1)
		AF('B',struct A1092,m2,1)
		AF('S',struct A1092,m3,1)
		AF('d',struct A1092,m4,1)
		AF('B',struct A1092,m5,1)
		AF('f',struct A1092,m6,1)
		AF('C',struct A1092,m7,1)
		AF('J',struct A1092,m8,1)
		AF('J',struct A1092,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SCBSB} */
#pragma pack(push,4)
struct A1093 { S m0; C m1; B m2; S m3; B m4; };
#pragma pack(pop)
int f_cmpA1093(const struct A1093 *x, const struct A1093 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1093() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1093));
		AF('S',struct A1093,m0,1)
		AF('C',struct A1093,m1,1)
		AF('B',struct A1093,m2,1)
		AF('S',struct A1093,m3,1)
		AF('B',struct A1093,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sji{cJBSdBfCJJ}pBsji{SCBSB}SB} */
#pragma pack(push,8)
struct A1094 { s m0; j m1; i m2; struct A1092 m3; p m4; B m5; s m6; j m7; i m8; struct A1093 m9; S m10; B m11; };
#pragma pack(pop)
int f_cmpA1094(const struct A1094 *x, const struct A1094 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1092(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1093(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1094() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1094));
		AF('s',struct A1094,m0,1)
		AF('j',struct A1094,m1,1)
		AF('i',struct A1094,m2,1)
		AFa(struct A1094,m3,1,A1092)
		AF('p',struct A1094,m4,1)
		AF('B',struct A1094,m5,1)
		AF('s',struct A1094,m6,1)
		AF('j',struct A1094,m7,1)
		AF('i',struct A1094,m8,1)
		AFa(struct A1094,m9,1,A1093)
		AF('S',struct A1094,m10,1)
		AF('B',struct A1094,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SlscdSJJIJpl} */
#pragma pack(push,4)
struct A1095 { S m0; l m1; s m2; c m3; d m4; S m5; J m6; J m7; I m8; J m9; p m10; l m11; };
#pragma pack(pop)
int f_cmpA1095(const struct A1095 *x, const struct A1095 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1095() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1095));
		AF('S',struct A1095,m0,1)
		AF('l',struct A1095,m1,1)
		AF('s',struct A1095,m2,1)
		AF('c',struct A1095,m3,1)
		AF('d',struct A1095,m4,1)
		AF('S',struct A1095,m5,1)
		AF('J',struct A1095,m6,1)
		AF('J',struct A1095,m7,1)
		AF('I',struct A1095,m8,1)
		AF('J',struct A1095,m9,1)
		AF('p',struct A1095,m10,1)
		AF('l',struct A1095,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{SlscdSJJIJpl}cCcBBlJBLsJ[7]> */
#pragma pack(push,4)
union A1096 { struct A1095 m0; c m1; C m2; c m3; B m4; B m5; l m6; J m7; B m8; L m9; s m10; J m11[7]; };
#pragma pack(pop)
int f_cmpA1096(const union A1096 *x, const union A1096 *y) { return f_cmpA1095(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5] && x->m11[6] == y->m11[6]; };
DCaggr* f_touchA1096() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1096));
		AFa(union A1096,m0,1,A1095)
		AF('c',union A1096,m1,1)
		AF('C',union A1096,m2,1)
		AF('c',union A1096,m3,1)
		AF('B',union A1096,m4,1)
		AF('B',union A1096,m5,1)
		AF('l',union A1096,m6,1)
		AF('J',union A1096,m7,1)
		AF('B',union A1096,m8,1)
		AF('L',union A1096,m9,1)
		AF('s',union A1096,m10,1)
		AF('J',union A1096,m11,7)
		dcCloseAggr(a);
	}
	return a;
};
/* <f[6]LcJSisdLl{sji{cJBSdBfCJJ}pBsji{SCBSB}SB}<{SlscdSJJIJpl}cCcBBlJBLsJ[7]>[11]> */
#pragma pack(push,4)
union A1097 { f m0[6]; L m1; c m2; J m3; S m4; i m5; s m6; d m7; L m8; l m9; struct A1094 m10; union A1096 m11[11]; };
#pragma pack(pop)
int f_cmpA1097(const union A1097 *x, const union A1097 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1094(&x->m10, &y->m10) && f_cmpA1096(&x->m11[0], &y->m11[0]) && f_cmpA1096(&x->m11[1], &y->m11[1]) && f_cmpA1096(&x->m11[2], &y->m11[2]) && f_cmpA1096(&x->m11[3], &y->m11[3]) && f_cmpA1096(&x->m11[4], &y->m11[4]) && f_cmpA1096(&x->m11[5], &y->m11[5]) && f_cmpA1096(&x->m11[6], &y->m11[6]) && f_cmpA1096(&x->m11[7], &y->m11[7]) && f_cmpA1096(&x->m11[8], &y->m11[8]) && f_cmpA1096(&x->m11[9], &y->m11[9]) && f_cmpA1096(&x->m11[10], &y->m11[10]); };
DCaggr* f_touchA1097() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1097));
		AF('f',union A1097,m0,6)
		AF('L',union A1097,m1,1)
		AF('c',union A1097,m2,1)
		AF('J',union A1097,m3,1)
		AF('S',union A1097,m4,1)
		AF('i',union A1097,m5,1)
		AF('s',union A1097,m6,1)
		AF('d',union A1097,m7,1)
		AF('L',union A1097,m8,1)
		AF('l',union A1097,m9,1)
		AFa(union A1097,m10,1,A1094)
		AFa(union A1097,m11,11,A1096)
		dcCloseAggr(a);
	}
	return a;
};
/* <Bjl[14]jf[14]BBSBfpC> */
#pragma pack(push,4)
union A1098 { B m0; j m1; l m2[14]; j m3; f m4[14]; B m5; B m6; S m7; B m8; f m9; p m10; C m11; };
#pragma pack(pop)
int f_cmpA1098(const union A1098 *x, const union A1098 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && x->m4[10] == y->m4[10] && x->m4[11] == y->m4[11] && x->m4[12] == y->m4[12] && x->m4[13] == y->m4[13] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1098() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1098));
		AF('B',union A1098,m0,1)
		AF('j',union A1098,m1,1)
		AF('l',union A1098,m2,14)
		AF('j',union A1098,m3,1)
		AF('f',union A1098,m4,14)
		AF('B',union A1098,m5,1)
		AF('B',union A1098,m6,1)
		AF('S',union A1098,m7,1)
		AF('B',union A1098,m8,1)
		AF('f',union A1098,m9,1)
		AF('p',union A1098,m10,1)
		AF('C',union A1098,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f> */
#pragma pack(push,4)
union A1099 { i m0; J m1; J m2; C m3; s m4; i m5; i m6; j m7; C m8; d m9; union A1098 m10; f m11; };
#pragma pack(pop)
int f_cmpA1099(const union A1099 *x, const union A1099 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && f_cmpA1098(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1099() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1099));
		AF('i',union A1099,m0,1)
		AF('J',union A1099,m1,1)
		AF('J',union A1099,m2,1)
		AF('C',union A1099,m3,1)
		AF('s',union A1099,m4,1)
		AF('i',union A1099,m5,1)
		AF('i',union A1099,m6,1)
		AF('j',union A1099,m7,1)
		AF('C',union A1099,m8,1)
		AF('d',union A1099,m9,1)
		AFa(union A1099,m10,1,A1098)
		AF('f',union A1099,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <lfLiJj> */
#pragma pack(push,4)
union A1100 { l m0; f m1; L m2; i m3; J m4; j m5; };
#pragma pack(pop)
int f_cmpA1100(const union A1100 *x, const union A1100 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1100() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1100));
		AF('l',union A1100,m0,1)
		AF('f',union A1100,m1,1)
		AF('L',union A1100,m2,1)
		AF('i',union A1100,m3,1)
		AF('J',union A1100,m4,1)
		AF('j',union A1100,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SLIsJjB} */
#pragma pack(push,4)
struct A1101 { S m0; L m1; I m2; s m3; J m4; j m5; B m6; };
#pragma pack(pop)
int f_cmpA1101(const struct A1101 *x, const struct A1101 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1101() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1101));
		AF('S',struct A1101,m0,1)
		AF('L',struct A1101,m1,1)
		AF('I',struct A1101,m2,1)
		AF('s',struct A1101,m3,1)
		AF('J',struct A1101,m4,1)
		AF('j',struct A1101,m5,1)
		AF('B',struct A1101,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CBpBCpBspdSf> */
#pragma pack(push,4)
union A1102 { C m0; B m1; p m2; B m3; C m4; p m5; B m6; s m7; p m8; d m9; S m10; f m11; };
#pragma pack(pop)
int f_cmpA1102(const union A1102 *x, const union A1102 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1102() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1102));
		AF('C',union A1102,m0,1)
		AF('B',union A1102,m1,1)
		AF('p',union A1102,m2,1)
		AF('B',union A1102,m3,1)
		AF('C',union A1102,m4,1)
		AF('p',union A1102,m5,1)
		AF('B',union A1102,m6,1)
		AF('s',union A1102,m7,1)
		AF('p',union A1102,m8,1)
		AF('d',union A1102,m9,1)
		AF('S',union A1102,m10,1)
		AF('f',union A1102,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {idp} */
#pragma pack(push,4)
struct A1103 { i m0; d m1; p m2; };
#pragma pack(pop)
int f_cmpA1103(const struct A1103 *x, const struct A1103 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1103() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1103));
		AF('i',struct A1103,m0,1)
		AF('d',struct A1103,m1,1)
		AF('p',struct A1103,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<CBpBCpBspdSf>fSlppjc{idp}LSS} */
#pragma pack(push,2)
struct A1104 { union A1102 m0; f m1; S m2; l m3; p m4; p m5; j m6; c m7; struct A1103 m8; L m9; S m10; S m11; };
#pragma pack(pop)
int f_cmpA1104(const struct A1104 *x, const struct A1104 *y) { return f_cmpA1102(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1103(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1104() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1104));
		AFa(struct A1104,m0,1,A1102)
		AF('f',struct A1104,m1,1)
		AF('S',struct A1104,m2,1)
		AF('l',struct A1104,m3,1)
		AF('p',struct A1104,m4,1)
		AF('p',struct A1104,m5,1)
		AF('j',struct A1104,m6,1)
		AF('c',struct A1104,m7,1)
		AFa(struct A1104,m8,1,A1103)
		AF('L',struct A1104,m9,1)
		AF('S',struct A1104,m10,1)
		AF('S',struct A1104,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CSLccc[5]JJ} */
#pragma pack(push,2)
struct A1105 { C m0; S m1; L m2; c m3; c m4; c m5[5]; J m6; J m7; };
#pragma pack(pop)
int f_cmpA1105(const struct A1105 *x, const struct A1105 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1105() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A1105));
		AF('C',struct A1105,m0,1)
		AF('S',struct A1105,m1,1)
		AF('L',struct A1105,m2,1)
		AF('c',struct A1105,m3,1)
		AF('c',struct A1105,m4,1)
		AF('c',struct A1105,m5,5)
		AF('J',struct A1105,m6,1)
		AF('J',struct A1105,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <S{CSLccc[5]JJ}> */
#pragma pack(push,2)
union A1106 { S m0; struct A1105 m1; };
#pragma pack(pop)
int f_cmpA1106(const union A1106 *x, const union A1106 *y) { return x->m0 == y->m0 && f_cmpA1105(&x->m1, &y->m1); };
DCaggr* f_touchA1106() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1106));
		AF('S',union A1106,m0,1)
		AFa(union A1106,m1,1,A1105)
		dcCloseAggr(a);
	}
	return a;
};
/* {I[3]sfcs} */
#pragma pack(push,4)
struct A1107 { I m0[3]; s m1; f m2; c m3; s m4; };
#pragma pack(pop)
int f_cmpA1107(const struct A1107 *x, const struct A1107 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1107() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1107));
		AF('I',struct A1107,m0,3)
		AF('s',struct A1107,m1,1)
		AF('f',struct A1107,m2,1)
		AF('c',struct A1107,m3,1)
		AF('s',struct A1107,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCjCjiBiiC> */
#pragma pack(push,2)
union A1108 { s m0; C m1; j m2; C m3; j m4; i m5; B m6; i m7; i m8; C m9; };
#pragma pack(pop)
int f_cmpA1108(const union A1108 *x, const union A1108 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1108() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1108));
		AF('s',union A1108,m0,1)
		AF('C',union A1108,m1,1)
		AF('j',union A1108,m2,1)
		AF('C',union A1108,m3,1)
		AF('j',union A1108,m4,1)
		AF('i',union A1108,m5,1)
		AF('B',union A1108,m6,1)
		AF('i',union A1108,m7,1)
		AF('i',union A1108,m8,1)
		AF('C',union A1108,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pICpfICliJcp} */
#pragma pack(push,4)
struct A1109 { p m0; I m1; C m2; p m3; f m4; I m5; C m6; l m7; i m8; J m9; c m10; p m11; };
#pragma pack(pop)
int f_cmpA1109(const struct A1109 *x, const struct A1109 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1109() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1109));
		AF('p',struct A1109,m0,1)
		AF('I',struct A1109,m1,1)
		AF('C',struct A1109,m2,1)
		AF('p',struct A1109,m3,1)
		AF('f',struct A1109,m4,1)
		AF('I',struct A1109,m5,1)
		AF('C',struct A1109,m6,1)
		AF('l',struct A1109,m7,1)
		AF('i',struct A1109,m8,1)
		AF('J',struct A1109,m9,1)
		AF('c',struct A1109,m10,1)
		AF('p',struct A1109,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {djIcf<sCjCjiBiiC>{pICpfICliJcp}li[1]fSL} */
#pragma pack(push,4)
struct A1110 { d m0; j m1; I m2; c m3; f m4; union A1108 m5; struct A1109 m6; l m7; i m8[1]; f m9; S m10; L m11; };
#pragma pack(pop)
int f_cmpA1110(const struct A1110 *x, const struct A1110 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1108(&x->m5, &y->m5) && f_cmpA1109(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8[0] == y->m8[0] && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1110() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1110));
		AF('d',struct A1110,m0,1)
		AF('j',struct A1110,m1,1)
		AF('I',struct A1110,m2,1)
		AF('c',struct A1110,m3,1)
		AF('f',struct A1110,m4,1)
		AFa(struct A1110,m5,1,A1108)
		AFa(struct A1110,m6,1,A1109)
		AF('l',struct A1110,m7,1)
		AF('i',struct A1110,m8,1)
		AF('f',struct A1110,m9,1)
		AF('S',struct A1110,m10,1)
		AF('L',struct A1110,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dlBsSd[13]SCSiLl} */
#pragma pack(push,1)
struct A1111 { d m0; l m1; B m2; s m3; S m4; d m5[13]; S m6; C m7; S m8; i m9; L m10; l m11; };
#pragma pack(pop)
int f_cmpA1111(const struct A1111 *x, const struct A1111 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m5[4] == y->m5[4] && x->m5[5] == y->m5[5] && x->m5[6] == y->m5[6] && x->m5[7] == y->m5[7] && x->m5[8] == y->m5[8] && x->m5[9] == y->m5[9] && x->m5[10] == y->m5[10] && x->m5[11] == y->m5[11] && x->m5[12] == y->m5[12] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1111() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1111));
		AF('d',struct A1111,m0,1)
		AF('l',struct A1111,m1,1)
		AF('B',struct A1111,m2,1)
		AF('s',struct A1111,m3,1)
		AF('S',struct A1111,m4,1)
		AF('d',struct A1111,m5,13)
		AF('S',struct A1111,m6,1)
		AF('C',struct A1111,m7,1)
		AF('S',struct A1111,m8,1)
		AF('i',struct A1111,m9,1)
		AF('L',struct A1111,m10,1)
		AF('l',struct A1111,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pi<>fBJ> */
#pragma pack(push,2)
union A1112 { p m0; i m1; union A30 m2; f m3; B m4; J m5; };
#pragma pack(pop)
int f_cmpA1112(const union A1112 *x, const union A1112 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA30(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1112() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1112));
		AF('p',union A1112,m0,1)
		AF('i',union A1112,m1,1)
		AFa(union A1112,m2,1,A30)
		AF('f',union A1112,m3,1)
		AF('B',union A1112,m4,1)
		AF('J',union A1112,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JcSfSJB> */
#pragma pack(push,4)
union A1113 { J m0; c m1; S m2; f m3; S m4; J m5; B m6; };
#pragma pack(pop)
int f_cmpA1113(const union A1113 *x, const union A1113 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1113() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1113));
		AF('J',union A1113,m0,1)
		AF('c',union A1113,m1,1)
		AF('S',union A1113,m2,1)
		AF('f',union A1113,m3,1)
		AF('S',union A1113,m4,1)
		AF('J',union A1113,m5,1)
		AF('B',union A1113,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {diScIiiisdBC} */
#pragma pack(push,8)
struct A1114 { d m0; i m1; S m2; c m3; I m4; i m5; i m6; i m7; s m8; d m9; B m10; C m11; };
#pragma pack(pop)
int f_cmpA1114(const struct A1114 *x, const struct A1114 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1114() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1114));
		AF('d',struct A1114,m0,1)
		AF('i',struct A1114,m1,1)
		AF('S',struct A1114,m2,1)
		AF('c',struct A1114,m3,1)
		AF('I',struct A1114,m4,1)
		AF('i',struct A1114,m5,1)
		AF('i',struct A1114,m6,1)
		AF('i',struct A1114,m7,1)
		AF('s',struct A1114,m8,1)
		AF('d',struct A1114,m9,1)
		AF('B',struct A1114,m10,1)
		AF('C',struct A1114,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ} */
#pragma pack(push,4)
struct A1115 { union A1113 m0; f m1; C m2; L m3; f m4; l m5; f m6; struct A1114 m7; c m8; I m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA1115(const struct A1115 *x, const struct A1115 *y) { return f_cmpA1113(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1114(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1115() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1115));
		AFa(struct A1115,m0,1,A1113)
		AF('f',struct A1115,m1,1)
		AF('C',struct A1115,m2,1)
		AF('L',struct A1115,m3,1)
		AF('f',struct A1115,m4,1)
		AF('l',struct A1115,m5,1)
		AF('f',struct A1115,m6,1)
		AFa(struct A1115,m7,1,A1114)
		AF('c',struct A1115,m8,1)
		AF('I',struct A1115,m9,1)
		AF('J',struct A1115,m10,1)
		AF('J',struct A1115,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IiccSICJjic} */
#pragma pack(push,4)
struct A1116 { I m0; i m1; c m2; c m3; S m4; I m5; C m6; J m7; j m8; i m9; c m10; };
#pragma pack(pop)
int f_cmpA1116(const struct A1116 *x, const struct A1116 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1116() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1116));
		AF('I',struct A1116,m0,1)
		AF('i',struct A1116,m1,1)
		AF('c',struct A1116,m2,1)
		AF('c',struct A1116,m3,1)
		AF('S',struct A1116,m4,1)
		AF('I',struct A1116,m5,1)
		AF('C',struct A1116,m6,1)
		AF('J',struct A1116,m7,1)
		AF('j',struct A1116,m8,1)
		AF('i',struct A1116,m9,1)
		AF('c',struct A1116,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <JClcSd> */
#pragma pack(push,4)
union A1117 { J m0; C m1; l m2; c m3; S m4; d m5; };
#pragma pack(pop)
int f_cmpA1117(const union A1117 *x, const union A1117 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1117() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1117));
		AF('J',union A1117,m0,1)
		AF('C',union A1117,m1,1)
		AF('l',union A1117,m2,1)
		AF('c',union A1117,m3,1)
		AF('S',union A1117,m4,1)
		AF('d',union A1117,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>> */
#pragma pack(push,2)
union A1118 { j m0; d m1; s m2; L m3; J m4; S m5; i m6; struct A1115 m7; j m8; struct A1116 m9; B m10; union A1117 m11; };
#pragma pack(pop)
int f_cmpA1118(const union A1118 *x, const union A1118 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1115(&x->m7, &y->m7) && x->m8 == y->m8 && f_cmpA1116(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1117(&x->m11, &y->m11); };
DCaggr* f_touchA1118() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1118));
		AF('j',union A1118,m0,1)
		AF('d',union A1118,m1,1)
		AF('s',union A1118,m2,1)
		AF('L',union A1118,m3,1)
		AF('J',union A1118,m4,1)
		AF('S',union A1118,m5,1)
		AF('i',union A1118,m6,1)
		AFa(union A1118,m7,1,A1115)
		AF('j',union A1118,m8,1)
		AFa(union A1118,m9,1,A1116)
		AF('B',union A1118,m10,1)
		AFa(union A1118,m11,1,A1117)
		dcCloseAggr(a);
	}
	return a;
};
/* <si> */
#pragma pack(push,4)
union A1119 { s m0; i m1; };
#pragma pack(pop)
int f_cmpA1119(const union A1119 *x, const union A1119 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1119() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1119));
		AF('s',union A1119,m0,1)
		AF('i',union A1119,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{}Sc<>SLjLsIds} */
#pragma pack(push,2)
struct A1120 { struct A24 m0; S m1; c m2; union A30 m3; S m4; L m5; j m6; L m7; s m8; I m9; d m10; s m11; };
#pragma pack(pop)
int f_cmpA1120(const struct A1120 *x, const struct A1120 *y) { return f_cmpA24(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA30(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1120() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1120));
		AFa(struct A1120,m0,1,A24)
		AF('S',struct A1120,m1,1)
		AF('c',struct A1120,m2,1)
		AFa(struct A1120,m3,1,A30)
		AF('S',struct A1120,m4,1)
		AF('L',struct A1120,m5,1)
		AF('j',struct A1120,m6,1)
		AF('L',struct A1120,m7,1)
		AF('s',struct A1120,m8,1)
		AF('I',struct A1120,m9,1)
		AF('d',struct A1120,m10,1)
		AF('s',struct A1120,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jf[5]cjCdBj> */
#pragma pack(push,4)
union A1121 { j m0; f m1[5]; c m2; j m3; C m4; d m5; B m6; j m7; };
#pragma pack(pop)
int f_cmpA1121(const union A1121 *x, const union A1121 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1121() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1121));
		AF('j',union A1121,m0,1)
		AF('f',union A1121,m1,5)
		AF('c',union A1121,m2,1)
		AF('j',union A1121,m3,1)
		AF('C',union A1121,m4,1)
		AF('d',union A1121,m5,1)
		AF('B',union A1121,m6,1)
		AF('j',union A1121,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIpCcfscsSiI} */
#pragma pack(push,1)
struct A1122 { f m0; I m1; p m2; C m3; c m4; f m5; s m6; c m7; s m8; S m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA1122(const struct A1122 *x, const struct A1122 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1122() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1122));
		AF('f',struct A1122,m0,1)
		AF('I',struct A1122,m1,1)
		AF('p',struct A1122,m2,1)
		AF('C',struct A1122,m3,1)
		AF('c',struct A1122,m4,1)
		AF('f',struct A1122,m5,1)
		AF('s',struct A1122,m6,1)
		AF('c',struct A1122,m7,1)
		AF('s',struct A1122,m8,1)
		AF('S',struct A1122,m9,1)
		AF('i',struct A1122,m10,1)
		AF('I',struct A1122,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {iIsL} */
#pragma pack(push,4)
struct A1123 { i m0; I m1; s m2; L m3; };
#pragma pack(pop)
int f_cmpA1123(const struct A1123 *x, const struct A1123 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1123() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1123));
		AF('i',struct A1123,m0,1)
		AF('I',struct A1123,m1,1)
		AF('s',struct A1123,m2,1)
		AF('L',struct A1123,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LcLJfdLliLBp> */
#pragma pack(push,4)
union A1124 { L m0; c m1; L m2; J m3; f m4; d m5; L m6; l m7; i m8; L m9; B m10; p m11; };
#pragma pack(pop)
int f_cmpA1124(const union A1124 *x, const union A1124 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1124() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1124));
		AF('L',union A1124,m0,1)
		AF('c',union A1124,m1,1)
		AF('L',union A1124,m2,1)
		AF('J',union A1124,m3,1)
		AF('f',union A1124,m4,1)
		AF('d',union A1124,m5,1)
		AF('L',union A1124,m6,1)
		AF('l',union A1124,m7,1)
		AF('i',union A1124,m8,1)
		AF('L',union A1124,m9,1)
		AF('B',union A1124,m10,1)
		AF('p',union A1124,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bd<LcLJfdLliLBp>BpdjpLISp} */
#pragma pack(push,8)
struct A1125 { B m0; d m1; union A1124 m2; B m3; p m4; d m5; j m6; p m7; L m8; I m9; S m10; p m11; };
#pragma pack(pop)
int f_cmpA1125(const struct A1125 *x, const struct A1125 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1124(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1125() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1125));
		AF('B',struct A1125,m0,1)
		AF('d',struct A1125,m1,1)
		AFa(struct A1125,m2,1,A1124)
		AF('B',struct A1125,m3,1)
		AF('p',struct A1125,m4,1)
		AF('d',struct A1125,m5,1)
		AF('j',struct A1125,m6,1)
		AF('p',struct A1125,m7,1)
		AF('L',struct A1125,m8,1)
		AF('I',struct A1125,m9,1)
		AF('S',struct A1125,m10,1)
		AF('p',struct A1125,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ISJ[3]ffCCl> */
#pragma pack(push,4)
union A1126 { I m0; S m1; J m2[3]; f m3; f m4; C m5; C m6; l m7; };
#pragma pack(pop)
int f_cmpA1126(const union A1126 *x, const union A1126 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1126() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1126));
		AF('I',union A1126,m0,1)
		AF('S',union A1126,m1,1)
		AF('J',union A1126,m2,3)
		AF('f',union A1126,m3,1)
		AF('f',union A1126,m4,1)
		AF('C',union A1126,m5,1)
		AF('C',union A1126,m6,1)
		AF('l',union A1126,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dLiLC<ISJ[3]ffCCl>lliSjp} */
#pragma pack(push,4)
struct A1127 { d m0; L m1; i m2; L m3; C m4; union A1126 m5; l m6; l m7; i m8; S m9; j m10; p m11; };
#pragma pack(pop)
int f_cmpA1127(const struct A1127 *x, const struct A1127 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1126(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1127() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1127));
		AF('d',struct A1127,m0,1)
		AF('L',struct A1127,m1,1)
		AF('i',struct A1127,m2,1)
		AF('L',struct A1127,m3,1)
		AF('C',struct A1127,m4,1)
		AFa(struct A1127,m5,1,A1126)
		AF('l',struct A1127,m6,1)
		AF('l',struct A1127,m7,1)
		AF('i',struct A1127,m8,1)
		AF('S',struct A1127,m9,1)
		AF('j',struct A1127,m10,1)
		AF('p',struct A1127,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BcsfcCCCB} */
#pragma pack(push,2)
struct A1128 { B m0; c m1; s m2; f m3; c m4; C m5; C m6; C m7; B m8; };
#pragma pack(pop)
int f_cmpA1128(const struct A1128 *x, const struct A1128 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1128() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1128));
		AF('B',struct A1128,m0,1)
		AF('c',struct A1128,m1,1)
		AF('s',struct A1128,m2,1)
		AF('f',struct A1128,m3,1)
		AF('c',struct A1128,m4,1)
		AF('C',struct A1128,m5,1)
		AF('C',struct A1128,m6,1)
		AF('C',struct A1128,m7,1)
		AF('B',struct A1128,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fLlipc> */
#pragma pack(push,1)
union A1129 { f m0; L m1; l m2; i m3; p m4; c m5; };
#pragma pack(pop)
int f_cmpA1129(const union A1129 *x, const union A1129 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1129() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1129));
		AF('f',union A1129,m0,1)
		AF('L',union A1129,m1,1)
		AF('l',union A1129,m2,1)
		AF('i',union A1129,m3,1)
		AF('p',union A1129,m4,1)
		AF('c',union A1129,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Iff{BcsfcCCCB}c<fLlipc>SsiClj} */
#pragma pack(push,1)
struct A1130 { I m0; f m1; f m2; struct A1128 m3; c m4; union A1129 m5; S m6; s m7; i m8; C m9; l m10; j m11; };
#pragma pack(pop)
int f_cmpA1130(const struct A1130 *x, const struct A1130 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1128(&x->m3, &y->m3) && x->m4 == y->m4 && f_cmpA1129(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1130() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1130));
		AF('I',struct A1130,m0,1)
		AF('f',struct A1130,m1,1)
		AF('f',struct A1130,m2,1)
		AFa(struct A1130,m3,1,A1128)
		AF('c',struct A1130,m4,1)
		AFa(struct A1130,m5,1,A1129)
		AF('S',struct A1130,m6,1)
		AF('s',struct A1130,m7,1)
		AF('i',struct A1130,m8,1)
		AF('C',struct A1130,m9,1)
		AF('l',struct A1130,m10,1)
		AF('j',struct A1130,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}> */
#pragma pack(push,8)
union A1131 { struct A1127 m0; l m1; I m2; i m3; s m4; C m5; struct A1130 m6; };
#pragma pack(pop)
int f_cmpA1131(const union A1131 *x, const union A1131 *y) { return f_cmpA1127(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1130(&x->m6, &y->m6); };
DCaggr* f_touchA1131() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1131));
		AFa(union A1131,m0,1,A1127)
		AF('l',union A1131,m1,1)
		AF('I',union A1131,m2,1)
		AF('i',union A1131,m3,1)
		AF('s',union A1131,m4,1)
		AF('C',union A1131,m5,1)
		AFa(union A1131,m6,1,A1130)
		dcCloseAggr(a);
	}
	return a;
};
/* <dfI[16]djjS> */
#pragma pack(push,4)
union A1132 { d m0; f m1; I m2[16]; d m3; j m4; j m5; S m6; };
#pragma pack(pop)
int f_cmpA1132(const union A1132 *x, const union A1132 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m2[15] == y->m2[15] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1132() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1132));
		AF('d',union A1132,m0,1)
		AF('f',union A1132,m1,1)
		AF('I',union A1132,m2,16)
		AF('d',union A1132,m3,1)
		AF('j',union A1132,m4,1)
		AF('j',union A1132,m5,1)
		AF('S',union A1132,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sLfS<dfI[16]djjS>BfspIcc} */
#pragma pack(push,4)
struct A1133 { s m0; L m1; f m2; S m3; union A1132 m4; B m5; f m6; s m7; p m8; I m9; c m10; c m11; };
#pragma pack(pop)
int f_cmpA1133(const struct A1133 *x, const struct A1133 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1132(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1133() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1133));
		AF('s',struct A1133,m0,1)
		AF('L',struct A1133,m1,1)
		AF('f',struct A1133,m2,1)
		AF('S',struct A1133,m3,1)
		AFa(struct A1133,m4,1,A1132)
		AF('B',struct A1133,m5,1)
		AF('f',struct A1133,m6,1)
		AF('s',struct A1133,m7,1)
		AF('p',struct A1133,m8,1)
		AF('I',struct A1133,m9,1)
		AF('c',struct A1133,m10,1)
		AF('c',struct A1133,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IlSdlLlBIpSC> */
#pragma pack(push,4)
union A1134 { I m0; l m1; S m2; d m3; l m4; L m5; l m6; B m7; I m8; p m9; S m10; C m11; };
#pragma pack(pop)
int f_cmpA1134(const union A1134 *x, const union A1134 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1134() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1134));
		AF('I',union A1134,m0,1)
		AF('l',union A1134,m1,1)
		AF('S',union A1134,m2,1)
		AF('d',union A1134,m3,1)
		AF('l',union A1134,m4,1)
		AF('L',union A1134,m5,1)
		AF('l',union A1134,m6,1)
		AF('B',union A1134,m7,1)
		AF('I',union A1134,m8,1)
		AF('p',union A1134,m9,1)
		AF('S',union A1134,m10,1)
		AF('C',union A1134,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LL<IlSdlLlBIpSC>iJpLiIsfL> */
#pragma pack(push,4)
union A1135 { L m0; L m1; union A1134 m2; i m3; J m4; p m5; L m6; i m7; I m8; s m9; f m10; L m11; };
#pragma pack(pop)
int f_cmpA1135(const union A1135 *x, const union A1135 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1134(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1135() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1135));
		AF('L',union A1135,m0,1)
		AF('L',union A1135,m1,1)
		AFa(union A1135,m2,1,A1134)
		AF('i',union A1135,m3,1)
		AF('J',union A1135,m4,1)
		AF('p',union A1135,m5,1)
		AF('L',union A1135,m6,1)
		AF('i',union A1135,m7,1)
		AF('I',union A1135,m8,1)
		AF('s',union A1135,m9,1)
		AF('f',union A1135,m10,1)
		AF('L',union A1135,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi} */
#pragma pack(push,4)
struct A1136 { B m0; s m1; I m2; struct A1133 m3; union A1135 m4; c m5; B m6; C m7; i m8; };
#pragma pack(pop)
int f_cmpA1136(const struct A1136 *x, const struct A1136 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1133(&x->m3, &y->m3) && f_cmpA1135(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1136() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1136));
		AF('B',struct A1136,m0,1)
		AF('s',struct A1136,m1,1)
		AF('I',struct A1136,m2,1)
		AFa(struct A1136,m3,1,A1133)
		AFa(struct A1136,m4,1,A1135)
		AF('c',struct A1136,m5,1)
		AF('B',struct A1136,m6,1)
		AF('C',struct A1136,m7,1)
		AF('i',struct A1136,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <C{}Ls> */
#pragma pack(push,4)
union A1137 { C m0; struct A24 m1; L m2; s m3; };
#pragma pack(pop)
int f_cmpA1137(const union A1137 *x, const union A1137 *y) { return x->m0 == y->m0 && f_cmpA24(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1137() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1137));
		AF('C',union A1137,m0,1)
		AFa(union A1137,m1,1,A24)
		AF('L',union A1137,m2,1)
		AF('s',union A1137,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jJlji} */
#pragma pack(push,2)
struct A1138 { j m0; J m1; l m2; j m3; i m4; };
#pragma pack(pop)
int f_cmpA1138(const struct A1138 *x, const struct A1138 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1138() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1138));
		AF('j',struct A1138,m0,1)
		AF('J',struct A1138,m1,1)
		AF('l',struct A1138,m2,1)
		AF('j',struct A1138,m3,1)
		AF('i',struct A1138,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sflL} */
#pragma pack(push,8)
struct A1139 { s m0; f m1; l m2; L m3; };
#pragma pack(pop)
int f_cmpA1139(const struct A1139 *x, const struct A1139 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1139() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1139));
		AF('s',struct A1139,m0,1)
		AF('f',struct A1139,m1,1)
		AF('l',struct A1139,m2,1)
		AF('L',struct A1139,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fcSIBfjJflif} */
#pragma pack(push,4)
struct A1140 { f m0; c m1; S m2; I m3; B m4; f m5; j m6; J m7; f m8; l m9; i m10; f m11; };
#pragma pack(pop)
int f_cmpA1140(const struct A1140 *x, const struct A1140 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1140() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1140));
		AF('f',struct A1140,m0,1)
		AF('c',struct A1140,m1,1)
		AF('S',struct A1140,m2,1)
		AF('I',struct A1140,m3,1)
		AF('B',struct A1140,m4,1)
		AF('f',struct A1140,m5,1)
		AF('j',struct A1140,m6,1)
		AF('J',struct A1140,m7,1)
		AF('f',struct A1140,m8,1)
		AF('l',struct A1140,m9,1)
		AF('i',struct A1140,m10,1)
		AF('f',struct A1140,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CcJSp{sflL}js{fcSIBfjJflif}sJc} */
#pragma pack(push,4)
struct A1141 { C m0; c m1; J m2; S m3; p m4; struct A1139 m5; j m6; s m7; struct A1140 m8; s m9; J m10; c m11; };
#pragma pack(pop)
int f_cmpA1141(const struct A1141 *x, const struct A1141 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1139(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1140(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1141() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1141));
		AF('C',struct A1141,m0,1)
		AF('c',struct A1141,m1,1)
		AF('J',struct A1141,m2,1)
		AF('S',struct A1141,m3,1)
		AF('p',struct A1141,m4,1)
		AFa(struct A1141,m5,1,A1139)
		AF('j',struct A1141,m6,1)
		AF('s',struct A1141,m7,1)
		AFa(struct A1141,m8,1,A1140)
		AF('s',struct A1141,m9,1)
		AF('J',struct A1141,m10,1)
		AF('c',struct A1141,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SI[4]lCCl[4]LddL[9]Cd> */
#pragma pack(push,1)
union A1142 { S m0; I m1[4]; l m2; C m3; C m4; l m5[4]; L m6; d m7; d m8; L m9[9]; C m10; d m11; };
#pragma pack(pop)
int f_cmpA1142(const union A1142 *x, const union A1142 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5[0] == y->m5[0] && x->m5[1] == y->m5[1] && x->m5[2] == y->m5[2] && x->m5[3] == y->m5[3] && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9[0] == y->m9[0] && x->m9[1] == y->m9[1] && x->m9[2] == y->m9[2] && x->m9[3] == y->m9[3] && x->m9[4] == y->m9[4] && x->m9[5] == y->m9[5] && x->m9[6] == y->m9[6] && x->m9[7] == y->m9[7] && x->m9[8] == y->m9[8] && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1142() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1142));
		AF('S',union A1142,m0,1)
		AF('I',union A1142,m1,4)
		AF('l',union A1142,m2,1)
		AF('C',union A1142,m3,1)
		AF('C',union A1142,m4,1)
		AF('l',union A1142,m5,4)
		AF('L',union A1142,m6,1)
		AF('d',union A1142,m7,1)
		AF('d',union A1142,m8,1)
		AF('L',union A1142,m9,9)
		AF('C',union A1142,m10,1)
		AF('d',union A1142,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SlLJc[2]BdLpp> */
#pragma pack(push,4)
union A1143 { S m0; l m1; L m2; J m3; c m4[2]; B m5; d m6; L m7; p m8; p m9; };
#pragma pack(pop)
int f_cmpA1143(const union A1143 *x, const union A1143 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1143() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1143));
		AF('S',union A1143,m0,1)
		AF('l',union A1143,m1,1)
		AF('L',union A1143,m2,1)
		AF('J',union A1143,m3,1)
		AF('c',union A1143,m4,2)
		AF('B',union A1143,m5,1)
		AF('d',union A1143,m6,1)
		AF('L',union A1143,m7,1)
		AF('p',union A1143,m8,1)
		AF('p',union A1143,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {siSBiCLdcIps} */
#pragma pack(push,4)
struct A1144 { s m0; i m1; S m2; B m3; i m4; C m5; L m6; d m7; c m8; I m9; p m10; s m11; };
#pragma pack(pop)
int f_cmpA1144(const struct A1144 *x, const struct A1144 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1144() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1144));
		AF('s',struct A1144,m0,1)
		AF('i',struct A1144,m1,1)
		AF('S',struct A1144,m2,1)
		AF('B',struct A1144,m3,1)
		AF('i',struct A1144,m4,1)
		AF('C',struct A1144,m5,1)
		AF('L',struct A1144,m6,1)
		AF('d',struct A1144,m7,1)
		AF('c',struct A1144,m8,1)
		AF('I',struct A1144,m9,1)
		AF('p',struct A1144,m10,1)
		AF('s',struct A1144,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {dSJiJ} */
#pragma pack(push,8)
struct A1145 { d m0; S m1; J m2; i m3; J m4; };
#pragma pack(pop)
int f_cmpA1145(const struct A1145 *x, const struct A1145 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1145() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1145));
		AF('d',struct A1145,m0,1)
		AF('S',struct A1145,m1,1)
		AF('J',struct A1145,m2,1)
		AF('i',struct A1145,m3,1)
		AF('J',struct A1145,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {JCCSlBIBjfSI} */
#pragma pack(push,2)
struct A1146 { J m0; C m1; C m2; S m3; l m4; B m5; I m6; B m7; j m8; f m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA1146(const struct A1146 *x, const struct A1146 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1146() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1146));
		AF('J',struct A1146,m0,1)
		AF('C',struct A1146,m1,1)
		AF('C',struct A1146,m2,1)
		AF('S',struct A1146,m3,1)
		AF('l',struct A1146,m4,1)
		AF('B',struct A1146,m5,1)
		AF('I',struct A1146,m6,1)
		AF('B',struct A1146,m7,1)
		AF('j',struct A1146,m8,1)
		AF('f',struct A1146,m9,1)
		AF('S',struct A1146,m10,1)
		AF('I',struct A1146,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CI[8]j{JCCSlBIBjfSI}> */
#pragma pack(push,4)
union A1147 { C m0; I m1[8]; j m2; struct A1146 m3; };
#pragma pack(pop)
int f_cmpA1147(const union A1147 *x, const union A1147 *y) { return x->m0 == y->m0 && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m2 == y->m2 && f_cmpA1146(&x->m3, &y->m3); };
DCaggr* f_touchA1147() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1147));
		AF('C',union A1147,m0,1)
		AF('I',union A1147,m1,8)
		AF('j',union A1147,m2,1)
		AFa(union A1147,m3,1,A1146)
		dcCloseAggr(a);
	}
	return a;
};
/* <BjLl> */
#pragma pack(push,4)
union A1148 { B m0; j m1; L m2; l m3; };
#pragma pack(pop)
int f_cmpA1148(const union A1148 *x, const union A1148 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1148() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1148));
		AF('B',union A1148,m0,1)
		AF('j',union A1148,m1,1)
		AF('L',union A1148,m2,1)
		AF('l',union A1148,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CdL<CI[8]j{JCCSlBIBjfSI}>cdi<BjLl>idfi> */
#pragma pack(push,2)
union A1149 { C m0; d m1; L m2; union A1147 m3; c m4; d m5; i m6; union A1148 m7; i m8; d m9; f m10; i m11; };
#pragma pack(pop)
int f_cmpA1149(const union A1149 *x, const union A1149 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1147(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1148(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1149() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1149));
		AF('C',union A1149,m0,1)
		AF('d',union A1149,m1,1)
		AF('L',union A1149,m2,1)
		AFa(union A1149,m3,1,A1147)
		AF('c',union A1149,m4,1)
		AF('d',union A1149,m5,1)
		AF('i',union A1149,m6,1)
		AFa(union A1149,m7,1,A1148)
		AF('i',union A1149,m8,1)
		AF('d',union A1149,m9,1)
		AF('f',union A1149,m10,1)
		AF('i',union A1149,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IsCCJfifBiLp} */
#pragma pack(push,1)
struct A1150 { I m0; s m1; C m2; C m3; J m4; f m5; i m6; f m7; B m8; i m9; L m10; p m11; };
#pragma pack(pop)
int f_cmpA1150(const struct A1150 *x, const struct A1150 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1150() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1150));
		AF('I',struct A1150,m0,1)
		AF('s',struct A1150,m1,1)
		AF('C',struct A1150,m2,1)
		AF('C',struct A1150,m3,1)
		AF('J',struct A1150,m4,1)
		AF('f',struct A1150,m5,1)
		AF('i',struct A1150,m6,1)
		AF('f',struct A1150,m7,1)
		AF('B',struct A1150,m8,1)
		AF('i',struct A1150,m9,1)
		AF('L',struct A1150,m10,1)
		AF('p',struct A1150,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <{IsCCJfifBiLp}CcljiciBC> */
#pragma pack(push,4)
union A1151 { struct A1150 m0; C m1; c m2; l m3; j m4; i m5; c m6; i m7; B m8; C m9; };
#pragma pack(pop)
int f_cmpA1151(const union A1151 *x, const union A1151 *y) { return f_cmpA1150(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9; };
DCaggr* f_touchA1151() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(10, sizeof(union A1151));
		AFa(union A1151,m0,1,A1150)
		AF('C',union A1151,m1,1)
		AF('c',union A1151,m2,1)
		AF('l',union A1151,m3,1)
		AF('j',union A1151,m4,1)
		AF('i',union A1151,m5,1)
		AF('c',union A1151,m6,1)
		AF('i',union A1151,m7,1)
		AF('B',union A1151,m8,1)
		AF('C',union A1151,m9,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SLjBBLcffSIL> */
#pragma pack(push,2)
union A1152 { S m0; L m1; j m2; B m3; B m4; L m5; c m6; f m7; f m8; S m9; I m10; L m11; };
#pragma pack(pop)
int f_cmpA1152(const union A1152 *x, const union A1152 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1152() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1152));
		AF('S',union A1152,m0,1)
		AF('L',union A1152,m1,1)
		AF('j',union A1152,m2,1)
		AF('B',union A1152,m3,1)
		AF('B',union A1152,m4,1)
		AF('L',union A1152,m5,1)
		AF('c',union A1152,m6,1)
		AF('f',union A1152,m7,1)
		AF('f',union A1152,m8,1)
		AF('S',union A1152,m9,1)
		AF('I',union A1152,m10,1)
		AF('L',union A1152,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jCj> */
#pragma pack(push,1)
union A1153 { j m0; C m1; j m2; };
#pragma pack(pop)
int f_cmpA1153(const union A1153 *x, const union A1153 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1153() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1153));
		AF('j',union A1153,m0,1)
		AF('C',union A1153,m1,1)
		AF('j',union A1153,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SLjBBLcffSIL>SBScsfdSCj<jCj>} */
#pragma pack(push,4)
struct A1154 { union A1152 m0; S m1; B m2; S m3; c m4; s m5; f m6; d m7; S m8; C m9; j m10; union A1153 m11; };
#pragma pack(pop)
int f_cmpA1154(const struct A1154 *x, const struct A1154 *y) { return f_cmpA1152(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1153(&x->m11, &y->m11); };
DCaggr* f_touchA1154() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1154));
		AFa(struct A1154,m0,1,A1152)
		AF('S',struct A1154,m1,1)
		AF('B',struct A1154,m2,1)
		AF('S',struct A1154,m3,1)
		AF('c',struct A1154,m4,1)
		AF('s',struct A1154,m5,1)
		AF('f',struct A1154,m6,1)
		AF('d',struct A1154,m7,1)
		AF('S',struct A1154,m8,1)
		AF('C',struct A1154,m9,1)
		AF('j',struct A1154,m10,1)
		AFa(struct A1154,m11,1,A1153)
		dcCloseAggr(a);
	}
	return a;
};
/* <sipjIL> */
#pragma pack(push,4)
union A1155 { s m0; i m1; p m2; j m3; I m4; L m5; };
#pragma pack(pop)
int f_cmpA1155(const union A1155 *x, const union A1155 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5; };
DCaggr* f_touchA1155() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1155));
		AF('s',union A1155,m0,1)
		AF('i',union A1155,m1,1)
		AF('p',union A1155,m2,1)
		AF('j',union A1155,m3,1)
		AF('I',union A1155,m4,1)
		AF('L',union A1155,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jssjfij> */
#pragma pack(push,1)
union A1156 { j m0; s m1; s m2; j m3; f m4; i m5; j m6; };
#pragma pack(pop)
int f_cmpA1156(const union A1156 *x, const union A1156 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1156() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1156));
		AF('j',union A1156,m0,1)
		AF('s',union A1156,m1,1)
		AF('s',union A1156,m2,1)
		AF('j',union A1156,m3,1)
		AF('f',union A1156,m4,1)
		AF('i',union A1156,m5,1)
		AF('j',union A1156,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ifcjL> */
#pragma pack(push,4)
union A1157 { i m0; f m1; c m2; j m3; L m4; };
#pragma pack(pop)
int f_cmpA1157(const union A1157 *x, const union A1157 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1157() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1157));
		AF('i',union A1157,m0,1)
		AF('f',union A1157,m1,1)
		AF('c',union A1157,m2,1)
		AF('j',union A1157,m3,1)
		AF('L',union A1157,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SsSsfCSpfcLC> */
#pragma pack(push,2)
union A1158 { S m0; s m1; S m2; s m3; f m4; C m5; S m6; p m7; f m8; c m9; L m10; C m11; };
#pragma pack(pop)
int f_cmpA1158(const union A1158 *x, const union A1158 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1158() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1158));
		AF('S',union A1158,m0,1)
		AF('s',union A1158,m1,1)
		AF('S',union A1158,m2,1)
		AF('s',union A1158,m3,1)
		AF('f',union A1158,m4,1)
		AF('C',union A1158,m5,1)
		AF('S',union A1158,m6,1)
		AF('p',union A1158,m7,1)
		AF('f',union A1158,m8,1)
		AF('c',union A1158,m9,1)
		AF('L',union A1158,m10,1)
		AF('C',union A1158,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fJcsBfJdfics} */
#pragma pack(push,2)
struct A1159 { f m0; J m1; c m2; s m3; B m4; f m5; J m6; d m7; f m8; i m9; c m10; s m11; };
#pragma pack(pop)
int f_cmpA1159(const struct A1159 *x, const struct A1159 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1159() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1159));
		AF('f',struct A1159,m0,1)
		AF('J',struct A1159,m1,1)
		AF('c',struct A1159,m2,1)
		AF('s',struct A1159,m3,1)
		AF('B',struct A1159,m4,1)
		AF('f',struct A1159,m5,1)
		AF('J',struct A1159,m6,1)
		AF('d',struct A1159,m7,1)
		AF('f',struct A1159,m8,1)
		AF('i',struct A1159,m9,1)
		AF('c',struct A1159,m10,1)
		AF('s',struct A1159,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {lL} */
#pragma pack(push,8)
struct A1160 { l m0; L m1; };
#pragma pack(pop)
int f_cmpA1160(const struct A1160 *x, const struct A1160 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1160() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(struct A1160));
		AF('l',struct A1160,m0,1)
		AF('L',struct A1160,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {<SsSsfCSpfcLC>li[15]cBL{fJcsBfJdfics}L{lL}Jl} */
#pragma pack(push,2)
struct A1161 { union A1158 m0; l m1; i m2[15]; c m3; B m4; L m5; struct A1159 m6; L m7; struct A1160 m8; J m9; l m10; };
#pragma pack(pop)
int f_cmpA1161(const struct A1161 *x, const struct A1161 *y) { return f_cmpA1158(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9] && x->m2[10] == y->m2[10] && x->m2[11] == y->m2[11] && x->m2[12] == y->m2[12] && x->m2[13] == y->m2[13] && x->m2[14] == y->m2[14] && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1159(&x->m6, &y->m6) && x->m7 == y->m7 && f_cmpA1160(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1161() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1161));
		AFa(struct A1161,m0,1,A1158)
		AF('l',struct A1161,m1,1)
		AF('i',struct A1161,m2,15)
		AF('c',struct A1161,m3,1)
		AF('B',struct A1161,m4,1)
		AF('L',struct A1161,m5,1)
		AFa(struct A1161,m6,1,A1159)
		AF('L',struct A1161,m7,1)
		AFa(struct A1161,m8,1,A1160)
		AF('J',struct A1161,m9,1)
		AF('l',struct A1161,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BcLIljjsLIjc} */
#pragma pack(push,2)
struct A1162 { B m0; c m1; L m2; I m3; l m4; j m5; j m6; s m7; L m8; I m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA1162(const struct A1162 *x, const struct A1162 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1162() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1162));
		AF('B',struct A1162,m0,1)
		AF('c',struct A1162,m1,1)
		AF('L',struct A1162,m2,1)
		AF('I',struct A1162,m3,1)
		AF('l',struct A1162,m4,1)
		AF('j',struct A1162,m5,1)
		AF('j',struct A1162,m6,1)
		AF('s',struct A1162,m7,1)
		AF('L',struct A1162,m8,1)
		AF('I',struct A1162,m9,1)
		AF('j',struct A1162,m10,1)
		AF('c',struct A1162,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <liilCdlSSlJS> */
#pragma pack(push,4)
union A1163 { l m0; i m1; i m2; l m3; C m4; d m5; l m6; S m7; S m8; l m9; J m10; S m11; };
#pragma pack(pop)
int f_cmpA1163(const union A1163 *x, const union A1163 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1163() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1163));
		AF('l',union A1163,m0,1)
		AF('i',union A1163,m1,1)
		AF('i',union A1163,m2,1)
		AF('l',union A1163,m3,1)
		AF('C',union A1163,m4,1)
		AF('d',union A1163,m5,1)
		AF('l',union A1163,m6,1)
		AF('S',union A1163,m7,1)
		AF('S',union A1163,m8,1)
		AF('l',union A1163,m9,1)
		AF('J',union A1163,m10,1)
		AF('S',union A1163,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {{<SsSsfCSpfcLC>li[15]cBL{fJcsBfJdfics}L{lL}Jl}fSII{BcLIljjsLIjc}cJ[5]IIs<liilCdlSSlJS>} */
#pragma pack(push,4)
struct A1164 { struct A1161 m0; f m1; S m2; I m3; I m4; struct A1162 m5; c m6; J m7[5]; I m8; I m9; s m10; union A1163 m11; };
#pragma pack(pop)
int f_cmpA1164(const struct A1164 *x, const struct A1164 *y) { return f_cmpA1161(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1162(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7[0] == y->m7[0] && x->m7[1] == y->m7[1] && x->m7[2] == y->m7[2] && x->m7[3] == y->m7[3] && x->m7[4] == y->m7[4] && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1163(&x->m11, &y->m11); };
DCaggr* f_touchA1164() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1164));
		AFa(struct A1164,m0,1,A1161)
		AF('f',struct A1164,m1,1)
		AF('S',struct A1164,m2,1)
		AF('I',struct A1164,m3,1)
		AF('I',struct A1164,m4,1)
		AFa(struct A1164,m5,1,A1162)
		AF('c',struct A1164,m6,1)
		AF('J',struct A1164,m7,5)
		AF('I',struct A1164,m8,1)
		AF('I',struct A1164,m9,1)
		AF('s',struct A1164,m10,1)
		AFa(struct A1164,m11,1,A1163)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ic> */
#pragma pack(push,4)
union A1165 { I m0; c m1; };
#pragma pack(pop)
int f_cmpA1165(const union A1165 *x, const union A1165 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1165() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1165));
		AF('I',union A1165,m0,1)
		AF('c',union A1165,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fdJijijLI{}<Ic>C} */
#pragma pack(push,2)
struct A1166 { f m0; d m1; J m2; i m3; j m4; i m5; j m6; L m7; I m8; struct A24 m9; union A1165 m10; C m11; };
#pragma pack(pop)
int f_cmpA1166(const struct A1166 *x, const struct A1166 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA24(&x->m9, &y->m9) && f_cmpA1165(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1166() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1166));
		AF('f',struct A1166,m0,1)
		AF('d',struct A1166,m1,1)
		AF('J',struct A1166,m2,1)
		AF('i',struct A1166,m3,1)
		AF('j',struct A1166,m4,1)
		AF('i',struct A1166,m5,1)
		AF('j',struct A1166,m6,1)
		AF('L',struct A1166,m7,1)
		AF('I',struct A1166,m8,1)
		AFa(struct A1166,m9,1,A24)
		AFa(struct A1166,m10,1,A1165)
		AF('C',struct A1166,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fpBLij{fdJijijLI{}<Ic>C}sSsC[13]j> */
#pragma pack(push,4)
union A1167 { f m0; p m1; B m2; L m3; i m4; j m5; struct A1166 m6; s m7; S m8; s m9; C m10[13]; j m11; };
#pragma pack(pop)
int f_cmpA1167(const union A1167 *x, const union A1167 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1166(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10[0] == y->m10[0] && x->m10[1] == y->m10[1] && x->m10[2] == y->m10[2] && x->m10[3] == y->m10[3] && x->m10[4] == y->m10[4] && x->m10[5] == y->m10[5] && x->m10[6] == y->m10[6] && x->m10[7] == y->m10[7] && x->m10[8] == y->m10[8] && x->m10[9] == y->m10[9] && x->m10[10] == y->m10[10] && x->m10[11] == y->m10[11] && x->m10[12] == y->m10[12] && x->m11 == y->m11; };
DCaggr* f_touchA1167() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1167));
		AF('f',union A1167,m0,1)
		AF('p',union A1167,m1,1)
		AF('B',union A1167,m2,1)
		AF('L',union A1167,m3,1)
		AF('i',union A1167,m4,1)
		AF('j',union A1167,m5,1)
		AFa(union A1167,m6,1,A1166)
		AF('s',union A1167,m7,1)
		AF('S',union A1167,m8,1)
		AF('s',union A1167,m9,1)
		AF('C',union A1167,m10,13)
		AF('j',union A1167,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fBdjdCBIJdLB} */
#pragma pack(push,4)
struct A1168 { f m0; B m1; d m2; j m3; d m4; C m5; B m6; I m7; J m8; d m9; L m10; B m11; };
#pragma pack(pop)
int f_cmpA1168(const struct A1168 *x, const struct A1168 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1168() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1168));
		AF('f',struct A1168,m0,1)
		AF('B',struct A1168,m1,1)
		AF('d',struct A1168,m2,1)
		AF('j',struct A1168,m3,1)
		AF('d',struct A1168,m4,1)
		AF('C',struct A1168,m5,1)
		AF('B',struct A1168,m6,1)
		AF('I',struct A1168,m7,1)
		AF('J',struct A1168,m8,1)
		AF('d',struct A1168,m9,1)
		AF('L',struct A1168,m10,1)
		AF('B',struct A1168,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <CS{fBdjdCBIJdLB}dJdipJSip> */
#pragma pack(push,4)
union A1169 { C m0; S m1; struct A1168 m2; d m3; J m4; d m5; i m6; p m7; J m8; S m9; i m10; p m11; };
#pragma pack(pop)
int f_cmpA1169(const union A1169 *x, const union A1169 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1168(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1169() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1169));
		AF('C',union A1169,m0,1)
		AF('S',union A1169,m1,1)
		AFa(union A1169,m2,1,A1168)
		AF('d',union A1169,m3,1)
		AF('J',union A1169,m4,1)
		AF('d',union A1169,m5,1)
		AF('i',union A1169,m6,1)
		AF('p',union A1169,m7,1)
		AF('J',union A1169,m8,1)
		AF('S',union A1169,m9,1)
		AF('i',union A1169,m10,1)
		AF('p',union A1169,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fIBIfsI<>lLsJ} */
#pragma pack(push,4)
struct A1170 { f m0; I m1; B m2; I m3; f m4; s m5; I m6; union A30 m7; l m8; L m9; s m10; J m11; };
#pragma pack(pop)
int f_cmpA1170(const struct A1170 *x, const struct A1170 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA30(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1170() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1170));
		AF('f',struct A1170,m0,1)
		AF('I',struct A1170,m1,1)
		AF('B',struct A1170,m2,1)
		AF('I',struct A1170,m3,1)
		AF('f',struct A1170,m4,1)
		AF('s',struct A1170,m5,1)
		AF('I',struct A1170,m6,1)
		AFa(struct A1170,m7,1,A30)
		AF('l',struct A1170,m8,1)
		AF('L',struct A1170,m9,1)
		AF('s',struct A1170,m10,1)
		AF('J',struct A1170,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBlJI> */
#pragma pack(push,1)
union A1171 { B m0; B m1; l m2; J m3; I m4; };
#pragma pack(pop)
int f_cmpA1171(const union A1171 *x, const union A1171 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1171() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1171));
		AF('B',union A1171,m0,1)
		AF('B',union A1171,m1,1)
		AF('l',union A1171,m2,1)
		AF('J',union A1171,m3,1)
		AF('I',union A1171,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sscllcpfcJIB> */
#pragma pack(push,2)
union A1172 { s m0; s m1; c m2; l m3; l m4; c m5; p m6; f m7; c m8; J m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA1172(const union A1172 *x, const union A1172 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1172() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1172));
		AF('s',union A1172,m0,1)
		AF('s',union A1172,m1,1)
		AF('c',union A1172,m2,1)
		AF('l',union A1172,m3,1)
		AF('l',union A1172,m4,1)
		AF('c',union A1172,m5,1)
		AF('p',union A1172,m6,1)
		AF('f',union A1172,m7,1)
		AF('c',union A1172,m8,1)
		AF('J',union A1172,m9,1)
		AF('I',union A1172,m10,1)
		AF('B',union A1172,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IBdcJl<sscllcpfcJIB>sC} */
#pragma pack(push,4)
struct A1173 { I m0; B m1; d m2; c m3; J m4; l m5; union A1172 m6; s m7; C m8; };
#pragma pack(pop)
int f_cmpA1173(const struct A1173 *x, const struct A1173 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && f_cmpA1172(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1173() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1173));
		AF('I',struct A1173,m0,1)
		AF('B',struct A1173,m1,1)
		AF('d',struct A1173,m2,1)
		AF('c',struct A1173,m3,1)
		AF('J',struct A1173,m4,1)
		AF('l',struct A1173,m5,1)
		AFa(struct A1173,m6,1,A1172)
		AF('s',struct A1173,m7,1)
		AF('C',struct A1173,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ISCflJsf{IBdcJl<sscllcpfcJIB>sC}[3]Sf} */
#pragma pack(push,4)
struct A1174 { I m0; S m1; C m2; f m3; l m4; J m5; s m6; f m7; struct A1173 m8[3]; S m9; f m10; };
#pragma pack(pop)
int f_cmpA1174(const struct A1174 *x, const struct A1174 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1173(&x->m8[0], &y->m8[0]) && f_cmpA1173(&x->m8[1], &y->m8[1]) && f_cmpA1173(&x->m8[2], &y->m8[2]) && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1174() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(struct A1174));
		AF('I',struct A1174,m0,1)
		AF('S',struct A1174,m1,1)
		AF('C',struct A1174,m2,1)
		AF('f',struct A1174,m3,1)
		AF('l',struct A1174,m4,1)
		AF('J',struct A1174,m5,1)
		AF('s',struct A1174,m6,1)
		AF('f',struct A1174,m7,1)
		AFa(struct A1174,m8,3,A1173)
		AF('S',struct A1174,m9,1)
		AF('f',struct A1174,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p[7]l[14]JLiBBLBsIl> */
#pragma pack(push,8)
union A1175 { p m0[7]; l m1[14]; J m2; L m3; i m4; B m5; B m6; L m7; B m8; s m9; I m10; l m11; };
#pragma pack(pop)
int f_cmpA1175(const union A1175 *x, const union A1175 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m0[6] == y->m0[6] && x->m1[0] == y->m1[0] && x->m1[1] == y->m1[1] && x->m1[2] == y->m1[2] && x->m1[3] == y->m1[3] && x->m1[4] == y->m1[4] && x->m1[5] == y->m1[5] && x->m1[6] == y->m1[6] && x->m1[7] == y->m1[7] && x->m1[8] == y->m1[8] && x->m1[9] == y->m1[9] && x->m1[10] == y->m1[10] && x->m1[11] == y->m1[11] && x->m1[12] == y->m1[12] && x->m1[13] == y->m1[13] && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1175() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1175));
		AF('p',union A1175,m0,7)
		AF('l',union A1175,m1,14)
		AF('J',union A1175,m2,1)
		AF('L',union A1175,m3,1)
		AF('i',union A1175,m4,1)
		AF('B',union A1175,m5,1)
		AF('B',union A1175,m6,1)
		AF('L',union A1175,m7,1)
		AF('B',union A1175,m8,1)
		AF('s',union A1175,m9,1)
		AF('I',union A1175,m10,1)
		AF('l',union A1175,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <IdjJpsIlfJcc[6]> */
#pragma pack(push,4)
union A1176 { I m0; d m1; j m2; J m3; p m4; s m5; I m6; l m7; f m8; J m9; c m10; c m11[6]; };
#pragma pack(pop)
int f_cmpA1176(const union A1176 *x, const union A1176 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11[0] == y->m11[0] && x->m11[1] == y->m11[1] && x->m11[2] == y->m11[2] && x->m11[3] == y->m11[3] && x->m11[4] == y->m11[4] && x->m11[5] == y->m11[5]; };
DCaggr* f_touchA1176() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1176));
		AF('I',union A1176,m0,1)
		AF('d',union A1176,m1,1)
		AF('j',union A1176,m2,1)
		AF('J',union A1176,m3,1)
		AF('p',union A1176,m4,1)
		AF('s',union A1176,m5,1)
		AF('I',union A1176,m6,1)
		AF('l',union A1176,m7,1)
		AF('f',union A1176,m8,1)
		AF('J',union A1176,m9,1)
		AF('c',union A1176,m10,1)
		AF('c',union A1176,m11,6)
		dcCloseAggr(a);
	}
	return a;
};
/* {jCcBd[4]JlcBSsp} */
#pragma pack(push,8)
struct A1177 { j m0; C m1; c m2; B m3; d m4[4]; J m5; l m6; c m7; B m8; S m9; s m10; p m11; };
#pragma pack(pop)
int f_cmpA1177(const struct A1177 *x, const struct A1177 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1177() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1177));
		AF('j',struct A1177,m0,1)
		AF('C',struct A1177,m1,1)
		AF('c',struct A1177,m2,1)
		AF('B',struct A1177,m3,1)
		AF('d',struct A1177,m4,4)
		AF('J',struct A1177,m5,1)
		AF('l',struct A1177,m6,1)
		AF('c',struct A1177,m7,1)
		AF('B',struct A1177,m8,1)
		AF('S',struct A1177,m9,1)
		AF('s',struct A1177,m10,1)
		AF('p',struct A1177,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI> */
#pragma pack(push,2)
union A1178 { s m0; j m1; c m2; union A1175 m3; union A1176 m4; C m5; C m6; struct A1177 m7; B m8; f m9; J m10; I m11; };
#pragma pack(pop)
int f_cmpA1178(const union A1178 *x, const union A1178 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1175(&x->m3, &y->m3) && f_cmpA1176(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1177(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1178() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1178));
		AF('s',union A1178,m0,1)
		AF('j',union A1178,m1,1)
		AF('c',union A1178,m2,1)
		AFa(union A1178,m3,1,A1175)
		AFa(union A1178,m4,1,A1176)
		AF('C',union A1178,m5,1)
		AF('C',union A1178,m6,1)
		AFa(union A1178,m7,1,A1177)
		AF('B',union A1178,m8,1)
		AF('f',union A1178,m9,1)
		AF('J',union A1178,m10,1)
		AF('I',union A1178,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <l[6]fBfJpsBicBf> */
#pragma pack(push,1)
union A1179 { l m0[6]; f m1; B m2; f m3; J m4; p m5; s m6; B m7; i m8; c m9; B m10; f m11; };
#pragma pack(pop)
int f_cmpA1179(const union A1179 *x, const union A1179 *y) { return x->m0[0] == y->m0[0] && x->m0[1] == y->m0[1] && x->m0[2] == y->m0[2] && x->m0[3] == y->m0[3] && x->m0[4] == y->m0[4] && x->m0[5] == y->m0[5] && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1179() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1179));
		AF('l',union A1179,m0,6)
		AF('f',union A1179,m1,1)
		AF('B',union A1179,m2,1)
		AF('f',union A1179,m3,1)
		AF('J',union A1179,m4,1)
		AF('p',union A1179,m5,1)
		AF('s',union A1179,m6,1)
		AF('B',union A1179,m7,1)
		AF('i',union A1179,m8,1)
		AF('c',union A1179,m9,1)
		AF('B',union A1179,m10,1)
		AF('f',union A1179,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jfILC} */
#pragma pack(push,2)
struct A1180 { j m0; f m1; I m2; L m3; C m4; };
#pragma pack(pop)
int f_cmpA1180(const struct A1180 *x, const struct A1180 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1180() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1180));
		AF('j',struct A1180,m0,1)
		AF('f',struct A1180,m1,1)
		AF('I',struct A1180,m2,1)
		AF('L',struct A1180,m3,1)
		AF('C',struct A1180,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis> */
#pragma pack(push,4)
union A1181 { p m0; c m1; L m2; l m3; d m4; union A1179 m5; C m6; struct A1180 m7; J m8; C m9; i m10; s m11; };
#pragma pack(pop)
int f_cmpA1181(const union A1181 *x, const union A1181 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1179(&x->m5, &y->m5) && x->m6 == y->m6 && f_cmpA1180(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1181() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1181));
		AF('p',union A1181,m0,1)
		AF('c',union A1181,m1,1)
		AF('L',union A1181,m2,1)
		AF('l',union A1181,m3,1)
		AF('d',union A1181,m4,1)
		AFa(union A1181,m5,1,A1179)
		AF('C',union A1181,m6,1)
		AFa(union A1181,m7,1,A1180)
		AF('J',union A1181,m8,1)
		AF('C',union A1181,m9,1)
		AF('i',union A1181,m10,1)
		AF('s',union A1181,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ldlsBddf> */
#pragma pack(push,4)
union A1182 { l m0; d m1; l m2; s m3; B m4; d m5; d m6; f m7; };
#pragma pack(pop)
int f_cmpA1182(const union A1182 *x, const union A1182 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1182() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1182));
		AF('l',union A1182,m0,1)
		AF('d',union A1182,m1,1)
		AF('l',union A1182,m2,1)
		AF('s',union A1182,m3,1)
		AF('B',union A1182,m4,1)
		AF('d',union A1182,m5,1)
		AF('d',union A1182,m6,1)
		AF('f',union A1182,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS> */
#pragma pack(push,4)
union A1183 { union A1178 m0; I m1; S m2; B m3; c m4; d m5; d m6; j m7; union A1181 m8; union A1182 m9; d m10; S m11; };
#pragma pack(pop)
int f_cmpA1183(const union A1183 *x, const union A1183 *y) { return f_cmpA1178(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1181(&x->m8, &y->m8) && f_cmpA1182(&x->m9, &y->m9) && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1183() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1183));
		AFa(union A1183,m0,1,A1178)
		AF('I',union A1183,m1,1)
		AF('S',union A1183,m2,1)
		AF('B',union A1183,m3,1)
		AF('c',union A1183,m4,1)
		AF('d',union A1183,m5,1)
		AF('d',union A1183,m6,1)
		AF('j',union A1183,m7,1)
		AFa(union A1183,m8,1,A1181)
		AFa(union A1183,m9,1,A1182)
		AF('d',union A1183,m10,1)
		AF('S',union A1183,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BBidSJlclJf> */
#pragma pack(push,4)
union A1184 { B m0; B m1; i m2; d m3; S m4; J m5; l m6; c m7; l m8; J m9; f m10; };
#pragma pack(pop)
int f_cmpA1184(const union A1184 *x, const union A1184 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1184() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1184));
		AF('B',union A1184,m0,1)
		AF('B',union A1184,m1,1)
		AF('i',union A1184,m2,1)
		AF('d',union A1184,m3,1)
		AF('S',union A1184,m4,1)
		AF('J',union A1184,m5,1)
		AF('l',union A1184,m6,1)
		AF('c',union A1184,m7,1)
		AF('l',union A1184,m8,1)
		AF('J',union A1184,m9,1)
		AF('f',union A1184,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <d<BBidSJlclJf>jfBddIpCdI> */
#pragma pack(push,2)
union A1185 { d m0; union A1184 m1; j m2; f m3; B m4; d m5; d m6; I m7; p m8; C m9; d m10; I m11; };
#pragma pack(pop)
int f_cmpA1185(const union A1185 *x, const union A1185 *y) { return x->m0 == y->m0 && f_cmpA1184(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1185() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1185));
		AF('d',union A1185,m0,1)
		AFa(union A1185,m1,1,A1184)
		AF('j',union A1185,m2,1)
		AF('f',union A1185,m3,1)
		AF('B',union A1185,m4,1)
		AF('d',union A1185,m5,1)
		AF('d',union A1185,m6,1)
		AF('I',union A1185,m7,1)
		AF('p',union A1185,m8,1)
		AF('C',union A1185,m9,1)
		AF('d',union A1185,m10,1)
		AF('I',union A1185,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LpBJdfL} */
#pragma pack(push,2)
struct A1186 { L m0; p m1; B m2; J m3; d m4; f m5; L m6; };
#pragma pack(pop)
int f_cmpA1186(const struct A1186 *x, const struct A1186 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1186() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1186));
		AF('L',struct A1186,m0,1)
		AF('p',struct A1186,m1,1)
		AF('B',struct A1186,m2,1)
		AF('J',struct A1186,m3,1)
		AF('d',struct A1186,m4,1)
		AF('f',struct A1186,m5,1)
		AF('L',struct A1186,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sCLlJCcLBLj> */
#pragma pack(push,4)
union A1187 { s m0; C m1; L m2; l m3; J m4; C m5; c m6; L m7; B m8; L m9; j m10; };
#pragma pack(pop)
int f_cmpA1187(const union A1187 *x, const union A1187 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10; };
DCaggr* f_touchA1187() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(11, sizeof(union A1187));
		AF('s',union A1187,m0,1)
		AF('C',union A1187,m1,1)
		AF('L',union A1187,m2,1)
		AF('l',union A1187,m3,1)
		AF('J',union A1187,m4,1)
		AF('C',union A1187,m5,1)
		AF('c',union A1187,m6,1)
		AF('L',union A1187,m7,1)
		AF('B',union A1187,m8,1)
		AF('L',union A1187,m9,1)
		AF('j',union A1187,m10,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SJjLIlc[1]lisCf} */
#pragma pack(push,2)
struct A1188 { S m0; J m1; j m2; L m3; I m4; l m5; c m6[1]; l m7; i m8; s m9; C m10; f m11; };
#pragma pack(pop)
int f_cmpA1188(const struct A1188 *x, const struct A1188 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1188() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1188));
		AF('S',struct A1188,m0,1)
		AF('J',struct A1188,m1,1)
		AF('j',struct A1188,m2,1)
		AF('L',struct A1188,m3,1)
		AF('I',struct A1188,m4,1)
		AF('l',struct A1188,m5,1)
		AF('c',struct A1188,m6,1)
		AF('l',struct A1188,m7,1)
		AF('i',struct A1188,m8,1)
		AF('s',struct A1188,m9,1)
		AF('C',struct A1188,m10,1)
		AF('f',struct A1188,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <iljJijdBSsij> */
#pragma pack(push,4)
union A1189 { i m0; l m1; j m2; J m3; i m4; j m5; d m6; B m7; S m8; s m9; i m10; j m11; };
#pragma pack(pop)
int f_cmpA1189(const union A1189 *x, const union A1189 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1189() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1189));
		AF('i',union A1189,m0,1)
		AF('l',union A1189,m1,1)
		AF('j',union A1189,m2,1)
		AF('J',union A1189,m3,1)
		AF('i',union A1189,m4,1)
		AF('j',union A1189,m5,1)
		AF('d',union A1189,m6,1)
		AF('B',union A1189,m7,1)
		AF('S',union A1189,m8,1)
		AF('s',union A1189,m9,1)
		AF('i',union A1189,m10,1)
		AF('j',union A1189,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {piLpilplp} */
#pragma pack(push,8)
struct A1190 { p m0; i m1; L m2; p m3; i m4; l m5; p m6; l m7; p m8; };
#pragma pack(pop)
int f_cmpA1190(const struct A1190 *x, const struct A1190 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1190() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(struct A1190));
		AF('p',struct A1190,m0,1)
		AF('i',struct A1190,m1,1)
		AF('L',struct A1190,m2,1)
		AF('p',struct A1190,m3,1)
		AF('i',struct A1190,m4,1)
		AF('l',struct A1190,m5,1)
		AF('p',struct A1190,m6,1)
		AF('l',struct A1190,m7,1)
		AF('p',struct A1190,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ISlSi} */
#pragma pack(push,1)
struct A1191 { I m0; S m1; l m2; S m3; i m4; };
#pragma pack(pop)
int f_cmpA1191(const struct A1191 *x, const struct A1191 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1191() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1191));
		AF('I',struct A1191,m0,1)
		AF('S',struct A1191,m1,1)
		AF('l',struct A1191,m2,1)
		AF('S',struct A1191,m3,1)
		AF('i',struct A1191,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <sI> */
#pragma pack(push,8)
union A1192 { s m0; I m1; };
#pragma pack(pop)
int f_cmpA1192(const union A1192 *x, const union A1192 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1192() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1192));
		AF('s',union A1192,m0,1)
		AF('I',union A1192,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <p{SJjLIlc[1]lisCf}pC<iljJijdBSsij>i{piLpilplp}di{ISlSi}d<sI>> */
#pragma pack(push,2)
union A1193 { p m0; struct A1188 m1; p m2; C m3; union A1189 m4; i m5; struct A1190 m6; d m7; i m8; struct A1191 m9; d m10; union A1192 m11; };
#pragma pack(pop)
int f_cmpA1193(const union A1193 *x, const union A1193 *y) { return x->m0 == y->m0 && f_cmpA1188(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1189(&x->m4, &y->m4) && x->m5 == y->m5 && f_cmpA1190(&x->m6, &y->m6) && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1191(&x->m9, &y->m9) && x->m10 == y->m10 && f_cmpA1192(&x->m11, &y->m11); };
DCaggr* f_touchA1193() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1193));
		AF('p',union A1193,m0,1)
		AFa(union A1193,m1,1,A1188)
		AF('p',union A1193,m2,1)
		AF('C',union A1193,m3,1)
		AFa(union A1193,m4,1,A1189)
		AF('i',union A1193,m5,1)
		AFa(union A1193,m6,1,A1190)
		AF('d',union A1193,m7,1)
		AF('i',union A1193,m8,1)
		AFa(union A1193,m9,1,A1191)
		AF('d',union A1193,m10,1)
		AFa(union A1193,m11,1,A1192)
		dcCloseAggr(a);
	}
	return a;
};
/* <BLCJslC> */
#pragma pack(push,4)
union A1194 { B m0; L m1; C m2; J m3; s m4; l m5; C m6; };
#pragma pack(pop)
int f_cmpA1194(const union A1194 *x, const union A1194 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1194() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(union A1194));
		AF('B',union A1194,m0,1)
		AF('L',union A1194,m1,1)
		AF('C',union A1194,m2,1)
		AF('J',union A1194,m3,1)
		AF('s',union A1194,m4,1)
		AF('l',union A1194,m5,1)
		AF('C',union A1194,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {LSdpBisLfjdi} */
#pragma pack(push,4)
struct A1195 { L m0; S m1; d m2; p m3; B m4; i m5; s m6; L m7; f m8; j m9; d m10; i m11; };
#pragma pack(pop)
int f_cmpA1195(const struct A1195 *x, const struct A1195 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1195() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1195));
		AF('L',struct A1195,m0,1)
		AF('S',struct A1195,m1,1)
		AF('d',struct A1195,m2,1)
		AF('p',struct A1195,m3,1)
		AF('B',struct A1195,m4,1)
		AF('i',struct A1195,m5,1)
		AF('s',struct A1195,m6,1)
		AF('L',struct A1195,m7,1)
		AF('f',struct A1195,m8,1)
		AF('j',struct A1195,m9,1)
		AF('d',struct A1195,m10,1)
		AF('i',struct A1195,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <I<BLCJslC>i{LSdpBisLfjdi}dJd[9]cdilc> */
#pragma pack(push,1)
union A1196 { I m0; union A1194 m1; i m2; struct A1195 m3; d m4; J m5; d m6[9]; c m7; d m8; i m9; l m10; c m11; };
#pragma pack(pop)
int f_cmpA1196(const union A1196 *x, const union A1196 *y) { return x->m0 == y->m0 && f_cmpA1194(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA1195(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6[0] == y->m6[0] && x->m6[1] == y->m6[1] && x->m6[2] == y->m6[2] && x->m6[3] == y->m6[3] && x->m6[4] == y->m6[4] && x->m6[5] == y->m6[5] && x->m6[6] == y->m6[6] && x->m6[7] == y->m6[7] && x->m6[8] == y->m6[8] && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1196() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1196));
		AF('I',union A1196,m0,1)
		AFa(union A1196,m1,1,A1194)
		AF('i',union A1196,m2,1)
		AFa(union A1196,m3,1,A1195)
		AF('d',union A1196,m4,1)
		AF('J',union A1196,m5,1)
		AF('d',union A1196,m6,9)
		AF('c',union A1196,m7,1)
		AF('d',union A1196,m8,1)
		AF('i',union A1196,m9,1)
		AF('l',union A1196,m10,1)
		AF('c',union A1196,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {s{}l{s}BSfSILLS} */
#pragma pack(push,4)
struct A1197 { s m0; struct A24 m1; l m2; struct A740 m3; B m4; S m5; f m6; S m7; I m8; L m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA1197(const struct A1197 *x, const struct A1197 *y) { return x->m0 == y->m0 && f_cmpA24(&x->m1, &y->m1) && x->m2 == y->m2 && f_cmpA740(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1197() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1197));
		AF('s',struct A1197,m0,1)
		AFa(struct A1197,m1,1,A24)
		AF('l',struct A1197,m2,1)
		AFa(struct A1197,m3,1,A740)
		AF('B',struct A1197,m4,1)
		AF('S',struct A1197,m5,1)
		AF('f',struct A1197,m6,1)
		AF('S',struct A1197,m7,1)
		AF('I',struct A1197,m8,1)
		AF('L',struct A1197,m9,1)
		AF('L',struct A1197,m10,1)
		AF('S',struct A1197,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {diIdBIfSJICj} */
#pragma pack(push,2)
struct A1198 { d m0; i m1; I m2; d m3; B m4; I m5; f m6; S m7; J m8; I m9; C m10; j m11; };
#pragma pack(pop)
int f_cmpA1198(const struct A1198 *x, const struct A1198 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1198() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1198));
		AF('d',struct A1198,m0,1)
		AF('i',struct A1198,m1,1)
		AF('I',struct A1198,m2,1)
		AF('d',struct A1198,m3,1)
		AF('B',struct A1198,m4,1)
		AF('I',struct A1198,m5,1)
		AF('f',struct A1198,m6,1)
		AF('S',struct A1198,m7,1)
		AF('J',struct A1198,m8,1)
		AF('I',struct A1198,m9,1)
		AF('C',struct A1198,m10,1)
		AF('j',struct A1198,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <dSspdplJssdp> */
#pragma pack(push,4)
union A1199 { d m0; S m1; s m2; p m3; d m4; p m5; l m6; J m7; s m8; s m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA1199(const union A1199 *x, const union A1199 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1199() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1199));
		AF('d',union A1199,m0,1)
		AF('S',union A1199,m1,1)
		AF('s',union A1199,m2,1)
		AF('p',union A1199,m3,1)
		AF('d',union A1199,m4,1)
		AF('p',union A1199,m5,1)
		AF('l',union A1199,m6,1)
		AF('J',union A1199,m7,1)
		AF('s',union A1199,m8,1)
		AF('s',union A1199,m9,1)
		AF('d',union A1199,m10,1)
		AF('p',union A1199,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SsSs{diIdBIfSJICj}jilpdp<dSspdplJssdp>[13]} */
#pragma pack(push,2)
struct A1200 { S m0; s m1; S m2; s m3; struct A1198 m4; j m5; i m6; l m7; p m8; d m9; p m10; union A1199 m11[13]; };
#pragma pack(pop)
int f_cmpA1200(const struct A1200 *x, const struct A1200 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1198(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && f_cmpA1199(&x->m11[0], &y->m11[0]) && f_cmpA1199(&x->m11[1], &y->m11[1]) && f_cmpA1199(&x->m11[2], &y->m11[2]) && f_cmpA1199(&x->m11[3], &y->m11[3]) && f_cmpA1199(&x->m11[4], &y->m11[4]) && f_cmpA1199(&x->m11[5], &y->m11[5]) && f_cmpA1199(&x->m11[6], &y->m11[6]) && f_cmpA1199(&x->m11[7], &y->m11[7]) && f_cmpA1199(&x->m11[8], &y->m11[8]) && f_cmpA1199(&x->m11[9], &y->m11[9]) && f_cmpA1199(&x->m11[10], &y->m11[10]) && f_cmpA1199(&x->m11[11], &y->m11[11]) && f_cmpA1199(&x->m11[12], &y->m11[12]); };
DCaggr* f_touchA1200() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1200));
		AF('S',struct A1200,m0,1)
		AF('s',struct A1200,m1,1)
		AF('S',struct A1200,m2,1)
		AF('s',struct A1200,m3,1)
		AFa(struct A1200,m4,1,A1198)
		AF('j',struct A1200,m5,1)
		AF('i',struct A1200,m6,1)
		AF('l',struct A1200,m7,1)
		AF('p',struct A1200,m8,1)
		AF('d',struct A1200,m9,1)
		AF('p',struct A1200,m10,1)
		AFa(struct A1200,m11,13,A1199)
		dcCloseAggr(a);
	}
	return a;
};
/* <{s{}l{s}BSfSILLS}CliISpsl{SsSs{diIdBIfSJICj}jilpdp<dSspdplJssdp>[13]}{p}s> */
#pragma pack(push,4)
union A1201 { struct A1197 m0; C m1; l m2; i m3; I m4; S m5; p m6; s m7; l m8; struct A1200 m9; struct A230 m10; s m11; };
#pragma pack(pop)
int f_cmpA1201(const union A1201 *x, const union A1201 *y) { return f_cmpA1197(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1200(&x->m9, &y->m9) && f_cmpA230(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1201() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1201));
		AFa(union A1201,m0,1,A1197)
		AF('C',union A1201,m1,1)
		AF('l',union A1201,m2,1)
		AF('i',union A1201,m3,1)
		AF('I',union A1201,m4,1)
		AF('S',union A1201,m5,1)
		AF('p',union A1201,m6,1)
		AF('s',union A1201,m7,1)
		AF('l',union A1201,m8,1)
		AFa(union A1201,m9,1,A1200)
		AFa(union A1201,m10,1,A230)
		AF('s',union A1201,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {CLScspdjfcdd} */
#pragma pack(push,4)
struct A1202 { C m0; L m1; S m2; c m3; s m4; p m5; d m6; j m7; f m8; c m9; d m10; d m11; };
#pragma pack(pop)
int f_cmpA1202(const struct A1202 *x, const struct A1202 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1202() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1202));
		AF('C',struct A1202,m0,1)
		AF('L',struct A1202,m1,1)
		AF('S',struct A1202,m2,1)
		AF('c',struct A1202,m3,1)
		AF('s',struct A1202,m4,1)
		AF('p',struct A1202,m5,1)
		AF('d',struct A1202,m6,1)
		AF('j',struct A1202,m7,1)
		AF('f',struct A1202,m8,1)
		AF('c',struct A1202,m9,1)
		AF('d',struct A1202,m10,1)
		AF('d',struct A1202,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {sll{CLScspdjfcdd}sId} */
#pragma pack(push,4)
struct A1203 { s m0; l m1; l m2; struct A1202 m3; s m4; I m5; d m6; };
#pragma pack(pop)
int f_cmpA1203(const struct A1203 *x, const struct A1203 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && f_cmpA1202(&x->m3, &y->m3) && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6; };
DCaggr* f_touchA1203() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(7, sizeof(struct A1203));
		AF('s',struct A1203,m0,1)
		AF('l',struct A1203,m1,1)
		AF('l',struct A1203,m2,1)
		AFa(struct A1203,m3,1,A1202)
		AF('s',struct A1203,m4,1)
		AF('I',struct A1203,m5,1)
		AF('d',struct A1203,m6,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {BIjBJ} */
#pragma pack(push,2)
struct A1204 { B m0; I m1; j m2; B m3; J m4; };
#pragma pack(pop)
int f_cmpA1204(const struct A1204 *x, const struct A1204 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1204() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(struct A1204));
		AF('B',struct A1204,m0,1)
		AF('I',struct A1204,m1,1)
		AF('j',struct A1204,m2,1)
		AF('B',struct A1204,m3,1)
		AF('J',struct A1204,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {p{BIjBJ}Ll} */
#pragma pack(push,4)
struct A1205 { p m0; struct A1204 m1; L m2; l m3; };
#pragma pack(pop)
int f_cmpA1205(const struct A1205 *x, const struct A1205 *y) { return x->m0 == y->m0 && f_cmpA1204(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1205() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1205));
		AF('p',struct A1205,m0,1)
		AFa(struct A1205,m1,1,A1204)
		AF('L',struct A1205,m2,1)
		AF('l',struct A1205,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cfBBfLiBjJjd} */
#pragma pack(push,4)
struct A1206 { c m0; f m1; B m2; B m3; f m4; L m5; i m6; B m7; j m8; J m9; j m10; d m11; };
#pragma pack(pop)
int f_cmpA1206(const struct A1206 *x, const struct A1206 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1206() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1206));
		AF('c',struct A1206,m0,1)
		AF('f',struct A1206,m1,1)
		AF('B',struct A1206,m2,1)
		AF('B',struct A1206,m3,1)
		AF('f',struct A1206,m4,1)
		AF('L',struct A1206,m5,1)
		AF('i',struct A1206,m6,1)
		AF('B',struct A1206,m7,1)
		AF('j',struct A1206,m8,1)
		AF('J',struct A1206,m9,1)
		AF('j',struct A1206,m10,1)
		AF('d',struct A1206,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {jCBB[14]dJCjipfs} */
#pragma pack(push,4)
struct A1207 { j m0; C m1; B m2; B m3[14]; d m4; J m5; C m6; j m7; i m8; p m9; f m10; s m11; };
#pragma pack(pop)
int f_cmpA1207(const struct A1207 *x, const struct A1207 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1207() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1207));
		AF('j',struct A1207,m0,1)
		AF('C',struct A1207,m1,1)
		AF('B',struct A1207,m2,1)
		AF('B',struct A1207,m3,14)
		AF('d',struct A1207,m4,1)
		AF('J',struct A1207,m5,1)
		AF('C',struct A1207,m6,1)
		AF('j',struct A1207,m7,1)
		AF('i',struct A1207,m8,1)
		AF('p',struct A1207,m9,1)
		AF('f',struct A1207,m10,1)
		AF('s',struct A1207,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {SBdcLSpCiBJJ} */
#pragma pack(push,4)
struct A1208 { S m0; B m1; d m2; c m3; L m4; S m5; p m6; C m7; i m8; B m9; J m10; J m11; };
#pragma pack(pop)
int f_cmpA1208(const struct A1208 *x, const struct A1208 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1208() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1208));
		AF('S',struct A1208,m0,1)
		AF('B',struct A1208,m1,1)
		AF('d',struct A1208,m2,1)
		AF('c',struct A1208,m3,1)
		AF('L',struct A1208,m4,1)
		AF('S',struct A1208,m5,1)
		AF('p',struct A1208,m6,1)
		AF('C',struct A1208,m7,1)
		AF('i',struct A1208,m8,1)
		AF('B',struct A1208,m9,1)
		AF('J',struct A1208,m10,1)
		AF('J',struct A1208,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <cJiJj[3]cfSsISj> */
#pragma pack(push,4)
union A1209 { c m0; J m1; i m2; J m3; j m4[3]; c m5; f m6; S m7; s m8; I m9; S m10; j m11; };
#pragma pack(pop)
int f_cmpA1209(const union A1209 *x, const union A1209 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1209() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1209));
		AF('c',union A1209,m0,1)
		AF('J',union A1209,m1,1)
		AF('i',union A1209,m2,1)
		AF('J',union A1209,m3,1)
		AF('j',union A1209,m4,3)
		AF('c',union A1209,m5,1)
		AF('f',union A1209,m6,1)
		AF('S',union A1209,m7,1)
		AF('s',union A1209,m8,1)
		AF('I',union A1209,m9,1)
		AF('S',union A1209,m10,1)
		AF('j',union A1209,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc} */
#pragma pack(push,4)
struct A1210 { B m0; struct A1208 m1; d m2; p m3; j m4; B m5; L m6; c m7; union A1209 m8; S m9; j m10; c m11; };
#pragma pack(pop)
int f_cmpA1210(const struct A1210 *x, const struct A1210 *y) { return x->m0 == y->m0 && f_cmpA1208(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1209(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1210() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1210));
		AF('B',struct A1210,m0,1)
		AFa(struct A1210,m1,1,A1208)
		AF('d',struct A1210,m2,1)
		AF('p',struct A1210,m3,1)
		AF('j',struct A1210,m4,1)
		AF('B',struct A1210,m5,1)
		AF('L',struct A1210,m6,1)
		AF('c',struct A1210,m7,1)
		AFa(struct A1210,m8,1,A1209)
		AF('S',struct A1210,m9,1)
		AF('j',struct A1210,m10,1)
		AF('c',struct A1210,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ILLC{jCBB[14]dJCjipfs}fsf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC} */
#pragma pack(push,4)
struct A1211 { I m0; L m1; L m2; C m3; struct A1207 m4; f m5; s m6; f m7; struct A1210 m8; p m9; j m10; C m11; };
#pragma pack(pop)
int f_cmpA1211(const struct A1211 *x, const struct A1211 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1207(&x->m4, &y->m4) && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA1210(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1211() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1211));
		AF('I',struct A1211,m0,1)
		AF('L',struct A1211,m1,1)
		AF('L',struct A1211,m2,1)
		AF('C',struct A1211,m3,1)
		AFa(struct A1211,m4,1,A1207)
		AF('f',struct A1211,m5,1)
		AF('s',struct A1211,m6,1)
		AF('f',struct A1211,m7,1)
		AFa(struct A1211,m8,1,A1210)
		AF('p',struct A1211,m9,1)
		AF('j',struct A1211,m10,1)
		AF('C',struct A1211,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <jddBSjdSBJCi> */
#pragma pack(push,2)
union A1212 { j m0; d m1; d m2; B m3; S m4; j m5; d m6; S m7; B m8; J m9; C m10; i m11; };
#pragma pack(pop)
int f_cmpA1212(const union A1212 *x, const union A1212 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1212() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1212));
		AF('j',union A1212,m0,1)
		AF('d',union A1212,m1,1)
		AF('d',union A1212,m2,1)
		AF('B',union A1212,m3,1)
		AF('S',union A1212,m4,1)
		AF('j',union A1212,m5,1)
		AF('d',union A1212,m6,1)
		AF('S',union A1212,m7,1)
		AF('B',union A1212,m8,1)
		AF('J',union A1212,m9,1)
		AF('C',union A1212,m10,1)
		AF('i',union A1212,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {cCflslcdBfIB} */
#pragma pack(push,4)
struct A1213 { c m0; C m1; f m2; l m3; s m4; l m5; c m6; d m7; B m8; f m9; I m10; B m11; };
#pragma pack(pop)
int f_cmpA1213(const struct A1213 *x, const struct A1213 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1213() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1213));
		AF('c',struct A1213,m0,1)
		AF('C',struct A1213,m1,1)
		AF('f',struct A1213,m2,1)
		AF('l',struct A1213,m3,1)
		AF('s',struct A1213,m4,1)
		AF('l',struct A1213,m5,1)
		AF('c',struct A1213,m6,1)
		AF('d',struct A1213,m7,1)
		AF('B',struct A1213,m8,1)
		AF('f',struct A1213,m9,1)
		AF('I',struct A1213,m10,1)
		AF('B',struct A1213,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<jddBSjdSBJCi>SSLLcI{cCflslcdBfIB}Lssd> */
#pragma pack(push,4)
union A1214 { union A1212 m0; S m1; S m2; L m3; L m4; c m5; I m6; struct A1213 m7; L m8; s m9; s m10; d m11; };
#pragma pack(pop)
int f_cmpA1214(const union A1214 *x, const union A1214 *y) { return f_cmpA1212(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && f_cmpA1213(&x->m7, &y->m7) && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1214() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1214));
		AFa(union A1214,m0,1,A1212)
		AF('S',union A1214,m1,1)
		AF('S',union A1214,m2,1)
		AF('L',union A1214,m3,1)
		AF('L',union A1214,m4,1)
		AF('c',union A1214,m5,1)
		AF('I',union A1214,m6,1)
		AFa(union A1214,m7,1,A1213)
		AF('L',union A1214,m8,1)
		AF('s',union A1214,m9,1)
		AF('s',union A1214,m10,1)
		AF('d',union A1214,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ljp> */
#pragma pack(push,4)
union A1215 { l m0; j m1; p m2; };
#pragma pack(pop)
int f_cmpA1215(const union A1215 *x, const union A1215 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2; };
DCaggr* f_touchA1215() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(union A1215));
		AF('l',union A1215,m0,1)
		AF('j',union A1215,m1,1)
		AF('p',union A1215,m2,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<<jddBSjdSBJCi>SSLLcI{cCflslcdBfIB}Lssd>s<ljp>ILicBIBii> */
#pragma pack(push,4)
union A1216 { union A1214 m0; s m1; union A1215 m2; I m3; L m4; i m5; c m6; B m7; I m8; B m9; i m10; i m11; };
#pragma pack(pop)
int f_cmpA1216(const union A1216 *x, const union A1216 *y) { return f_cmpA1214(&x->m0, &y->m0) && x->m1 == y->m1 && f_cmpA1215(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1216() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1216));
		AFa(union A1216,m0,1,A1214)
		AF('s',union A1216,m1,1)
		AFa(union A1216,m2,1,A1215)
		AF('I',union A1216,m3,1)
		AF('L',union A1216,m4,1)
		AF('i',union A1216,m5,1)
		AF('c',union A1216,m6,1)
		AF('B',union A1216,m7,1)
		AF('I',union A1216,m8,1)
		AF('B',union A1216,m9,1)
		AF('i',union A1216,m10,1)
		AF('i',union A1216,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fJIllsJflLLS} */
#pragma pack(push,4)
struct A1217 { f m0; J m1; I m2; l m3; l m4; s m5; J m6; f m7; l m8; L m9; L m10; S m11; };
#pragma pack(pop)
int f_cmpA1217(const struct A1217 *x, const struct A1217 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1217() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1217));
		AF('f',struct A1217,m0,1)
		AF('J',struct A1217,m1,1)
		AF('I',struct A1217,m2,1)
		AF('l',struct A1217,m3,1)
		AF('l',struct A1217,m4,1)
		AF('s',struct A1217,m5,1)
		AF('J',struct A1217,m6,1)
		AF('f',struct A1217,m7,1)
		AF('l',struct A1217,m8,1)
		AF('L',struct A1217,m9,1)
		AF('L',struct A1217,m10,1)
		AF('S',struct A1217,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <pCdlBsBpJiiI> */
#pragma pack(push,4)
union A1218 { p m0; C m1; d m2; l m3; B m4; s m5; B m6; p m7; J m8; i m9; i m10; I m11; };
#pragma pack(pop)
int f_cmpA1218(const union A1218 *x, const union A1218 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1218() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1218));
		AF('p',union A1218,m0,1)
		AF('C',union A1218,m1,1)
		AF('d',union A1218,m2,1)
		AF('l',union A1218,m3,1)
		AF('B',union A1218,m4,1)
		AF('s',union A1218,m5,1)
		AF('B',union A1218,m6,1)
		AF('p',union A1218,m7,1)
		AF('J',union A1218,m8,1)
		AF('i',union A1218,m9,1)
		AF('i',union A1218,m10,1)
		AF('I',union A1218,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <scCJp> */
#pragma pack(push,4)
union A1219 { s m0; c m1; C m2; J m3; p m4; };
#pragma pack(pop)
int f_cmpA1219(const union A1219 *x, const union A1219 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4; };
DCaggr* f_touchA1219() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(5, sizeof(union A1219));
		AF('s',union A1219,m0,1)
		AF('c',union A1219,m1,1)
		AF('C',union A1219,m2,1)
		AF('J',union A1219,m3,1)
		AF('p',union A1219,m4,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <ScpJ[14]iLljIddp> */
#pragma pack(push,2)
union A1220 { S m0; c m1; p m2; J m3[14]; i m4; L m5; l m6; j m7; I m8; d m9; d m10; p m11; };
#pragma pack(pop)
int f_cmpA1220(const union A1220 *x, const union A1220 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3[0] == y->m3[0] && x->m3[1] == y->m3[1] && x->m3[2] == y->m3[2] && x->m3[3] == y->m3[3] && x->m3[4] == y->m3[4] && x->m3[5] == y->m3[5] && x->m3[6] == y->m3[6] && x->m3[7] == y->m3[7] && x->m3[8] == y->m3[8] && x->m3[9] == y->m3[9] && x->m3[10] == y->m3[10] && x->m3[11] == y->m3[11] && x->m3[12] == y->m3[12] && x->m3[13] == y->m3[13] && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1220() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1220));
		AF('S',union A1220,m0,1)
		AF('c',union A1220,m1,1)
		AF('p',union A1220,m2,1)
		AF('J',union A1220,m3,14)
		AF('i',union A1220,m4,1)
		AF('L',union A1220,m5,1)
		AF('l',union A1220,m6,1)
		AF('j',union A1220,m7,1)
		AF('I',union A1220,m8,1)
		AF('d',union A1220,m9,1)
		AF('d',union A1220,m10,1)
		AF('p',union A1220,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {Bl<ScpJ[14]iLljIddp>sisBi} */
#pragma pack(push,4)
struct A1221 { B m0; l m1; union A1220 m2; s m3; i m4; s m5; B m6; i m7; };
#pragma pack(pop)
int f_cmpA1221(const struct A1221 *x, const struct A1221 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1220(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1221() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(struct A1221));
		AF('B',struct A1221,m0,1)
		AF('l',struct A1221,m1,1)
		AFa(struct A1221,m2,1,A1220)
		AF('s',struct A1221,m3,1)
		AF('i',struct A1221,m4,1)
		AF('s',struct A1221,m5,1)
		AF('B',struct A1221,m6,1)
		AF('i',struct A1221,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {pjs[10]} */
#pragma pack(push,8)
struct A1222 { p m0; j m1; s m2[10]; };
#pragma pack(pop)
int f_cmpA1222(const struct A1222 *x, const struct A1222 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m2[3] == y->m2[3] && x->m2[4] == y->m2[4] && x->m2[5] == y->m2[5] && x->m2[6] == y->m2[6] && x->m2[7] == y->m2[7] && x->m2[8] == y->m2[8] && x->m2[9] == y->m2[9]; };
DCaggr* f_touchA1222() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(3, sizeof(struct A1222));
		AF('p',struct A1222,m0,1)
		AF('j',struct A1222,m1,1)
		AF('s',struct A1222,m2,10)
		dcCloseAggr(a);
	}
	return a;
};
/* <BJifiBiSlCBJ> */
#pragma pack(push,2)
union A1223 { B m0; J m1; i m2; f m3; i m4; B m5; i m6; S m7; l m8; C m9; B m10; J m11; };
#pragma pack(pop)
int f_cmpA1223(const union A1223 *x, const union A1223 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1223() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1223));
		AF('B',union A1223,m0,1)
		AF('J',union A1223,m1,1)
		AF('i',union A1223,m2,1)
		AF('f',union A1223,m3,1)
		AF('i',union A1223,m4,1)
		AF('B',union A1223,m5,1)
		AF('i',union A1223,m6,1)
		AF('S',union A1223,m7,1)
		AF('l',union A1223,m8,1)
		AF('C',union A1223,m9,1)
		AF('B',union A1223,m10,1)
		AF('J',union A1223,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {IfcIJ[10]<BJifiBiSlCBJ>isJlcd} */
#pragma pack(push,4)
struct A1224 { I m0; f m1; c m2; I m3; J m4[10]; union A1223 m5; i m6; s m7; J m8; l m9; c m10; d m11; };
#pragma pack(pop)
int f_cmpA1224(const struct A1224 *x, const struct A1224 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4[0] == y->m4[0] && x->m4[1] == y->m4[1] && x->m4[2] == y->m4[2] && x->m4[3] == y->m4[3] && x->m4[4] == y->m4[4] && x->m4[5] == y->m4[5] && x->m4[6] == y->m4[6] && x->m4[7] == y->m4[7] && x->m4[8] == y->m4[8] && x->m4[9] == y->m4[9] && f_cmpA1223(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1224() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1224));
		AF('I',struct A1224,m0,1)
		AF('f',struct A1224,m1,1)
		AF('c',struct A1224,m2,1)
		AF('I',struct A1224,m3,1)
		AF('J',struct A1224,m4,10)
		AFa(struct A1224,m5,1,A1223)
		AF('i',struct A1224,m6,1)
		AF('s',struct A1224,m7,1)
		AF('J',struct A1224,m8,1)
		AF('l',struct A1224,m9,1)
		AF('c',struct A1224,m10,1)
		AF('d',struct A1224,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <LIlfscjif> */
#pragma pack(push,2)
union A1225 { L m0; I m1; l m2; f m3; s m4; c m5; j m6; i m7; f m8; };
#pragma pack(pop)
int f_cmpA1225(const union A1225 *x, const union A1225 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8; };
DCaggr* f_touchA1225() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(9, sizeof(union A1225));
		AF('L',union A1225,m0,1)
		AF('I',union A1225,m1,1)
		AF('l',union A1225,m2,1)
		AF('f',union A1225,m3,1)
		AF('s',union A1225,m4,1)
		AF('c',union A1225,m5,1)
		AF('j',union A1225,m6,1)
		AF('i',union A1225,m7,1)
		AF('f',union A1225,m8,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {fdcSCjjjjliS} */
#pragma pack(push,8)
struct A1226 { f m0; d m1; c m2; S m3; C m4; j m5; j m6; j m7; j m8; l m9; i m10; S m11; };
#pragma pack(pop)
int f_cmpA1226(const struct A1226 *x, const struct A1226 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1226() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1226));
		AF('f',struct A1226,m0,1)
		AF('d',struct A1226,m1,1)
		AF('c',struct A1226,m2,1)
		AF('S',struct A1226,m3,1)
		AF('C',struct A1226,m4,1)
		AF('j',struct A1226,m5,1)
		AF('j',struct A1226,m6,1)
		AF('j',struct A1226,m7,1)
		AF('j',struct A1226,m8,1)
		AF('l',struct A1226,m9,1)
		AF('i',struct A1226,m10,1)
		AF('S',struct A1226,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <SpiLJicdIISI> */
#pragma pack(push,4)
union A1227 { S m0; p m1; i m2; L m3; J m4; i m5; c m6; d m7; I m8; I m9; S m10; I m11; };
#pragma pack(pop)
int f_cmpA1227(const union A1227 *x, const union A1227 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1227() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1227));
		AF('S',union A1227,m0,1)
		AF('p',union A1227,m1,1)
		AF('i',union A1227,m2,1)
		AF('L',union A1227,m3,1)
		AF('J',union A1227,m4,1)
		AF('i',union A1227,m5,1)
		AF('c',union A1227,m6,1)
		AF('d',union A1227,m7,1)
		AF('I',union A1227,m8,1)
		AF('I',union A1227,m9,1)
		AF('S',union A1227,m10,1)
		AF('I',union A1227,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <fBfB<SpiLJicdIISI>c> */
#pragma pack(push,1)
union A1228 { f m0; B m1; f m2; B m3; union A1227 m4; c m5; };
#pragma pack(pop)
int f_cmpA1228(const union A1228 *x, const union A1228 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && f_cmpA1227(&x->m4, &y->m4) && x->m5 == y->m5; };
DCaggr* f_touchA1228() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(6, sizeof(union A1228));
		AF('f',union A1228,m0,1)
		AF('B',union A1228,m1,1)
		AF('f',union A1228,m2,1)
		AF('B',union A1228,m3,1)
		AFa(union A1228,m4,1,A1227)
		AF('c',union A1228,m5,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <BlIJdpBsfiJC> */
#pragma pack(push,2)
union A1229 { B m0; l m1; I m2; J m3; d m4; p m5; B m6; s m7; f m8; i m9; J m10; C m11; };
#pragma pack(pop)
int f_cmpA1229(const union A1229 *x, const union A1229 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1229() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1229));
		AF('B',union A1229,m0,1)
		AF('l',union A1229,m1,1)
		AF('I',union A1229,m2,1)
		AF('J',union A1229,m3,1)
		AF('d',union A1229,m4,1)
		AF('p',union A1229,m5,1)
		AF('B',union A1229,m6,1)
		AF('s',union A1229,m7,1)
		AF('f',union A1229,m8,1)
		AF('i',union A1229,m9,1)
		AF('J',union A1229,m10,1)
		AF('C',union A1229,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ipj[3]dc<BlIJdpBsfiJC>lB{}lCs> */
#pragma pack(push,4)
union A1230 { I m0; p m1; j m2[3]; d m3; c m4; union A1229 m5; l m6; B m7; struct A24 m8; l m9; C m10; s m11; };
#pragma pack(pop)
int f_cmpA1230(const union A1230 *x, const union A1230 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2[0] == y->m2[0] && x->m2[1] == y->m2[1] && x->m2[2] == y->m2[2] && x->m3 == y->m3 && x->m4 == y->m4 && f_cmpA1229(&x->m5, &y->m5) && x->m6 == y->m6 && x->m7 == y->m7 && f_cmpA24(&x->m8, &y->m8) && x->m9 == y->m9 && x->m10 == y->m10 && x->m11 == y->m11; };
DCaggr* f_touchA1230() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(union A1230));
		AF('I',union A1230,m0,1)
		AF('p',union A1230,m1,1)
		AF('j',union A1230,m2,3)
		AF('d',union A1230,m3,1)
		AF('c',union A1230,m4,1)
		AFa(union A1230,m5,1,A1229)
		AF('l',union A1230,m6,1)
		AF('B',union A1230,m7,1)
		AFa(union A1230,m8,1,A24)
		AF('l',union A1230,m9,1)
		AF('C',union A1230,m10,1)
		AF('s',union A1230,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <Ll> */
#pragma pack(push,2)
union A1231 { L m0; l m1; };
#pragma pack(pop)
int f_cmpA1231(const union A1231 *x, const union A1231 *y) { return x->m0 == y->m0 && x->m1 == y->m1; };
DCaggr* f_touchA1231() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(2, sizeof(union A1231));
		AF('L',union A1231,m0,1)
		AF('l',union A1231,m1,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {f<fBfB<SpiLJicdIISI>c>CplfiCf<Ipj[3]dc<BlIJdpBsfiJC>lB{}lCs><Ll>c} */
#pragma pack(push,4)
struct A1232 { f m0; union A1228 m1; C m2; p m3; l m4; f m5; i m6; C m7; f m8; union A1230 m9; union A1231 m10; c m11; };
#pragma pack(pop)
int f_cmpA1232(const struct A1232 *x, const struct A1232 *y) { return x->m0 == y->m0 && f_cmpA1228(&x->m1, &y->m1) && x->m2 == y->m2 && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7 && x->m8 == y->m8 && f_cmpA1230(&x->m9, &y->m9) && f_cmpA1231(&x->m10, &y->m10) && x->m11 == y->m11; };
DCaggr* f_touchA1232() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(12, sizeof(struct A1232));
		AF('f',struct A1232,m0,1)
		AFa(struct A1232,m1,1,A1228)
		AF('C',struct A1232,m2,1)
		AF('p',struct A1232,m3,1)
		AF('l',struct A1232,m4,1)
		AF('f',struct A1232,m5,1)
		AF('i',struct A1232,m6,1)
		AF('C',struct A1232,m7,1)
		AF('f',struct A1232,m8,1)
		AFa(struct A1232,m9,1,A1230)
		AFa(struct A1232,m10,1,A1231)
		AF('c',struct A1232,m11,1)
		dcCloseAggr(a);
	}
	return a;
};
/* {ldcB} */
#pragma pack(push,2)
struct A1233 { l m0; d m1; c m2; B m3; };
#pragma pack(pop)
int f_cmpA1233(const struct A1233 *x, const struct A1233 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1233() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(struct A1233));
		AF('l',struct A1233,m0,1)
		AF('d',struct A1233,m1,1)
		AF('c',struct A1233,m2,1)
		AF('B',struct A1233,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <di{ldcB}fBJcJ> */
#pragma pack(push,8)
union A1234 { d m0; i m1; struct A1233 m2; f m3; B m4; J m5; c m6; J m7; };
#pragma pack(pop)
int f_cmpA1234(const union A1234 *x, const union A1234 *y) { return x->m0 == y->m0 && x->m1 == y->m1 && f_cmpA1233(&x->m2, &y->m2) && x->m3 == y->m3 && x->m4 == y->m4 && x->m5 == y->m5 && x->m6 == y->m6 && x->m7 == y->m7; };
DCaggr* f_touchA1234() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(8, sizeof(union A1234));
		AF('d',union A1234,m0,1)
		AF('i',union A1234,m1,1)
		AFa(union A1234,m2,1,A1233)
		AF('f',union A1234,m3,1)
		AF('B',union A1234,m4,1)
		AF('J',union A1234,m5,1)
		AF('c',union A1234,m6,1)
		AF('J',union A1234,m7,1)
		dcCloseAggr(a);
	}
	return a;
};
/* <<di{ldcB}fBJcJ>fis> */
#pragma pack(push,1)
union A1235 { union A1234 m0; f m1; i m2; s m3; };
#pragma pack(pop)
int f_cmpA1235(const union A1235 *x, const union A1235 *y) { return f_cmpA1234(&x->m0, &y->m0) && x->m1 == y->m1 && x->m2 == y->m2 && x->m3 == y->m3; };
DCaggr* f_touchA1235() {
	static DCaggr* a = NULL;
	if(!a) {
		a = dcNewAggr(4, sizeof(union A1235));
		AFa(union A1235,m0,1,A1234)
		AF('f',union A1235,m1,1)
		AF('i',union A1235,m2,1)
		AF('s',union A1235,m3,1)
		dcCloseAggr(a);
	}
	return a;
};
/* 0:{iCIlsBCSBisd}lIIJ)d */ void f0(void* addr) { write_V_d(5, (( d(*)(struct A1,l,I,I,J))addr)(*(struct A1*)K_a[0],K_l[1],K_I[2],K_I[3],K_J[4]));}
/* 1:i{lcBcpBLl}<BpScJBSjJsil>lpCpcI)v */ void f1(void* addr) { write_V_v(9, (( v(*)(i,struct A2,union A3,l,p,C,p,c,I))addr)(K_i[0],*(struct A2*)K_a[1],*(union A3*)K_a[2],K_l[3],K_p[4],K_C[5],K_p[6],K_c[7],K_I[8]));}
/* 2:BsCIJdJidCB<lI>)I */ void f2(void* addr) { write_V_I(12, (( I(*)(B,s,C,I,J,d,J,i,d,C,B,union A4))addr)(K_B[0],K_s[1],K_C[2],K_I[3],K_J[4],K_d[5],K_J[6],K_i[7],K_d[8],K_C[9],K_B[10],*(union A4*)K_a[11]));}
/* 3:BClCcli<BSJJ[6]BCpdfffC>sliiLd)<lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI> */ void f3(void* addr) { write_V_a(14, (( union A11(*)(B,C,l,C,c,l,i,union A12,s,l,i,i,L,d))addr)(K_B[0],K_C[1],K_l[2],K_C[3],K_c[4],K_l[5],K_i[6],*(union A12*)K_a[7],K_s[8],K_l[9],K_i[10],K_i[11],K_L[12],K_d[13]), union A11);}
/* 4:ffIcL<SpSJJpjcfs>sJB)p */ void f4(void* addr) { write_V_p(9, (( p(*)(f,f,I,c,L,union A13,s,J,B))addr)(K_f[0],K_f[1],K_I[2],K_c[3],K_L[4],*(union A13*)K_a[5],K_s[6],K_J[7],K_B[8]));}
/* 5:dLBLpipS)<IB> */ void f5(void* addr) { write_V_a(8, (( union A14(*)(d,L,B,L,p,i,p,S))addr)(K_d[0],K_L[1],K_B[2],K_L[3],K_p[4],K_i[5],K_p[6],K_S[7]), union A14);}
/* 6:IiB<dJpcddCdClCj>lflJS){ILLl} */ void f6(void* addr) { write_V_a(9, (( struct A15(*)(I,i,B,union A16,l,f,l,J,S))addr)(K_I[0],K_i[1],K_B[2],*(union A16*)K_a[3],K_l[4],K_f[5],K_l[6],K_J[7],K_S[8]), struct A15);}
/* 7:f<ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{}ClsIS>)<SCSicIjs> */ void f7(void* addr) { write_V_a(2, (( union A17(*)(f,union A25))addr)(K_f[0],*(union A25*)K_a[1]), union A17);}
/* 8:{}{fJidLfJCC[16]l[10]jS}cl)d */ void f8(void* addr) { write_V_d(4, (( d(*)(struct A24,struct A26,c,l))addr)(*(struct A24*)K_a[0],*(struct A26*)K_a[1],K_c[2],K_l[3]));}
/* 9:Cs{SpLIpsIBLpij}IIpJ)S */ void f9(void* addr) { write_V_S(7, (( S(*)(C,s,struct A27,I,I,p,J))addr)(K_C[0],K_s[1],*(struct A27*)K_a[2],K_I[3],K_I[4],K_p[5],K_J[6]));}
/* 10:LcJL<{lLpBsSIBB}LBSpl[7]p>sd<fplcpj{lj<>jBf<dJSSffBIs>L<J>{Bffjjp}l{j[7]jiB[5]dB}}{cS<JLfLBIJ>}Bi<d{cdfCpLCCCiIl}Spp[10]LSCcIIf><SBpsLciSBj<lSJJcI>B>>LCs<IBjjdiILLlSf>)I */ void f10(void* addr) { write_V_I(12, (( I(*)(L,c,J,L,union A29,s,d,union A42,L,C,s,union A43))addr)(K_L[0],K_c[1],K_J[2],K_L[3],*(union A29*)K_a[4],K_s[5],K_d[6],*(union A42*)K_a[7],K_L[8],K_C[9],K_s[10],*(union A43*)K_a[11]));}
/* 11:IjC{iCjBCCjIpC}j)j */ void f11(void* addr) { write_V_j(5, (( j(*)(I,j,C,struct A44,j))addr)(K_I[0],K_j[1],K_C[2],*(struct A44*)K_a[3],K_j[4]));}
/* 12:B{L[6]}J<ldd>SlBIJflCji)c */ void f12(void* addr) { write_V_c(14, (( c(*)(B,struct A45,J,union A46,S,l,B,I,J,f,l,C,j,i))addr)(K_B[0],*(struct A45*)K_a[1],K_J[2],*(union A46*)K_a[3],K_S[4],K_l[5],K_B[6],K_I[7],K_J[8],K_f[9],K_l[10],K_C[11],K_j[12],K_i[13]));}
/* 13:p<l{i}f{}[5]JpdBIcpC>sSJp)c */ void f13(void* addr) { write_V_c(6, (( c(*)(p,union A48,s,S,J,p))addr)(K_p[0],*(union A48*)K_a[1],K_s[2],K_S[3],K_J[4],K_p[5]));}
/* 14:sl<Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c>p<ILi[15]ljj>dIpBsJ)f */ void f14(void* addr) { write_V_f(11, (( f(*)(s,l,union A51,p,union A52,d,I,p,B,s,J))addr)(K_s[0],K_l[1],*(union A51*)K_a[2],K_p[3],*(union A52*)K_a[4],K_d[5],K_I[6],K_p[7],K_B[8],K_s[9],K_J[10]));}
/* 15:lIJJ{flcfdjdjBSJf})v */ void f15(void* addr) { write_V_v(5, (( v(*)(l,I,J,J,struct A53))addr)(K_l[0],K_I[1],K_J[2],K_J[3],*(struct A53*)K_a[4]));}
/* 16:{IfcCljjfS{jIBIBSfcpSiL}}jpJppiBLJj)s */ void f16(void* addr) { write_V_s(11, (( s(*)(struct A55,j,p,J,p,p,i,B,L,J,j))addr)(*(struct A55*)K_a[0],K_j[1],K_p[2],K_J[3],K_p[4],K_p[5],K_i[6],K_B[7],K_L[8],K_J[9],K_j[10]));}
/* 17:CSJI{JpIdlcipIIJc}sIpJL)<p> */ void f17(void* addr) { write_V_a(10, (( union A56(*)(C,S,J,I,struct A57,s,I,p,J,L))addr)(K_C[0],K_S[1],K_J[2],K_I[3],*(struct A57*)K_a[4],K_s[5],K_I[6],K_p[7],K_J[8],K_L[9]), union A56);}
/* 18:{Ljsi{iljL}flcJ<>CL}Sff){lBcCpCpLBcSd} */ void f18(void* addr) { write_V_a(4, (( struct A58(*)(struct A60,S,f,f))addr)(*(struct A60*)K_a[0],K_S[1],K_f[2],K_f[3]), struct A58);}
/* 19:BddCIpljf)<cil<S>JLBiS<>pB> */ void f19(void* addr) { write_V_a(9, (( union A62(*)(B,d,d,C,I,p,l,j,f))addr)(K_B[0],K_d[1],K_d[2],K_C[3],K_I[4],K_p[5],K_l[6],K_j[7],K_f[8]), union A62);}
/* 20:CI{pScjcpLjspId})B */ void f20(void* addr) { write_V_B(3, (( B(*)(C,I,struct A63))addr)(K_C[0],K_I[1],*(struct A63*)K_a[2]));}
/* 21:<clj<<lJJIBifdIij>CscISS<LLBljdfljCd>dls<ijIlIL>>lddljdL>lpSsJs)p */ void f21(void* addr) { write_V_p(7, (( p(*)(union A68,l,p,S,s,J,s))addr)(*(union A68*)K_a[0],K_l[1],K_p[2],K_S[3],K_s[4],K_J[5],K_s[6]));}
/* 22:J{dSS[16]Cj[2]piJf[10]Bsf}<sfSilfLs>fcSLLSss)d */ void f22(void* addr) { write_V_d(11, (( d(*)(J,struct A69,union A70,f,c,S,L,L,S,s,s))addr)(K_J[0],*(struct A69*)K_a[1],*(union A70*)K_a[2],K_f[3],K_c[4],K_S[5],K_L[6],K_L[7],K_S[8],K_s[9],K_s[10]));}
/* 23:L{pljiIClJLiLf}pIcBsBBJcld)i */ void f23(void* addr) { write_V_i(13, (( i(*)(L,struct A71,p,I,c,B,s,B,B,J,c,l,d))addr)(K_L[0],*(struct A71*)K_a[1],K_p[2],K_I[3],K_c[4],K_B[5],K_s[6],K_B[7],K_B[8],K_J[9],K_c[10],K_l[11],K_d[12]));}
/* 24:LCJdc{SIslc}dd<{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL>{j}d<jsjssdIfBlpl>Sf)j */ void f24(void* addr) { write_V_j(14, (( j(*)(L,C,J,d,c,struct A72,d,d,union A79,struct A80,d,union A81,S,f))addr)(K_L[0],K_C[1],K_J[2],K_d[3],K_c[4],*(struct A72*)K_a[5],K_d[6],K_d[7],*(union A79*)K_a[8],*(struct A80*)K_a[9],K_d[10],*(union A81*)K_a[11],K_S[12],K_f[13]));}
/* 25:<LiLISc>LsJlIi)p */ void f25(void* addr) { write_V_p(7, (( p(*)(union A82,L,s,J,l,I,i))addr)(*(union A82*)K_a[0],K_L[1],K_s[2],K_J[3],K_l[4],K_I[5],K_i[6]));}
/* 26:cj<cL>f<>BIIdcJjcIL)B */ void f26(void* addr) { write_V_B(15, (( B(*)(c,j,union A83,f,union A30,B,I,I,d,c,J,j,c,I,L))addr)(K_c[0],K_j[1],*(union A83*)K_a[2],K_f[3],*(union A30*)K_a[4],K_B[5],K_I[6],K_I[7],K_d[8],K_c[9],K_J[10],K_j[11],K_c[12],K_I[13],K_L[14]));}
/* 27:fdIff<lfjiISS{cI{}IsSsiSc{JidfscIsclfl}I}S{ssISpj<sJclIICpi>lLCcd}jp>J{ljjCscIlfLjs}pII{Ljffsc{dCl<d>i{fpdfJiidcpiB}{cfcS}fSC[15]i<lf>}pIdsS}J)L */ void f27(void* addr) { write_V_L(13, (( L(*)(f,d,I,f,f,union A88,J,struct A89,p,I,I,struct A95,J))addr)(K_f[0],K_d[1],K_I[2],K_f[3],K_f[4],*(union A88*)K_a[5],K_J[6],*(struct A89*)K_a[7],K_p[8],K_I[9],K_I[10],*(struct A95*)K_a[11],K_J[12]));}
/* 28:LB{j{cdpcSSJJ[13]SL[15]Lf}j<JdjLpjBiICcs>[11]<Jp><jLsBC>jic{dplicIlifsiB}}j{dB<i[16]JcJIs{lBcjLdCJSIlJ}>I<l>cpBdl{djCflIdcCjsI}j}<Sl>IJJ{LSfsiLpcsISc}BdCi)S */ void f28(void* addr) { write_V_S(14, (( S(*)(L,B,struct A101,j,struct A106,union A107,I,J,J,struct A108,B,d,C,i))addr)(K_L[0],K_B[1],*(struct A101*)K_a[2],K_j[3],*(struct A106*)K_a[4],*(union A107*)K_a[5],K_I[6],K_J[7],K_J[8],*(struct A108*)K_a[9],K_B[10],K_d[11],K_C[12],K_i[13]));}
/* 29:IBiCl{IsIis}LfjJ)S */ void f29(void* addr) { write_V_S(10, (( S(*)(I,B,i,C,l,struct A109,L,f,j,J))addr)(K_I[0],K_B[1],K_i[2],K_C[3],K_l[4],*(struct A109*)K_a[5],K_L[6],K_f[7],K_j[8],K_J[9]));}
/* 30:c{pBJSJp[4]}I<dIjsp>SSdCIdjj{ILCIS}{jidJCcssdjBB})s */ void f30(void* addr) { write_V_s(14, (( s(*)(c,struct A110,I,union A111,S,S,d,C,I,d,j,j,struct A112,struct A113))addr)(K_c[0],*(struct A110*)K_a[1],K_I[2],*(union A111*)K_a[3],K_S[4],K_S[5],K_d[6],K_C[7],K_I[8],K_d[9],K_j[10],K_j[11],*(struct A112*)K_a[12],*(struct A113*)K_a[13]));}
/* 31:dcJ{iI{dICcIll[10]BfcLI}Bs}pJS{pfcid}l{BpddCssJcjdc})I */ void f31(void* addr) { write_V_I(10, (( I(*)(d,c,J,struct A115,p,J,S,struct A116,l,struct A117))addr)(K_d[0],K_c[1],K_J[2],*(struct A115*)K_a[3],K_p[4],K_J[5],K_S[6],*(struct A116*)K_a[7],K_l[8],*(struct A117*)K_a[9]));}
/* 32:S<CCsidlCB[14]JsS{JspCf}>)C */ void f32(void* addr) { write_V_C(2, (( C(*)(S,union A119))addr)(K_S[0],*(union A119*)K_a[1]));}
/* 33:fC<CdJlfJsJd[16]pLc>Cc{IcLCBjB{cSJJj[13]}SSdS})<c> */ void f33(void* addr) { write_V_a(6, (( union A120(*)(f,C,union A121,C,c,struct A123))addr)(K_f[0],K_C[1],*(union A121*)K_a[2],K_C[3],K_c[4],*(struct A123*)K_a[5]), union A120);}
/* 34:{dJLdCd}ilcfsB)L */ void f34(void* addr) { write_V_L(7, (( L(*)(struct A124,i,l,c,f,s,B))addr)(*(struct A124*)K_a[0],K_i[1],K_l[2],K_c[3],K_f[4],K_s[5],K_B[6]));}
/* 35:psijlSdlpsicS){sjjfLJIdLISJ} */ void f35(void* addr) { write_V_a(13, (( struct A125(*)(p,s,i,j,l,S,d,l,p,s,i,c,S))addr)(K_p[0],K_s[1],K_i[2],K_j[3],K_l[4],K_S[5],K_d[6],K_l[7],K_p[8],K_s[9],K_i[10],K_c[11],K_S[12]), struct A125);}
/* 36:IjfIJlLBCcClCjjJ){IL} */ void f36(void* addr) { write_V_a(16, (( struct A126(*)(I,j,f,I,J,l,L,B,C,c,C,l,C,j,j,J))addr)(K_I[0],K_j[1],K_f[2],K_I[3],K_J[4],K_l[5],K_L[6],K_B[7],K_C[8],K_c[9],K_C[10],K_l[11],K_C[12],K_j[13],K_j[14],K_J[15]), struct A126);}
/* 37:LlCpCJp{lslSlj}LI{}<Jj{LBJp[6]ilIc}{spIli}Cdff<>cic>C)s */ void f37(void* addr) { write_V_s(13, (( s(*)(L,l,C,p,C,J,p,struct A127,L,I,struct A24,union A130,C))addr)(K_L[0],K_l[1],K_C[2],K_p[3],K_C[4],K_J[5],K_p[6],*(struct A127*)K_a[7],K_L[8],K_I[9],*(struct A24*)K_a[10],*(union A130*)K_a[11],K_C[12]));}
/* 38:<BBI<CpjIljISJdfs>iS<lLJj[16]Jil>cjf[12]<>><Slj>jlI)d */ void f38(void* addr) { write_V_d(5, (( d(*)(union A133,union A134,j,l,I))addr)(*(union A133*)K_a[0],*(union A134*)K_a[1],K_j[2],K_l[3],K_I[4]));}
/* 39:BBBB<LClILIscJj>)j */ void f39(void* addr) { write_V_j(5, (( j(*)(B,B,B,B,union A135))addr)(K_B[0],K_B[1],K_B[2],K_B[3],*(union A135*)K_a[4]));}
/* 40:sd<ds[8]pdj{ScLpsdjLllIl}diBjis>)s */ void f40(void* addr) { write_V_s(3, (( s(*)(s,d,union A137))addr)(K_s[0],K_d[1],*(union A137*)K_a[2]));}
/* 41:<jl<pCLSpJ>pCdSLfid[5]S>BLi)<> */ void f41(void* addr) { write_V_a(4, (( union A30(*)(union A139,B,L,i))addr)(*(union A139*)K_a[0],K_B[1],K_L[2],K_i[3]), union A30);}
/* 42:d{}cd{CdLSsBLlppdp}BIIBpI)s */ void f42(void* addr) { write_V_s(11, (( s(*)(d,struct A24,c,d,struct A140,B,I,I,B,p,I))addr)(K_d[0],*(struct A24*)K_a[1],K_c[2],K_d[3],*(struct A140*)K_a[4],K_B[5],K_I[6],K_I[7],K_B[8],K_p[9],K_I[10]));}
/* 43:dc{dCCCcS{IBsI{pdCIfC[3]dISpdl}IIfsJlp}BClB{pJ{lli}p}}LdcJJlJip{psLijl<BB<IfjBSsJJpldI>S{JjsjjJJcBiIB}>pB}fsL)p */ void f43(void* addr) { write_V_p(16, (( p(*)(d,c,struct A145,L,d,c,J,J,l,J,i,p,struct A149,f,s,L))addr)(K_d[0],K_c[1],*(struct A145*)K_a[2],K_L[3],K_d[4],K_c[5],K_J[6],K_J[7],K_l[8],K_J[9],K_i[10],K_p[11],*(struct A149*)K_a[12],K_f[13],K_s[14],K_L[15]));}
/* 44:icIL<jIC>lBdLf<jL<>CSjj<LpdpjJdBSjl>BJJC>lJIC<dCdSlssjpJcc[15]>){l{<fCdfLflddLfp>liiC{}Cl}l<B{JI}pJLJ>p} */ void f44(void* addr) { write_V_a(16, (( struct A154(*)(i,c,I,L,union A155,l,B,d,L,f,union A157,l,J,I,C,union A158))addr)(K_i[0],K_c[1],K_I[2],K_L[3],*(union A155*)K_a[4],K_l[5],K_B[6],K_d[7],K_L[8],K_f[9],*(union A157*)K_a[10],K_l[11],K_J[12],K_I[13],K_C[14],*(union A158*)K_a[15]), struct A154);}
/* 45:ILfjjif<ISs>f<L>if<JIilIsBBlsJd>c)p */ void f45(void* addr) { write_V_p(14, (( p(*)(I,L,f,j,j,i,f,union A159,f,union A160,i,f,union A161,c))addr)(K_I[0],K_L[1],K_f[2],K_j[3],K_j[4],K_i[5],K_f[6],*(union A159*)K_a[7],K_f[8],*(union A160*)K_a[9],K_i[10],K_f[11],*(union A161*)K_a[12],K_c[13]));}
/* 46:Jlf<C<Lld[9]IL>[13]ffc[5]{ifSsIslpSpij}><JIisSfiBdBcd>Bj{fcI}Ccs<iifdBfffllBL>lj)j */ void f46(void* addr) { write_V_j(14, (( j(*)(J,l,f,union A164,union A165,B,j,struct A166,C,c,s,union A167,l,j))addr)(K_J[0],K_l[1],K_f[2],*(union A164*)K_a[3],*(union A165*)K_a[4],K_B[5],K_j[6],*(struct A166*)K_a[7],K_C[8],K_c[9],K_s[10],*(union A167*)K_a[11],K_l[12],K_j[13]));}
/* 47:Bjd<Lflc<LBlppLSSIJIS>>p{LJCS}jBcBSf){pjL{jcLCcpiCJScC}Jciilc<pcScjfLpLJ>B} */ void f47(void* addr) { write_V_a(12, (( struct A170(*)(B,j,d,union A172,p,struct A173,j,B,c,B,S,f))addr)(K_B[0],K_j[1],K_d[2],*(union A172*)K_a[3],K_p[4],*(struct A173*)K_a[5],K_j[6],K_B[7],K_c[8],K_B[9],K_S[10],K_f[11]), struct A170);}
/* 48:<C<LjpjJj>If[7]pS{C[12]isSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}l<cf[1]d<ff[15]SCLspcCiss>cJ[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJ>fcf>ldSSd<pLJ{jppI}>d)S */ void f48(void* addr) { write_V_S(8, (( S(*)(union A182,l,d,S,S,d,union A184,d))addr)(*(union A182*)K_a[0],K_l[1],K_d[2],K_S[3],K_S[4],K_d[5],*(union A184*)K_a[6],K_d[7]));}
/* 49:lS{CfIsICLpicLI}L<BfISp>clj)L */ void f49(void* addr) { write_V_L(8, (( L(*)(l,S,struct A185,L,union A186,c,l,j))addr)(K_l[0],K_S[1],*(struct A185*)K_a[2],K_L[3],*(union A186*)K_a[4],K_c[5],K_l[6],K_j[7]));}
/* 50:d{lBICc}f{BdLCsB}ldCCCJ)c */ void f50(void* addr) { write_V_c(10, (( c(*)(d,struct A187,f,struct A188,l,d,C,C,C,J))addr)(K_d[0],*(struct A187*)K_a[1],K_f[2],*(struct A188*)K_a[3],K_l[4],K_d[5],K_C[6],K_C[7],K_C[8],K_J[9]));}
/* 51:)<csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf> */ void f51(void* addr) { write_V_a(0, (( union A195(*)())addr)(), union A195);}
/* 52:dScJ)<pfifSilBCsBi> */ void f52(void* addr) { write_V_a(4, (( union A196(*)(d,S,c,J))addr)(K_d[0],K_S[1],K_c[2],K_J[3]), union A196);}
/* 53:sSCpspjc<Bpii>CfS)S */ void f53(void* addr) { write_V_S(12, (( S(*)(s,S,C,p,s,p,j,c,union A197,C,f,S))addr)(K_s[0],K_S[1],K_C[2],K_p[3],K_s[4],K_p[5],K_j[6],K_c[7],*(union A197*)K_a[8],K_C[9],K_f[10],K_S[11]));}
/* 54:LCfJ<JCC<JLC[12]CsJSi{pdIJLj}Ifs>JJ>jddpLp)f */ void f54(void* addr) { write_V_f(11, (( f(*)(L,C,f,J,union A200,j,d,d,p,L,p))addr)(K_L[0],K_C[1],K_f[2],K_J[3],*(union A200*)K_a[4],K_j[5],K_d[6],K_d[7],K_p[8],K_L[9],K_p[10]));}
/* 55:JcccSB{siJjBLiSIIj<lldfS>}d)S */ void f55(void* addr) { write_V_S(8, (( S(*)(J,c,c,c,S,B,struct A202,d))addr)(K_J[0],K_c[1],K_c[2],K_c[3],K_S[4],K_B[5],*(struct A202*)K_a[6],K_d[7]));}
/* 56:{jdscdfBSLpj}<lIBllLL<I<BJLCIlBCJlIj>{CBlj}JBjs>>llSjI{dIJpCsSJ}Jids)C */ void f56(void* addr) { write_V_C(12, (( C(*)(struct A203,union A207,l,l,S,j,I,struct A208,J,i,d,s))addr)(*(struct A203*)K_a[0],*(union A207*)K_a[1],K_l[2],K_l[3],K_S[4],K_j[5],K_I[6],*(struct A208*)K_a[7],K_J[8],K_i[9],K_d[10],K_s[11]));}
/* 57:CI{dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI}BL)C */ void f57(void* addr) { write_V_C(5, (( C(*)(C,I,struct A211,B,L))addr)(K_C[0],K_I[1],*(struct A211*)K_a[2],K_B[3],K_L[4]));}
/* 58:JiSjJSBSC<LJLdd{Bls}BdiJsi>L)<IffIppICjJiC> */ void f58(void* addr) { write_V_a(11, (( union A212(*)(J,i,S,j,J,S,B,S,C,union A214,L))addr)(K_J[0],K_i[1],K_S[2],K_j[3],K_J[4],K_S[5],K_B[6],K_S[7],K_C[8],*(union A214*)K_a[9],K_L[10]), union A212);}
/* 59:{idfCfSSCILjC})j */ void f59(void* addr) { write_V_j(1, (( j(*)(struct A215))addr)(*(struct A215*)K_a[0]));}
/* 60:{sf}pSf)I */ void f60(void* addr) { write_V_I(4, (( I(*)(struct A216,p,S,f))addr)(*(struct A216*)K_a[0],K_p[1],K_S[2],K_f[3]));}
/* 61:SjJJpISJC{{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>}plp)c */ void f61(void* addr) { write_V_c(13, (( c(*)(S,j,J,J,p,I,S,J,C,struct A226,p,l,p))addr)(K_S[0],K_j[1],K_J[2],K_J[3],K_p[4],K_I[5],K_S[6],K_J[7],K_C[8],*(struct A226*)K_a[9],K_p[10],K_l[11],K_p[12]));}
/* 62:B)<BIpcssdfJSc> */ void f62(void* addr) { write_V_a(1, (( union A227(*)(B))addr)(K_B[0]), union A227);}
/* 63:l<sdSffIssSpCL>{j}ssl{B}{Ifd{cSid{p}<sdsSssfBd>[13]}LI}LSppf)J */ void f63(void* addr) { write_V_J(13, (( J(*)(l,union A228,struct A80,s,s,l,struct A229,struct A233,L,S,p,p,f))addr)(K_l[0],*(union A228*)K_a[1],*(struct A80*)K_a[2],K_s[3],K_s[4],K_l[5],*(struct A229*)K_a[6],*(struct A233*)K_a[7],K_L[8],K_S[9],K_p[10],K_p[11],K_f[12]));}
/* 64:f){sBBfLBd} */ void f64(void* addr) { write_V_a(1, (( struct A234(*)(f))addr)(K_f[0]), struct A234);}
/* 65:CcIBlplCBS{i<lSsL[8]ji{}csfCL>cSJSis<SccdLsfidCfI>{JCCSiBj}cf}Lcd){LBsSBpLSIcLf} */ void f65(void* addr) { write_V_a(14, (( struct A235(*)(C,c,I,B,l,p,l,C,B,S,struct A239,L,c,d))addr)(K_C[0],K_c[1],K_I[2],K_B[3],K_l[4],K_p[5],K_l[6],K_C[7],K_B[8],K_S[9],*(struct A239*)K_a[10],K_L[11],K_c[12],K_d[13]), struct A235);}
/* 66:LB<lf>sBi<SSlBdLfcBfJs>)p */ void f66(void* addr) { write_V_p(7, (( p(*)(L,B,union A93,s,B,i,union A240))addr)(K_L[0],K_B[1],*(union A93*)K_a[2],K_s[3],K_B[4],K_i[5],*(union A240*)K_a[6]));}
/* 67:{jifBl[7]s}pI)L */ void f67(void* addr) { write_V_L(3, (( L(*)(struct A241,p,I))addr)(*(struct A241*)K_a[0],K_p[1],K_I[2]));}
/* 68:ci<CS{pI<pdisdi>S}L<CJLpCdj[7]>JdBSCBd>jIj)B */ void f68(void* addr) { write_V_B(6, (( B(*)(c,i,union A245,j,I,j))addr)(K_c[0],K_i[1],*(union A245*)K_a[2],K_j[3],K_I[4],K_j[5]));}
/* 69:LIc{SLL[1]BLiILfLcl})C */ void f69(void* addr) { write_V_C(4, (( C(*)(L,I,c,struct A246))addr)(K_L[0],K_I[1],K_c[2],*(struct A246*)K_a[3]));}
/* 70:<c><>cSlCC)s */ void f70(void* addr) { write_V_s(7, (( s(*)(union A120,union A30,c,S,l,C,C))addr)(*(union A120*)K_a[0],*(union A30*)K_a[1],K_c[2],K_S[3],K_l[4],K_C[5],K_C[6]));}
/* 71:jJp{}d{spdCC<djcB><pfCBi<dJp[13]Lsp[4]sBipij>dB<fLCjI>BiL>ilcSJ}piJp)J */ void f71(void* addr) { write_V_J(10, (( J(*)(j,J,p,struct A24,d,struct A251,p,i,J,p))addr)(K_j[0],K_J[1],K_p[2],*(struct A24*)K_a[3],K_d[4],*(struct A251*)K_a[5],K_p[6],K_i[7],K_J[8],K_p[9]));}
/* 72:LBJSisi<sdic<>jfii{BdIipJjjJ}{j}s>jiJC)s */ void f72(void* addr) { write_V_s(12, (( s(*)(L,B,J,S,i,s,i,union A253,j,i,J,C))addr)(K_L[0],K_B[1],K_J[2],K_S[3],K_i[4],K_s[5],K_i[6],*(union A253*)K_a[7],K_j[8],K_i[9],K_J[10],K_C[11]));}
/* 73:L<II{lBpp<sC>IiCjSij}S<CdjjCSdif>sC<Ll[1]if{BsljiiBCiLJl}sdjISc{dCBliBLplJSd}>fldp>{CdBp{Jll}Bij})j */ void f73(void* addr) { write_V_j(3, (( j(*)(L,union A260,struct A262))addr)(K_L[0],*(union A260*)K_a[1],*(struct A262*)K_a[2]));}
/* 74:<BdI<lfs[13]ILlISpSpJ>jd{SsfficlCB}sLj[2]jj>sC)<fSfpsf[11]sCpffj> */ void f74(void* addr) { write_V_a(3, (( union A263(*)(union A266,s,C))addr)(*(union A266*)K_a[0],K_s[1],K_C[2]), union A263);}
/* 75:ccc<<lsSJcfJScIdc>Jcj{jfLIjdcLi}>plS)p */ void f75(void* addr) { write_V_p(7, (( p(*)(c,c,c,union A269,p,l,S))addr)(K_c[0],K_c[1],K_c[2],*(union A269*)K_a[3],K_p[4],K_l[5],K_S[6]));}
/* 76:fJdsfdJciljBdL)<> */ void f76(void* addr) { write_V_a(14, (( union A30(*)(f,J,d,s,f,d,J,c,i,l,j,B,d,L))addr)(K_f[0],K_J[1],K_d[2],K_s[3],K_f[4],K_d[5],K_J[6],K_c[7],K_i[8],K_l[9],K_j[10],K_B[11],K_d[12],K_L[13]), union A30);}
/* 77:SL<><ljLJss>dcIcJ)v */ void f77(void* addr) { write_V_v(9, (( v(*)(S,L,union A30,union A270,d,c,I,c,J))addr)(K_S[0],K_L[1],*(union A30*)K_a[2],*(union A270*)K_a[3],K_d[4],K_c[5],K_I[6],K_c[7],K_J[8]));}
/* 78:l<I<>C{jIJj<sIJij>fd}iSs{{fcijsLISLlSI}ipcifiL}SLic><>ss)c */ void f78(void* addr) { write_V_c(5, (( c(*)(l,union A275,union A30,s,s))addr)(K_l[0],*(union A275*)K_a[1],*(union A30*)K_a[2],K_s[3],K_s[4]));}
/* 79:CBSL){SsIpJLfs} */ void f79(void* addr) { write_V_a(4, (( struct A276(*)(C,B,S,L))addr)(K_C[0],K_B[1],K_S[2],K_L[3]), struct A276);}
/* 80:jSIS{fcdSIdLIds<SlsfcLj>{CdpSpp}}i)L */ void f80(void* addr) { write_V_L(6, (( L(*)(j,S,I,S,struct A279,i))addr)(K_j[0],K_S[1],K_I[2],K_S[3],*(struct A279*)K_a[4],K_i[5]));}
/* 81:IlJSiL<C<jJdpiLp>SSIdCI>)L */ void f81(void* addr) { write_V_L(7, (( L(*)(I,l,J,S,i,L,union A281))addr)(K_I[0],K_l[1],K_J[2],K_S[3],K_i[4],K_L[5],*(union A281*)K_a[6]));}
/* 82:j{}d)J */ void f82(void* addr) { write_V_J(3, (( J(*)(j,struct A24,d))addr)(K_j[0],*(struct A24*)K_a[1],K_d[2]));}
/* 83:{Cdp}{CSsfBcfcSlpc}cf{fIjLpCBlfScd}<J>)l */ void f83(void* addr) { write_V_l(6, (( l(*)(struct A282,struct A283,c,f,struct A284,union A32))addr)(*(struct A282*)K_a[0],*(struct A283*)K_a[1],K_c[2],K_f[3],*(struct A284*)K_a[4],*(union A32*)K_a[5]));}
/* 84:is<LljcS<If>i{LsdsILcs[11]cppB}>)p */ void f84(void* addr) { write_V_p(3, (( p(*)(i,s,union A287))addr)(K_i[0],K_s[1],*(union A287*)K_a[2]));}
/* 85:fis{SfScSiJSCBCJ}JlId)I */ void f85(void* addr) { write_V_I(8, (( I(*)(f,i,s,struct A288,J,l,I,d))addr)(K_f[0],K_i[1],K_s[2],*(struct A288*)K_a[3],K_J[4],K_l[5],K_I[6],K_d[7]));}
/* 86:IcjBJpSCsiiL<>)c */ void f86(void* addr) { write_V_c(13, (( c(*)(I,c,j,B,J,p,S,C,s,i,i,L,union A30))addr)(K_I[0],K_c[1],K_j[2],K_B[3],K_J[4],K_p[5],K_S[6],K_C[7],K_s[8],K_i[9],K_i[10],K_L[11],*(union A30*)K_a[12]));}
/* 87:{B[3]cfl}fIfC)p */ void f87(void* addr) { write_V_p(5, (( p(*)(struct A289,f,I,f,C))addr)(*(struct A289*)K_a[0],K_f[1],K_I[2],K_f[3],K_C[4]));}
/* 88:IBIJsLId{iliCSCiSjBid}Bp<pJ>i<>S){jcf} */ void f88(void* addr) { write_V_a(15, (( struct A290(*)(I,B,I,J,s,L,I,d,struct A291,B,p,union A292,i,union A30,S))addr)(K_I[0],K_B[1],K_I[2],K_J[3],K_s[4],K_L[5],K_I[6],K_d[7],*(struct A291*)K_a[8],K_B[9],K_p[10],*(union A292*)K_a[11],K_i[12],*(union A30*)K_a[13],K_S[14]), struct A290);}
/* 89:cicd{sBiSJBJjcCjd}lc)s */ void f89(void* addr) { write_V_s(7, (( s(*)(c,i,c,d,struct A293,l,c))addr)(K_c[0],K_i[1],K_c[2],K_d[3],*(struct A293*)K_a[4],K_l[5],K_c[6]));}
/* 90:<fLlflcCfJISI>{C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl}dcI)B */ void f90(void* addr) { write_V_B(5, (( B(*)(union A294,struct A297,d,c,I))addr)(*(union A294*)K_a[0],*(struct A297*)K_a[1],K_d[2],K_c[3],K_I[4]));}
/* 91:cBpJs{{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ}IfJji{IfpLdIcppsLl}){} */ void f91(void* addr) { write_V_a(12, (( struct A24(*)(c,B,p,J,s,struct A300,I,f,J,j,i,struct A301))addr)(K_c[0],K_B[1],K_p[2],K_J[3],K_s[4],*(struct A300*)K_a[5],K_I[6],K_f[7],K_J[8],K_j[9],K_i[10],*(struct A301*)K_a[11]), struct A24);}
/* 92:jp<BCIILCiSicfB>jd<cjL<BcjBplljBdSp>[9]dSp<CJISlldLJffB>pcc[1]c>liILjd)l */ void f92(void* addr) { write_V_l(12, (( l(*)(j,p,union A302,j,d,union A305,l,i,I,L,j,d))addr)(K_j[0],K_p[1],*(union A302*)K_a[2],K_j[3],K_d[4],*(union A305*)K_a[5],K_l[6],K_i[7],K_I[8],K_L[9],K_j[10],K_d[11]));}
/* 93:pCLjI<f>Cs{pjC[3]jBj[9]}L)v */ void f93(void* addr) { write_V_v(10, (( v(*)(p,C,L,j,I,union A306,C,s,struct A307,L))addr)(K_p[0],K_C[1],K_L[2],K_j[3],K_I[4],*(union A306*)K_a[5],K_C[6],K_s[7],*(struct A307*)K_a[8],K_L[9]));}
/* 94:{d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj})L */ void f94(void* addr) { write_V_L(1, (( L(*)(struct A310))addr)(*(struct A310*)K_a[0]));}
/* 95:IJBjJBs{dJBs}jILsl)s */ void f95(void* addr) { write_V_s(13, (( s(*)(I,J,B,j,J,B,s,struct A311,j,I,L,s,l))addr)(K_I[0],K_J[1],K_B[2],K_j[3],K_J[4],K_B[5],K_s[6],*(struct A311*)K_a[7],K_j[8],K_I[9],K_L[10],K_s[11],K_l[12]));}
/* 96:iLfL{Llfp[13]CpLjcpiL}SS)B */ void f96(void* addr) { write_V_B(7, (( B(*)(i,L,f,L,struct A312,S,S))addr)(K_i[0],K_L[1],K_f[2],K_L[3],*(struct A312*)K_a[4],K_S[5],K_S[6]));}
/* 97:If{C}L{}<>cdIsS)v */ void f97(void* addr) { write_V_v(11, (( v(*)(I,f,struct A313,L,struct A24,union A30,c,d,I,s,S))addr)(K_I[0],K_f[1],*(struct A313*)K_a[2],K_L[3],*(struct A24*)K_a[4],*(union A30*)K_a[5],K_c[6],K_d[7],K_I[8],K_s[9],K_S[10]));}
/* 98:C<IcdBll>BISS{LjpS})j */ void f98(void* addr) { write_V_j(7, (( j(*)(C,union A314,B,I,S,S,struct A315))addr)(K_C[0],*(union A314*)K_a[1],K_B[2],K_I[3],K_S[4],K_S[5],*(struct A315*)K_a[6]));}
/* 99:{LS}sSs<LjLlf[15]pJSC[11]dJI>s)C */ void f99(void* addr) { write_V_C(6, (( C(*)(struct A316,s,S,s,union A317,s))addr)(*(struct A316*)K_a[0],K_s[1],K_S[2],K_s[3],*(union A317*)K_a[4],K_s[5]));}
/* 100:ds<BdIJLLc>fB<jI<L>CjcfppppC>pL<cIlLlcsBlB[14]pJ>BfJc)s */ void f100(void* addr) { write_V_s(13, (( s(*)(d,s,union A318,f,B,union A319,p,L,union A320,B,f,J,c))addr)(K_d[0],K_s[1],*(union A318*)K_a[2],K_f[3],K_B[4],*(union A319*)K_a[5],K_p[6],K_L[7],*(union A320*)K_a[8],K_B[9],K_f[10],K_J[11],K_c[12]));}
/* 101:sC{<jpLpBBBcCjlI>dScpdsjlfl}{SLjpLLjljI{iBCIipLsfpBL}s}Li{JIp}iSsdf)p */ void f101(void* addr) { write_V_p(12, (( p(*)(s,C,struct A322,struct A324,L,i,struct A325,i,S,s,d,f))addr)(K_s[0],K_C[1],*(struct A322*)K_a[2],*(struct A324*)K_a[3],K_L[4],K_i[5],*(struct A325*)K_a[6],K_i[7],K_S[8],K_s[9],K_d[10],K_f[11]));}
/* 102:pd<LSiIl<><cISSdIC[5]plljc>slll[4]p>L)I */ void f102(void* addr) { write_V_I(4, (( I(*)(p,d,union A327,L))addr)(K_p[0],K_d[1],*(union A327*)K_a[2],K_L[3]));}
/* 103:sillf<JC>pjldJfC)J */ void f103(void* addr) { write_V_J(13, (( J(*)(s,i,l,l,f,union A328,p,j,l,d,J,f,C))addr)(K_s[0],K_i[1],K_l[2],K_l[3],K_f[4],*(union A328*)K_a[5],K_p[6],K_j[7],K_l[8],K_d[9],K_J[10],K_f[11],K_C[12]));}
/* 104:J{i[13]}CC)s */ void f104(void* addr) { write_V_s(4, (( s(*)(J,struct A329,C,C))addr)(K_J[0],*(struct A329*)K_a[1],K_C[2],K_C[3]));}
/* 105:d{IpffiLBLs[2]fsL}d{<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<>sIpf>s}BjfC<CdBp[8]d<lIcsljlJCpL>f>i)i */ void f105(void* addr) { write_V_i(10, (( i(*)(d,struct A330,d,struct A334,B,j,f,C,union A336,i))addr)(K_d[0],*(struct A330*)K_a[1],K_d[2],*(struct A334*)K_a[3],K_B[4],K_j[5],K_f[6],K_C[7],*(union A336*)K_a[8],K_i[9]));}
/* 106:jlJpsfL{sBs[16]}IBipp)I */ void f106(void* addr) { write_V_I(13, (( I(*)(j,l,J,p,s,f,L,struct A337,I,B,i,p,p))addr)(K_j[0],K_l[1],K_J[2],K_p[3],K_s[4],K_f[5],K_L[6],*(struct A337*)K_a[7],K_I[8],K_B[9],K_i[10],K_p[11],K_p[12]));}
/* 107:ppSBpSd{Bl<>L{Sdc[12]fsdjfiCLJ}[6]LccBIpc}lB<B{cC}jls[5]d>)d */ void f107(void* addr) { write_V_d(11, (( d(*)(p,p,S,B,p,S,d,struct A339,l,B,union A341))addr)(K_p[0],K_p[1],K_S[2],K_B[3],K_p[4],K_S[5],K_d[6],*(struct A339*)K_a[7],K_l[8],K_B[9],*(union A341*)K_a[10]));}
/* 108:B<j>iBCSjB<cclppiJfSfis><I[13]LcJjIBCpp[1]pf>)p */ void f108(void* addr) { write_V_p(10, (( p(*)(B,union A20,i,B,C,S,j,B,union A342,union A343))addr)(K_B[0],*(union A20*)K_a[1],K_i[2],K_B[3],K_C[4],K_S[5],K_j[6],K_B[7],*(union A342*)K_a[8],*(union A343*)K_a[9]));}
/* 109:{Cd[12]CIBJi[1]IsijJ}s)<clSfdSppl{JLfllIiIj}S<sdLfs[6]C>> */ void f109(void* addr) { write_V_a(2, (( union A346(*)(struct A347,s))addr)(*(struct A347*)K_a[0],K_s[1]), union A346);}
/* 110:{}CLf)<ICfpS[8]IJCfCdc> */ void f110(void* addr) { write_V_a(4, (( union A348(*)(struct A24,C,L,f))addr)(*(struct A24*)K_a[0],K_C[1],K_L[2],K_f[3]), union A348);}
/* 111:l<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>siLpJdcd{SfspdscpIpsj})l */ void f111(void* addr) { write_V_l(11, (( l(*)(l,union A351,s,i,L,p,J,d,c,d,struct A352))addr)(K_l[0],*(union A351*)K_a[1],K_s[2],K_i[3],K_L[4],K_p[5],K_J[6],K_d[7],K_c[8],K_d[9],*(struct A352*)K_a[10]));}
/* 112:lI{}J<d<cLSlfjI>djcf{LCSBddjLSfjs}j{pC[10]dLiCIsfpdL}[6]jdL>fslIdj)p */ void f112(void* addr) { write_V_p(11, (( p(*)(l,I,struct A24,J,union A356,f,s,l,I,d,j))addr)(K_l[0],K_I[1],*(struct A24*)K_a[2],K_J[3],*(union A356*)K_a[4],K_f[5],K_s[6],K_l[7],K_I[8],K_d[9],K_j[10]));}
/* 113:<BfCpdiLsJsiL>fcl<jj>sC)v */ void f113(void* addr) { write_V_v(7, (( v(*)(union A357,f,c,l,union A358,s,C))addr)(*(union A357*)K_a[0],K_f[1],K_c[2],K_l[3],*(union A358*)K_a[4],K_s[5],K_C[6]));}
/* 114:cplCpBfs<>){IBJLCflCfsiI} */ void f114(void* addr) { write_V_a(9, (( struct A359(*)(c,p,l,C,p,B,f,s,union A30))addr)(K_c[0],K_p[1],K_l[2],K_C[3],K_p[4],K_B[5],K_f[6],K_s[7],*(union A30*)K_a[8]), struct A359);}
/* 115:<ilcjC{cJSjCBIIj}[14]lfBCdS>p)B */ void f115(void* addr) { write_V_B(2, (( B(*)(union A361,p))addr)(*(union A361*)K_a[0],K_p[1]));}
/* 116:BdcC)<lJIpi[4]ldjJl> */ void f116(void* addr) { write_V_a(4, (( union A362(*)(B,d,c,C))addr)(K_B[0],K_d[1],K_c[2],K_C[3]), union A362);}
/* 117:Css<Cl>lldipC)p */ void f117(void* addr) { write_V_p(10, (( p(*)(C,s,s,union A363,l,l,d,i,p,C))addr)(K_C[0],K_s[1],K_s[2],*(union A363*)K_a[3],K_l[4],K_l[5],K_d[6],K_i[7],K_p[8],K_C[9]));}
/* 118:lL<pdJ>jjL{jpiisIfilBfS})v */ void f118(void* addr) { write_V_v(7, (( v(*)(l,L,union A364,j,j,L,struct A365))addr)(K_l[0],K_L[1],*(union A364*)K_a[2],K_j[3],K_j[4],K_L[5],*(struct A365*)K_a[6]));}
/* 119:{JC})l */ void f119(void* addr) { write_V_l(1, (( l(*)(struct A366))addr)(*(struct A366*)K_a[0]));}
/* 120:c<>jBl{si}cfBdC)C */ void f120(void* addr) { write_V_C(11, (( C(*)(c,union A30,j,B,l,struct A367,c,f,B,d,C))addr)(K_c[0],*(union A30*)K_a[1],K_j[2],K_B[3],K_l[4],*(struct A367*)K_a[5],K_c[6],K_f[7],K_B[8],K_d[9],K_C[10]));}
/* 121:CpSSBLC{BLS}SpJiis)i */ void f121(void* addr) { write_V_i(14, (( i(*)(C,p,S,S,B,L,C,struct A368,S,p,J,i,i,s))addr)(K_C[0],K_p[1],K_S[2],K_S[3],K_B[4],K_L[5],K_C[6],*(struct A368*)K_a[7],K_S[8],K_p[9],K_J[10],K_i[11],K_i[12],K_s[13]));}
/* 122:BpsfII<l>c{IdcdjJCsJCLf}I)J */ void f122(void* addr) { write_V_J(10, (( J(*)(B,p,s,f,I,I,union A104,c,struct A369,I))addr)(K_B[0],K_p[1],K_s[2],K_f[3],K_I[4],K_I[5],*(union A104*)K_a[6],K_c[7],*(struct A369*)K_a[8],K_I[9]));}
/* 123:{LCcs[7]dBL[6]iiiJC}dicilj{d[3]dC[9]f}jjspf<CISl[16]lfJjSlIJ>L)c */ void f123(void* addr) { write_V_c(15, (( c(*)(struct A370,d,i,c,i,l,j,struct A371,j,j,s,p,f,union A372,L))addr)(*(struct A370*)K_a[0],K_d[1],K_i[2],K_c[3],K_i[4],K_l[5],K_j[6],*(struct A371*)K_a[7],K_j[8],K_j[9],K_s[10],K_p[11],K_f[12],*(union A372*)K_a[13],K_L[14]));}
/* 124:){Ll[1]pLSsJs} */ void f124(void* addr) { write_V_a(0, (( struct A373(*)())addr)(), struct A373);}
/* 125:l<ILIcpCj>SLS<sBldCiBisi>cL)i */ void f125(void* addr) { write_V_i(8, (( i(*)(l,union A374,S,L,S,union A375,c,L))addr)(K_l[0],*(union A374*)K_a[1],K_S[2],K_L[3],K_S[4],*(union A375*)K_a[5],K_c[6],K_L[7]));}
/* 126:pdd<BcBJSJ>if)L */ void f126(void* addr) { write_V_L(6, (( L(*)(p,d,d,union A376,i,f))addr)(K_p[0],K_d[1],K_d[2],*(union A376*)K_a[3],K_i[4],K_f[5]));}
/* 127:pJ<J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs>IjIiLl{JjIfJljIIIjL}lI)p */ void f127(void* addr) { write_V_p(12, (( p(*)(p,J,union A379,I,j,I,i,L,l,struct A380,l,I))addr)(K_p[0],K_J[1],*(union A379*)K_a[2],K_I[3],K_j[4],K_I[5],K_i[6],K_L[7],K_l[8],*(struct A380*)K_a[9],K_l[10],K_I[11]));}
/* 128:<siBB[5]i<lSBiIjIdI>scl<I>sd>LdJC<dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI>BIcIdl)i */ void f128(void* addr) { write_V_i(12, (( i(*)(union A383,L,d,J,C,union A386,B,I,c,I,d,l))addr)(*(union A383*)K_a[0],K_L[1],K_d[2],K_J[3],K_C[4],*(union A386*)K_a[5],K_B[6],K_I[7],K_c[8],K_I[9],K_d[10],K_l[11]));}
/* 129:pJflidlp<SJJpJlCI>d)s */ void f129(void* addr) { write_V_s(10, (( s(*)(p,J,f,l,i,d,l,p,union A387,d))addr)(K_p[0],K_J[1],K_f[2],K_l[3],K_i[4],K_d[5],K_l[6],K_p[7],*(union A387*)K_a[8],K_d[9]));}
/* 130:LLjcic{LScCJJLdsBJj}<is<dCLjLLfilpsS>SCSfSLlBl>ji<BjpJ[11]>)j */ void f130(void* addr) { write_V_j(11, (( j(*)(L,L,j,c,i,c,struct A388,union A390,j,i,union A391))addr)(K_L[0],K_L[1],K_j[2],K_c[3],K_i[4],K_c[5],*(struct A388*)K_a[6],*(union A390*)K_a[7],K_j[8],K_i[9],*(union A391*)K_a[10]));}
/* 131:dfSCc{psCpSjcI}JpSj)B */ void f131(void* addr) { write_V_B(10, (( B(*)(d,f,S,C,c,struct A392,J,p,S,j))addr)(K_d[0],K_f[1],K_S[2],K_C[3],K_c[4],*(struct A392*)K_a[5],K_J[6],K_p[7],K_S[8],K_j[9]));}
/* 132:jjd{Cslc[8]SBifsjIJ}s)S */ void f132(void* addr) { write_V_S(5, (( S(*)(j,j,d,struct A393,s))addr)(K_j[0],K_j[1],K_d[2],*(struct A393*)K_a[3],K_s[4]));}
/* 133:dB)<BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ> */ void f133(void* addr) { write_V_a(2, (( union A396(*)(d,B))addr)(K_d[0],K_B[1]), union A396);}
/* 134:{JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p}lS<SLlSlcpc>fccId{}S)S */ void f134(void* addr) { write_V_S(11, (( S(*)(struct A405,l,S,union A406,f,c,c,I,d,struct A24,S))addr)(*(struct A405*)K_a[0],K_l[1],K_S[2],*(union A406*)K_a[3],K_f[4],K_c[5],K_c[6],K_I[7],K_d[8],*(struct A24*)K_a[9],K_S[10]));}
/* 135:JjLJf{<jIiJI>ddBsdBSJlcj}<IS{SJB}ccsiiJJfJ>C<{I}SJjdJIIjlBp>C)l */ void f135(void* addr) { write_V_l(10, (( l(*)(J,j,L,J,f,struct A408,union A410,C,union A412,C))addr)(K_J[0],K_j[1],K_L[2],K_J[3],K_f[4],*(struct A408*)K_a[5],*(union A410*)K_a[6],K_C[7],*(union A412*)K_a[8],K_C[9]));}
/* 136:pLBJBscJc<flBd<>JlfjlfB>Cffldl)v */ void f136(void* addr) { write_V_v(16, (( v(*)(p,L,B,J,B,s,c,J,c,union A413,C,f,f,l,d,l))addr)(K_p[0],K_L[1],K_B[2],K_J[3],K_B[4],K_s[5],K_c[6],K_J[7],K_c[8],*(union A413*)K_a[9],K_C[10],K_f[11],K_f[12],K_l[13],K_d[14],K_l[15]));}
/* 137:JpJJ{})S */ void f137(void* addr) { write_V_S(5, (( S(*)(J,p,J,J,struct A24))addr)(K_J[0],K_p[1],K_J[2],K_J[3],*(struct A24*)K_a[4]));}
/* 138:{BLBi[6]LcffsSBc}Lj<dS>{J})C */ void f138(void* addr) { write_V_C(5, (( C(*)(struct A414,L,j,union A415,struct A416))addr)(*(struct A414*)K_a[0],K_L[1],K_j[2],*(union A415*)K_a[3],*(struct A416*)K_a[4]));}
/* 139:I<p>{Cc<d>SIC<>cd[16]LCL}Bpip{BjplLpIBLlfl}BIIlIs)p */ void f139(void* addr) { write_V_p(14, (( p(*)(I,union A56,struct A417,B,p,i,p,struct A418,B,I,I,l,I,s))addr)(K_I[0],*(union A56*)K_a[1],*(struct A417*)K_a[2],K_B[3],K_p[4],K_i[5],K_p[6],*(struct A418*)K_a[7],K_B[8],K_I[9],K_I[10],K_l[11],K_I[12],K_s[13]));}
/* 140:lI{J{fsjL}JfL{jdlJdCpJSpjB}JlLBid}fpsI<L>Sp<iJjjSIjsflfC>sBl)j */ void f140(void* addr) { write_V_j(14, (( j(*)(l,I,struct A421,f,p,s,I,union A160,S,p,union A422,s,B,l))addr)(K_l[0],K_I[1],*(struct A421*)K_a[2],K_f[3],K_p[4],K_s[5],K_I[6],*(union A160*)K_a[7],K_S[8],K_p[9],*(union A422*)K_a[10],K_s[11],K_B[12],K_l[13]));}
/* 141:pi{djpcI<djC>SJBCBc}sjj{<c[12]S{Cjcpcff}JCds{Csf[12]cLidiJjs}IIdL>SBjfpc<>BplS}<ijpsL[4]c{d<iLJs>[15]pp}j{IJlsf[7]l[10]Blip}liI>l<icciIlCJ{s[11]clc[15]cccpcCi[6]J}LI[15]j[15]>s)f */ void f141(void* addr) { write_V_f(11, (( f(*)(p,i,struct A424,s,j,j,struct A428,union A432,l,union A434,s))addr)(K_p[0],K_i[1],*(struct A424*)K_a[2],K_s[3],K_j[4],K_j[5],*(struct A428*)K_a[6],*(union A432*)K_a[7],K_l[8],*(union A434*)K_a[9],K_s[10]));}
/* 142:d{}CcfddLiSlBI)J */ void f142(void* addr) { write_V_J(13, (( J(*)(d,struct A24,C,c,f,d,d,L,i,S,l,B,I))addr)(K_d[0],*(struct A24*)K_a[1],K_C[2],K_c[3],K_f[4],K_d[5],K_d[6],K_L[7],K_i[8],K_S[9],K_l[10],K_B[11],K_I[12]));}
/* 143:{djcJcj}fBfd{pfcssLSjcCLj})j */ void f143(void* addr) { write_V_j(6, (( j(*)(struct A435,f,B,f,d,struct A436))addr)(*(struct A435*)K_a[0],K_f[1],K_B[2],K_f[3],K_d[4],*(struct A436*)K_a[5]));}
/* 144:jCjfSclsd){d<s{IijdSIfjIlIS}Lld>sBIlB} */ void f144(void* addr) { write_V_a(9, (( struct A439(*)(j,C,j,f,S,c,l,s,d))addr)(K_j[0],K_C[1],K_j[2],K_f[3],K_S[4],K_c[5],K_l[6],K_s[7],K_d[8]), struct A439);}
/* 145:sLpi{J}j<J>csl){jSd[9]LfSCCsC} */ void f145(void* addr) { write_V_a(10, (( struct A440(*)(s,L,p,i,struct A416,j,union A32,c,s,l))addr)(K_s[0],K_L[1],K_p[2],K_i[3],*(struct A416*)K_a[4],K_j[5],*(union A32*)K_a[6],K_c[7],K_s[8],K_l[9]), struct A440);}
/* 146:flBppjCBlC{s{jSiBL}}dC{fccdspslJIji}L)c */ void f146(void* addr) { write_V_c(15, (( c(*)(f,l,B,p,p,j,C,B,l,C,struct A442,d,C,struct A443,L))addr)(K_f[0],K_l[1],K_B[2],K_p[3],K_p[4],K_j[5],K_C[6],K_B[7],K_l[8],K_C[9],*(struct A442*)K_a[10],K_d[11],K_C[12],*(struct A443*)K_a[13],K_L[14]));}
/* 147:<p{fjfCCLCIc<fcJCfSipiccj>{LdpCppLd[3]pf[10]SI}s}pl{<IILijS[15]SllspI>pC<lsB><lB>cc}sS>ClcpB<CipSjcdjsLfs[1]>CfCi)i */ void f147(void* addr) { write_V_i(11, (( i(*)(union A451,C,l,c,p,B,union A452,C,f,C,i))addr)(*(union A451*)K_a[0],K_C[1],K_l[2],K_c[3],K_p[4],K_B[5],*(union A452*)K_a[6],K_C[7],K_f[8],K_C[9],K_i[10]));}
/* 148:Id<<BI>iB<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}<SsBijfccj<f[8]ssS>fj>Ij>pB{{lII}ciLI<IJpjf[7]JCBj>}LCd)<I<dLCCCJB>{sLlfcIs}LcLsciIl{sJJCjIclfffd}> */ void f148(void* addr) { write_V_a(9, (( union A456(*)(I,d,union A463,p,B,struct A466,L,C,d))addr)(K_I[0],K_d[1],*(union A463*)K_a[2],K_p[3],K_B[4],*(struct A466*)K_a[5],K_L[6],K_C[7],K_d[8]), union A456);}
/* 149:pi{p{BBCBBCllLj<plLSJSfdSipl>{Ifc[16]cI}}JLcJLIsjlC}cd)S */ void f149(void* addr) { write_V_S(5, (( S(*)(p,i,struct A470,c,d))addr)(K_p[0],K_i[1],*(struct A470*)K_a[2],K_c[3],K_d[4]));}
/* 150:CJC<ficL>c{d<{Jcfcj}jfjf>dLIC[14]ILIffj}JfCifs)B */ void f150(void* addr) { write_V_B(12, (( B(*)(C,J,C,union A471,c,struct A474,J,f,C,i,f,s))addr)(K_C[0],K_J[1],K_C[2],*(union A471*)K_a[3],K_c[4],*(struct A474*)K_a[5],K_J[6],K_f[7],K_C[8],K_i[9],K_f[10],K_s[11]));}
/* 151:icIs<sCfj{IICldsBSpBsJ}Cdicc{dCJ}p>IILiJ)S */ void f151(void* addr) { write_V_S(10, (( S(*)(i,c,I,s,union A477,I,I,L,i,J))addr)(K_i[0],K_c[1],K_I[2],K_s[3],*(union A477*)K_a[4],K_I[5],K_I[6],K_L[7],K_i[8],K_J[9]));}
/* 152:sffs<JiBCsccpLli[4]S><BcLp<dBcjssfcLJIB>sILJ[7]<cic>Sc>fLBL)v */ void f152(void* addr) { write_V_v(10, (( v(*)(s,f,f,s,union A478,union A481,f,L,B,L))addr)(K_s[0],K_f[1],K_f[2],K_s[3],*(union A478*)K_a[4],*(union A481*)K_a[5],K_f[6],K_L[7],K_B[8],K_L[9]));}
/* 153:IBl)<sClILcdIBBdB> */ void f153(void* addr) { write_V_a(3, (( union A482(*)(I,B,l))addr)(K_I[0],K_B[1],K_l[2]), union A482);}
/* 154:ScCCsl{lCppL{SdLsJSCBC{fsJiccif}CC}c}cj)i */ void f154(void* addr) { write_V_i(9, (( i(*)(S,c,C,C,s,l,struct A485,c,j))addr)(K_S[0],K_c[1],K_C[2],K_C[3],K_s[4],K_l[5],*(struct A485*)K_a[6],K_c[7],K_j[8]));}
/* 155:SCIlCc<cCCjI[16]SCiscfC>iffBc)C */ void f155(void* addr) { write_V_C(12, (( C(*)(S,C,I,l,C,c,union A486,i,f,f,B,c))addr)(K_S[0],K_C[1],K_I[2],K_l[3],K_C[4],K_c[5],*(union A486*)K_a[6],K_i[7],K_f[8],K_f[9],K_B[10],K_c[11]));}
/* 156:dsspLlfLi<B<>f<S{JiJ}BccsS<SLLJSpLsfslp>pSJc>csLSiBcL>j)L */ void f156(void* addr) { write_V_L(11, (( L(*)(d,s,s,p,L,l,f,L,i,union A490,j))addr)(K_d[0],K_s[1],K_s[2],K_p[3],K_L[4],K_l[5],K_f[6],K_L[7],K_i[8],*(union A490*)K_a[9],K_j[10]));}
/* 157:j{iICBcs{ljjsLlIJcsp}IL<dIJcdL>jS}icilc)j */ void f157(void* addr) { write_V_j(7, (( j(*)(j,struct A493,i,c,i,l,c))addr)(K_j[0],*(struct A493*)K_a[1],K_i[2],K_c[3],K_i[4],K_l[5],K_c[6]));}
/* 158:cBdLii<{cIffC[14]Is{j}dLfl}BIJIIpl>cBS{iCscilILcCCs}Bp){SCfl[9]dsIBjfJI} */ void f158(void* addr) { write_V_a(13, (( struct A494(*)(c,B,d,L,i,i,union A496,c,B,S,struct A497,B,p))addr)(K_c[0],K_B[1],K_d[2],K_L[3],K_i[4],K_i[5],*(union A496*)K_a[6],K_c[7],K_B[8],K_S[9],*(struct A497*)K_a[10],K_B[11],K_p[12]), struct A494);}
/* 159:B<{sfIi}dl>l{SBcL})<jBcCjC> */ void f159(void* addr) { write_V_a(4, (( union A498(*)(B,union A500,l,struct A501))addr)(K_B[0],*(union A500*)K_a[1],K_l[2],*(struct A501*)K_a[3]), union A498);}
/* 160:plip){C} */ void f160(void* addr) { write_V_a(4, (( struct A313(*)(p,l,i,p))addr)(K_p[0],K_l[1],K_i[2],K_p[3]), struct A313);}
/* 161:<Bcjifdsi[16]dsiI>SSp)d */ void f161(void* addr) { write_V_d(4, (( d(*)(union A502,S,S,p))addr)(*(union A502*)K_a[0],K_S[1],K_S[2],K_p[3]));}
/* 162:ljjCcSC{C{dsjdIcj[4]lpIjf}IJILd<Li><Lsd[8]SppL>}<JIL<JIIfdj><SfppLBBCpscf>lBd{JBL<ijIJS>csCSsBfj}fc[11]C>)c */ void f162(void* addr) { write_V_c(9, (( c(*)(l,j,j,C,c,S,C,struct A506,union A511))addr)(K_l[0],K_j[1],K_j[2],K_C[3],K_c[4],K_S[5],K_C[6],*(struct A506*)K_a[7],*(union A511*)K_a[8]));}
/* 163:j<Blil[12]c<cisScSJdLL>BjcCCc>jpljfipIfJ)s */ void f163(void* addr) { write_V_s(12, (( s(*)(j,union A513,j,p,l,j,f,i,p,I,f,J))addr)(K_j[0],*(union A513*)K_a[1],K_j[2],K_p[3],K_l[4],K_j[5],K_f[6],K_i[7],K_p[8],K_I[9],K_f[10],K_J[11]));}
/* 164:iiBLpIL<dJLi{ccjC}dd<JCjJjiSifJpC>diIj>B)L */ void f164(void* addr) { write_V_L(9, (( L(*)(i,i,B,L,p,I,L,union A516,B))addr)(K_i[0],K_i[1],K_B[2],K_L[3],K_p[4],K_I[5],K_L[6],*(union A516*)K_a[7],K_B[8]));}
/* 165:fi{sSJlJC}S)l */ void f165(void* addr) { write_V_l(4, (( l(*)(f,i,struct A517,S))addr)(K_f[0],K_i[1],*(struct A517*)K_a[2],K_S[3]));}
/* 166:cJj{p{cfpijijBJifi}}{}<JL[9]dc<l<fp>LJsffcsdls>{fjLspCjfIll{siCIdp}}jCjdsC>CCJJsIl)B */ void f166(void* addr) { write_V_B(13, (( B(*)(c,J,j,struct A519,struct A24,union A524,C,C,J,J,s,I,l))addr)(K_c[0],K_J[1],K_j[2],*(struct A519*)K_a[3],*(struct A24*)K_a[4],*(union A524*)K_a[5],K_C[6],K_C[7],K_J[8],K_J[9],K_s[10],K_I[11],K_l[12]));}
/* 167:J{CdiCsfSSsi}ff{fjp[5]CfipdS}CjJSSSfCCB)s */ void f167(void* addr) { write_V_s(15, (( s(*)(J,struct A525,f,f,struct A526,C,j,J,S,S,S,f,C,C,B))addr)(K_J[0],*(struct A525*)K_a[1],K_f[2],K_f[3],*(struct A526*)K_a[4],K_C[5],K_j[6],K_J[7],K_S[8],K_S[9],K_S[10],K_f[11],K_C[12],K_C[13],K_B[14]));}
/* 168:IpCS{<l>SJCLjSJ<C>LCc}Is{SpdLLfsf}fSfISc)d */ void f168(void* addr) { write_V_d(14, (( d(*)(I,p,C,S,struct A528,I,s,struct A529,f,S,f,I,S,c))addr)(K_I[0],K_p[1],K_C[2],K_S[3],*(struct A528*)K_a[4],K_I[5],K_s[6],*(struct A529*)K_a[7],K_f[8],K_S[9],K_f[10],K_I[11],K_S[12],K_c[13]));}
/* 169:CdfJ<dffBClflcSpi>CCcl<SlS>IC)c */ void f169(void* addr) { write_V_c(12, (( c(*)(C,d,f,J,union A530,C,C,c,l,union A531,I,C))addr)(K_C[0],K_d[1],K_f[2],K_J[3],*(union A530*)K_a[4],K_C[5],K_C[6],K_c[7],K_l[8],*(union A531*)K_a[9],K_I[10],K_C[11]));}
/* 170:C{sj}IcS<sLBjLIdJsLLS>cjpSc)<sJLIpipLsCBJ> */ void f170(void* addr) { write_V_a(11, (( union A532(*)(C,struct A533,I,c,S,union A534,c,j,p,S,c))addr)(K_C[0],*(struct A533*)K_a[1],K_I[2],K_c[3],K_S[4],*(union A534*)K_a[5],K_c[6],K_j[7],K_p[8],K_S[9],K_c[10]), union A532);}
/* 171:f{}fl)j */ void f171(void* addr) { write_V_j(4, (( j(*)(f,struct A24,f,l))addr)(K_f[0],*(struct A24*)K_a[1],K_f[2],K_l[3]));}
/* 172:p<{iCcpljS<Jl>IfB<jjL>}sfLc>LlcfclfjJ)l */ void f172(void* addr) { write_V_l(11, (( l(*)(p,union A538,L,l,c,f,c,l,f,j,J))addr)(K_p[0],*(union A538*)K_a[1],K_L[2],K_l[3],K_c[4],K_f[5],K_c[6],K_l[7],K_f[8],K_j[9],K_J[10]));}
/* 173:dBIs<dS>Cl)S */ void f173(void* addr) { write_V_S(7, (( S(*)(d,B,I,s,union A415,C,l))addr)(K_d[0],K_B[1],K_I[2],K_s[3],*(union A415*)K_a[4],K_C[5],K_l[6]));}
/* 174:{ils}slcjij<>iS)B */ void f174(void* addr) { write_V_B(10, (( B(*)(struct A539,s,l,c,j,i,j,union A30,i,S))addr)(*(struct A539*)K_a[0],K_s[1],K_l[2],K_c[3],K_j[4],K_i[5],K_j[6],*(union A30*)K_a[7],K_i[8],K_S[9]));}
/* 175:BcCIL<pIsCCj{cBCfLjfLBdsI}S>fBLfcSC)J */ void f175(void* addr) { write_V_J(13, (( J(*)(B,c,C,I,L,union A541,f,B,L,f,c,S,C))addr)(K_B[0],K_c[1],K_C[2],K_I[3],K_L[4],*(union A541*)K_a[5],K_f[6],K_B[7],K_L[8],K_f[9],K_c[10],K_S[11],K_C[12]));}
/* 176:CdCCjfI<<dSddCisJf>cCJlClfl[4]Is>I)L */ void f176(void* addr) { write_V_L(9, (( L(*)(C,d,C,C,j,f,I,union A543,I))addr)(K_C[0],K_d[1],K_C[2],K_C[3],K_j[4],K_f[5],K_I[6],*(union A543*)K_a[7],K_I[8]));}
/* 177:Ljp{CS[8]}ip)s */ void f177(void* addr) { write_V_s(6, (( s(*)(L,j,p,struct A544,i,p))addr)(K_L[0],K_j[1],K_p[2],*(struct A544*)K_a[3],K_i[4],K_p[5]));}
/* 178:<lIiSjfSCIidj>pfsl<SijiLlii{sSJ}lJs><sIfCJsfJBBdi>p{Jc[3]dJ{B[8]LBBSjfBCdLs}[12]sjsfj}fssJ)I */ void f178(void* addr) { write_V_I(13, (( I(*)(union A545,p,f,s,l,union A547,union A548,p,struct A550,f,s,s,J))addr)(*(union A545*)K_a[0],K_p[1],K_f[2],K_s[3],K_l[4],*(union A547*)K_a[5],*(union A548*)K_a[6],K_p[7],*(struct A550*)K_a[8],K_f[9],K_s[10],K_s[11],K_J[12]));}
/* 179:BLfjC{I{icBjSLCCcljC}BdB<>csf{S}ip})i */ void f179(void* addr) { write_V_i(6, (( i(*)(B,L,f,j,C,struct A553))addr)(K_B[0],K_L[1],K_f[2],K_j[3],K_C[4],*(struct A553*)K_a[5]));}
/* 180:spLIpj<lSdIclBdILdd>cBl)i */ void f180(void* addr) { write_V_i(10, (( i(*)(s,p,L,I,p,j,union A554,c,B,l))addr)(K_s[0],K_p[1],K_L[2],K_I[3],K_p[4],K_j[5],*(union A554*)K_a[6],K_c[7],K_B[8],K_l[9]));}
/* 181:L{jJllBC{icf}SL}iilc)p */ void f181(void* addr) { write_V_p(6, (( p(*)(L,struct A556,i,i,l,c))addr)(K_L[0],*(struct A556*)K_a[1],K_i[2],K_i[3],K_l[4],K_c[5]));}
/* 182:{fisLS}f{}dcC)B */ void f182(void* addr) { write_V_B(6, (( B(*)(struct A557,f,struct A24,d,c,C))addr)(*(struct A557*)K_a[0],K_f[1],*(struct A24*)K_a[2],K_d[3],K_c[4],K_C[5]));}
/* 183:cLj{}<llBdIsf>cdJBS){dLjjJljJls[13]pd} */ void f183(void* addr) { write_V_a(10, (( struct A558(*)(c,L,j,struct A24,union A559,c,d,J,B,S))addr)(K_c[0],K_L[1],K_j[2],*(struct A24*)K_a[3],*(union A559*)K_a[4],K_c[5],K_d[6],K_J[7],K_B[8],K_S[9]), struct A558);}
/* 184:plsd<f>)J */ void f184(void* addr) { write_V_J(5, (( J(*)(p,l,s,d,union A306))addr)(K_p[0],K_l[1],K_s[2],K_d[3],*(union A306*)K_a[4]));}
/* 185:{ci{ciIIJBslJfsi}SlL}<S{IBsjCjdpLJJs}psBIj><B>jdijSfJ)v */ void f185(void* addr) { write_V_v(10, (( v(*)(struct A561,union A563,union A564,j,d,i,j,S,f,J))addr)(*(struct A561*)K_a[0],*(union A563*)K_a[1],*(union A564*)K_a[2],K_j[3],K_d[4],K_i[5],K_j[6],K_S[7],K_f[8],K_J[9]));}
/* 186:iSsfip)<ICpIpISIflBl> */ void f186(void* addr) { write_V_a(6, (( union A565(*)(i,S,s,f,i,p))addr)(K_i[0],K_S[1],K_s[2],K_f[3],K_i[4],K_p[5]), union A565);}
/* 187:IpCLijiI<ffBdLlBCIl>LLi)S */ void f187(void* addr) { write_V_S(12, (( S(*)(I,p,C,L,i,j,i,I,union A566,L,L,i))addr)(K_I[0],K_p[1],K_C[2],K_L[3],K_i[4],K_j[5],K_i[6],K_I[7],*(union A566*)K_a[8],K_L[9],K_L[10],K_i[11]));}
/* 188:lSfCCB<>pJ<fsd{BfLllc}fpCiL>fcds)J */ void f188(void* addr) { write_V_J(14, (( J(*)(l,S,f,C,C,B,union A30,p,J,union A568,f,c,d,s))addr)(K_l[0],K_S[1],K_f[2],K_C[3],K_C[4],K_B[5],*(union A30*)K_a[6],K_p[7],K_J[8],*(union A568*)K_a[9],K_f[10],K_c[11],K_d[12],K_s[13]));}
/* 189:{sjBfpCCBBSIp}BIdsf)I */ void f189(void* addr) { write_V_I(6, (( I(*)(struct A569,B,I,d,s,f))addr)(*(struct A569*)K_a[0],K_B[1],K_I[2],K_d[3],K_s[4],K_f[5]));}
/* 190:<cfcdBp><fjdj[7]<sSfCCflj[10]ICJI>I{issJicL}p<ssBcL>pdd>CJCC<<jcI[2]cIsIBci[12]C>iscJC>JSC<JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL>ds{lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C})i */ void f190(void* addr) { write_V_i(14, (( i(*)(union A570,union A574,C,J,C,C,union A576,J,S,C,union A580,d,s,struct A586))addr)(*(union A570*)K_a[0],*(union A574*)K_a[1],K_C[2],K_J[3],K_C[4],K_C[5],*(union A576*)K_a[6],K_J[7],K_S[8],K_C[9],*(union A580*)K_a[10],K_d[11],K_s[12],*(struct A586*)K_a[13]));}
/* 191:LccLSp{cjlIccJBs}jJ)f */ void f191(void* addr) { write_V_f(9, (( f(*)(L,c,c,L,S,p,struct A587,j,J))addr)(K_L[0],K_c[1],K_c[2],K_L[3],K_S[4],K_p[5],*(struct A587*)K_a[6],K_j[7],K_J[8]));}
/* 192:i{cpd}dj)p */ void f192(void* addr) { write_V_p(4, (( p(*)(i,struct A588,d,j))addr)(K_i[0],*(struct A588*)K_a[1],K_d[2],K_j[3]));}
/* 193:L{}CflBdLSB)<JpCcdll<p>ffi> */ void f193(void* addr) { write_V_a(10, (( union A589(*)(L,struct A24,C,f,l,B,d,L,S,B))addr)(K_L[0],*(struct A24*)K_a[1],K_C[2],K_f[3],K_l[4],K_B[5],K_d[6],K_L[7],K_S[8],K_B[9]), union A589);}
/* 194:s{csB}sLpL)v */ void f194(void* addr) { write_V_v(6, (( v(*)(s,struct A590,s,L,p,L))addr)(K_s[0],*(struct A590*)K_a[1],K_s[2],K_L[3],K_p[4],K_L[5]));}
/* 195:ddlC<ClIjIpfcISji>)d */ void f195(void* addr) { write_V_d(5, (( d(*)(d,d,l,C,union A591))addr)(K_d[0],K_d[1],K_l[2],K_C[3],*(union A591*)K_a[4]));}
/* 196:cCc<J>CSIcdf<LC{ijdIll{IpcS[7]fIcdlfls}cSScs}fisIpcS[8]dp[16]>fSCS)v */ void f196(void* addr) { write_V_v(15, (( v(*)(c,C,c,union A32,C,S,I,c,d,f,union A594,f,S,C,S))addr)(K_c[0],K_C[1],K_c[2],*(union A32*)K_a[3],K_C[4],K_S[5],K_I[6],K_c[7],K_d[8],K_f[9],*(union A594*)K_a[10],K_f[11],K_S[12],K_C[13],K_S[14]));}
/* 197:fjp{i{iLjJlsfslfsL}{}LccfJsIi<JpcJpi>}jScC<B[12]jfpfBBLL<>>){} */ void f197(void* addr) { write_V_a(9, (( struct A24(*)(f,j,p,struct A597,j,S,c,C,union A598))addr)(K_f[0],K_j[1],K_p[2],*(struct A597*)K_a[3],K_j[4],K_S[5],K_c[6],K_C[7],*(union A598*)K_a[8]), struct A24);}
/* 198:{dI[8]icIJ{jB}jLdSs}CB<BJsBssI[13]fCJlJ>JfSLIBI)f */ void f198(void* addr) { write_V_f(11, (( f(*)(struct A600,C,B,union A601,J,f,S,L,I,B,I))addr)(*(struct A600*)K_a[0],K_C[1],K_B[2],*(union A601*)K_a[3],K_J[4],K_f[5],K_S[6],K_L[7],K_I[8],K_B[9],K_I[10]));}
/* 199:lsBc{ICilisciS<dI>Ci}j)L */ void f199(void* addr) { write_V_L(6, (( L(*)(l,s,B,c,struct A603,j))addr)(K_l[0],K_s[1],K_B[2],K_c[3],*(struct A603*)K_a[4],K_j[5]));}
/* 200:Lj{clLdCiLC}SLL)f */ void f200(void* addr) { write_V_f(6, (( f(*)(L,j,struct A604,S,L,L))addr)(K_L[0],K_j[1],*(struct A604*)K_a[2],K_S[3],K_L[4],K_L[5]));}
/* 201:c<cLJfLiB[10]JfJJI>p)<jdcjJllfB<fIpLIJil>B{IsLiJdLf}> */ void f201(void* addr) { write_V_a(3, (( union A607(*)(c,union A608,p))addr)(K_c[0],*(union A608*)K_a[1],K_p[2]), union A607);}
/* 202:lL<JI[15]JdLd<lIJjCcljCjBL>sSlCL>)J */ void f202(void* addr) { write_V_J(3, (( J(*)(l,L,union A610))addr)(K_l[0],K_L[1],*(union A610*)K_a[2]));}
/* 203:{}cs<fsiCLiCB{pCjLjls}CJ>jIC<JBccfIJBIBBj>JlBspiS<{S}>)i */ void f203(void* addr) { write_V_i(16, (( i(*)(struct A24,c,s,union A612,j,I,C,union A613,J,l,B,s,p,i,S,union A614))addr)(*(struct A24*)K_a[0],K_c[1],K_s[2],*(union A612*)K_a[3],K_j[4],K_I[5],K_C[6],*(union A613*)K_a[7],K_J[8],K_l[9],K_B[10],K_s[11],K_p[12],K_i[13],K_S[14],*(union A614*)K_a[15]));}
/* 204:<>fcSBidCipsCB)l */ void f204(void* addr) { write_V_l(13, (( l(*)(union A30,f,c,S,B,i,d,C,i,p,s,C,B))addr)(*(union A30*)K_a[0],K_f[1],K_c[2],K_S[3],K_B[4],K_i[5],K_d[6],K_C[7],K_i[8],K_p[9],K_s[10],K_C[11],K_B[12]));}
/* 205:{pCpdlscd[8]dlj}BlccLjLilsB)j */ void f205(void* addr) { write_V_j(12, (( j(*)(struct A615,B,l,c,c,L,j,L,i,l,s,B))addr)(*(struct A615*)K_a[0],K_B[1],K_l[2],K_c[3],K_c[4],K_L[5],K_j[6],K_L[7],K_i[8],K_l[9],K_s[10],K_B[11]));}
/* 206:lLBsSJSIlls{<SsJIILSsSs>J})L */ void f206(void* addr) { write_V_L(12, (( L(*)(l,L,B,s,S,J,S,I,l,l,s,struct A617))addr)(K_l[0],K_L[1],K_B[2],K_s[3],K_S[4],K_J[5],K_S[6],K_I[7],K_l[8],K_l[9],K_s[10],*(struct A617*)K_a[11]));}
/* 207:cLlc<BlfBSfJpBf<d[9]jJjLcjI>l>{JIS<iIBlJlplCpjC>LJB{{l}cBj}BBlS}B)<> */ void f207(void* addr) { write_V_a(7, (( union A30(*)(c,L,l,c,union A619,struct A623,B))addr)(K_c[0],K_L[1],K_l[2],K_c[3],*(union A619*)K_a[4],*(struct A623*)K_a[5],K_B[6]), union A30);}
/* 208:C<fJlslfCJl<J{sfdJCcB}lLJlBjJBBl>Cl>df{IdjpfIlcpC<djLj>c}{ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS}Js)i */ void f208(void* addr) { write_V_i(8, (( i(*)(C,union A626,d,f,struct A628,struct A631,J,s))addr)(K_C[0],*(union A626*)K_a[1],K_d[2],K_f[3],*(struct A628*)K_a[4],*(struct A631*)K_a[5],K_J[6],K_s[7]));}
/* 209:l<B{JclL}LdpSI{<SJs>Blllip{Bf}}ip>)v */ void f209(void* addr) { write_V_v(2, (( v(*)(l,union A636))addr)(K_l[0],*(union A636*)K_a[1]));}
/* 210:cipBJi<LfsJsJdcL>iJScJI)s */ void f210(void* addr) { write_V_s(13, (( s(*)(c,i,p,B,J,i,union A637,i,J,S,c,J,I))addr)(K_c[0],K_i[1],K_p[2],K_B[3],K_J[4],K_i[5],*(union A637*)K_a[6],K_i[7],K_J[8],K_S[9],K_c[10],K_J[11],K_I[12]));}
/* 211:jBlf<lifc>jl)J */ void f211(void* addr) { write_V_J(7, (( J(*)(j,B,l,f,union A638,j,l))addr)(K_j[0],K_B[1],K_l[2],K_f[3],*(union A638*)K_a[4],K_j[5],K_l[6]));}
/* 212:di{C}c{Ldd}fsi{JJJS<fffplCplC>iSfjipC}Jd){I} */ void f212(void* addr) { write_V_a(11, (( struct A411(*)(d,i,struct A313,c,struct A639,f,s,i,struct A641,J,d))addr)(K_d[0],K_i[1],*(struct A313*)K_a[2],K_c[3],*(struct A639*)K_a[4],K_f[5],K_s[6],K_i[7],*(struct A641*)K_a[8],K_J[9],K_d[10]), struct A411);}
/* 213:fJJSdsLBS<SJdiL>d)i */ void f213(void* addr) { write_V_i(11, (( i(*)(f,J,J,S,d,s,L,B,S,union A642,d))addr)(K_f[0],K_J[1],K_J[2],K_S[3],K_d[4],K_s[5],K_L[6],K_B[7],K_S[8],*(union A642*)K_a[9],K_d[10]));}
/* 214:SdpBS<Bi<d<dp>L<BfdCsCclcjjC>i>ccfjJJlCd>Il)j */ void f214(void* addr) { write_V_j(8, (( j(*)(S,d,p,B,S,union A646,I,l))addr)(K_S[0],K_d[1],K_p[2],K_B[3],K_S[4],*(union A646*)K_a[5],K_I[6],K_l[7]));}
/* 215:j<iBccLlSpccCl>fJlC)S */ void f215(void* addr) { write_V_S(6, (( S(*)(j,union A647,f,J,l,C))addr)(K_j[0],*(union A647*)K_a[1],K_f[2],K_J[3],K_l[4],K_C[5]));}
/* 216:Jp<Scflpd<pCLLIclLBLij>LLsLj>p{Ci<lccIiiffcjL>ddJpJfscC}S)d */ void f216(void* addr) { write_V_d(6, (( d(*)(J,p,union A649,p,struct A651,S))addr)(K_J[0],K_p[1],*(union A649*)K_a[2],K_p[3],*(struct A651*)K_a[4],K_S[5]));}
/* 217:ljCC{djiBpiJIIpfp}sC)s */ void f217(void* addr) { write_V_s(7, (( s(*)(l,j,C,C,struct A652,s,C))addr)(K_l[0],K_j[1],K_C[2],K_C[3],*(struct A652*)K_a[4],K_s[5],K_C[6]));}
/* 218:i<sdsS>i<{ddcsBsjBBLdj}sBIJJ{dpCJliL[11]JS}j>B)p */ void f218(void* addr) { write_V_p(5, (( p(*)(i,union A653,i,union A656,B))addr)(K_i[0],*(union A653*)K_a[1],K_i[2],*(union A656*)K_a[3],K_B[4]));}
/* 219:LijJcpsJ{sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj}i)v */ void f219(void* addr) { write_V_v(10, (( v(*)(L,i,j,J,c,p,s,J,struct A659,i))addr)(K_L[0],K_i[1],K_j[2],K_J[3],K_c[4],K_p[5],K_s[6],K_J[7],*(struct A659*)K_a[8],K_i[9]));}
/* 220:s<<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff>BIdp){IspBfiLI[7]J} */ void f220(void* addr) { write_V_a(6, (( struct A660(*)(s,union A664,B,I,d,p))addr)(K_s[0],*(union A664*)K_a[1],K_B[2],K_I[3],K_d[4],K_p[5]), struct A660);}
/* 221:cjjBdlSl<piJjCfLCSI>)j */ void f221(void* addr) { write_V_j(9, (( j(*)(c,j,j,B,d,l,S,l,union A665))addr)(K_c[0],K_j[1],K_j[2],K_B[3],K_d[4],K_l[5],K_S[6],K_l[7],*(union A665*)K_a[8]));}
/* 222:Jlcjjjp){p{pISICSs[4]p[13]Icl}sCJfs} */ void f222(void* addr) { write_V_a(7, (( struct A667(*)(J,l,c,j,j,j,p))addr)(K_J[0],K_l[1],K_c[2],K_j[3],K_j[4],K_j[5],K_p[6]), struct A667);}
/* 223:{<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<>JiBdd<IjcJBpCBfCd><jdSBpSJds>iCIc>IIld{JLjjSjidifJd}LB}sS{iiIpJlCjjsBj}c)f */ void f223(void* addr) { write_V_f(5, (( f(*)(struct A675,s,S,struct A676,c))addr)(*(struct A675*)K_a[0],K_s[1],K_S[2],*(struct A676*)K_a[3],K_c[4]));}
/* 224:<LJ>d)B */ void f224(void* addr) { write_V_B(2, (( B(*)(union A677,d))addr)(*(union A677*)K_a[0],K_d[1]));}
/* 225:{SSJccdBBlSli}sc<sBIJBj<jjssfliSJLIS>fIdSB>jB)I */ void f225(void* addr) { write_V_I(6, (( I(*)(struct A678,s,c,union A680,j,B))addr)(*(struct A678*)K_a[0],K_s[1],K_c[2],*(union A680*)K_a[3],K_j[4],K_B[5]));}
/* 226:BjlSCs<ijlsB[3]{LjBlIj}LJ{}<fSC[5]LCJii[6]fl>Bj><fBffLJSdScl[5]>iI<LCSijLSfjifS>IjI)B */ void f226(void* addr) { write_V_B(14, (( B(*)(B,j,l,S,C,s,union A683,union A684,i,I,union A685,I,j,I))addr)(K_B[0],K_j[1],K_l[2],K_S[3],K_C[4],K_s[5],*(union A683*)K_a[6],*(union A684*)K_a[7],K_i[8],K_I[9],*(union A685*)K_a[10],K_I[11],K_j[12],K_I[13]));}
/* 227:IBII{JjJJl<dSJdLdlpLdj>{}L}ICLl)p */ void f227(void* addr) { write_V_p(9, (( p(*)(I,B,I,I,struct A687,I,C,L,l))addr)(K_I[0],K_B[1],K_I[2],K_I[3],*(struct A687*)K_a[4],K_I[5],K_C[6],K_L[7],K_l[8]));}
/* 228:jf<CIcSBcpLpcd{BJcsBSjSsipB}>dJspJLdl)f */ void f228(void* addr) { write_V_f(11, (( f(*)(j,f,union A689,d,J,s,p,J,L,d,l))addr)(K_j[0],K_f[1],*(union A689*)K_a[2],K_d[3],K_J[4],K_s[5],K_p[6],K_J[7],K_L[8],K_d[9],K_l[10]));}
/* 229:<IdJjjCpscIdI>sfJd{<sLc{}J<>p>JJf}B)j */ void f229(void* addr) { write_V_j(7, (( j(*)(union A690,s,f,J,d,struct A692,B))addr)(*(union A690*)K_a[0],K_s[1],K_f[2],K_J[3],K_d[4],*(struct A692*)K_a[5],K_B[6]));}
/* 230:JpcJ<p>j<s>{}fdL<Lf<Cdf<ldld[4]ICpLBBJ>f{Lll}[11]csj>Jjl>s<SBjl>)l */ void f230(void* addr) { write_V_l(14, (( l(*)(J,p,c,J,union A56,j,union A661,struct A24,f,d,L,union A696,s,union A697))addr)(K_J[0],K_p[1],K_c[2],K_J[3],*(union A56*)K_a[4],K_j[5],*(union A661*)K_a[6],*(struct A24*)K_a[7],K_f[8],K_d[9],K_L[10],*(union A696*)K_a[11],K_s[12],*(union A697*)K_a[13]));}
/* 231:i{dBpcIJLsJLlc}ifJJcf{IjsIfJJfdfsS}dCBf)B */ void f231(void* addr) { write_V_B(13, (( B(*)(i,struct A698,i,f,J,J,c,f,struct A699,d,C,B,f))addr)(K_i[0],*(struct A698*)K_a[1],K_i[2],K_f[3],K_J[4],K_J[5],K_c[6],K_f[7],*(struct A699*)K_a[8],K_d[9],K_C[10],K_B[11],K_f[12]));}
/* 232:pdpiSJfl){pplCdcdILBlJ} */ void f232(void* addr) { write_V_a(8, (( struct A700(*)(p,d,p,i,S,J,f,l))addr)(K_p[0],K_d[1],K_p[2],K_i[3],K_S[4],K_J[5],K_f[6],K_l[7]), struct A700);}
/* 233:iJ<fp>CCfcBcJ)I */ void f233(void* addr) { write_V_I(10, (( I(*)(i,J,union A520,C,C,f,c,B,c,J))addr)(K_i[0],K_J[1],*(union A520*)K_a[2],K_C[3],K_C[4],K_f[5],K_c[6],K_B[7],K_c[8],K_J[9]));}
/* 234:siB<C<dJS{IdfJlcl}JSjisdJ<jpJdid>>fdf[6]<>JcSCLB>fJp{SfSjIclCfSsl}BJjf{IcjcIdCjc<C>JL})p */ void f234(void* addr) { write_V_p(13, (( p(*)(s,i,B,union A704,f,J,p,struct A705,B,J,j,f,struct A706))addr)(K_s[0],K_i[1],K_B[2],*(union A704*)K_a[3],K_f[4],K_J[5],K_p[6],*(struct A705*)K_a[7],K_B[8],K_J[9],K_j[10],K_f[11],*(struct A706*)K_a[12]));}
/* 235:B<IfJB>SidcLS<jpJIJjsfifIs>{sJILd<jSBIdpsjlBJL>{}[3]<sILLBfCcLslJ>SfB{}})I */ void f235(void* addr) { write_V_I(10, (( I(*)(B,union A707,S,i,d,c,L,S,union A708,struct A711))addr)(K_B[0],*(union A707*)K_a[1],K_S[2],K_i[3],K_d[4],K_c[5],K_L[6],K_S[7],*(union A708*)K_a[8],*(struct A711*)K_a[9]));}
/* 236:j){SdIIppS} */ void f236(void* addr) { write_V_a(1, (( struct A712(*)(j))addr)(K_j[0]), struct A712);}
/* 237:JIB<L>L{fpcsiIIiIfC{JSlBddCCj{LfISIfjfBicC}S{pLcs}}}L{fpssLf[6]Ii}lBif)s */ void f237(void* addr) { write_V_s(12, (( s(*)(J,I,B,union A160,L,struct A716,L,struct A717,l,B,i,f))addr)(K_J[0],K_I[1],K_B[2],*(union A160*)K_a[3],K_L[4],*(struct A716*)K_a[5],K_L[6],*(struct A717*)K_a[7],K_l[8],K_B[9],K_i[10],K_f[11]));}
/* 238:iJBCC{B[8]<l>B{JB[13]}fIsBj})B */ void f238(void* addr) { write_V_B(6, (( B(*)(i,J,B,C,C,struct A719))addr)(K_i[0],K_J[1],K_B[2],K_C[3],K_C[4],*(struct A719*)K_a[5]));}
/* 239:c{dJClCLL[7]dScs{Bffpi[9]J}}sSfijpJ{SSjcsS[8]L<CCis>L}Clfj)i */ void f239(void* addr) { write_V_i(14, (( i(*)(c,struct A721,s,S,f,i,j,p,J,struct A723,C,l,f,j))addr)(K_c[0],*(struct A721*)K_a[1],K_s[2],K_S[3],K_f[4],K_i[5],K_j[6],K_p[7],K_J[8],*(struct A723*)K_a[9],K_C[10],K_l[11],K_f[12],K_j[13]));}
/* 240:{IIjCCjSLfCdp}LsCBlI)l */ void f240(void* addr) { write_V_l(7, (( l(*)(struct A724,L,s,C,B,l,I))addr)(*(struct A724*)K_a[0],K_L[1],K_s[2],K_C[3],K_B[4],K_l[5],K_I[6]));}
/* 241:fS){dCs<cBi[4]cdlSJdSSp>[8]{idiL[2]lcJcfSId}SsjCLjj} */ void f241(void* addr) { write_V_a(2, (( struct A727(*)(f,S))addr)(K_f[0],K_S[1]), struct A727);}
/* 242:BJipBiJ{SlsiLcJJjSf}{j{LiLJciScl}c<CpiC>}dBJ)d */ void f242(void* addr) { write_V_d(12, (( d(*)(B,J,i,p,B,i,J,struct A728,struct A731,d,B,J))addr)(K_B[0],K_J[1],K_i[2],K_p[3],K_B[4],K_i[5],K_J[6],*(struct A728*)K_a[7],*(struct A731*)K_a[8],K_d[9],K_B[10],K_J[11]));}
/* 243:{jjSlBSjBlff<d[1]fJj>}d<diJjCidlslIs>{SBddiCsJpCl<slSSCc{BdIIcdjsdBBd}iJ[4]fIp>}SJfIB)B */ void f243(void* addr) { write_V_B(9, (( B(*)(struct A733,d,union A734,struct A737,S,J,f,I,B))addr)(*(struct A733*)K_a[0],K_d[1],*(union A734*)K_a[2],*(struct A737*)K_a[3],K_S[4],K_J[5],K_f[6],K_I[7],K_B[8]));}
/* 244:l<>c)I */ void f244(void* addr) { write_V_I(3, (( I(*)(l,union A30,c))addr)(K_l[0],*(union A30*)K_a[1],K_c[2]));}
/* 245:JCLd<cs>jfi{{p}sB}CIlp)f */ void f245(void* addr) { write_V_f(13, (( f(*)(J,C,L,d,union A738,j,f,i,struct A739,C,I,l,p))addr)(K_J[0],K_C[1],K_L[2],K_d[3],*(union A738*)K_a[4],K_j[5],K_f[6],K_i[7],*(struct A739*)K_a[8],K_C[9],K_I[10],K_l[11],K_p[12]));}
/* 246:pLlCc{s}BiSCC{fIBCciciIs}L)i */ void f246(void* addr) { write_V_i(13, (( i(*)(p,L,l,C,c,struct A740,B,i,S,C,C,struct A741,L))addr)(K_p[0],K_L[1],K_l[2],K_C[3],K_c[4],*(struct A740*)K_a[5],K_B[6],K_i[7],K_S[8],K_C[9],K_C[10],*(struct A741*)K_a[11],K_L[12]));}
/* 247:J<d[15]CjII<Cdc>i[13]CjfsL>CCdsLpdiC<CB[9]pJlSIc>j)c */ void f247(void* addr) { write_V_c(13, (( c(*)(J,union A743,C,C,d,s,L,p,d,i,C,union A744,j))addr)(K_J[0],*(union A743*)K_a[1],K_C[2],K_C[3],K_d[4],K_s[5],K_L[6],K_p[7],K_d[8],K_i[9],K_C[10],*(union A744*)K_a[11],K_j[12]));}
/* 248:I<BBsLilBcppSI>LSIfJCfSiSjc)d */ void f248(void* addr) { write_V_d(14, (( d(*)(I,union A745,L,S,I,f,J,C,f,S,i,S,j,c))addr)(K_I[0],*(union A745*)K_a[1],K_L[2],K_S[3],K_I[4],K_f[5],K_J[6],K_C[7],K_f[8],K_S[9],K_i[10],K_S[11],K_j[12],K_c[13]));}
/* 249:<iCSd<BBSSSpSfsp[6]ii><sClcd<BcJjlfljJiCl>iclc{dfpSjS}J>j[11]c>ppBClSil)d */ void f249(void* addr) { write_V_d(9, (( d(*)(union A750,p,p,B,C,l,S,i,l))addr)(*(union A750*)K_a[0],K_p[1],K_p[2],K_B[3],K_C[4],K_l[5],K_S[6],K_i[7],K_l[8]));}
/* 250:IdjcBfCplL<dfpjpc<c<CSJpsf[3]SIdC[5]jc>pJls<LpipS>S{i}dB<CcBd>>Sf<<L>>C>)v */ void f250(void* addr) { write_V_v(11, (( v(*)(I,d,j,c,B,f,C,p,l,L,union A756))addr)(K_I[0],K_d[1],K_j[2],K_c[3],K_B[4],K_f[5],K_C[6],K_p[7],K_l[8],K_L[9],*(union A756*)K_a[10]));}
/* 251:Js{dSJ<lBCcIS[8]<LppdILdJdifS>>}fSiCI)<jIpfCCcfdBLp> */ void f251(void* addr) { write_V_a(8, (( union A757(*)(J,s,struct A760,f,S,i,C,I))addr)(K_J[0],K_s[1],*(struct A760*)K_a[2],K_f[3],K_S[4],K_i[5],K_C[6],K_I[7]), union A757);}
/* 252:cjpj<BBdI><SsLsIjJslCBC>JdCCsp)j */ void f252(void* addr) { write_V_j(12, (( j(*)(c,j,p,j,union A761,union A762,J,d,C,C,s,p))addr)(K_c[0],K_j[1],K_p[2],K_j[3],*(union A761*)K_a[4],*(union A762*)K_a[5],K_J[6],K_d[7],K_C[8],K_C[9],K_s[10],K_p[11]));}
/* 253:LCjlfLJsc<p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl>LLpC)d */ void f253(void* addr) { write_V_d(14, (( d(*)(L,C,j,l,f,L,J,s,c,union A766,L,L,p,C))addr)(K_L[0],K_C[1],K_j[2],K_l[3],K_f[4],K_L[5],K_J[6],K_s[7],K_c[8],*(union A766*)K_a[9],K_L[10],K_L[11],K_p[12],K_C[13]));}
/* 254:pIL{jlfcJpi}fpjcfIpB)c */ void f254(void* addr) { write_V_c(12, (( c(*)(p,I,L,struct A767,f,p,j,c,f,I,p,B))addr)(K_p[0],K_I[1],K_L[2],*(struct A767*)K_a[3],K_f[4],K_p[5],K_j[6],K_c[7],K_f[8],K_I[9],K_p[10],K_B[11]));}
/* 255:Bjj{JfflBIdjcjjc}SLlIj)d */ void f255(void* addr) { write_V_d(9, (( d(*)(B,j,j,struct A768,S,L,l,I,j))addr)(K_B[0],K_j[1],K_j[2],*(struct A768*)K_a[3],K_S[4],K_L[5],K_l[6],K_I[7],K_j[8]));}
/* 256:dBfislcdl{{BpdJppipssfC}C{}BBcdJijd{}}I{<iflJICpcSCfj>jCs}iLBS)l */ void f256(void* addr) { write_V_l(16, (( l(*)(d,B,f,i,s,l,c,d,l,struct A770,I,struct A772,i,L,B,S))addr)(K_d[0],K_B[1],K_f[2],K_i[3],K_s[4],K_l[5],K_c[6],K_d[7],K_l[8],*(struct A770*)K_a[9],K_I[10],*(struct A772*)K_a[11],K_i[12],K_L[13],K_B[14],K_S[15]));}
/* 257:j{jdIB})C */ void f257(void* addr) { write_V_C(2, (( C(*)(j,struct A773))addr)(K_j[0],*(struct A773*)K_a[1]));}
/* 258:){jjJCpJJJ} */ void f258(void* addr) { write_V_a(0, (( struct A774(*)())addr)(), struct A774);}
/* 259:JjJfpSi<Ld{SC[11]s[7]IpssJ}sBsjSf[14]fCB>ISI)i */ void f259(void* addr) { write_V_i(11, (( i(*)(J,j,J,f,p,S,i,union A776,I,S,I))addr)(K_J[0],K_j[1],K_J[2],K_f[3],K_p[4],K_S[5],K_i[6],*(union A776*)K_a[7],K_I[8],K_S[9],K_I[10]));}
/* 260:Ldij<pLscS<SJf<JLilSC>cBsfJi>lpplSc>LISdIB)J */ void f260(void* addr) { write_V_J(11, (( J(*)(L,d,i,j,union A779,L,I,S,d,I,B))addr)(K_L[0],K_d[1],K_i[2],K_j[3],*(union A779*)K_a[4],K_L[5],K_I[6],K_S[7],K_d[8],K_I[9],K_B[10]));}
/* 261:B<pjC>SIS)S */ void f261(void* addr) { write_V_S(5, (( S(*)(B,union A780,S,I,S))addr)(K_B[0],*(union A780*)K_a[1],K_S[2],K_I[3],K_S[4]));}
/* 262:dBpllIsL{j{pJfJd}cL<>lJJ})C */ void f262(void* addr) { write_V_C(9, (( C(*)(d,B,p,l,l,I,s,L,struct A782))addr)(K_d[0],K_B[1],K_p[2],K_l[3],K_l[4],K_I[5],K_s[6],K_L[7],*(struct A782*)K_a[8]));}
/* 263:{CiCBfJLSJjLc}cJjCd)c */ void f263(void* addr) { write_V_c(6, (( c(*)(struct A783,c,J,j,C,d))addr)(*(struct A783*)K_a[0],K_c[1],K_J[2],K_j[3],K_C[4],K_d[5]));}
/* 264:IpCScBCfcI)<<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf> */ void f264(void* addr) { write_V_a(10, (( union A790(*)(I,p,C,S,c,B,C,f,c,I))addr)(K_I[0],K_p[1],K_C[2],K_S[3],K_c[4],K_B[5],K_C[6],K_f[7],K_c[8],K_I[9]), union A790);}
/* 265:jSiL<IlJfjl[3]l[12]Lcj[4]dj><BCjJpCfIsI{IJjCfiLiSJpd}J>sp{}LfCB)p */ void f265(void* addr) { write_V_p(13, (( p(*)(j,S,i,L,union A791,union A793,s,p,struct A24,L,f,C,B))addr)(K_j[0],K_S[1],K_i[2],K_L[3],*(union A791*)K_a[4],*(union A793*)K_a[5],K_s[6],K_p[7],*(struct A24*)K_a[8],K_L[9],K_f[10],K_C[11],K_B[12]));}
/* 266:iII{jdidf{d[8]cs<cdIsiLcjfd>}SJJB[9]id}f<SCpjidISjlfB>djsL)J */ void f266(void* addr) { write_V_J(10, (( J(*)(i,I,I,struct A796,f,union A797,d,j,s,L))addr)(K_i[0],K_I[1],K_I[2],*(struct A796*)K_a[3],K_f[4],*(union A797*)K_a[5],K_d[6],K_j[7],K_s[8],K_L[9]));}
/* 267:SBISi<JCllicLCCIJj>cp<<SjiCCj>Jil{LIBsBifSJSIL}iCi{dfjjBp}>IJ){L[12]IJBsfCljCBL} */ void f267(void* addr) { write_V_a(11, (( struct A798(*)(S,B,I,S,i,union A799,c,p,union A803,I,J))addr)(K_S[0],K_B[1],K_I[2],K_S[3],K_i[4],*(union A799*)K_a[5],K_c[6],K_p[7],*(union A803*)K_a[8],K_I[9],K_J[10]), struct A798);}
/* 268:ldC<IdsIICSBlijj>CCLjI{cfS[4]}lIp)<cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd> */ void f268(void* addr) { write_V_a(13, (( union A809(*)(l,d,C,union A810,C,C,L,j,I,struct A811,l,I,p))addr)(K_l[0],K_d[1],K_C[2],*(union A810*)K_a[3],K_C[4],K_C[5],K_L[6],K_j[7],K_I[8],*(struct A811*)K_a[9],K_l[10],K_I[11],K_p[12]), union A809);}
/* 269:SjI<<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC>cliiS)<C[15]BBi[5]IISIII<fcjdI>J> */ void f269(void* addr) { write_V_a(9, (( union A813(*)(S,j,I,union A817,c,l,i,i,S))addr)(K_S[0],K_j[1],K_I[2],*(union A817*)K_a[3],K_c[4],K_l[5],K_i[6],K_i[7],K_S[8]), union A813);}
/* 270:{iisBScjSscJ[4]l}fcpCc)<{lfJLcSSc}> */ void f270(void* addr) { write_V_a(6, (( union A819(*)(struct A820,f,c,p,C,c))addr)(*(struct A820*)K_a[0],K_f[1],K_c[2],K_p[3],K_C[4],K_c[5]), union A819);}
/* 271:p<cCic<pIjsfCjldsBf>s[7]j>JCpBpifcs)S */ void f271(void* addr) { write_V_S(11, (( S(*)(p,union A822,J,C,p,B,p,i,f,c,s))addr)(K_p[0],*(union A822*)K_a[1],K_J[2],K_C[3],K_p[4],K_B[5],K_p[6],K_i[7],K_f[8],K_c[9],K_s[10]));}
/* 272:Sf<iB>p<sLlIC>dfpCjdjj)s */ void f272(void* addr) { write_V_s(13, (( s(*)(S,f,union A823,p,union A824,d,f,p,C,j,d,j,j))addr)(K_S[0],K_f[1],*(union A823*)K_a[2],K_p[3],*(union A824*)K_a[4],K_d[5],K_f[6],K_p[7],K_C[8],K_j[9],K_d[10],K_j[11],K_j[12]));}
/* 273:{jcfIsICs}CCLJccJ)v */ void f273(void* addr) { write_V_v(8, (( v(*)(struct A825,C,C,L,J,c,c,J))addr)(*(struct A825*)K_a[0],K_C[1],K_C[2],K_L[3],K_J[4],K_c[5],K_c[6],K_J[7]));}
/* 274:pBSld{s}ffIi)p */ void f274(void* addr) { write_V_p(10, (( p(*)(p,B,S,l,d,struct A740,f,f,I,i))addr)(K_p[0],K_B[1],K_S[2],K_l[3],K_d[4],*(struct A740*)K_a[5],K_f[6],K_f[7],K_I[8],K_i[9]));}
/* 275:piIjiccf)<jlps<lLlfsdfdCLid>BJLjCLJ> */ void f275(void* addr) { write_V_a(8, (( union A827(*)(p,i,I,j,i,c,c,f))addr)(K_p[0],K_i[1],K_I[2],K_j[3],K_i[4],K_c[5],K_c[6],K_f[7]), union A827);}
/* 276:jjJjC{BS[9]CjcILiJ<CdBLfpIfCL>B{dfd}}Js{siilCififLs}B)S */ void f276(void* addr) { write_V_S(10, (( S(*)(j,j,J,j,C,struct A830,J,s,struct A831,B))addr)(K_j[0],K_j[1],K_J[2],K_j[3],K_C[4],*(struct A830*)K_a[5],K_J[6],K_s[7],*(struct A831*)K_a[8],K_B[9]));}
/* 277:IBis{ic}Li<jId{LjJ}ffiS{BdJcBi}B{sp}I>Ssc)i */ void f277(void* addr) { write_V_i(11, (( i(*)(I,B,i,s,struct A832,L,i,union A836,S,s,c))addr)(K_I[0],K_B[1],K_i[2],K_s[3],*(struct A832*)K_a[4],K_L[5],K_i[6],*(union A836*)K_a[7],K_S[8],K_s[9],K_c[10]));}
/* 278:c<BJIdccIIsISf>fLjfcsdJ)I */ void f278(void* addr) { write_V_I(10, (( I(*)(c,union A837,f,L,j,f,c,s,d,J))addr)(K_c[0],*(union A837*)K_a[1],K_f[2],K_L[3],K_j[4],K_f[5],K_c[6],K_s[7],K_d[8],K_J[9]));}
/* 279:<j[7]sl{}cCB<icisfJffIfCf>IcsI>s<Cs{{}{LpLCilJCSfJp}iiSfcdccI{sILC}}Bss>LJLIl{<lJfSppIcSIjl>{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls{d[13]SsIsJJc}C})J */ void f279(void* addr) { write_V_J(9, (( J(*)(union A839,s,union A843,L,J,L,I,l,struct A850))addr)(*(union A839*)K_a[0],K_s[1],*(union A843*)K_a[2],K_L[3],K_J[4],K_L[5],K_I[6],K_l[7],*(struct A850*)K_a[8]));}
/* 280:fCddC<fdCpdJIlj>JfICfIS)i */ void f280(void* addr) { write_V_i(13, (( i(*)(f,C,d,d,C,union A851,J,f,I,C,f,I,S))addr)(K_f[0],K_C[1],K_d[2],K_d[3],K_C[4],*(union A851*)K_a[5],K_J[6],K_f[7],K_I[8],K_C[9],K_f[10],K_I[11],K_S[12]));}
/* 281:{pSLpi[13]}pS{BCjC{{CjplpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}JjS}fjILiJJ}cifJBfjJs)<i{SCLSsd}jclSssfClS[9]> */ void f281(void* addr) { write_V_a(13, (( union A853(*)(struct A854,p,S,struct A859,c,i,f,J,B,f,j,J,s))addr)(*(struct A854*)K_a[0],K_p[1],K_S[2],*(struct A859*)K_a[3],K_c[4],K_i[5],K_f[6],K_J[7],K_B[8],K_f[9],K_j[10],K_J[11],K_s[12]), union A853);}
/* 282:C<{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji>)J */ void f282(void* addr) { write_V_J(2, (( J(*)(C,union A863))addr)(K_C[0],*(union A863*)K_a[1]));}
/* 283:jf{CdsIJiLIcfCp}fIBLJ{lS{pCds{lfC}dclfl[6]ds}J}pBi)p */ void f283(void* addr) { write_V_p(12, (( p(*)(j,f,struct A864,f,I,B,L,J,struct A867,p,B,i))addr)(K_j[0],K_f[1],*(struct A864*)K_a[2],K_f[3],K_I[4],K_B[5],K_L[6],K_J[7],*(struct A867*)K_a[8],K_p[9],K_B[10],K_i[11]));}
/* 284:Bis{p}ji)S */ void f284(void* addr) { write_V_S(6, (( S(*)(B,i,s,struct A230,j,i))addr)(K_B[0],K_i[1],K_s[2],*(struct A230*)K_a[3],K_j[4],K_i[5]));}
/* 285:pi{J<plClJLjf>ls}fcf{j<IJdsiiBpScIC>BllddBfBJs})L */ void f285(void* addr) { write_V_L(7, (( L(*)(p,i,struct A869,f,c,f,struct A871))addr)(K_p[0],K_i[1],*(struct A869*)K_a[2],K_f[3],K_c[4],K_f[5],*(struct A871*)K_a[6]));}
/* 286:B{cJ<scjcppLjISfj>}d)C */ void f286(void* addr) { write_V_C(3, (( C(*)(B,struct A873,d))addr)(K_B[0],*(struct A873*)K_a[1],K_d[2]));}
/* 287:sldiSdpp<ijdiSCJBIiLS>B)J */ void f287(void* addr) { write_V_J(10, (( J(*)(s,l,d,i,S,d,p,p,union A874,B))addr)(K_s[0],K_l[1],K_d[2],K_i[3],K_S[4],K_d[5],K_p[6],K_p[7],*(union A874*)K_a[8],K_B[9]));}
/* 288:LJL<flpSdJiJcsdd>cfi)j */ void f288(void* addr) { write_V_j(7, (( j(*)(L,J,L,union A875,c,f,i))addr)(K_L[0],K_J[1],K_L[2],*(union A875*)K_a[3],K_c[4],K_f[5],K_i[6]));}
/* 289:iCSdCpIjf<dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj>Cji)d */ void f289(void* addr) { write_V_d(13, (( d(*)(i,C,S,d,C,p,I,j,f,union A880,C,j,i))addr)(K_i[0],K_C[1],K_S[2],K_d[3],K_C[4],K_p[5],K_I[6],K_j[7],K_f[8],*(union A880*)K_a[9],K_C[10],K_j[11],K_i[12]));}
/* 290:scfcJISjll<L>pL)<BC> */ void f290(void* addr) { write_V_a(13, (( union A881(*)(s,c,f,c,J,I,S,j,l,l,union A160,p,L))addr)(K_s[0],K_c[1],K_f[2],K_c[3],K_J[4],K_I[5],K_S[6],K_j[7],K_l[8],K_l[9],*(union A160*)K_a[10],K_p[11],K_L[12]), union A881);}
/* 291:sJfdpBS<Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc>BiBjC)v */ void f291(void* addr) { write_V_v(13, (( v(*)(s,J,f,d,p,B,S,union A884,B,i,B,j,C))addr)(K_s[0],K_J[1],K_f[2],K_d[3],K_p[4],K_B[5],K_S[6],*(union A884*)K_a[7],K_B[8],K_i[9],K_B[10],K_j[11],K_C[12]));}
/* 292:<>jcs)p */ void f292(void* addr) { write_V_p(4, (( p(*)(union A30,j,c,s))addr)(*(union A30*)K_a[0],K_j[1],K_c[2],K_s[3]));}
/* 293:LI{dpfLc}S{dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S}LL)B */ void f293(void* addr) { write_V_B(7, (( B(*)(L,I,struct A885,S,struct A888,L,L))addr)(K_L[0],K_I[1],*(struct A885*)K_a[2],K_S[3],*(struct A888*)K_a[4],K_L[5],K_L[6]));}
/* 294:c{cjB[9]lLjdIJ[14]pCf}lfpl<dsjdCI[2]{fpLLSdCIdjsJ}IBid{ICIdcLsl}>i)f */ void f294(void* addr) { write_V_f(8, (( f(*)(c,struct A889,l,f,p,l,union A892,i))addr)(K_c[0],*(struct A889*)K_a[1],K_l[2],K_f[3],K_p[4],K_l[5],*(union A892*)K_a[6],K_i[7]));}
/* 295:<jl>ls{Sl[2]SCijBIpJfC}<Sdd{LcIB}lICLdsj>I)f */ void f295(void* addr) { write_V_f(6, (( f(*)(union A893,l,s,struct A894,union A896,I))addr)(*(union A893*)K_a[0],K_l[1],K_s[2],*(struct A894*)K_a[3],*(union A896*)K_a[4],K_I[5]));}
/* 296:Bl{IISI<C[5]LJISS>CC})j */ void f296(void* addr) { write_V_j(3, (( j(*)(B,l,struct A898))addr)(K_B[0],K_l[1],*(struct A898*)K_a[2]));}
/* 297:dds<I{}<llISsLssfc[13]dp>ISfldSI>ps)B */ void f297(void* addr) { write_V_B(6, (( B(*)(d,d,s,union A900,p,s))addr)(K_d[0],K_d[1],K_s[2],*(union A900*)K_a[3],K_p[4],K_s[5]));}
/* 298:I)<CfjBSJdBpJJC[4]> */ void f298(void* addr) { write_V_a(1, (( union A901(*)(I))addr)(K_I[0]), union A901);}
/* 299:IB<iLdjj>IiilssCd)j */ void f299(void* addr) { write_V_j(11, (( j(*)(I,B,union A902,I,i,i,l,s,s,C,d))addr)(K_I[0],K_B[1],*(union A902*)K_a[2],K_I[3],K_i[4],K_i[5],K_l[6],K_s[7],K_s[8],K_C[9],K_d[10]));}
/* 300:jB<fCpjCJJdclSd>Jd<icB{SCpsi}<Jil>lsdIBiI>)l */ void f300(void* addr) { write_V_l(6, (( l(*)(j,B,union A903,J,d,union A906))addr)(K_j[0],K_B[1],*(union A903*)K_a[2],K_J[3],K_d[4],*(union A906*)K_a[5]));}
/* 301:JBCIIlflclcC){isipjdlsSjlS} */ void f301(void* addr) { write_V_a(12, (( struct A907(*)(J,B,C,I,I,l,f,l,c,l,c,C))addr)(K_J[0],K_B[1],K_C[2],K_I[3],K_I[4],K_l[5],K_f[6],K_l[7],K_c[8],K_l[9],K_c[10],K_C[11]), struct A907);}
/* 302:Jj{sjdci}SiJcddI)J */ void f302(void* addr) { write_V_J(10, (( J(*)(J,j,struct A908,S,i,J,c,d,d,I))addr)(K_J[0],K_j[1],*(struct A908*)K_a[2],K_S[3],K_i[4],K_J[5],K_c[6],K_d[7],K_d[8],K_I[9]));}
/* 303:<f{BpfscIcLdCLd}c>JCcJ{pfiiCdBj<pBpCspifsjlf>jfJ}icfLC)j */ void f303(void* addr) { write_V_j(11, (( j(*)(union A910,J,C,c,J,struct A912,i,c,f,L,C))addr)(*(union A910*)K_a[0],K_J[1],K_C[2],K_c[3],K_J[4],*(struct A912*)K_a[5],K_i[6],K_c[7],K_f[8],K_L[9],K_C[10]));}
/* 304:jSSl{llfffsddlcjf}){CcLCfpCj} */ void f304(void* addr) { write_V_a(5, (( struct A913(*)(j,S,S,l,struct A914))addr)(K_j[0],K_S[1],K_S[2],K_l[3],*(struct A914*)K_a[4]), struct A913);}
/* 305:Ip{SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps}pB)c */ void f305(void* addr) { write_V_c(5, (( c(*)(I,p,struct A919,p,B))addr)(K_I[0],K_p[1],*(struct A919*)K_a[2],K_p[3],K_B[4]));}
/* 306:<pIjp>f{})i */ void f306(void* addr) { write_V_i(3, (( i(*)(union A920,f,struct A24))addr)(*(union A920*)K_a[0],K_f[1],*(struct A24*)K_a[2]));}
/* 307:LpcJ<iiC<cfSBc[8]>JLf<f>{<>BJ{sSisSCSifCcI}{SpfdfLI[8]SpLij}{CJli[7]pcS}cIBLCL}jdd>cjCcjs)<BJIJIcJ> */ void f307(void* addr) { write_V_a(11, (( union A921(*)(L,p,c,J,union A927,c,j,C,c,j,s))addr)(K_L[0],K_p[1],K_c[2],K_J[3],*(union A927*)K_a[4],K_c[5],K_j[6],K_C[7],K_c[8],K_j[9],K_s[10]), union A921);}
/* 308:cJ<lBSJpiSILpBp>ljlisfcCd){LpSdI<CcSiffijcIiI>} */ void f308(void* addr) { write_V_a(12, (( struct A929(*)(c,J,union A930,l,j,l,i,s,f,c,C,d))addr)(K_c[0],K_J[1],*(union A930*)K_a[2],K_l[3],K_j[4],K_l[5],K_i[6],K_s[7],K_f[8],K_c[9],K_C[10],K_d[11]), struct A929);}
/* 309:i<BcCjiisdCdif>pBBjL{cpp{CiclSBBC<CCsCjsCfLJBj>dcd}jssJSpsd}i{dCCLJs{Jidd}CfplS}pcdCd)v */ void f309(void* addr) { write_V_v(15, (( v(*)(i,union A931,p,B,B,j,L,struct A934,i,struct A936,p,c,d,C,d))addr)(K_i[0],*(union A931*)K_a[1],K_p[2],K_B[3],K_B[4],K_j[5],K_L[6],*(struct A934*)K_a[7],K_i[8],*(struct A936*)K_a[9],K_p[10],K_c[11],K_d[12],K_C[13],K_d[14]));}
/* 310:iIfiBjfp{Jids[12]BJLfscdC}Jf)v */ void f310(void* addr) { write_V_v(11, (( v(*)(i,I,f,i,B,j,f,p,struct A937,J,f))addr)(K_i[0],K_I[1],K_f[2],K_i[3],K_B[4],K_j[5],K_f[6],K_p[7],*(struct A937*)K_a[8],K_J[9],K_f[10]));}
/* 311:dfcLSIdBjl<pBisLdlidddd>JI)d */ void f311(void* addr) { write_V_d(13, (( d(*)(d,f,c,L,S,I,d,B,j,l,union A938,J,I))addr)(K_d[0],K_f[1],K_c[2],K_L[3],K_S[4],K_I[5],K_d[6],K_B[7],K_j[8],K_l[9],*(union A938*)K_a[10],K_J[11],K_I[12]));}
/* 312:{{ffIcdllIfiBj}jJjJSs}pCSdlJfd)I */ void f312(void* addr) { write_V_I(9, (( I(*)(struct A940,p,C,S,d,l,J,f,d))addr)(*(struct A940*)K_a[0],K_p[1],K_C[2],K_S[3],K_d[4],K_l[5],K_J[6],K_f[7],K_d[8]));}
/* 313:j{L<ddBCBJBf{LJJdLBcjJ}SS>IjfJCBlSB{jl{j}sISjSSpBB}}JSs<jSfBBcJ{Jpi}ipJ<sJCScsLsLSLL>>)c */ void f313(void* addr) { write_V_c(6, (( c(*)(j,struct A944,J,S,s,union A947))addr)(K_j[0],*(struct A944*)K_a[1],K_J[2],K_S[3],K_s[4],*(union A947*)K_a[5]));}
/* 314:{Lf}ii)c */ void f314(void* addr) { write_V_c(3, (( c(*)(struct A948,i,i))addr)(*(struct A948*)K_a[0],K_i[1],K_i[2]));}
/* 315:cCL{lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j}fBSJCp<CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI>d)j */ void f315(void* addr) { write_V_j(12, (( j(*)(c,C,L,struct A952,f,B,S,J,C,p,union A956,d))addr)(K_c[0],K_C[1],K_L[2],*(struct A952*)K_a[3],K_f[4],K_B[5],K_S[6],K_J[7],K_C[8],K_p[9],*(union A956*)K_a[10],K_d[11]));}
/* 316:lcSfl{jIScpBCCdIJ})i */ void f316(void* addr) { write_V_i(6, (( i(*)(l,c,S,f,l,struct A957))addr)(K_l[0],K_c[1],K_S[2],K_f[3],K_l[4],*(struct A957*)K_a[5]));}
/* 317:Sj)<CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is> */ void f317(void* addr) { write_V_a(2, (( union A962(*)(S,j))addr)(K_S[0],K_j[1]), union A962);}
/* 318:jLi){i{IislccIiIiIl}Cd<f[15]f>fIji} */ void f318(void* addr) { write_V_a(3, (( struct A965(*)(j,L,i))addr)(K_j[0],K_L[1],K_i[2]), struct A965);}
/* 319:BBsp<LlI[4]I<>>i<SdpSl>LIi)I */ void f319(void* addr) { write_V_I(10, (( I(*)(B,B,s,p,union A966,i,union A967,L,I,i))addr)(K_B[0],K_B[1],K_s[2],K_p[3],*(union A966*)K_a[4],K_i[5],*(union A967*)K_a[6],K_L[7],K_I[8],K_i[9]));}
/* 320:IJIBSBf{dSldj})l */ void f320(void* addr) { write_V_l(8, (( l(*)(I,J,I,B,S,B,f,struct A968))addr)(K_I[0],K_J[1],K_I[2],K_B[3],K_S[4],K_B[5],K_f[6],*(struct A968*)K_a[7]));}
/* 321:{jpiSBdddLBIS}IjJ<pdfcLssL{CSLcCfLCLdiI}><lIpSjjplsifI>j<SslspCBcpScS>L)S */ void f321(void* addr) { write_V_S(9, (( S(*)(struct A969,I,j,J,union A971,union A972,j,union A973,L))addr)(*(struct A969*)K_a[0],K_I[1],K_j[2],K_J[3],*(union A971*)K_a[4],*(union A972*)K_a[5],K_j[6],*(union A973*)K_a[7],K_L[8]));}
/* 322:dSSCIilBJ<Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf>)<<pIBsBBJccSJB>CISjiJ> */ void f322(void* addr) { write_V_a(10, (( union A975(*)(d,S,S,C,I,i,l,B,J,union A978))addr)(K_d[0],K_S[1],K_S[2],K_C[3],K_I[4],K_i[5],K_l[6],K_B[7],K_J[8],*(union A978*)K_a[9]), union A975);}
/* 323:I{J[9]<cCSBcdfjJ>[5]d{ddijlJd}<Ji>d[11]IJSBlL}<BciIsp>pSdJflf)s */ void f323(void* addr) { write_V_s(10, (( s(*)(I,struct A982,union A983,p,S,d,J,f,l,f))addr)(K_I[0],*(struct A982*)K_a[1],*(union A983*)K_a[2],K_p[3],K_S[4],K_d[5],K_J[6],K_f[7],K_l[8],K_f[9]));}
/* 324:cIS{sdscC[8]IIjCfp}jSd)L */ void f324(void* addr) { write_V_L(7, (( L(*)(c,I,S,struct A984,j,S,d))addr)(K_c[0],K_I[1],K_S[2],*(struct A984*)K_a[3],K_j[4],K_S[5],K_d[6]));}
/* 325:ic)<sCBBIpJJCJc> */ void f325(void* addr) { write_V_a(2, (( union A985(*)(i,c))addr)(K_i[0],K_c[1]), union A985);}
/* 326:Si){icSiBljfcps} */ void f326(void* addr) { write_V_a(2, (( struct A986(*)(S,i))addr)(K_S[0],K_i[1]), struct A986);}
/* 327:J{iBj}{pJBSiJjcIcSp}cIIpl)j */ void f327(void* addr) { write_V_j(8, (( j(*)(J,struct A987,struct A988,c,I,I,p,l))addr)(K_J[0],*(struct A987*)K_a[1],*(struct A988*)K_a[2],K_c[3],K_I[4],K_I[5],K_p[6],K_l[7]));}
/* 328:Jp{S}c<lcddCJ>ifLjildd)I */ void f328(void* addr) { write_V_I(13, (( I(*)(J,p,struct A552,c,union A989,i,f,L,j,i,l,d,d))addr)(K_J[0],K_p[1],*(struct A552*)K_a[2],K_c[3],*(union A989*)K_a[4],K_i[5],K_f[6],K_L[7],K_j[8],K_i[9],K_l[10],K_d[11],K_d[12]));}
/* 329:<JBspd{IBi}BlBpf>C{}IpC)L */ void f329(void* addr) { write_V_L(6, (( L(*)(union A991,C,struct A24,I,p,C))addr)(*(union A991*)K_a[0],K_C[1],*(struct A24*)K_a[2],K_I[3],K_p[4],K_C[5]));}
/* 330:<>iS{flJpj{fBl}f{p{j}sfCs{CLIfsBLCdspJ}<><IdcipJLcilpi[5]>sdc}}SCpf)J */ void f330(void* addr) { write_V_J(8, (( J(*)(union A30,i,S,struct A996,S,C,p,f))addr)(*(union A30*)K_a[0],K_i[1],K_S[2],*(struct A996*)K_a[3],K_S[4],K_C[5],K_p[6],K_f[7]));}
/* 331:<>pJc)v */ void f331(void* addr) { write_V_v(4, (( v(*)(union A30,p,J,c))addr)(*(union A30*)K_a[0],K_p[1],K_J[2],K_c[3]));}
/* 332:jSJic{{iCIsLIlSfiIp}SJpL<fljiScBj[16]fLdf>C{iJ<SBscfICI>Jj}l}C)C */ void f332(void* addr) { write_V_C(7, (( C(*)(j,S,J,i,c,struct A1001,C))addr)(K_j[0],K_S[1],K_J[2],K_i[3],K_c[4],*(struct A1001*)K_a[5],K_C[6]));}
/* 333:dS<B><<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B>lljfpc<LIfBLcc>)C */ void f333(void* addr) { write_V_C(11, (( C(*)(d,S,union A564,union A1005,l,l,j,f,p,c,union A1006))addr)(K_d[0],K_S[1],*(union A564*)K_a[2],*(union A1005*)K_a[3],K_l[4],K_l[5],K_j[6],K_f[7],K_p[8],K_c[9],*(union A1006*)K_a[10]));}
/* 334:jI{}ici)L */ void f334(void* addr) { write_V_L(6, (( L(*)(j,I,struct A24,i,c,i))addr)(K_j[0],K_I[1],*(struct A24*)K_a[2],K_i[3],K_c[4],K_i[5]));}
/* 335:jLScj<fISIspfJl>JJCicpl)p */ void f335(void* addr) { write_V_p(13, (( p(*)(j,L,S,c,j,union A1007,J,J,C,i,c,p,l))addr)(K_j[0],K_L[1],K_S[2],K_c[3],K_j[4],*(union A1007*)K_a[5],K_J[6],K_J[7],K_C[8],K_i[9],K_c[10],K_p[11],K_l[12]));}
/* 336:JJfCpCfBpJBS<LcJfldIidLJs>S)s */ void f336(void* addr) { write_V_s(14, (( s(*)(J,J,f,C,p,C,f,B,p,J,B,S,union A1008,S))addr)(K_J[0],K_J[1],K_f[2],K_C[3],K_p[4],K_C[5],K_f[6],K_B[7],K_p[8],K_J[9],K_B[10],K_S[11],*(union A1008*)K_a[12],K_S[13]));}
/* 337:d<s<SBiCfCcLBSpc>cSBjB><<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<>SflCd}S>Icjdlscidj)S */ void f337(void* addr) { write_V_S(13, (( S(*)(d,union A1010,union A1016,I,c,j,d,l,s,c,i,d,j))addr)(K_d[0],*(union A1010*)K_a[1],*(union A1016*)K_a[2],K_I[3],K_c[4],K_j[5],K_d[6],K_l[7],K_s[8],K_c[9],K_i[10],K_d[11],K_j[12]));}
/* 338:ilicC{liLLCpffJJpf})p */ void f338(void* addr) { write_V_p(6, (( p(*)(i,l,i,c,C,struct A1017))addr)(K_i[0],K_l[1],K_i[2],K_c[3],K_C[4],*(struct A1017*)K_a[5]));}
/* 339:jCc<>pJds)J */ void f339(void* addr) { write_V_J(8, (( J(*)(j,C,c,union A30,p,J,d,s))addr)(K_j[0],K_C[1],K_c[2],*(union A30*)K_a[3],K_p[4],K_J[5],K_d[6],K_s[7]));}
/* 340:fisc{Bdisjps}{LccifffsJBSS})B */ void f340(void* addr) { write_V_B(6, (( B(*)(f,i,s,c,struct A1018,struct A1019))addr)(K_f[0],K_i[1],K_s[2],K_c[3],*(struct A1018*)K_a[4],*(struct A1019*)K_a[5]));}
/* 341:jjB<IlJ>Lji)<LiI> */ void f341(void* addr) { write_V_a(7, (( union A1020(*)(j,j,B,union A1021,L,j,i))addr)(K_j[0],K_j[1],K_B[2],*(union A1021*)K_a[3],K_L[4],K_j[5],K_i[6]), union A1020);}
/* 342:sdfILc{SBCc}Ldl)L */ void f342(void* addr) { write_V_L(10, (( L(*)(s,d,f,I,L,c,struct A1022,L,d,l))addr)(K_s[0],K_d[1],K_f[2],K_I[3],K_L[4],K_c[5],*(struct A1022*)K_a[6],K_L[7],K_d[8],K_l[9]));}
/* 343:I{cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc}l{IfiilBJIB}cIj{cSSsjS[15]BJc}<>{cfdBdl[5]SCIBjj}<>pd)f */ void f343(void* addr) { write_V_f(13, (( f(*)(I,struct A1026,l,struct A1027,c,I,j,struct A1028,union A30,struct A1029,union A30,p,d))addr)(K_I[0],*(struct A1026*)K_a[1],K_l[2],*(struct A1027*)K_a[3],K_c[4],K_I[5],K_j[6],*(struct A1028*)K_a[7],*(union A30*)K_a[8],*(struct A1029*)K_a[9],*(union A30*)K_a[10],K_p[11],K_d[12]));}
/* 344:{cSIBpLLlCBfs})f */ void f344(void* addr) { write_V_f(1, (( f(*)(struct A1030))addr)(*(struct A1030*)K_a[0]));}
/* 345:idi{SlsdI}{SifC<IlC>J<ppfBIlI>{}sIij}dSpLiCJL)I */ void f345(void* addr) { write_V_I(13, (( I(*)(i,d,i,struct A1031,struct A1034,d,S,p,L,i,C,J,L))addr)(K_i[0],K_d[1],K_i[2],*(struct A1031*)K_a[3],*(struct A1034*)K_a[4],K_d[5],K_S[6],K_p[7],K_L[8],K_i[9],K_C[10],K_J[11],K_L[12]));}
/* 346:ISf{<lScp<fiJSj>SLSC>JfICSL}cjiCiJS)L */ void f346(void* addr) { write_V_L(11, (( L(*)(I,S,f,struct A1037,c,j,i,C,i,J,S))addr)(K_I[0],K_S[1],K_f[2],*(struct A1037*)K_a[3],K_c[4],K_j[5],K_i[6],K_C[7],K_i[8],K_J[9],K_S[10]));}
/* 347:{}L)L */ void f347(void* addr) { write_V_L(2, (( L(*)(struct A24,L))addr)(*(struct A24*)K_a[0],K_L[1]));}
/* 348:pIJLCLLB<>LBl)s */ void f348(void* addr) { write_V_s(12, (( s(*)(p,I,J,L,C,L,L,B,union A30,L,B,l))addr)(K_p[0],K_I[1],K_J[2],K_L[3],K_C[4],K_L[5],K_L[6],K_B[7],*(union A30*)K_a[8],K_L[9],K_B[10],K_l[11]));}
/* 349:Js<cJL{ICdidcl}pcLlJ{<>jcCfLc{ICpS}I<lfcIcjpBCsJ><p>B}i<<CiJ[8]B>cC[10]SispSl>>pSilIB)C */ void f349(void* addr) { write_V_C(9, (( C(*)(J,s,union A1044,p,S,i,l,I,B))addr)(K_J[0],K_s[1],*(union A1044*)K_a[2],K_p[3],K_S[4],K_i[5],K_l[6],K_I[7],K_B[8]));}
/* 350:{ds{J<fcLjSSSLiLJJ>jB}SL{Ijdclc{pdJCId[10]LdIlSj}c{}JLc}<fIicBIs<SCLCdiifLpcB>>iJcS}SSL{dL}C)c */ void f350(void* addr) { write_V_c(6, (( c(*)(struct A1051,S,S,L,struct A1052,C))addr)(*(struct A1051*)K_a[0],K_S[1],K_S[2],K_L[3],*(struct A1052*)K_a[4],K_C[5]));}
/* 351:sCpp){iSi<>f{IiIlBsiIfssl}{lcfdJLdiCcCf}BdJ{lcj}{SJIs}} */ void f351(void* addr) { write_V_a(4, (( struct A1057(*)(s,C,p,p))addr)(K_s[0],K_C[1],K_p[2],K_p[3]), struct A1057);}
/* 352:cS<SjJLLIp{<pL>JC{cLBdI}Icl{cildlLBsfl[15]Bl}dS{CfJSpfScSdIJ}}I{fSsIsCfBJ}<lIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>Is>l>dldiSJcCdps)l */ void f352(void* addr) { write_V_l(14, (( l(*)(c,S,union A1067,d,l,d,i,S,J,c,C,d,p,s))addr)(K_c[0],K_S[1],*(union A1067*)K_a[2],K_d[3],K_l[4],K_d[5],K_i[6],K_S[7],K_J[8],K_c[9],K_C[10],K_d[11],K_p[12],K_s[13]));}
/* 353:pfJf{}si{JLjJJIjJs}Ldip{Sj{}I{IcLiillIdBlL}c<jLBIIBJjCSBC>jSL{CpidBsJdSpLJ}s}ic)p */ void f353(void* addr) { write_V_p(15, (( p(*)(p,f,J,f,struct A24,s,i,struct A1068,L,d,i,p,struct A1072,i,c))addr)(K_p[0],K_f[1],K_J[2],K_f[3],*(struct A24*)K_a[4],K_s[5],K_i[6],*(struct A1068*)K_a[7],K_L[8],K_d[9],K_i[10],K_p[11],*(struct A1072*)K_a[12],K_i[13],K_c[14]));}
/* 354:fl<cilCBBISl[13]idl>I)C */ void f354(void* addr) { write_V_C(4, (( C(*)(f,l,union A1073,I))addr)(K_f[0],K_l[1],*(union A1073*)K_a[2],K_I[3]));}
/* 355:<ip>Jp)L */ void f355(void* addr) { write_V_L(3, (( L(*)(union A1074,J,p))addr)(*(union A1074*)K_a[0],K_J[1],K_p[2]));}
/* 356:<pCSB><iBid<CJd>LBLSjjC>Sp{}JjSS)v */ void f356(void* addr) { write_V_v(9, (( v(*)(union A1075,union A1077,S,p,struct A24,J,j,S,S))addr)(*(union A1075*)K_a[0],*(union A1077*)K_a[1],K_S[2],K_p[3],*(struct A24*)K_a[4],K_J[5],K_j[6],K_S[7],K_S[8]));}
/* 357:If{d}c)S */ void f357(void* addr) { write_V_S(4, (( S(*)(I,f,struct A1078,c))addr)(K_I[0],K_f[1],*(struct A1078*)K_a[2],K_c[3]));}
/* 358:dl{p})f */ void f358(void* addr) { write_V_f(3, (( f(*)(d,l,struct A230))addr)(K_d[0],K_l[1],*(struct A230*)K_a[2]));}
/* 359:sldlf<<fjBjpfCidfpB>SScflJ<Sl>i[1]{}jj>dLpcLi)B */ void f359(void* addr) { write_V_B(12, (( B(*)(s,l,d,l,f,union A1080,d,L,p,c,L,i))addr)(K_s[0],K_l[1],K_d[2],K_l[3],K_f[4],*(union A1080*)K_a[5],K_d[6],K_L[7],K_p[8],K_c[9],K_L[10],K_i[11]));}
/* 360:llCLiSpp)<LCiBlj> */ void f360(void* addr) { write_V_a(8, (( union A1081(*)(l,l,C,L,i,S,p,p))addr)(K_l[0],K_l[1],K_C[2],K_L[3],K_i[4],K_S[5],K_p[6],K_p[7]), union A1081);}
/* 361:{cpCBdcL[10]i[14]l[1]LlJ}p<ScJ>iC<<L>jIIff{LjifIf{pJ}[4]J[15]{JccSBc[12]LJSfSs}BJp}dpi>cI)j */ void f361(void* addr) { write_V_j(8, (( j(*)(struct A1082,p,union A1083,i,C,union A1087,c,I))addr)(*(struct A1082*)K_a[0],K_p[1],*(union A1083*)K_a[2],K_i[3],K_C[4],*(union A1087*)K_a[5],K_c[6],K_I[7]));}
/* 362:di<iLd<Scij>plsjJJcS>cCBpclBLc)<cJfcjjJlS> */ void f362(void* addr) { write_V_a(12, (( union A1088(*)(d,i,union A1090,c,C,B,p,c,l,B,L,c))addr)(K_d[0],K_i[1],*(union A1090*)K_a[2],K_c[3],K_C[4],K_B[5],K_p[6],K_c[7],K_l[8],K_B[9],K_L[10],K_c[11]), union A1088);}
/* 363:fJBjS<cjsdLdBIBBlL><f[6]LcJSisdLl{sji{cJBSdBfCJJ}pBsji{SCBSB}SB}<{SlscdSJJIJpl}cCcBBlJBLsJ[7]>[11]>jfS)p */ void f363(void* addr) { write_V_p(10, (( p(*)(f,J,B,j,S,union A1091,union A1097,j,f,S))addr)(K_f[0],K_J[1],K_B[2],K_j[3],K_S[4],*(union A1091*)K_a[5],*(union A1097*)K_a[6],K_j[7],K_f[8],K_S[9]));}
/* 364:<iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f>iL<lfLiJj>SflisC{SLIsJjB}s)v */ void f364(void* addr) { write_V_v(12, (( v(*)(union A1099,i,L,union A1100,S,f,l,i,s,C,struct A1101,s))addr)(*(union A1099*)K_a[0],K_i[1],K_L[2],*(union A1100*)K_a[3],K_S[4],K_f[5],K_l[6],K_i[7],K_s[8],K_C[9],*(struct A1101*)K_a[10],K_s[11]));}
/* 365:<S{CSLccc[5]JJ}>fCpB){<CBpBCpBspdSf>fSlppjc{idp}LSS} */ void f365(void* addr) { write_V_a(5, (( struct A1104(*)(union A1106,f,C,p,B))addr)(*(union A1106*)K_a[0],K_f[1],K_C[2],K_p[3],K_B[4]), struct A1104);}
/* 366:Cp{I[3]sfcs}CdCdcS<f>fSjsB)S */ void f366(void* addr) { write_V_S(15, (( S(*)(C,p,struct A1107,C,d,C,d,c,S,union A306,f,S,j,s,B))addr)(K_C[0],K_p[1],*(struct A1107*)K_a[2],K_C[3],K_d[4],K_C[5],K_d[6],K_c[7],K_S[8],*(union A306*)K_a[9],K_f[10],K_S[11],K_j[12],K_s[13],K_B[14]));}
/* 367:iil{djIcf<sCjCjiBiiC>{pICpfICliJcp}li[1]fSL}lid{}CS{dlBsSd[13]SCSiLl})d */ void f367(void* addr) { write_V_d(11, (( d(*)(i,i,l,struct A1110,l,i,d,struct A24,C,S,struct A1111))addr)(K_i[0],K_i[1],K_l[2],*(struct A1110*)K_a[3],K_l[4],K_i[5],K_d[6],*(struct A24*)K_a[7],K_C[8],K_S[9],*(struct A1111*)K_a[10]));}
/* 368:sSBi<pi<>fBJ>c)j */ void f368(void* addr) { write_V_j(6, (( j(*)(s,S,B,i,union A1112,c))addr)(K_s[0],K_S[1],K_B[2],K_i[3],*(union A1112*)K_a[4],K_c[5]));}
/* 369:JcLcI<jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>>ldpJCcd)c */ void f369(void* addr) { write_V_c(13, (( c(*)(J,c,L,c,I,union A1118,l,d,p,J,C,c,d))addr)(K_J[0],K_c[1],K_L[2],K_c[3],K_I[4],*(union A1118*)K_a[5],K_l[6],K_d[7],K_p[8],K_J[9],K_C[10],K_c[11],K_d[12]));}
/* 370:<si>{{}Sc<>SLjLsIds}pI<jf[5]cjCdBj>SCliJLc)<l> */ void f370(void* addr) { write_V_a(12, (( union A104(*)(union A1119,struct A1120,p,I,union A1121,S,C,l,i,J,L,c))addr)(*(union A1119*)K_a[0],*(struct A1120*)K_a[1],K_p[2],K_I[3],*(union A1121*)K_a[4],K_S[5],K_C[6],K_l[7],K_i[8],K_J[9],K_L[10],K_c[11]), union A104);}
/* 371:jijCjj{fIpCcfscsSiI}B{}p)J */ void f371(void* addr) { write_V_J(10, (( J(*)(j,i,j,C,j,j,struct A1122,B,struct A24,p))addr)(K_j[0],K_i[1],K_j[2],K_C[3],K_j[4],K_j[5],*(struct A1122*)K_a[6],K_B[7],*(struct A24*)K_a[8],K_p[9]));}
/* 372:fJCLBfIl{iIsL}Lsi)p */ void f372(void* addr) { write_V_p(12, (( p(*)(f,J,C,L,B,f,I,l,struct A1123,L,s,i))addr)(K_f[0],K_J[1],K_C[2],K_L[3],K_B[4],K_f[5],K_I[6],K_l[7],*(struct A1123*)K_a[8],K_L[9],K_s[10],K_i[11]));}
/* 373:){Bd<LcLJfdLliLBp>BpdjpLISp} */ void f373(void* addr) { write_V_a(0, (( struct A1125(*)())addr)(), struct A1125);}
/* 374:lC<{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}>{BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi}liBlB)c */ void f374(void* addr) { write_V_c(9, (( c(*)(l,C,union A1131,struct A1136,l,i,B,l,B))addr)(K_l[0],K_C[1],*(union A1131*)K_a[2],*(struct A1136*)K_a[3],K_l[4],K_i[5],K_B[6],K_l[7],K_B[8]));}
/* 375:CIfs<p>dsdsCCJ)B */ void f375(void* addr) { write_V_B(12, (( B(*)(C,I,f,s,union A56,d,s,d,s,C,C,J))addr)(K_C[0],K_I[1],K_f[2],K_s[3],*(union A56*)K_a[4],K_d[5],K_s[6],K_d[7],K_s[8],K_C[9],K_C[10],K_J[11]));}
/* 376:sidJLJ{jJlji}Ii)<C{}Ls> */ void f376(void* addr) { write_V_a(9, (( union A1137(*)(s,i,d,J,L,J,struct A1138,I,i))addr)(K_s[0],K_i[1],K_d[2],K_J[3],K_L[4],K_J[5],*(struct A1138*)K_a[6],K_I[7],K_i[8]), union A1137);}
/* 377:dfif{CcJSp{sflL}js{fcSIBfjJflif}sJc}<SI[4]lCCl[4]LddL[9]Cd>cpfSB)p */ void f377(void* addr) { write_V_p(11, (( p(*)(d,f,i,f,struct A1141,union A1142,c,p,f,S,B))addr)(K_d[0],K_f[1],K_i[2],K_f[3],*(struct A1141*)K_a[4],*(union A1142*)K_a[5],K_c[6],K_p[7],K_f[8],K_S[9],K_B[10]));}
/* 378:pIpif<j><SlLJc[2]BdLpp>LjIpdC{siSBiCLdcIps}i)f */ void f378(void* addr) { write_V_f(15, (( f(*)(p,I,p,i,f,union A20,union A1143,L,j,I,p,d,C,struct A1144,i))addr)(K_p[0],K_I[1],K_p[2],K_i[3],K_f[4],*(union A20*)K_a[5],*(union A1143*)K_a[6],K_L[7],K_j[8],K_I[9],K_p[10],K_d[11],K_C[12],*(struct A1144*)K_a[13],K_i[14]));}
/* 379:{dSJiJ}lC)j */ void f379(void* addr) { write_V_j(3, (( j(*)(struct A1145,l,C))addr)(*(struct A1145*)K_a[0],K_l[1],K_C[2]));}
/* 380:JflCisdlcBIps<CdL<CI[8]j{JCCSlBIBjfSI}>cdi<BjLl>idfi>)C */ void f380(void* addr) { write_V_C(14, (( C(*)(J,f,l,C,i,s,d,l,c,B,I,p,s,union A1149))addr)(K_J[0],K_f[1],K_l[2],K_C[3],K_i[4],K_s[5],K_d[6],K_l[7],K_c[8],K_B[9],K_I[10],K_p[11],K_s[12],*(union A1149*)K_a[13]));}
/* 381:ls<{IsCCJfifBiLp}CcljiciBC>d{<SLjBBLcffSIL>SBScsfdSCj<jCj>}f<sipjIL>Jj<jssjfij><ifcjL>)f */ void f381(void* addr) { write_V_f(11, (( f(*)(l,s,union A1151,d,struct A1154,f,union A1155,J,j,union A1156,union A1157))addr)(K_l[0],K_s[1],*(union A1151*)K_a[2],K_d[3],*(struct A1154*)K_a[4],K_f[5],*(union A1155*)K_a[6],K_J[7],K_j[8],*(union A1156*)K_a[9],*(union A1157*)K_a[10]));}
/* 382:{{<SsSsfCSpfcLC>li[15]cBL{fJcsBfJdfics}L{lL}Jl}fSII{BcLIljjsLIjc}cJ[5]IIs<liilCdlSSlJS>}IISdLpif)p */ void f382(void* addr) { write_V_p(9, (( p(*)(struct A1164,I,I,S,d,L,p,i,f))addr)(*(struct A1164*)K_a[0],K_I[1],K_I[2],K_S[3],K_d[4],K_L[5],K_p[6],K_i[7],K_f[8]));}
/* 383:Sf<fpBLij{fdJijijLI{}<Ic>C}sSsC[13]j>CCSdcIC)c */ void f383(void* addr) { write_V_c(10, (( c(*)(S,f,union A1167,C,C,S,d,c,I,C))addr)(K_S[0],K_f[1],*(union A1167*)K_a[2],K_C[3],K_C[4],K_S[5],K_d[6],K_c[7],K_I[8],K_C[9]));}
/* 384:{J})B */ void f384(void* addr) { write_V_B(1, (( B(*)(struct A416))addr)(*(struct A416*)K_a[0]));}
/* 385:LfCld<CS{fBdjdCBIJdLB}dJdipJSip>c)<dS> */ void f385(void* addr) { write_V_a(7, (( union A415(*)(L,f,C,l,d,union A1169,c))addr)(K_L[0],K_f[1],K_C[2],K_l[3],K_d[4],*(union A1169*)K_a[5],K_c[6]), union A415);}
/* 386:JCfCSc{fIBIfsI<>lLsJ}lJCcf)I */ void f386(void* addr) { write_V_I(12, (( I(*)(J,C,f,C,S,c,struct A1170,l,J,C,c,f))addr)(K_J[0],K_C[1],K_f[2],K_C[3],K_S[4],K_c[5],*(struct A1170*)K_a[6],K_l[7],K_J[8],K_C[9],K_c[10],K_f[11]));}
/* 387:lijjfc<BBlJI>cjJ)f */ void f387(void* addr) { write_V_f(10, (( f(*)(l,i,j,j,f,c,union A1171,c,j,J))addr)(K_l[0],K_i[1],K_j[2],K_j[3],K_f[4],K_c[5],*(union A1171*)K_a[6],K_c[7],K_j[8],K_J[9]));}
/* 388:jfdjsCl{ISCflJsf{IBdcJl<sscllcpfcJIB>sC}[3]Sf}<<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS><s>c<d<BBidSJlclJf>jfBddIpCdI>)l */ void f388(void* addr) { write_V_l(12, (( l(*)(j,f,d,j,s,C,l,struct A1174,union A1183,union A661,c,union A1185))addr)(K_j[0],K_f[1],K_d[2],K_j[3],K_s[4],K_C[5],K_l[6],*(struct A1174*)K_a[7],*(union A1183*)K_a[8],*(union A661*)K_a[9],K_c[10],*(union A1185*)K_a[11]));}
/* 389:ilSBsB{LpBJdfL}CS<sCLlJCcLBLj>pS)c */ void f389(void* addr) { write_V_c(12, (( c(*)(i,l,S,B,s,B,struct A1186,C,S,union A1187,p,S))addr)(K_i[0],K_l[1],K_S[2],K_B[3],K_s[4],K_B[5],*(struct A1186*)K_a[6],K_C[7],K_S[8],*(union A1187*)K_a[9],K_p[10],K_S[11]));}
/* 390:ll<>BCCsciillfiiS)I */ void f390(void* addr) { write_V_I(16, (( I(*)(l,l,union A30,B,C,C,s,c,i,i,l,l,f,i,i,S))addr)(K_l[0],K_l[1],*(union A30*)K_a[2],K_B[3],K_C[4],K_C[5],K_s[6],K_c[7],K_i[8],K_i[9],K_l[10],K_l[11],K_f[12],K_i[13],K_i[14],K_S[15]));}
/* 391:C<p{SJjLIlc[1]lisCf}pC<iljJijdBSsij>i{piLpilplp}di{ISlSi}d<sI>>fj<I<BLCJslC>i{LSdpBisLfjdi}dJd[9]cdilc>Ili<{s{}l{s}BSfSILLS}CliISpsl{SsSs{diIdBIfSJICj}jilpdp<dSspdplJssdp>[13]}{p}s>JpIl{sll{CLScspdjfcdd}sId}B)c */ void f391(void* addr) { write_V_c(15, (( c(*)(C,union A1193,f,j,union A1196,I,l,i,union A1201,J,p,I,l,struct A1203,B))addr)(K_C[0],*(union A1193*)K_a[1],K_f[2],K_j[3],*(union A1196*)K_a[4],K_I[5],K_l[6],K_i[7],*(union A1201*)K_a[8],K_J[9],K_p[10],K_I[11],K_l[12],*(struct A1203*)K_a[13],K_B[14]));}
/* 392:c{p{BIjBJ}Ll}SpIiSsIsJp)c */ void f392(void* addr) { write_V_c(12, (( c(*)(c,struct A1205,S,p,I,i,S,s,I,s,J,p))addr)(K_c[0],*(struct A1205*)K_a[1],K_S[2],K_p[3],K_I[4],K_i[5],K_S[6],K_s[7],K_I[8],K_s[9],K_J[10],K_p[11]));}
/* 393:I{cfBBfLiBjJjd}IcIfI)C */ void f393(void* addr) { write_V_C(7, (( C(*)(I,struct A1206,I,c,I,f,I))addr)(K_I[0],*(struct A1206*)K_a[1],K_I[2],K_c[3],K_I[4],K_f[5],K_I[6]));}
/* 394:ilBCfJc<<<jddBSjdSBJCi>SSLLcI{cCflslcdBfIB}Lssd>s<ljp>ILicBIBii>{fJIllsJflLLS}<pCdlBsBpJiiI>JI){ILLC{jCBB[14]dJCjipfs}fsf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC} */ void f394(void* addr) { write_V_a(12, (( struct A1211(*)(i,l,B,C,f,J,c,union A1216,struct A1217,union A1218,J,I))addr)(K_i[0],K_l[1],K_B[2],K_C[3],K_f[4],K_J[5],K_c[6],*(union A1216*)K_a[7],*(struct A1217*)K_a[8],*(union A1218*)K_a[9],K_J[10],K_I[11]), struct A1211);}
/* 395:cjiicjssJ<scCJp>p)c */ void f395(void* addr) { write_V_c(11, (( c(*)(c,j,i,i,c,j,s,s,J,union A1219,p))addr)(K_c[0],K_j[1],K_i[2],K_i[3],K_c[4],K_j[5],K_s[6],K_s[7],K_J[8],*(union A1219*)K_a[9],K_p[10]));}
/* 396:{Bl<ScpJ[14]iLljIddp>sisBi}BJ{pjs[10]}BJS)f */ void f396(void* addr) { write_V_f(7, (( f(*)(struct A1221,B,J,struct A1222,B,J,S))addr)(*(struct A1221*)K_a[0],K_B[1],K_J[2],*(struct A1222*)K_a[3],K_B[4],K_J[5],K_S[6]));}
/* 397:SL{IfcIJ[10]<BJifiBiSlCBJ>isJlcd}BBi<LIlfscjif>fpLlLp)S */ void f397(void* addr) { write_V_S(13, (( S(*)(S,L,struct A1224,B,B,i,union A1225,f,p,L,l,L,p))addr)(K_S[0],K_L[1],*(struct A1224*)K_a[2],K_B[3],K_B[4],K_i[5],*(union A1225*)K_a[6],K_f[7],K_p[8],K_L[9],K_l[10],K_L[11],K_p[12]));}
/* 398:ClcsdpJf{fdcSCjjjjliS}cJSCdl)v */ void f398(void* addr) { write_V_v(15, (( v(*)(C,l,c,s,d,p,J,f,struct A1226,c,J,S,C,d,l))addr)(K_C[0],K_l[1],K_c[2],K_s[3],K_d[4],K_p[5],K_J[6],K_f[7],*(struct A1226*)K_a[8],K_c[9],K_J[10],K_S[11],K_C[12],K_d[13],K_l[14]));}
/* 399:jcS{f<fBfB<SpiLJicdIISI>c>CplfiCf<Ipj[3]dc<BlIJdpBsfiJC>lB{}lCs><Ll>c}Bplf<<di{ldcB}fBJcJ>fis>SfLl)j */ void f399(void* addr) { write_V_j(13, (( j(*)(j,c,S,struct A1232,B,p,l,f,union A1235,S,f,L,l))addr)(K_j[0],K_c[1],K_S[2],*(struct A1232*)K_a[3],K_B[4],K_p[5],K_l[6],K_f[7],*(union A1235*)K_a[8],K_S[9],K_f[10],K_L[11],K_l[12]));}
funptr G_funtab[] = {
	(funptr)&f0,
	(funptr)&f1,
	(funptr)&f2,
	(funptr)&f3,
	(funptr)&f4,
	(funptr)&f5,
	(funptr)&f6,
	(funptr)&f7,
	(funptr)&f8,
	(funptr)&f9,
	(funptr)&f10,
	(funptr)&f11,
	(funptr)&f12,
	(funptr)&f13,
	(funptr)&f14,
	(funptr)&f15,
	(funptr)&f16,
	(funptr)&f17,
	(funptr)&f18,
	(funptr)&f19,
	(funptr)&f20,
	(funptr)&f21,
	(funptr)&f22,
	(funptr)&f23,
	(funptr)&f24,
	(funptr)&f25,
	(funptr)&f26,
	(funptr)&f27,
	(funptr)&f28,
	(funptr)&f29,
	(funptr)&f30,
	(funptr)&f31,
	(funptr)&f32,
	(funptr)&f33,
	(funptr)&f34,
	(funptr)&f35,
	(funptr)&f36,
	(funptr)&f37,
	(funptr)&f38,
	(funptr)&f39,
	(funptr)&f40,
	(funptr)&f41,
	(funptr)&f42,
	(funptr)&f43,
	(funptr)&f44,
	(funptr)&f45,
	(funptr)&f46,
	(funptr)&f47,
	(funptr)&f48,
	(funptr)&f49,
	(funptr)&f50,
	(funptr)&f51,
	(funptr)&f52,
	(funptr)&f53,
	(funptr)&f54,
	(funptr)&f55,
	(funptr)&f56,
	(funptr)&f57,
	(funptr)&f58,
	(funptr)&f59,
	(funptr)&f60,
	(funptr)&f61,
	(funptr)&f62,
	(funptr)&f63,
	(funptr)&f64,
	(funptr)&f65,
	(funptr)&f66,
	(funptr)&f67,
	(funptr)&f68,
	(funptr)&f69,
	(funptr)&f70,
	(funptr)&f71,
	(funptr)&f72,
	(funptr)&f73,
	(funptr)&f74,
	(funptr)&f75,
	(funptr)&f76,
	(funptr)&f77,
	(funptr)&f78,
	(funptr)&f79,
	(funptr)&f80,
	(funptr)&f81,
	(funptr)&f82,
	(funptr)&f83,
	(funptr)&f84,
	(funptr)&f85,
	(funptr)&f86,
	(funptr)&f87,
	(funptr)&f88,
	(funptr)&f89,
	(funptr)&f90,
	(funptr)&f91,
	(funptr)&f92,
	(funptr)&f93,
	(funptr)&f94,
	(funptr)&f95,
	(funptr)&f96,
	(funptr)&f97,
	(funptr)&f98,
	(funptr)&f99,
	(funptr)&f100,
	(funptr)&f101,
	(funptr)&f102,
	(funptr)&f103,
	(funptr)&f104,
	(funptr)&f105,
	(funptr)&f106,
	(funptr)&f107,
	(funptr)&f108,
	(funptr)&f109,
	(funptr)&f110,
	(funptr)&f111,
	(funptr)&f112,
	(funptr)&f113,
	(funptr)&f114,
	(funptr)&f115,
	(funptr)&f116,
	(funptr)&f117,
	(funptr)&f118,
	(funptr)&f119,
	(funptr)&f120,
	(funptr)&f121,
	(funptr)&f122,
	(funptr)&f123,
	(funptr)&f124,
	(funptr)&f125,
	(funptr)&f126,
	(funptr)&f127,
	(funptr)&f128,
	(funptr)&f129,
	(funptr)&f130,
	(funptr)&f131,
	(funptr)&f132,
	(funptr)&f133,
	(funptr)&f134,
	(funptr)&f135,
	(funptr)&f136,
	(funptr)&f137,
	(funptr)&f138,
	(funptr)&f139,
	(funptr)&f140,
	(funptr)&f141,
	(funptr)&f142,
	(funptr)&f143,
	(funptr)&f144,
	(funptr)&f145,
	(funptr)&f146,
	(funptr)&f147,
	(funptr)&f148,
	(funptr)&f149,
	(funptr)&f150,
	(funptr)&f151,
	(funptr)&f152,
	(funptr)&f153,
	(funptr)&f154,
	(funptr)&f155,
	(funptr)&f156,
	(funptr)&f157,
	(funptr)&f158,
	(funptr)&f159,
	(funptr)&f160,
	(funptr)&f161,
	(funptr)&f162,
	(funptr)&f163,
	(funptr)&f164,
	(funptr)&f165,
	(funptr)&f166,
	(funptr)&f167,
	(funptr)&f168,
	(funptr)&f169,
	(funptr)&f170,
	(funptr)&f171,
	(funptr)&f172,
	(funptr)&f173,
	(funptr)&f174,
	(funptr)&f175,
	(funptr)&f176,
	(funptr)&f177,
	(funptr)&f178,
	(funptr)&f179,
	(funptr)&f180,
	(funptr)&f181,
	(funptr)&f182,
	(funptr)&f183,
	(funptr)&f184,
	(funptr)&f185,
	(funptr)&f186,
	(funptr)&f187,
	(funptr)&f188,
	(funptr)&f189,
	(funptr)&f190,
	(funptr)&f191,
	(funptr)&f192,
	(funptr)&f193,
	(funptr)&f194,
	(funptr)&f195,
	(funptr)&f196,
	(funptr)&f197,
	(funptr)&f198,
	(funptr)&f199,
	(funptr)&f200,
	(funptr)&f201,
	(funptr)&f202,
	(funptr)&f203,
	(funptr)&f204,
	(funptr)&f205,
	(funptr)&f206,
	(funptr)&f207,
	(funptr)&f208,
	(funptr)&f209,
	(funptr)&f210,
	(funptr)&f211,
	(funptr)&f212,
	(funptr)&f213,
	(funptr)&f214,
	(funptr)&f215,
	(funptr)&f216,
	(funptr)&f217,
	(funptr)&f218,
	(funptr)&f219,
	(funptr)&f220,
	(funptr)&f221,
	(funptr)&f222,
	(funptr)&f223,
	(funptr)&f224,
	(funptr)&f225,
	(funptr)&f226,
	(funptr)&f227,
	(funptr)&f228,
	(funptr)&f229,
	(funptr)&f230,
	(funptr)&f231,
	(funptr)&f232,
	(funptr)&f233,
	(funptr)&f234,
	(funptr)&f235,
	(funptr)&f236,
	(funptr)&f237,
	(funptr)&f238,
	(funptr)&f239,
	(funptr)&f240,
	(funptr)&f241,
	(funptr)&f242,
	(funptr)&f243,
	(funptr)&f244,
	(funptr)&f245,
	(funptr)&f246,
	(funptr)&f247,
	(funptr)&f248,
	(funptr)&f249,
	(funptr)&f250,
	(funptr)&f251,
	(funptr)&f252,
	(funptr)&f253,
	(funptr)&f254,
	(funptr)&f255,
	(funptr)&f256,
	(funptr)&f257,
	(funptr)&f258,
	(funptr)&f259,
	(funptr)&f260,
	(funptr)&f261,
	(funptr)&f262,
	(funptr)&f263,
	(funptr)&f264,
	(funptr)&f265,
	(funptr)&f266,
	(funptr)&f267,
	(funptr)&f268,
	(funptr)&f269,
	(funptr)&f270,
	(funptr)&f271,
	(funptr)&f272,
	(funptr)&f273,
	(funptr)&f274,
	(funptr)&f275,
	(funptr)&f276,
	(funptr)&f277,
	(funptr)&f278,
	(funptr)&f279,
	(funptr)&f280,
	(funptr)&f281,
	(funptr)&f282,
	(funptr)&f283,
	(funptr)&f284,
	(funptr)&f285,
	(funptr)&f286,
	(funptr)&f287,
	(funptr)&f288,
	(funptr)&f289,
	(funptr)&f290,
	(funptr)&f291,
	(funptr)&f292,
	(funptr)&f293,
	(funptr)&f294,
	(funptr)&f295,
	(funptr)&f296,
	(funptr)&f297,
	(funptr)&f298,
	(funptr)&f299,
	(funptr)&f300,
	(funptr)&f301,
	(funptr)&f302,
	(funptr)&f303,
	(funptr)&f304,
	(funptr)&f305,
	(funptr)&f306,
	(funptr)&f307,
	(funptr)&f308,
	(funptr)&f309,
	(funptr)&f310,
	(funptr)&f311,
	(funptr)&f312,
	(funptr)&f313,
	(funptr)&f314,
	(funptr)&f315,
	(funptr)&f316,
	(funptr)&f317,
	(funptr)&f318,
	(funptr)&f319,
	(funptr)&f320,
	(funptr)&f321,
	(funptr)&f322,
	(funptr)&f323,
	(funptr)&f324,
	(funptr)&f325,
	(funptr)&f326,
	(funptr)&f327,
	(funptr)&f328,
	(funptr)&f329,
	(funptr)&f330,
	(funptr)&f331,
	(funptr)&f332,
	(funptr)&f333,
	(funptr)&f334,
	(funptr)&f335,
	(funptr)&f336,
	(funptr)&f337,
	(funptr)&f338,
	(funptr)&f339,
	(funptr)&f340,
	(funptr)&f341,
	(funptr)&f342,
	(funptr)&f343,
	(funptr)&f344,
	(funptr)&f345,
	(funptr)&f346,
	(funptr)&f347,
	(funptr)&f348,
	(funptr)&f349,
	(funptr)&f350,
	(funptr)&f351,
	(funptr)&f352,
	(funptr)&f353,
	(funptr)&f354,
	(funptr)&f355,
	(funptr)&f356,
	(funptr)&f357,
	(funptr)&f358,
	(funptr)&f359,
	(funptr)&f360,
	(funptr)&f361,
	(funptr)&f362,
	(funptr)&f363,
	(funptr)&f364,
	(funptr)&f365,
	(funptr)&f366,
	(funptr)&f367,
	(funptr)&f368,
	(funptr)&f369,
	(funptr)&f370,
	(funptr)&f371,
	(funptr)&f372,
	(funptr)&f373,
	(funptr)&f374,
	(funptr)&f375,
	(funptr)&f376,
	(funptr)&f377,
	(funptr)&f378,
	(funptr)&f379,
	(funptr)&f380,
	(funptr)&f381,
	(funptr)&f382,
	(funptr)&f383,
	(funptr)&f384,
	(funptr)&f385,
	(funptr)&f386,
	(funptr)&f387,
	(funptr)&f388,
	(funptr)&f389,
	(funptr)&f390,
	(funptr)&f391,
	(funptr)&f392,
	(funptr)&f393,
	(funptr)&f394,
	(funptr)&f395,
	(funptr)&f396,
	(funptr)&f397,
	(funptr)&f398,
	(funptr)&f399,
};
const char * G_sigtab[] = {
	"{iCIlsBCSBisd}lIIJ)d",
	"i{lcBcpBLl}<BpScJBSjJsil>lpCpcI)v",
	"BsCIJdJidCB<lI>)I",
	"BClCcli<BSJJ[6]BCpdfffC>sliiLd)<lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI>",
	"ffIcL<SpSJJpjcfs>sJB)p",
	"dLBLpipS)<IB>",
	"IiB<dJpcddCdClCj>lflJS){ILLl}",
	"f<ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{}ClsIS>)<SCSicIjs>",
	"{}{fJidLfJCC[16]l[10]jS}cl)d",
	"Cs{SpLIpsIBLpij}IIpJ)S",
	"LcJL<{lLpBsSIBB}LBSpl[7]p>sd<fplcpj{lj<>jBf<dJSSffBIs>L<J>{Bffjjp}l{j[7]jiB[5]dB}}{cS<JLfLBIJ>}Bi<d{cdfCpLCCCiIl}Spp[10]LSCcIIf><SBpsLciSBj<lSJJcI>B>>LCs<IBjjdiILLlSf>)I",
	"IjC{iCjBCCjIpC}j)j",
	"B{L[6]}J<ldd>SlBIJflCji)c",
	"p<l{i}f{}[5]JpdBIcpC>sSJp)c",
	"sl<Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c>p<ILi[15]ljj>dIpBsJ)f",
	"lIJJ{flcfdjdjBSJf})v",
	"{IfcCljjfS{jIBIBSfcpSiL}}jpJppiBLJj)s",
	"CSJI{JpIdlcipIIJc}sIpJL)<p>",
	"{Ljsi{iljL}flcJ<>CL}Sff){lBcCpCpLBcSd}",
	"BddCIpljf)<cil<S>JLBiS<>pB>",
	"CI{pScjcpLjspId})B",
	"<clj<<lJJIBifdIij>CscISS<LLBljdfljCd>dls<ijIlIL>>lddljdL>lpSsJs)p",
	"J{dSS[16]Cj[2]piJf[10]Bsf}<sfSilfLs>fcSLLSss)d",
	"L{pljiIClJLiLf}pIcBsBBJcld)i",
	"LCJdc{SIslc}dd<{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL>{j}d<jsjssdIfBlpl>Sf)j",
	"<LiLISc>LsJlIi)p",
	"cj<cL>f<>BIIdcJjcIL)B",
	"fdIff<lfjiISS{cI{}IsSsiSc{JidfscIsclfl}I}S{ssISpj<sJclIICpi>lLCcd}jp>J{ljjCscIlfLjs}pII{Ljffsc{dCl<d>i{fpdfJiidcpiB}{cfcS}fSC[15]i<lf>}pIdsS}J)L",
	"LB{j{cdpcSSJJ[13]SL[15]Lf}j<JdjLpjBiICcs>[11]<Jp><jLsBC>jic{dplicIlifsiB}}j{dB<i[16]JcJIs{lBcjLdCJSIlJ}>I<l>cpBdl{djCflIdcCjsI}j}<Sl>IJJ{LSfsiLpcsISc}BdCi)S",
	"IBiCl{IsIis}LfjJ)S",
	"c{pBJSJp[4]}I<dIjsp>SSdCIdjj{ILCIS}{jidJCcssdjBB})s",
	"dcJ{iI{dICcIll[10]BfcLI}Bs}pJS{pfcid}l{BpddCssJcjdc})I",
	"S<CCsidlCB[14]JsS{JspCf}>)C",
	"fC<CdJlfJsJd[16]pLc>Cc{IcLCBjB{cSJJj[13]}SSdS})<c>",
	"{dJLdCd}ilcfsB)L",
	"psijlSdlpsicS){sjjfLJIdLISJ}",
	"IjfIJlLBCcClCjjJ){IL}",
	"LlCpCJp{lslSlj}LI{}<Jj{LBJp[6]ilIc}{spIli}Cdff<>cic>C)s",
	"<BBI<CpjIljISJdfs>iS<lLJj[16]Jil>cjf[12]<>><Slj>jlI)d",
	"BBBB<LClILIscJj>)j",
	"sd<ds[8]pdj{ScLpsdjLllIl}diBjis>)s",
	"<jl<pCLSpJ>pCdSLfid[5]S>BLi)<>",
	"d{}cd{CdLSsBLlppdp}BIIBpI)s",
	"dc{dCCCcS{IBsI{pdCIfC[3]dISpdl}IIfsJlp}BClB{pJ{lli}p}}LdcJJlJip{psLijl<BB<IfjBSsJJpldI>S{JjsjjJJcBiIB}>pB}fsL)p",
	"icIL<jIC>lBdLf<jL<>CSjj<LpdpjJdBSjl>BJJC>lJIC<dCdSlssjpJcc[15]>){l{<fCdfLflddLfp>liiC{}Cl}l<B{JI}pJLJ>p}",
	"ILfjjif<ISs>f<L>if<JIilIsBBlsJd>c)p",
	"Jlf<C<Lld[9]IL>[13]ffc[5]{ifSsIslpSpij}><JIisSfiBdBcd>Bj{fcI}Ccs<iifdBfffllBL>lj)j",
	"Bjd<Lflc<LBlppLSSIJIS>>p{LJCS}jBcBSf){pjL{jcLCcpiCJScC}Jciilc<pcScjfLpLJ>B}",
	"<C<LjpjJj>If[7]pS{C[12]isSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}l<cf[1]d<ff[15]SCLspcCiss>cJ[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJ>fcf>ldSSd<pLJ{jppI}>d)S",
	"lS{CfIsICLpicLI}L<BfISp>clj)L",
	"d{lBICc}f{BdLCsB}ldCCCJ)c",
	")<csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf>",
	"dScJ)<pfifSilBCsBi>",
	"sSCpspjc<Bpii>CfS)S",
	"LCfJ<JCC<JLC[12]CsJSi{pdIJLj}Ifs>JJ>jddpLp)f",
	"JcccSB{siJjBLiSIIj<lldfS>}d)S",
	"{jdscdfBSLpj}<lIBllLL<I<BJLCIlBCJlIj>{CBlj}JBjs>>llSjI{dIJpCsSJ}Jids)C",
	"CI{dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI}BL)C",
	"JiSjJSBSC<LJLdd{Bls}BdiJsi>L)<IffIppICjJiC>",
	"{idfCfSSCILjC})j",
	"{sf}pSf)I",
	"SjJJpISJC{{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>}plp)c",
	"B)<BIpcssdfJSc>",
	"l<sdSffIssSpCL>{j}ssl{B}{Ifd{cSid{p}<sdsSssfBd>[13]}LI}LSppf)J",
	"f){sBBfLBd}",
	"CcIBlplCBS{i<lSsL[8]ji{}csfCL>cSJSis<SccdLsfidCfI>{JCCSiBj}cf}Lcd){LBsSBpLSIcLf}",
	"LB<lf>sBi<SSlBdLfcBfJs>)p",
	"{jifBl[7]s}pI)L",
	"ci<CS{pI<pdisdi>S}L<CJLpCdj[7]>JdBSCBd>jIj)B",
	"LIc{SLL[1]BLiILfLcl})C",
	"<c><>cSlCC)s",
	"jJp{}d{spdCC<djcB><pfCBi<dJp[13]Lsp[4]sBipij>dB<fLCjI>BiL>ilcSJ}piJp)J",
	"LBJSisi<sdic<>jfii{BdIipJjjJ}{j}s>jiJC)s",
	"L<II{lBpp<sC>IiCjSij}S<CdjjCSdif>sC<Ll[1]if{BsljiiBCiLJl}sdjISc{dCBliBLplJSd}>fldp>{CdBp{Jll}Bij})j",
	"<BdI<lfs[13]ILlISpSpJ>jd{SsfficlCB}sLj[2]jj>sC)<fSfpsf[11]sCpffj>",
	"ccc<<lsSJcfJScIdc>Jcj{jfLIjdcLi}>plS)p",
	"fJdsfdJciljBdL)<>",
	"SL<><ljLJss>dcIcJ)v",
	"l<I<>C{jIJj<sIJij>fd}iSs{{fcijsLISLlSI}ipcifiL}SLic><>ss)c",
	"CBSL){SsIpJLfs}",
	"jSIS{fcdSIdLIds<SlsfcLj>{CdpSpp}}i)L",
	"IlJSiL<C<jJdpiLp>SSIdCI>)L",
	"j{}d)J",
	"{Cdp}{CSsfBcfcSlpc}cf{fIjLpCBlfScd}<J>)l",
	"is<LljcS<If>i{LsdsILcs[11]cppB}>)p",
	"fis{SfScSiJSCBCJ}JlId)I",
	"IcjBJpSCsiiL<>)c",
	"{B[3]cfl}fIfC)p",
	"IBIJsLId{iliCSCiSjBid}Bp<pJ>i<>S){jcf}",
	"cicd{sBiSJBJjcCjd}lc)s",
	"<fLlflcCfJISI>{C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl}dcI)B",
	"cBpJs{{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ}IfJji{IfpLdIcppsLl}){}",
	"jp<BCIILCiSicfB>jd<cjL<BcjBplljBdSp>[9]dSp<CJISlldLJffB>pcc[1]c>liILjd)l",
	"pCLjI<f>Cs{pjC[3]jBj[9]}L)v",
	"{d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj})L",
	"IJBjJBs{dJBs}jILsl)s",
	"iLfL{Llfp[13]CpLjcpiL}SS)B",
	"If{C}L{}<>cdIsS)v",
	"C<IcdBll>BISS{LjpS})j",
	"{LS}sSs<LjLlf[15]pJSC[11]dJI>s)C",
	"ds<BdIJLLc>fB<jI<L>CjcfppppC>pL<cIlLlcsBlB[14]pJ>BfJc)s",
	"sC{<jpLpBBBcCjlI>dScpdsjlfl}{SLjpLLjljI{iBCIipLsfpBL}s}Li{JIp}iSsdf)p",
	"pd<LSiIl<><cISSdIC[5]plljc>slll[4]p>L)I",
	"sillf<JC>pjldJfC)J",
	"J{i[13]}CC)s",
	"d{IpffiLBLs[2]fsL}d{<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<>sIpf>s}BjfC<CdBp[8]d<lIcsljlJCpL>f>i)i",
	"jlJpsfL{sBs[16]}IBipp)I",
	"ppSBpSd{Bl<>L{Sdc[12]fsdjfiCLJ}[6]LccBIpc}lB<B{cC}jls[5]d>)d",
	"B<j>iBCSjB<cclppiJfSfis><I[13]LcJjIBCpp[1]pf>)p",
	"{Cd[12]CIBJi[1]IsijJ}s)<clSfdSppl{JLfllIiIj}S<sdLfs[6]C>>",
	"{}CLf)<ICfpS[8]IJCfCdc>",
	"l<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>siLpJdcd{SfspdscpIpsj})l",
	"lI{}J<d<cLSlfjI>djcf{LCSBddjLSfjs}j{pC[10]dLiCIsfpdL}[6]jdL>fslIdj)p",
	"<BfCpdiLsJsiL>fcl<jj>sC)v",
	"cplCpBfs<>){IBJLCflCfsiI}",
	"<ilcjC{cJSjCBIIj}[14]lfBCdS>p)B",
	"BdcC)<lJIpi[4]ldjJl>",
	"Css<Cl>lldipC)p",
	"lL<pdJ>jjL{jpiisIfilBfS})v",
	"{JC})l",
	"c<>jBl{si}cfBdC)C",
	"CpSSBLC{BLS}SpJiis)i",
	"BpsfII<l>c{IdcdjJCsJCLf}I)J",
	"{LCcs[7]dBL[6]iiiJC}dicilj{d[3]dC[9]f}jjspf<CISl[16]lfJjSlIJ>L)c",
	"){Ll[1]pLSsJs}",
	"l<ILIcpCj>SLS<sBldCiBisi>cL)i",
	"pdd<BcBJSJ>if)L",
	"pJ<J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs>IjIiLl{JjIfJljIIIjL}lI)p",
	"<siBB[5]i<lSBiIjIdI>scl<I>sd>LdJC<dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI>BIcIdl)i",
	"pJflidlp<SJJpJlCI>d)s",
	"LLjcic{LScCJJLdsBJj}<is<dCLjLLfilpsS>SCSfSLlBl>ji<BjpJ[11]>)j",
	"dfSCc{psCpSjcI}JpSj)B",
	"jjd{Cslc[8]SBifsjIJ}s)S",
	"dB)<BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ>",
	"{JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p}lS<SLlSlcpc>fccId{}S)S",
	"JjLJf{<jIiJI>ddBsdBSJlcj}<IS{SJB}ccsiiJJfJ>C<{I}SJjdJIIjlBp>C)l",
	"pLBJBscJc<flBd<>JlfjlfB>Cffldl)v",
	"JpJJ{})S",
	"{BLBi[6]LcffsSBc}Lj<dS>{J})C",
	"I<p>{Cc<d>SIC<>cd[16]LCL}Bpip{BjplLpIBLlfl}BIIlIs)p",
	"lI{J{fsjL}JfL{jdlJdCpJSpjB}JlLBid}fpsI<L>Sp<iJjjSIjsflfC>sBl)j",
	"pi{djpcI<djC>SJBCBc}sjj{<c[12]S{Cjcpcff}JCds{Csf[12]cLidiJjs}IIdL>SBjfpc<>BplS}<ijpsL[4]c{d<iLJs>[15]pp}j{IJlsf[7]l[10]Blip}liI>l<icciIlCJ{s[11]clc[15]cccpcCi[6]J}LI[15]j[15]>s)f",
	"d{}CcfddLiSlBI)J",
	"{djcJcj}fBfd{pfcssLSjcCLj})j",
	"jCjfSclsd){d<s{IijdSIfjIlIS}Lld>sBIlB}",
	"sLpi{J}j<J>csl){jSd[9]LfSCCsC}",
	"flBppjCBlC{s{jSiBL}}dC{fccdspslJIji}L)c",
	"<p{fjfCCLCIc<fcJCfSipiccj>{LdpCppLd[3]pf[10]SI}s}pl{<IILijS[15]SllspI>pC<lsB><lB>cc}sS>ClcpB<CipSjcdjsLfs[1]>CfCi)i",
	"Id<<BI>iB<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}<SsBijfccj<f[8]ssS>fj>Ij>pB{{lII}ciLI<IJpjf[7]JCBj>}LCd)<I<dLCCCJB>{sLlfcIs}LcLsciIl{sJJCjIclfffd}>",
	"pi{p{BBCBBCllLj<plLSJSfdSipl>{Ifc[16]cI}}JLcJLIsjlC}cd)S",
	"CJC<ficL>c{d<{Jcfcj}jfjf>dLIC[14]ILIffj}JfCifs)B",
	"icIs<sCfj{IICldsBSpBsJ}Cdicc{dCJ}p>IILiJ)S",
	"sffs<JiBCsccpLli[4]S><BcLp<dBcjssfcLJIB>sILJ[7]<cic>Sc>fLBL)v",
	"IBl)<sClILcdIBBdB>",
	"ScCCsl{lCppL{SdLsJSCBC{fsJiccif}CC}c}cj)i",
	"SCIlCc<cCCjI[16]SCiscfC>iffBc)C",
	"dsspLlfLi<B<>f<S{JiJ}BccsS<SLLJSpLsfslp>pSJc>csLSiBcL>j)L",
	"j{iICBcs{ljjsLlIJcsp}IL<dIJcdL>jS}icilc)j",
	"cBdLii<{cIffC[14]Is{j}dLfl}BIJIIpl>cBS{iCscilILcCCs}Bp){SCfl[9]dsIBjfJI}",
	"B<{sfIi}dl>l{SBcL})<jBcCjC>",
	"plip){C}",
	"<Bcjifdsi[16]dsiI>SSp)d",
	"ljjCcSC{C{dsjdIcj[4]lpIjf}IJILd<Li><Lsd[8]SppL>}<JIL<JIIfdj><SfppLBBCpscf>lBd{JBL<ijIJS>csCSsBfj}fc[11]C>)c",
	"j<Blil[12]c<cisScSJdLL>BjcCCc>jpljfipIfJ)s",
	"iiBLpIL<dJLi{ccjC}dd<JCjJjiSifJpC>diIj>B)L",
	"fi{sSJlJC}S)l",
	"cJj{p{cfpijijBJifi}}{}<JL[9]dc<l<fp>LJsffcsdls>{fjLspCjfIll{siCIdp}}jCjdsC>CCJJsIl)B",
	"J{CdiCsfSSsi}ff{fjp[5]CfipdS}CjJSSSfCCB)s",
	"IpCS{<l>SJCLjSJ<C>LCc}Is{SpdLLfsf}fSfISc)d",
	"CdfJ<dffBClflcSpi>CCcl<SlS>IC)c",
	"C{sj}IcS<sLBjLIdJsLLS>cjpSc)<sJLIpipLsCBJ>",
	"f{}fl)j",
	"p<{iCcpljS<Jl>IfB<jjL>}sfLc>LlcfclfjJ)l",
	"dBIs<dS>Cl)S",
	"{ils}slcjij<>iS)B",
	"BcCIL<pIsCCj{cBCfLjfLBdsI}S>fBLfcSC)J",
	"CdCCjfI<<dSddCisJf>cCJlClfl[4]Is>I)L",
	"Ljp{CS[8]}ip)s",
	"<lIiSjfSCIidj>pfsl<SijiLlii{sSJ}lJs><sIfCJsfJBBdi>p{Jc[3]dJ{B[8]LBBSjfBCdLs}[12]sjsfj}fssJ)I",
	"BLfjC{I{icBjSLCCcljC}BdB<>csf{S}ip})i",
	"spLIpj<lSdIclBdILdd>cBl)i",
	"L{jJllBC{icf}SL}iilc)p",
	"{fisLS}f{}dcC)B",
	"cLj{}<llBdIsf>cdJBS){dLjjJljJls[13]pd}",
	"plsd<f>)J",
	"{ci{ciIIJBslJfsi}SlL}<S{IBsjCjdpLJJs}psBIj><B>jdijSfJ)v",
	"iSsfip)<ICpIpISIflBl>",
	"IpCLijiI<ffBdLlBCIl>LLi)S",
	"lSfCCB<>pJ<fsd{BfLllc}fpCiL>fcds)J",
	"{sjBfpCCBBSIp}BIdsf)I",
	"<cfcdBp><fjdj[7]<sSfCCflj[10]ICJI>I{issJicL}p<ssBcL>pdd>CJCC<<jcI[2]cIsIBci[12]C>iscJC>JSC<JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL>ds{lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C})i",
	"LccLSp{cjlIccJBs}jJ)f",
	"i{cpd}dj)p",
	"L{}CflBdLSB)<JpCcdll<p>ffi>",
	"s{csB}sLpL)v",
	"ddlC<ClIjIpfcISji>)d",
	"cCc<J>CSIcdf<LC{ijdIll{IpcS[7]fIcdlfls}cSScs}fisIpcS[8]dp[16]>fSCS)v",
	"fjp{i{iLjJlsfslfsL}{}LccfJsIi<JpcJpi>}jScC<B[12]jfpfBBLL<>>){}",
	"{dI[8]icIJ{jB}jLdSs}CB<BJsBssI[13]fCJlJ>JfSLIBI)f",
	"lsBc{ICilisciS<dI>Ci}j)L",
	"Lj{clLdCiLC}SLL)f",
	"c<cLJfLiB[10]JfJJI>p)<jdcjJllfB<fIpLIJil>B{IsLiJdLf}>",
	"lL<JI[15]JdLd<lIJjCcljCjBL>sSlCL>)J",
	"{}cs<fsiCLiCB{pCjLjls}CJ>jIC<JBccfIJBIBBj>JlBspiS<{S}>)i",
	"<>fcSBidCipsCB)l",
	"{pCpdlscd[8]dlj}BlccLjLilsB)j",
	"lLBsSJSIlls{<SsJIILSsSs>J})L",
	"cLlc<BlfBSfJpBf<d[9]jJjLcjI>l>{JIS<iIBlJlplCpjC>LJB{{l}cBj}BBlS}B)<>",
	"C<fJlslfCJl<J{sfdJCcB}lLJlBjJBBl>Cl>df{IdjpfIlcpC<djLj>c}{ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS}Js)i",
	"l<B{JclL}LdpSI{<SJs>Blllip{Bf}}ip>)v",
	"cipBJi<LfsJsJdcL>iJScJI)s",
	"jBlf<lifc>jl)J",
	"di{C}c{Ldd}fsi{JJJS<fffplCplC>iSfjipC}Jd){I}",
	"fJJSdsLBS<SJdiL>d)i",
	"SdpBS<Bi<d<dp>L<BfdCsCclcjjC>i>ccfjJJlCd>Il)j",
	"j<iBccLlSpccCl>fJlC)S",
	"Jp<Scflpd<pCLLIclLBLij>LLsLj>p{Ci<lccIiiffcjL>ddJpJfscC}S)d",
	"ljCC{djiBpiJIIpfp}sC)s",
	"i<sdsS>i<{ddcsBsjBBLdj}sBIJJ{dpCJliL[11]JS}j>B)p",
	"LijJcpsJ{sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj}i)v",
	"s<<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff>BIdp){IspBfiLI[7]J}",
	"cjjBdlSl<piJjCfLCSI>)j",
	"Jlcjjjp){p{pISICSs[4]p[13]Icl}sCJfs}",
	"{<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<>JiBdd<IjcJBpCBfCd><jdSBpSJds>iCIc>IIld{JLjjSjidifJd}LB}sS{iiIpJlCjjsBj}c)f",
	"<LJ>d)B",
	"{SSJccdBBlSli}sc<sBIJBj<jjssfliSJLIS>fIdSB>jB)I",
	"BjlSCs<ijlsB[3]{LjBlIj}LJ{}<fSC[5]LCJii[6]fl>Bj><fBffLJSdScl[5]>iI<LCSijLSfjifS>IjI)B",
	"IBII{JjJJl<dSJdLdlpLdj>{}L}ICLl)p",
	"jf<CIcSBcpLpcd{BJcsBSjSsipB}>dJspJLdl)f",
	"<IdJjjCpscIdI>sfJd{<sLc{}J<>p>JJf}B)j",
	"JpcJ<p>j<s>{}fdL<Lf<Cdf<ldld[4]ICpLBBJ>f{Lll}[11]csj>Jjl>s<SBjl>)l",
	"i{dBpcIJLsJLlc}ifJJcf{IjsIfJJfdfsS}dCBf)B",
	"pdpiSJfl){pplCdcdILBlJ}",
	"iJ<fp>CCfcBcJ)I",
	"siB<C<dJS{IdfJlcl}JSjisdJ<jpJdid>>fdf[6]<>JcSCLB>fJp{SfSjIclCfSsl}BJjf{IcjcIdCjc<C>JL})p",
	"B<IfJB>SidcLS<jpJIJjsfifIs>{sJILd<jSBIdpsjlBJL>{}[3]<sILLBfCcLslJ>SfB{}})I",
	"j){SdIIppS}",
	"JIB<L>L{fpcsiIIiIfC{JSlBddCCj{LfISIfjfBicC}S{pLcs}}}L{fpssLf[6]Ii}lBif)s",
	"iJBCC{B[8]<l>B{JB[13]}fIsBj})B",
	"c{dJClCLL[7]dScs{Bffpi[9]J}}sSfijpJ{SSjcsS[8]L<CCis>L}Clfj)i",
	"{IIjCCjSLfCdp}LsCBlI)l",
	"fS){dCs<cBi[4]cdlSJdSSp>[8]{idiL[2]lcJcfSId}SsjCLjj}",
	"BJipBiJ{SlsiLcJJjSf}{j{LiLJciScl}c<CpiC>}dBJ)d",
	"{jjSlBSjBlff<d[1]fJj>}d<diJjCidlslIs>{SBddiCsJpCl<slSSCc{BdIIcdjsdBBd}iJ[4]fIp>}SJfIB)B",
	"l<>c)I",
	"JCLd<cs>jfi{{p}sB}CIlp)f",
	"pLlCc{s}BiSCC{fIBCciciIs}L)i",
	"J<d[15]CjII<Cdc>i[13]CjfsL>CCdsLpdiC<CB[9]pJlSIc>j)c",
	"I<BBsLilBcppSI>LSIfJCfSiSjc)d",
	"<iCSd<BBSSSpSfsp[6]ii><sClcd<BcJjlfljJiCl>iclc{dfpSjS}J>j[11]c>ppBClSil)d",
	"IdjcBfCplL<dfpjpc<c<CSJpsf[3]SIdC[5]jc>pJls<LpipS>S{i}dB<CcBd>>Sf<<L>>C>)v",
	"Js{dSJ<lBCcIS[8]<LppdILdJdifS>>}fSiCI)<jIpfCCcfdBLp>",
	"cjpj<BBdI><SsLsIjJslCBC>JdCCsp)j",
	"LCjlfLJsc<p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl>LLpC)d",
	"pIL{jlfcJpi}fpjcfIpB)c",
	"Bjj{JfflBIdjcjjc}SLlIj)d",
	"dBfislcdl{{BpdJppipssfC}C{}BBcdJijd{}}I{<iflJICpcSCfj>jCs}iLBS)l",
	"j{jdIB})C",
	"){jjJCpJJJ}",
	"JjJfpSi<Ld{SC[11]s[7]IpssJ}sBsjSf[14]fCB>ISI)i",
	"Ldij<pLscS<SJf<JLilSC>cBsfJi>lpplSc>LISdIB)J",
	"B<pjC>SIS)S",
	"dBpllIsL{j{pJfJd}cL<>lJJ})C",
	"{CiCBfJLSJjLc}cJjCd)c",
	"IpCScBCfcI)<<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf>",
	"jSiL<IlJfjl[3]l[12]Lcj[4]dj><BCjJpCfIsI{IJjCfiLiSJpd}J>sp{}LfCB)p",
	"iII{jdidf{d[8]cs<cdIsiLcjfd>}SJJB[9]id}f<SCpjidISjlfB>djsL)J",
	"SBISi<JCllicLCCIJj>cp<<SjiCCj>Jil{LIBsBifSJSIL}iCi{dfjjBp}>IJ){L[12]IJBsfCljCBL}",
	"ldC<IdsIICSBlijj>CCLjI{cfS[4]}lIp)<cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd>",
	"SjI<<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC>cliiS)<C[15]BBi[5]IISIII<fcjdI>J>",
	"{iisBScjSscJ[4]l}fcpCc)<{lfJLcSSc}>",
	"p<cCic<pIjsfCjldsBf>s[7]j>JCpBpifcs)S",
	"Sf<iB>p<sLlIC>dfpCjdjj)s",
	"{jcfIsICs}CCLJccJ)v",
	"pBSld{s}ffIi)p",
	"piIjiccf)<jlps<lLlfsdfdCLid>BJLjCLJ>",
	"jjJjC{BS[9]CjcILiJ<CdBLfpIfCL>B{dfd}}Js{siilCififLs}B)S",
	"IBis{ic}Li<jId{LjJ}ffiS{BdJcBi}B{sp}I>Ssc)i",
	"c<BJIdccIIsISf>fLjfcsdJ)I",
	"<j[7]sl{}cCB<icisfJffIfCf>IcsI>s<Cs{{}{LpLCilJCSfJp}iiSfcdccI{sILC}}Bss>LJLIl{<lJfSppIcSIjl>{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls{d[13]SsIsJJc}C})J",
	"fCddC<fdCpdJIlj>JfICfIS)i",
	"{pSLpi[13]}pS{BCjC{{CjplpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}JjS}fjILiJJ}cifJBfjJs)<i{SCLSsd}jclSssfClS[9]>",
	"C<{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji>)J",
	"jf{CdsIJiLIcfCp}fIBLJ{lS{pCds{lfC}dclfl[6]ds}J}pBi)p",
	"Bis{p}ji)S",
	"pi{J<plClJLjf>ls}fcf{j<IJdsiiBpScIC>BllddBfBJs})L",
	"B{cJ<scjcppLjISfj>}d)C",
	"sldiSdpp<ijdiSCJBIiLS>B)J",
	"LJL<flpSdJiJcsdd>cfi)j",
	"iCSdCpIjf<dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj>Cji)d",
	"scfcJISjll<L>pL)<BC>",
	"sJfdpBS<Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc>BiBjC)v",
	"<>jcs)p",
	"LI{dpfLc}S{dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S}LL)B",
	"c{cjB[9]lLjdIJ[14]pCf}lfpl<dsjdCI[2]{fpLLSdCIdjsJ}IBid{ICIdcLsl}>i)f",
	"<jl>ls{Sl[2]SCijBIpJfC}<Sdd{LcIB}lICLdsj>I)f",
	"Bl{IISI<C[5]LJISS>CC})j",
	"dds<I{}<llISsLssfc[13]dp>ISfldSI>ps)B",
	"I)<CfjBSJdBpJJC[4]>",
	"IB<iLdjj>IiilssCd)j",
	"jB<fCpjCJJdclSd>Jd<icB{SCpsi}<Jil>lsdIBiI>)l",
	"JBCIIlflclcC){isipjdlsSjlS}",
	"Jj{sjdci}SiJcddI)J",
	"<f{BpfscIcLdCLd}c>JCcJ{pfiiCdBj<pBpCspifsjlf>jfJ}icfLC)j",
	"jSSl{llfffsddlcjf}){CcLCfpCj}",
	"Ip{SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps}pB)c",
	"<pIjp>f{})i",
	"LpcJ<iiC<cfSBc[8]>JLf<f>{<>BJ{sSisSCSifCcI}{SpfdfLI[8]SpLij}{CJli[7]pcS}cIBLCL}jdd>cjCcjs)<BJIJIcJ>",
	"cJ<lBSJpiSILpBp>ljlisfcCd){LpSdI<CcSiffijcIiI>}",
	"i<BcCjiisdCdif>pBBjL{cpp{CiclSBBC<CCsCjsCfLJBj>dcd}jssJSpsd}i{dCCLJs{Jidd}CfplS}pcdCd)v",
	"iIfiBjfp{Jids[12]BJLfscdC}Jf)v",
	"dfcLSIdBjl<pBisLdlidddd>JI)d",
	"{{ffIcdllIfiBj}jJjJSs}pCSdlJfd)I",
	"j{L<ddBCBJBf{LJJdLBcjJ}SS>IjfJCBlSB{jl{j}sISjSSpBB}}JSs<jSfBBcJ{Jpi}ipJ<sJCScsLsLSLL>>)c",
	"{Lf}ii)c",
	"cCL{lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j}fBSJCp<CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI>d)j",
	"lcSfl{jIScpBCCdIJ})i",
	"Sj)<CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is>",
	"jLi){i{IislccIiIiIl}Cd<f[15]f>fIji}",
	"BBsp<LlI[4]I<>>i<SdpSl>LIi)I",
	"IJIBSBf{dSldj})l",
	"{jpiSBdddLBIS}IjJ<pdfcLssL{CSLcCfLCLdiI}><lIpSjjplsifI>j<SslspCBcpScS>L)S",
	"dSSCIilBJ<Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf>)<<pIBsBBJccSJB>CISjiJ>",
	"I{J[9]<cCSBcdfjJ>[5]d{ddijlJd}<Ji>d[11]IJSBlL}<BciIsp>pSdJflf)s",
	"cIS{sdscC[8]IIjCfp}jSd)L",
	"ic)<sCBBIpJJCJc>",
	"Si){icSiBljfcps}",
	"J{iBj}{pJBSiJjcIcSp}cIIpl)j",
	"Jp{S}c<lcddCJ>ifLjildd)I",
	"<JBspd{IBi}BlBpf>C{}IpC)L",
	"<>iS{flJpj{fBl}f{p{j}sfCs{CLIfsBLCdspJ}<><IdcipJLcilpi[5]>sdc}}SCpf)J",
	"<>pJc)v",
	"jSJic{{iCIsLIlSfiIp}SJpL<fljiScBj[16]fLdf>C{iJ<SBscfICI>Jj}l}C)C",
	"dS<B><<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B>lljfpc<LIfBLcc>)C",
	"jI{}ici)L",
	"jLScj<fISIspfJl>JJCicpl)p",
	"JJfCpCfBpJBS<LcJfldIidLJs>S)s",
	"d<s<SBiCfCcLBSpc>cSBjB><<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<>SflCd}S>Icjdlscidj)S",
	"ilicC{liLLCpffJJpf})p",
	"jCc<>pJds)J",
	"fisc{Bdisjps}{LccifffsJBSS})B",
	"jjB<IlJ>Lji)<LiI>",
	"sdfILc{SBCc}Ldl)L",
	"I{cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc}l{IfiilBJIB}cIj{cSSsjS[15]BJc}<>{cfdBdl[5]SCIBjj}<>pd)f",
	"{cSIBpLLlCBfs})f",
	"idi{SlsdI}{SifC<IlC>J<ppfBIlI>{}sIij}dSpLiCJL)I",
	"ISf{<lScp<fiJSj>SLSC>JfICSL}cjiCiJS)L",
	"{}L)L",
	"pIJLCLLB<>LBl)s",
	"Js<cJL{ICdidcl}pcLlJ{<>jcCfLc{ICpS}I<lfcIcjpBCsJ><p>B}i<<CiJ[8]B>cC[10]SispSl>>pSilIB)C",
	"{ds{J<fcLjSSSLiLJJ>jB}SL{Ijdclc{pdJCId[10]LdIlSj}c{}JLc}<fIicBIs<SCLCdiifLpcB>>iJcS}SSL{dL}C)c",
	"sCpp){iSi<>f{IiIlBsiIfssl}{lcfdJLdiCcCf}BdJ{lcj}{SJIs}}",
	"cS<SjJLLIp{<pL>JC{cLBdI}Icl{cildlLBsfl[15]Bl}dS{CfJSpfScSdIJ}}I{fSsIsCfBJ}<lIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>Is>l>dldiSJcCdps)l",
	"pfJf{}si{JLjJJIjJs}Ldip{Sj{}I{IcLiillIdBlL}c<jLBIIBJjCSBC>jSL{CpidBsJdSpLJ}s}ic)p",
	"fl<cilCBBISl[13]idl>I)C",
	"<ip>Jp)L",
	"<pCSB><iBid<CJd>LBLSjjC>Sp{}JjSS)v",
	"If{d}c)S",
	"dl{p})f",
	"sldlf<<fjBjpfCidfpB>SScflJ<Sl>i[1]{}jj>dLpcLi)B",
	"llCLiSpp)<LCiBlj>",
	"{cpCBdcL[10]i[14]l[1]LlJ}p<ScJ>iC<<L>jIIff{LjifIf{pJ}[4]J[15]{JccSBc[12]LJSfSs}BJp}dpi>cI)j",
	"di<iLd<Scij>plsjJJcS>cCBpclBLc)<cJfcjjJlS>",
	"fJBjS<cjsdLdBIBBlL><f[6]LcJSisdLl{sji{cJBSdBfCJJ}pBsji{SCBSB}SB}<{SlscdSJJIJpl}cCcBBlJBLsJ[7]>[11]>jfS)p",
	"<iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f>iL<lfLiJj>SflisC{SLIsJjB}s)v",
	"<S{CSLccc[5]JJ}>fCpB){<CBpBCpBspdSf>fSlppjc{idp}LSS}",
	"Cp{I[3]sfcs}CdCdcS<f>fSjsB)S",
	"iil{djIcf<sCjCjiBiiC>{pICpfICliJcp}li[1]fSL}lid{}CS{dlBsSd[13]SCSiLl})d",
	"sSBi<pi<>fBJ>c)j",
	"JcLcI<jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>>ldpJCcd)c",
	"<si>{{}Sc<>SLjLsIds}pI<jf[5]cjCdBj>SCliJLc)<l>",
	"jijCjj{fIpCcfscsSiI}B{}p)J",
	"fJCLBfIl{iIsL}Lsi)p",
	"){Bd<LcLJfdLliLBp>BpdjpLISp}",
	"lC<{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}>{BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi}liBlB)c",
	"CIfs<p>dsdsCCJ)B",
	"sidJLJ{jJlji}Ii)<C{}Ls>",
	"dfif{CcJSp{sflL}js{fcSIBfjJflif}sJc}<SI[4]lCCl[4]LddL[9]Cd>cpfSB)p",
	"pIpif<j><SlLJc[2]BdLpp>LjIpdC{siSBiCLdcIps}i)f",
	"{dSJiJ}lC)j",
	"JflCisdlcBIps<CdL<CI[8]j{JCCSlBIBjfSI}>cdi<BjLl>idfi>)C",
	"ls<{IsCCJfifBiLp}CcljiciBC>d{<SLjBBLcffSIL>SBScsfdSCj<jCj>}f<sipjIL>Jj<jssjfij><ifcjL>)f",
	"{{<SsSsfCSpfcLC>li[15]cBL{fJcsBfJdfics}L{lL}Jl}fSII{BcLIljjsLIjc}cJ[5]IIs<liilCdlSSlJS>}IISdLpif)p",
	"Sf<fpBLij{fdJijijLI{}<Ic>C}sSsC[13]j>CCSdcIC)c",
	"{J})B",
	"LfCld<CS{fBdjdCBIJdLB}dJdipJSip>c)<dS>",
	"JCfCSc{fIBIfsI<>lLsJ}lJCcf)I",
	"lijjfc<BBlJI>cjJ)f",
	"jfdjsCl{ISCflJsf{IBdcJl<sscllcpfcJIB>sC}[3]Sf}<<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS><s>c<d<BBidSJlclJf>jfBddIpCdI>)l",
	"ilSBsB{LpBJdfL}CS<sCLlJCcLBLj>pS)c",
	"ll<>BCCsciillfiiS)I",
	"C<p{SJjLIlc[1]lisCf}pC<iljJijdBSsij>i{piLpilplp}di{ISlSi}d<sI>>fj<I<BLCJslC>i{LSdpBisLfjdi}dJd[9]cdilc>Ili<{s{}l{s}BSfSILLS}CliISpsl{SsSs{diIdBIfSJICj}jilpdp<dSspdplJssdp>[13]}{p}s>JpIl{sll{CLScspdjfcdd}sId}B)c",
	"c{p{BIjBJ}Ll}SpIiSsIsJp)c",
	"I{cfBBfLiBjJjd}IcIfI)C",
	"ilBCfJc<<<jddBSjdSBJCi>SSLLcI{cCflslcdBfIB}Lssd>s<ljp>ILicBIBii>{fJIllsJflLLS}<pCdlBsBpJiiI>JI){ILLC{jCBB[14]dJCjipfs}fsf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC}",
	"cjiicjssJ<scCJp>p)c",
	"{Bl<ScpJ[14]iLljIddp>sisBi}BJ{pjs[10]}BJS)f",
	"SL{IfcIJ[10]<BJifiBiSlCBJ>isJlcd}BBi<LIlfscjif>fpLlLp)S",
	"ClcsdpJf{fdcSCjjjjliS}cJSCdl)v",
	"jcS{f<fBfB<SpiLJicdIISI>c>CplfiCf<Ipj[3]dc<BlIJdpBsfiJC>lB{}lCs><Ll>c}Bplf<<di{ldcB}fBJcJ>fis>SfLl)j",
};
const char* G_agg_sigs[]  = {
	"{iCIlsBCSBisd}",
	"{lcBcpBLl}",
	"<BpScJBSjJsil>",
	"<lI>",
	"{f[6]jLIjCCLjSIS}",
	"{JLsjjfLJsJIL}",
	"{BS}",
	"<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>",
	"<lljCplLiLJBj>",
	"{dS<lljCplLiLJBj>LCIS}",
	"<lIjlJl<IpJ{f[6]jLIjCCLjSIS}i{JLsjjfLJsJIL}SpL{BS}ip>{dS<lljCplLiLJBj>LCIS}dCsI>",
	"<BSJJ[6]BCpdfffC>",
	"<SpSJJpjcfs>",
	"<IB>",
	"{ILLl}",
	"<dJpcddCdClCj>",
	"<SCSicIjs>",
	"{BjJL}",
	"<sfBid[9]Ldfjdcj>",
	"<j>",
	"<BjjLs[13]SicJic>",
	"<flLJJJLLJiJs>",
	"<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>",
	"{}",
	"<ICJ{BjJL}<i<sfBid[9]Ldfjdcj>SlSs<j>j<BjjLs[13]SicJic>Id<flLJJJLLJiJs>>J{}ClsIS>",
	"{fJidLfJCC[16]l[10]jS}",
	"{SpLIpsIBLpij}",
	"{lLpBsSIBB}",
	"<{lLpBsSIBB}LBSpl[7]p>",
	"<>",
	"<dJSSffBIs>",
	"<J>",
	"{Bffjjp}",
	"{j[7]jiB[5]dB}",
	"{lj<>jBf<dJSSffBIs>L<J>{Bffjjp}l{j[7]jiB[5]dB}}",
	"<JLfLBIJ>",
	"{cS<JLfLBIJ>}",
	"{cdfCpLCCCiIl}",
	"<d{cdfCpLCCCiIl}Spp[10]LSCcIIf>",
	"<lSJJcI>",
	"<SBpsLciSBj<lSJJcI>B>",
	"<fplcpj{lj<>jBf<dJSSffBIs>L<J>{Bffjjp}l{j[7]jiB[5]dB}}{cS<JLfLBIJ>}Bi<d{cdfCpLCCCiIl}Spp[10]LSCcIIf><SBpsLciSBj<lSJJcI>B>>",
	"<IBjjdiILLlSf>",
	"{iCjBCCjIpC}",
	"{L[6]}",
	"<ldd>",
	"{i}",
	"<l{i}f{}[5]JpdBIcpC>",
	"<CcdJjILIIJpL[15]>",
	"<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>",
	"<Bl[2]<p<CcdJjILIIJpL[15]>IiSsBpjBBJ>c>",
	"<ILi[15]ljj>",
	"{flcfdjdjBSJf}",
	"{jIBIBSfcpSiL}",
	"{IfcCljjfS{jIBIBSfcpSiL}}",
	"<p>",
	"{JpIdlcipIIJc}",
	"{lBcCpCpLBcSd}",
	"{iljL}",
	"{Ljsi{iljL}flcJ<>CL}",
	"<S>",
	"<cil<S>JLBiS<>pB>",
	"{pScjcpLjspId}",
	"<lJJIBifdIij>",
	"<LLBljdfljCd>",
	"<ijIlIL>",
	"<<lJJIBifdIij>CscISS<LLBljdfljCd>dls<ijIlIL>>",
	"<clj<<lJJIBifdIij>CscISS<LLBljdfljCd>dls<ijIlIL>>lddljdL>",
	"{dSS[16]Cj[2]piJf[10]Bsf}",
	"<sfSilfLs>",
	"{pljiIClJLiLf}",
	"{SIslc}",
	"{L}",
	"<pBfddsiIJBsI>",
	"<jsSil<pBfddsiIJBsI>Bld>",
	"<djcBpBClfjJS>",
	"<cLJCSCjspliB>",
	"<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>",
	"<{L}s<jsSil<pBfddsiIJBsI>Bld>ilJf<jlJLjJ<djcBpBClfjJS>p<cLJCSCjspliB>Icl[4]>LLCL>",
	"{j}",
	"<jsjssdIfBlpl>",
	"<LiLISc>",
	"<cL>",
	"{JidfscIsclfl}",
	"{cI{}IsSsiSc{JidfscIsclfl}I}",
	"<sJclIICpi>",
	"{ssISpj<sJclIICpi>lLCcd}",
	"<lfjiISS{cI{}IsSsiSc{JidfscIsclfl}I}S{ssISpj<sJclIICpi>lLCcd}jp>",
	"{ljjCscIlfLjs}",
	"<d>",
	"{fpdfJiidcpiB}",
	"{cfcS}",
	"<lf>",
	"{dCl<d>i{fpdfJiidcpiB}{cfcS}fSC[15]i<lf>}",
	"{Ljffsc{dCl<d>i{fpdfJiidcpiB}{cfcS}fSC[15]i<lf>}pIdsS}",
	"{cdpcSSJJ[13]SL[15]Lf}",
	"<JdjLpjBiICcs>",
	"<Jp>",
	"<jLsBC>",
	"{dplicIlifsiB}",
	"{j{cdpcSSJJ[13]SL[15]Lf}j<JdjLpjBiICcs>[11]<Jp><jLsBC>jic{dplicIlifsiB}}",
	"{lBcjLdCJSIlJ}",
	"<i[16]JcJIs{lBcjLdCJSIlJ}>",
	"<l>",
	"{djCflIdcCjsI}",
	"{dB<i[16]JcJIs{lBcjLdCJSIlJ}>I<l>cpBdl{djCflIdcCjsI}j}",
	"<Sl>",
	"{LSfsiLpcsISc}",
	"{IsIis}",
	"{pBJSJp[4]}",
	"<dIjsp>",
	"{ILCIS}",
	"{jidJCcssdjBB}",
	"{dICcIll[10]BfcLI}",
	"{iI{dICcIll[10]BfcLI}Bs}",
	"{pfcid}",
	"{BpddCssJcjdc}",
	"{JspCf}",
	"<CCsidlCB[14]JsS{JspCf}>",
	"<c>",
	"<CdJlfJsJd[16]pLc>",
	"{cSJJj[13]}",
	"{IcLCBjB{cSJJj[13]}SSdS}",
	"{dJLdCd}",
	"{sjjfLJIdLISJ}",
	"{IL}",
	"{lslSlj}",
	"{LBJp[6]ilIc}",
	"{spIli}",
	"<Jj{LBJp[6]ilIc}{spIli}Cdff<>cic>",
	"<CpjIljISJdfs>",
	"<lLJj[16]Jil>",
	"<BBI<CpjIljISJdfs>iS<lLJj[16]Jil>cjf[12]<>>",
	"<Slj>",
	"<LClILIscJj>",
	"{ScLpsdjLllIl}",
	"<ds[8]pdj{ScLpsdjLllIl}diBjis>",
	"<pCLSpJ>",
	"<jl<pCLSpJ>pCdSLfid[5]S>",
	"{CdLSsBLlppdp}",
	"{pdCIfC[3]dISpdl}",
	"{IBsI{pdCIfC[3]dISpdl}IIfsJlp}",
	"{lli}",
	"{pJ{lli}p}",
	"{dCCCcS{IBsI{pdCIfC[3]dISpdl}IIfsJlp}BClB{pJ{lli}p}}",
	"<IfjBSsJJpldI>",
	"{JjsjjJJcBiIB}",
	"<BB<IfjBSsJJpldI>S{JjsjjJJcBiIB}>",
	"{psLijl<BB<IfjBSsJJpldI>S{JjsjjJJcBiIB}>pB}",
	"<fCdfLflddLfp>",
	"{<fCdfLflddLfp>liiC{}Cl}",
	"{JI}",
	"<B{JI}pJLJ>",
	"{l{<fCdfLflddLfp>liiC{}Cl}l<B{JI}pJLJ>p}",
	"<jIC>",
	"<LpdpjJdBSjl>",
	"<jL<>CSjj<LpdpjJdBSjl>BJJC>",
	"<dCdSlssjpJcc[15]>",
	"<ISs>",
	"<L>",
	"<JIilIsBBlsJd>",
	"<Lld[9]IL>",
	"{ifSsIslpSpij}",
	"<C<Lld[9]IL>[13]ffc[5]{ifSsIslpSpij}>",
	"<JIisSfiBdBcd>",
	"{fcI}",
	"<iifdBfffllBL>",
	"{jcLCcpiCJScC}",
	"<pcScjfLpLJ>",
	"{pjL{jcLCcpiCJScC}Jciilc<pcScjfLpLJ>B}",
	"<LBlppLSSIJIS>",
	"<Lflc<LBlppLSSIJIS>>",
	"{LJCS}",
	"<LjpjJj>",
	"<JifCfBidlLpC>",
	"<iBILBJfJ[10]Bcli>",
	"{C[12]isSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}",
	"<ff[15]SCLspcCiss>",
	"<CdJBSdIf[16]ijss>",
	"{jJdCspdffpfl}",
	"<cf[1]d<ff[15]SCLspcCiss>cJ[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJ>",
	"<C<LjpjJj>If[7]pS{C[12]isSp<JifCfBidlLpC><iBILBJfJ[10]Bcli>jBljB}l<cf[1]d<ff[15]SCLspcCiss>cJ[4]SC<CdJBSdIf[16]ijss>{jJdCspdffpfl}sJ>fcf>",
	"{jppI}",
	"<pLJ{jppI}>",
	"{CfIsICLpicLI}",
	"<BfISp>",
	"{lBICc}",
	"{BdLCsB}",
	"<i>",
	"<CLs>",
	"<JspLpIp>",
	"<jf<CLs>iBB<JspLpIp>JIB>",
	"<BpSisiiBscfI>",
	"<iS<BpSisiiBscfI>JSIBIJSjB>",
	"<csB<i><jf<CLs>iBB<JspLpIp>JIB>I<iS<BpSisiiBscfI>JSIBIJSjB>jSlsf>",
	"<pfifSilBCsBi>",
	"<Bpii>",
	"{pdIJLj}",
	"<JLC[12]CsJSi{pdIJLj}Ifs>",
	"<JCC<JLC[12]CsJSi{pdIJLj}Ifs>JJ>",
	"<lldfS>",
	"{siJjBLiSIIj<lldfS>}",
	"{jdscdfBSLpj}",
	"<BJLCIlBCJlIj>",
	"{CBlj}",
	"<I<BJLCIlBCJlIj>{CBlj}JBjs>",
	"<lIBllLL<I<BJLCIlBCJlIj>{CBlj}JBjs>>",
	"{dIJpCsSJ}",
	"<sfsdBJdBliLf>",
	"{jjjCljidi<sfsdBJdBliLf>}",
	"{dllLs{jjjCljidi<sfsdBJdBliLf>}SLL[15]fiI}",
	"<IffIppICjJiC>",
	"{Bls}",
	"<LJLdd{Bls}BdiJsi>",
	"{idfCfSSCILjC}",
	"{sf}",
	"{SdIIpBSlIISB}",
	"{JLsJLSfJ[14]lj}",
	"{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}",
	"<CBLlfScjLpLJ>",
	"{SCsciCp}",
	"<S<CBLlfScjLpLJ>I{SCsciCp}Cf>",
	"<slIlpIppcCfc>",
	"{S<slIlpIppcCfc>C}",
	"<cS>",
	"{{{SdIIpBSlIISB}{JLsJLSfJ[14]lj}LJl}<S<CBLlfScjLpLJ>I{SCsciCp}Cf>cjcsLj{S<slIlpIppcCfc>C}J<cS>}",
	"<BIpcssdfJSc>",
	"<sdSffIssSpCL>",
	"{B}",
	"{p}",
	"<sdsSssfBd>",
	"{cSid{p}<sdsSssfBd>[13]}",
	"{Ifd{cSid{p}<sdsSssfBd>[13]}LI}",
	"{sBBfLBd}",
	"{LBsSBpLSIcLf}",
	"<lSsL[8]ji{}csfCL>",
	"<SccdLsfidCfI>",
	"{JCCSiBj}",
	"{i<lSsL[8]ji{}csfCL>cSJSis<SccdLsfidCfI>{JCCSiBj}cf}",
	"<SSlBdLfcBfJs>",
	"{jifBl[7]s}",
	"<pdisdi>",
	"{pI<pdisdi>S}",
	"<CJLpCdj[7]>",
	"<CS{pI<pdisdi>S}L<CJLpCdj[7]>JdBSCBd>",
	"{SLL[1]BLiILfLcl}",
	"<djcB>",
	"<dJp[13]Lsp[4]sBipij>",
	"<fLCjI>",
	"<pfCBi<dJp[13]Lsp[4]sBipij>dB<fLCjI>BiL>",
	"{spdCC<djcB><pfCBi<dJp[13]Lsp[4]sBipij>dB<fLCjI>BiL>ilcSJ}",
	"{BdIipJjjJ}",
	"<sdic<>jfii{BdIipJjjJ}{j}s>",
	"<sC>",
	"{lBpp<sC>IiCjSij}",
	"<CdjjCSdif>",
	"{BsljiiBCiLJl}",
	"{dCBliBLplJSd}",
	"<Ll[1]if{BsljiiBCiLJl}sdjISc{dCBliBLplJSd}>",
	"<II{lBpp<sC>IiCjSij}S<CdjjCSdif>sC<Ll[1]if{BsljiiBCiLJl}sdjISc{dCBliBLplJSd}>fldp>",
	"{Jll}",
	"{CdBp{Jll}Bij}",
	"<fSfpsf[11]sCpffj>",
	"<lfs[13]ILlISpSpJ>",
	"{SsfficlCB}",
	"<BdI<lfs[13]ILlISpSpJ>jd{SsfficlCB}sLj[2]jj>",
	"<lsSJcfJScIdc>",
	"{jfLIjdcLi}",
	"<<lsSJcfJScIdc>Jcj{jfLIjdcLi}>",
	"<ljLJss>",
	"<sIJij>",
	"{jIJj<sIJij>fd}",
	"{fcijsLISLlSI}",
	"{{fcijsLISLlSI}ipcifiL}",
	"<I<>C{jIJj<sIJij>fd}iSs{{fcijsLISLlSI}ipcifiL}SLic>",
	"{SsIpJLfs}",
	"<SlsfcLj>",
	"{CdpSpp}",
	"{fcdSIdLIds<SlsfcLj>{CdpSpp}}",
	"<jJdpiLp>",
	"<C<jJdpiLp>SSIdCI>",
	"{Cdp}",
	"{CSsfBcfcSlpc}",
	"{fIjLpCBlfScd}",
	"<If>",
	"{LsdsILcs[11]cppB}",
	"<LljcS<If>i{LsdsILcs[11]cppB}>",
	"{SfScSiJSCBCJ}",
	"{B[3]cfl}",
	"{jcf}",
	"{iliCSCiSjBid}",
	"<pJ>",
	"{sBiSJBJjcCjd}",
	"<fLlflcCfJISI>",
	"<lLfCcS[2]JIB>",
	"{BfSpffpSijB[5]B}",
	"{C<lLfCcS[2]JIB>p{BfSpffpSijB[5]B}CiSJJjjl}",
	"<IiC>",
	"{<IiC>[14]iJCSfcdSiJL}",
	"{{<IiC>[14]iJCSfcdSiJL}jicSpJIdCjJ}",
	"{IfpLdIcppsLl}",
	"<BCIILCiSicfB>",
	"<BcjBplljBdSp>",
	"<CJISlldLJffB>",
	"<cjL<BcjBplljBdSp>[9]dSp<CJISlldLJffB>pcc[1]c>",
	"<f>",
	"{pjC[3]jBj[9]}",
	"{BsfBdlfpp[4]fpj}",
	"<djcjiCi>",
	"{d{BsfBdlfpp[4]fpj}cL[1]jB<djcjiCi>SBBSj}",
	"{dJBs}",
	"{Llfp[13]CpLjcpiL}",
	"{C}",
	"<IcdBll>",
	"{LjpS}",
	"{LS}",
	"<LjLlf[15]pJSC[11]dJI>",
	"<BdIJLLc>",
	"<jI<L>CjcfppppC>",
	"<cIlLlcsBlB[14]pJ>",
	"<jpLpBBBcCjlI>",
	"{<jpLpBBBcCjlI>dScpdsjlfl}",
	"{iBCIipLsfpBL}",
	"{SLjpLLjljI{iBCIipLsfpBL}s}",
	"{JIp}",
	"<cISSdIC[5]plljc>",
	"<LSiIl<><cISSdIC[5]plljc>slll[4]p>",
	"<JC>",
	"{i[13]}",
	"{IpffiLBLs[2]fsL}",
	"<SLpIfdldSJdj>",
	"{SISsCI}",
	"<SplLfBs<>sIpf>",
	"{<SLpIfdldSJdj>BCps{SISsCI}<SplLfBs<>sIpf>s}",
	"<lIcsljlJCpL>",
	"<CdBp[8]d<lIcsljlJCpL>f>",
	"{sBs[16]}",
	"{Sdc[12]fsdjfiCLJ}",
	"{Bl<>L{Sdc[12]fsdjfiCLJ}[6]LccBIpc}",
	"{cC}",
	"<B{cC}jls[5]d>",
	"<cclppiJfSfis>",
	"<I[13]LcJjIBCpp[1]pf>",
	"{JLfllIiIj}",
	"<sdLfs[6]C>",
	"<clSfdSppl{JLfllIiIj}S<sdLfs[6]C>>",
	"{Cd[12]CIBJi[1]IsijJ}",
	"<ICfpS[8]IJCfCdc>",
	"{CIdCss[6]}",
	"<pJcBJjB[6]BJCcB>",
	"<{CIdCss[6]}SjciipBI<pJcBJjB[6]BJCcB>cL>",
	"{SfspdscpIpsj}",
	"<cLSlfjI>",
	"{LCSBddjLSfjs}",
	"{pC[10]dLiCIsfpdL}",
	"<d<cLSlfjI>djcf{LCSBddjLSfjs}j{pC[10]dLiCIsfpdL}[6]jdL>",
	"<BfCpdiLsJsiL>",
	"<jj>",
	"{IBJLCflCfsiI}",
	"{cJSjCBIIj}",
	"<ilcjC{cJSjCBIIj}[14]lfBCdS>",
	"<lJIpi[4]ldjJl>",
	"<Cl>",
	"<pdJ>",
	"{jpiisIfilBfS}",
	"{JC}",
	"{si}",
	"{BLS}",
	"{IdcdjJCsJCLf}",
	"{LCcs[7]dBL[6]iiiJC}",
	"{d[3]dC[9]f}",
	"<CISl[16]lfJjSlIJ>",
	"{Ll[1]pLSsJs}",
	"<ILIcpCj>",
	"<sBldCiBisi>",
	"<BcBJSJ>",
	"{JpBdpCiLCflJ}",
	"<pS[6]LC[5]IjSfiBIp>",
	"<J{JpBdpCiLCflJ}ll<pS[6]LC[5]IjSfiBIp>jJs>",
	"{JjIfJljIIIjL}",
	"<lSBiIjIdI>",
	"<I>",
	"<siBB[5]i<lSBiIjIdI>scl<I>sd>",
	"{BjiiBLdiJSd[9]J}",
	"<CBCIIpdfJiSS>",
	"<dpfBJ{BjiiBLdiJSd[9]J}s<CBCIIpdfJiSS>slI>",
	"<SJJpJlCI>",
	"{LScCJJLdsBJj}",
	"<dCLjLLfilpsS>",
	"<is<dCLjLLfilpsS>SCSfSLlBl>",
	"<BjpJ[11]>",
	"{psCpSjcI}",
	"{Cslc[8]SBifsjIJ}",
	"<pILSIplCLLcL>",
	"<iBldliiL<pILSIplCLLcL>jii>",
	"<BsfJ<iBldliiL<pILSIplCLLcL>jii>IcIBdBJ>",
	"<IC[15]pSCCCJjdId>",
	"<<IC[15]pSCCCJjdId>>",
	"<jclpJppSILds>",
	"{iBpdpJdcliBL}",
	"<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>",
	"<dCCf>",
	"<CLSBIisfJI>",
	"<LpdsdJcp<dCCf>l<CLSBIisfJI>s>",
	"{JS<<IC[15]pSCCCJjdId>>ciIcJ<lBjBSSJ<jclpJppSILds>IB{iBpdpJdcliBL}C>p<LpdsdJcp<dCCf>l<CLSBIisfJI>s>p}",
	"<SLlSlcpc>",
	"<jIiJI>",
	"{<jIiJI>ddBsdBSJlcj}",
	"{SJB}",
	"<IS{SJB}ccsiiJJfJ>",
	"{I}",
	"<{I}SJjdJIIjlBp>",
	"<flBd<>JlfjlfB>",
	"{BLBi[6]LcffsSBc}",
	"<dS>",
	"{J}",
	"{Cc<d>SIC<>cd[16]LCL}",
	"{BjplLpIBLlfl}",
	"{fsjL}",
	"{jdlJdCpJSpjB}",
	"{J{fsjL}JfL{jdlJdCpJSpjB}JlLBid}",
	"<iJjjSIjsflfC>",
	"<djC>",
	"{djpcI<djC>SJBCBc}",
	"{Cjcpcff}",
	"{Csf[12]cLidiJjs}",
	"<c[12]S{Cjcpcff}JCds{Csf[12]cLidiJjs}IIdL>",
	"{<c[12]S{Cjcpcff}JCds{Csf[12]cLidiJjs}IIdL>SBjfpc<>BplS}",
	"<iLJs>",
	"{d<iLJs>[15]pp}",
	"{IJlsf[7]l[10]Blip}",
	"<ijpsL[4]c{d<iLJs>[15]pp}j{IJlsf[7]l[10]Blip}liI>",
	"{s[11]clc[15]cccpcCi[6]J}",
	"<icciIlCJ{s[11]clc[15]cccpcCi[6]J}LI[15]j[15]>",
	"{djcJcj}",
	"{pfcssLSjcCLj}",
	"{IijdSIfjIlIS}",
	"<s{IijdSIfjIlIS}Lld>",
	"{d<s{IijdSIfjIlIS}Lld>sBIlB}",
	"{jSd[9]LfSCCsC}",
	"{jSiBL}",
	"{s{jSiBL}}",
	"{fccdspslJIji}",
	"<fcJCfSipiccj>",
	"{LdpCppLd[3]pf[10]SI}",
	"{fjfCCLCIc<fcJCfSipiccj>{LdpCppLd[3]pf[10]SI}s}",
	"<IILijS[15]SllspI>",
	"<lsB>",
	"<lB>",
	"{<IILijS[15]SllspI>pC<lsB><lB>cc}",
	"<p{fjfCCLCIc<fcJCfSipiccj>{LdpCppLd[3]pf[10]SI}s}pl{<IILijS[15]SllspI>pC<lsB><lB>cc}sS>",
	"<CipSjcdjsLfs[1]>",
	"<dLCCCJB>",
	"{sLlfcIs}",
	"{sJJCjIclfffd}",
	"<I<dLCCCJB>{sLlfcIs}LcLsciIl{sJJCjIclfffd}>",
	"<BI>",
	"{Ssfd}",
	"<fd{Ssfd}Bc>",
	"{sliljsCSSLIf}",
	"<f[8]ssS>",
	"<SsBijfccj<f[8]ssS>fj>",
	"<<BI>iB<fd{Ssfd}Bc>lsIi{sliljsCSSLIf}<SsBijfccj<f[8]ssS>fj>Ij>",
	"{lII}",
	"<IJpjf[7]JCBj>",
	"{{lII}ciLI<IJpjf[7]JCBj>}",
	"<plLSJSfdSipl>",
	"{Ifc[16]cI}",
	"{BBCBBCllLj<plLSJSfdSipl>{Ifc[16]cI}}",
	"{p{BBCBBCllLj<plLSJSfdSipl>{Ifc[16]cI}}JLcJLIsjlC}",
	"<ficL>",
	"{Jcfcj}",
	"<{Jcfcj}jfjf>",
	"{d<{Jcfcj}jfjf>dLIC[14]ILIffj}",
	"{IICldsBSpBsJ}",
	"{dCJ}",
	"<sCfj{IICldsBSpBsJ}Cdicc{dCJ}p>",
	"<JiBCsccpLli[4]S>",
	"<dBcjssfcLJIB>",
	"<cic>",
	"<BcLp<dBcjssfcLJIB>sILJ[7]<cic>Sc>",
	"<sClILcdIBBdB>",
	"{fsJiccif}",
	"{SdLsJSCBC{fsJiccif}CC}",
	"{lCppL{SdLsJSCBC{fsJiccif}CC}c}",
	"<cCCjI[16]SCiscfC>",
	"{JiJ}",
	"<SLLJSpLsfslp>",
	"<S{JiJ}BccsS<SLLJSpLsfslp>pSJc>",
	"<B<>f<S{JiJ}BccsS<SLLJSpLsfslp>pSJc>csLSiBcL>",
	"{ljjsLlIJcsp}",
	"<dIJcdL>",
	"{iICBcs{ljjsLlIJcsp}IL<dIJcdL>jS}",
	"{SCfl[9]dsIBjfJI}",
	"{cIffC[14]Is{j}dLfl}",
	"<{cIffC[14]Is{j}dLfl}BIJIIpl>",
	"{iCscilILcCCs}",
	"<jBcCjC>",
	"{sfIi}",
	"<{sfIi}dl>",
	"{SBcL}",
	"<Bcjifdsi[16]dsiI>",
	"{dsjdIcj[4]lpIjf}",
	"<Li>",
	"<Lsd[8]SppL>",
	"{C{dsjdIcj[4]lpIjf}IJILd<Li><Lsd[8]SppL>}",
	"<JIIfdj>",
	"<SfppLBBCpscf>",
	"<ijIJS>",
	"{JBL<ijIJS>csCSsBfj}",
	"<JIL<JIIfdj><SfppLBBCpscf>lBd{JBL<ijIJS>csCSsBfj}fc[11]C>",
	"<cisScSJdLL>",
	"<Blil[12]c<cisScSJdLL>BjcCCc>",
	"{ccjC}",
	"<JCjJjiSifJpC>",
	"<dJLi{ccjC}dd<JCjJjiSifJpC>diIj>",
	"{sSJlJC}",
	"{cfpijijBJifi}",
	"{p{cfpijijBJifi}}",
	"<fp>",
	"<l<fp>LJsffcsdls>",
	"{siCIdp}",
	"{fjLspCjfIll{siCIdp}}",
	"<JL[9]dc<l<fp>LJsffcsdls>{fjLspCjfIll{siCIdp}}jCjdsC>",
	"{CdiCsfSSsi}",
	"{fjp[5]CfipdS}",
	"<C>",
	"{<l>SJCLjSJ<C>LCc}",
	"{SpdLLfsf}",
	"<dffBClflcSpi>",
	"<SlS>",
	"<sJLIpipLsCBJ>",
	"{sj}",
	"<sLBjLIdJsLLS>",
	"<Jl>",
	"<jjL>",
	"{iCcpljS<Jl>IfB<jjL>}",
	"<{iCcpljS<Jl>IfB<jjL>}sfLc>",
	"{ils}",
	"{cBCfLjfLBdsI}",
	"<pIsCCj{cBCfLjfLBdsI}S>",
	"<dSddCisJf>",
	"<<dSddCisJf>cCJlClfl[4]Is>",
	"{CS[8]}",
	"<lIiSjfSCIidj>",
	"{sSJ}",
	"<SijiLlii{sSJ}lJs>",
	"<sIfCJsfJBBdi>",
	"{B[8]LBBSjfBCdLs}",
	"{Jc[3]dJ{B[8]LBBSjfBCdLs}[12]sjsfj}",
	"{icBjSLCCcljC}",
	"{S}",
	"{I{icBjSLCCcljC}BdB<>csf{S}ip}",
	"<lSdIclBdILdd>",
	"{icf}",
	"{jJllBC{icf}SL}",
	"{fisLS}",
	"{dLjjJljJls[13]pd}",
	"<llBdIsf>",
	"{ciIIJBslJfsi}",
	"{ci{ciIIJBslJfsi}SlL}",
	"{IBsjCjdpLJJs}",
	"<S{IBsjCjdpLJJs}psBIj>",
	"<B>",
	"<ICpIpISIflBl>",
	"<ffBdLlBCIl>",
	"{BfLllc}",
	"<fsd{BfLllc}fpCiL>",
	"{sjBfpCCBBSIp}",
	"<cfcdBp>",
	"<sSfCCflj[10]ICJI>",
	"{issJicL}",
	"<ssBcL>",
	"<fjdj[7]<sSfCCflj[10]ICJI>I{issJicL}p<ssBcL>pdd>",
	"<jcI[2]cIsIBci[12]C>",
	"<<jcI[2]cIsIBci[12]C>iscJC>",
	"{ciSIJsLfid}",
	"<cdJsL{ciSIJsLfid}f>",
	"{LSfdIif[7]Idslj}",
	"<JpB<cdJsL{ciSIJsLfid}f>CiLLB{LSfdIif[7]Idslj}lL>",
	"<dCf[12]Jfpd>",
	"<CJilSIdcJsC>",
	"<CdJBpcfBIiBS>",
	"{illCJldj}",
	"{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}",
	"{lsIls{jc[4]<dCf[12]Jfpd>csC<CJilSIdcJsC><CdJBpcfBIiBS>{illCJldj}sIj}C}",
	"{cjlIccJBs}",
	"{cpd}",
	"<JpCcdll<p>ffi>",
	"{csB}",
	"<ClIjIpfcISji>",
	"{IpcS[7]fIcdlfls}",
	"{ijdIll{IpcS[7]fIcdlfls}cSScs}",
	"<LC{ijdIll{IpcS[7]fIcdlfls}cSScs}fisIpcS[8]dp[16]>",
	"{iLjJlsfslfsL}",
	"<JpcJpi>",
	"{i{iLjJlsfslfsL}{}LccfJsIi<JpcJpi>}",
	"<B[12]jfpfBBLL<>>",
	"{jB}",
	"{dI[8]icIJ{jB}jLdSs}",
	"<BJsBssI[13]fCJlJ>",
	"<dI>",
	"{ICilisciS<dI>Ci}",
	"{clLdCiLC}",
	"<fIpLIJil>",
	"{IsLiJdLf}",
	"<jdcjJllfB<fIpLIJil>B{IsLiJdLf}>",
	"<cLJfLiB[10]JfJJI>",
	"<lIJjCcljCjBL>",
	"<JI[15]JdLd<lIJjCcljCjBL>sSlCL>",
	"{pCjLjls}",
	"<fsiCLiCB{pCjLjls}CJ>",
	"<JBccfIJBIBBj>",
	"<{S}>",
	"{pCpdlscd[8]dlj}",
	"<SsJIILSsSs>",
	"{<SsJIILSsSs>J}",
	"<d[9]jJjLcjI>",
	"<BlfBSfJpBf<d[9]jJjLcjI>l>",
	"<iIBlJlplCpjC>",
	"{l}",
	"{{l}cBj}",
	"{JIS<iIBlJlplCpjC>LJB{{l}cBj}BBlS}",
	"{sfdJCcB}",
	"<J{sfdJCcB}lLJlBjJBBl>",
	"<fJlslfCJl<J{sfdJCcB}lLJlBjJBBl>Cl>",
	"<djLj>",
	"{IdjpfIlcpC<djLj>c}",
	"<BBcJsiiCLljS>",
	"{Sp[16]lICcSjJpBS}",
	"{ljj<BBcJsiiCLljS>dCd[4]sj{Sp[16]lICcSjJpBS}cS}",
	"{JclL}",
	"<SJs>",
	"{Bf}",
	"{<SJs>Blllip{Bf}}",
	"<B{JclL}LdpSI{<SJs>Blllip{Bf}}ip>",
	"<LfsJsJdcL>",
	"<lifc>",
	"{Ldd}",
	"<fffplCplC>",
	"{JJJS<fffplCplC>iSfjipC}",
	"<SJdiL>",
	"<dp>",
	"<BfdCsCclcjjC>",
	"<d<dp>L<BfdCsCclcjjC>i>",
	"<Bi<d<dp>L<BfdCsCclcjjC>i>ccfjJJlCd>",
	"<iBccLlSpccCl>",
	"<pCLLIclLBLij>",
	"<Scflpd<pCLLIclLBLij>LLsLj>",
	"<lccIiiffcjL>",
	"{Ci<lccIiiffcjL>ddJpJfscC}",
	"{djiBpiJIIpfp}",
	"<sdsS>",
	"{ddcsBsjBBLdj}",
	"{dpCJliL[11]JS}",
	"<{ddcsBsjBBLdj}sBIJJ{dpCJliL[11]JS}j>",
	"<sJdLJIdLLiJ[6]C>",
	"{<sJdLJIdLLiJ[6]C>cLJflfc}",
	"{sB{<sJdLJIdLLiJ[6]C>cLJflfc}[16]SJj}",
	"{IspBfiLI[7]J}",
	"<s>",
	"<fBdCICLJfICL>",
	"{jpIdplcjd[12]l<fBdCICLJfICL>C}",
	"<<c>dJs<s>{jpIdplcjd[12]l<fBdCICLJfICL>C}jff>",
	"<piJjCfLCSI>",
	"{pISICSs[4]p[13]Icl}",
	"{p{pISICSs[4]p[13]Icl}sCJfs}",
	"<ldCjiS>",
	"<Lflf<ldCjiS>SfSiBIL>",
	"<JLpdsljpfI[4]p[2]s>",
	"<IjcJBpCBfCd>",
	"<jdSBpSJds>",
	"<<>JiBdd<IjcJBpCBfCd><jdSBpSJds>iCIc>",
	"{JLjjSjidifJd}",
	"{<Lflf<ldCjiS>SfSiBIL><JLpdsljpfI[4]p[2]s>IL<<>JiBdd<IjcJBpCBfCd><jdSBpSJds>iCIc>IIld{JLjjSjidifJd}LB}",
	"{iiIpJlCjjsBj}",
	"<LJ>",
	"{SSJccdBBlSli}",
	"<jjssfliSJLIS>",
	"<sBIJBj<jjssfliSJLIS>fIdSB>",
	"{LjBlIj}",
	"<fSC[5]LCJii[6]fl>",
	"<ijlsB[3]{LjBlIj}LJ{}<fSC[5]LCJii[6]fl>Bj>",
	"<fBffLJSdScl[5]>",
	"<LCSijLSfjifS>",
	"<dSJdLdlpLdj>",
	"{JjJJl<dSJdLdlpLdj>{}L}",
	"{BJcsBSjSsipB}",
	"<CIcSBcpLpcd{BJcsBSjSsipB}>",
	"<IdJjjCpscIdI>",
	"<sLc{}J<>p>",
	"{<sLc{}J<>p>JJf}",
	"<ldld[4]ICpLBBJ>",
	"{Lll}",
	"<Cdf<ldld[4]ICpLBBJ>f{Lll}[11]csj>",
	"<Lf<Cdf<ldld[4]ICpLBBJ>f{Lll}[11]csj>Jjl>",
	"<SBjl>",
	"{dBpcIJLsJLlc}",
	"{IjsIfJJfdfsS}",
	"{pplCdcdILBlJ}",
	"{IdfJlcl}",
	"<jpJdid>",
	"<dJS{IdfJlcl}JSjisdJ<jpJdid>>",
	"<C<dJS{IdfJlcl}JSjisdJ<jpJdid>>fdf[6]<>JcSCLB>",
	"{SfSjIclCfSsl}",
	"{IcjcIdCjc<C>JL}",
	"<IfJB>",
	"<jpJIJjsfifIs>",
	"<jSBIdpsjlBJL>",
	"<sILLBfCcLslJ>",
	"{sJILd<jSBIdpsjlBJL>{}[3]<sILLBfCcLslJ>SfB{}}",
	"{SdIIppS}",
	"{LfISIfjfBicC}",
	"{pLcs}",
	"{JSlBddCCj{LfISIfjfBicC}S{pLcs}}",
	"{fpcsiIIiIfC{JSlBddCCj{LfISIfjfBicC}S{pLcs}}}",
	"{fpssLf[6]Ii}",
	"{JB[13]}",
	"{B[8]<l>B{JB[13]}fIsBj}",
	"{Bffpi[9]J}",
	"{dJClCLL[7]dScs{Bffpi[9]J}}",
	"<CCis>",
	"{SSjcsS[8]L<CCis>L}",
	"{IIjCCjSLfCdp}",
	"<cBi[4]cdlSJdSSp>",
	"{idiL[2]lcJcfSId}",
	"{dCs<cBi[4]cdlSJdSSp>[8]{idiL[2]lcJcfSId}SsjCLjj}",
	"{SlsiLcJJjSf}",
	"{LiLJciScl}",
	"<CpiC>",
	"{j{LiLJciScl}c<CpiC>}",
	"<d[1]fJj>",
	"{jjSlBSjBlff<d[1]fJj>}",
	"<diJjCidlslIs>",
	"{BdIIcdjsdBBd}",
	"<slSSCc{BdIIcdjsdBBd}iJ[4]fIp>",
	"{SBddiCsJpCl<slSSCc{BdIIcdjsdBBd}iJ[4]fIp>}",
	"<cs>",
	"{{p}sB}",
	"{s}",
	"{fIBCciciIs}",
	"<Cdc>",
	"<d[15]CjII<Cdc>i[13]CjfsL>",
	"<CB[9]pJlSIc>",
	"<BBsLilBcppSI>",
	"<BBSSSpSfsp[6]ii>",
	"<BcJjlfljJiCl>",
	"{dfpSjS}",
	"<sClcd<BcJjlfljJiCl>iclc{dfpSjS}J>",
	"<iCSd<BBSSSpSfsp[6]ii><sClcd<BcJjlfljJiCl>iclc{dfpSjS}J>j[11]c>",
	"<CSJpsf[3]SIdC[5]jc>",
	"<LpipS>",
	"<CcBd>",
	"<c<CSJpsf[3]SIdC[5]jc>pJls<LpipS>S{i}dB<CcBd>>",
	"<<L>>",
	"<dfpjpc<c<CSJpsf[3]SIdC[5]jc>pJls<LpipS>S{i}dB<CcBd>>Sf<<L>>C>",
	"<jIpfCCcfdBLp>",
	"<LppdILdJdifS>",
	"<lBCcIS[8]<LppdILdJdifS>>",
	"{dSJ<lBCcIS[8]<LppdILdJdifS>>}",
	"<BBdI>",
	"<SsLsIjJslCBC>",
	"<pI[5]jifpcfsIfl>",
	"{CfLCjLdsJcLi}",
	"<Idjd[13]IfpIifcI[2]>",
	"<p<pI[5]jifpcfsIfl>{CfLCjLdsJcLi}<Idjd[13]IfpIifcI[2]>ffidjfLl>",
	"{jlfcJpi}",
	"{JfflBIdjcjjc}",
	"{BpdJppipssfC}",
	"{{BpdJppipssfC}C{}BBcdJijd{}}",
	"<iflJICpcSCfj>",
	"{<iflJICpcSCfj>jCs}",
	"{jdIB}",
	"{jjJCpJJJ}",
	"{SC[11]s[7]IpssJ}",
	"<Ld{SC[11]s[7]IpssJ}sBsjSf[14]fCB>",
	"<JLilSC>",
	"<SJf<JLilSC>cBsfJi>",
	"<pLscS<SJf<JLilSC>cBsfJi>lpplSc>",
	"<pjC>",
	"{pJfJd}",
	"{j{pJfJd}cL<>lJJ}",
	"{CiCBfJLSJjLc}",
	"{SC}",
	"<pBlssJJS{SC}djS>",
	"{fiiiC[15]cSiJSBJ}",
	"<Bf{fiiiC[15]cSiJSBJ}lcfs>",
	"{JijCilIscp}",
	"<LlCLSL{JijCilIscp}cLJjp>",
	"<<pBlssJJS{SC}djS>JSfL<Bf{fiiiC[15]cSiJSBJ}lcfs><LlCLSL{JijCilIscp}cLJjp>JddCf>",
	"<IlJfjl[3]l[12]Lcj[4]dj>",
	"{IJjCfiLiSJpd}",
	"<BCjJpCfIsI{IJjCfiLiSJpd}J>",
	"<cdIsiLcjfd>",
	"{d[8]cs<cdIsiLcjfd>}",
	"{jdidf{d[8]cs<cdIsiLcjfd>}SJJB[9]id}",
	"<SCpjidISjlfB>",
	"{L[12]IJBsfCljCBL}",
	"<JCllicLCCIJj>",
	"<SjiCCj>",
	"{LIBsBifSJSIL}",
	"{dfjjBp}",
	"<<SjiCCj>Jil{LIBsBifSJSIL}iCi{dfjjBp}>",
	"{sIcjBiCJfcjL}",
	"<LICfSS>",
	"<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>",
	"{IlLppBSpiCpp}",
	"<{IlLppBSpiCpp}>",
	"<cjsJ<BdSlIjL{sIcjBiCJfcjL}<LICfSS>jcl>L<{IlLppBSpiCpp}>pLLsd>",
	"<IdsIICSBlijj>",
	"{cfS[4]}",
	"<fcjdI>",
	"<C[15]BBi[5]IISIII<fcjdI>J>",
	"<csjdjsJcL[4]cfJ>",
	"{pJ[9]sdfIlsjjLL}",
	"{sfBfjSc[2]pcJBf}",
	"<<csjdjsJcL[4]cfJ>C{pJ[9]sdfIlsjjLL}SLLs{sfBfjSc[2]pcJBf}JpsC>",
	"{lfJLcSSc}",
	"<{lfJLcSSc}>",
	"{iisBScjSscJ[4]l}",
	"<pIjsfCjldsBf>",
	"<cCic<pIjsfCjldsBf>s[7]j>",
	"<iB>",
	"<sLlIC>",
	"{jcfIsICs}",
	"<lLlfsdfdCLid>",
	"<jlps<lLlfsdfdCLid>BJLjCLJ>",
	"<CdBLfpIfCL>",
	"{dfd}",
	"{BS[9]CjcILiJ<CdBLfpIfCL>B{dfd}}",
	"{siilCififLs}",
	"{ic}",
	"{LjJ}",
	"{BdJcBi}",
	"{sp}",
	"<jId{LjJ}ffiS{BdJcBi}B{sp}I>",
	"<BJIdccIIsISf>",
	"<icisfJffIfCf>",
	"<j[7]sl{}cCB<icisfJffIfCf>IcsI>",
	"{LpLCilJCSfJp}",
	"{sILC}",
	"{{}{LpLCilJCSfJp}iiSfcdccI{sILC}}",
	"<Cs{{}{LpLCilJCSfJp}iiSfcdccI{sILC}}Bss>",
	"<lJfSppIcSIjl>",
	"{IsidcssLIBIc}",
	"{ldlsCS}",
	"{sLdCpsiiflis}",
	"{BjlpcijfLjpL}",
	"{d[13]SsIsJJc}",
	"{<lJfSppIcSIjl>{IsidcssLIBIc}ips{ldlsCS}{sLdCpsiiflis}{BjlpcijfLjpL}Ls{d[13]SsIsJJc}C}",
	"<fdCpdJIlj>",
	"{SCLSsd}",
	"<i{SCLSsd}jclSssfClS[9]>",
	"{pSLpi[13]}",
	"{CjplpiBB}",
	"<cJiJsdsLSsdl>",
	"{dljLiS}",
	"{{CjplpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}JjS}",
	"{BCjC{{CjplpiBB}js<cJiJsdsLSsdl>CcCi{dljLiS}JjS}fjILiJJ}",
	"{CBC}",
	"{CspdsjL}",
	"{lL[6]sIIcLC{CBC}jS{CspdsjL}}",
	"<{lL[6]sIIcLC{CBC}jS{CspdsjL}}Lcji>",
	"{CdsIJiLIcfCp}",
	"{lfC}",
	"{pCds{lfC}dclfl[6]ds}",
	"{lS{pCds{lfC}dclfl[6]ds}J}",
	"<plClJLjf>",
	"{J<plClJLjf>ls}",
	"<IJdsiiBpScIC>",
	"{j<IJdsiiBpScIC>BllddBfBJs}",
	"<scjcppLjISfj>",
	"{cJ<scjcppLjISfj>}",
	"<ijdiSCJBIiLS>",
	"<flpSdJiJcsdd>",
	"<CpS>",
	"<JJLsS[10]JjlIsBf>",
	"<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>",
	"{Bi[5]dsJIsdlIds}",
	"<dd{J}d<C[5]dcjSpB<CpS>cl<JJLsS[10]JjlIsBf>[13]d>{Bi[5]dsJIsdlIds}BdBfjj>",
	"<BC>",
	"{ILfBdBSf}",
	"{lsJJsfBdIiiB}",
	"<Cs[6]f{ILfBdBSf}cS{lsJJsfBdIiiB}lc>",
	"{dpfLc}",
	"{Bdjssi}",
	"<iBlsdjdS>",
	"{dsJsI{Bdjssi}I<iBlsdjdS>CBd[4]S}",
	"{cjB[9]lLjdIJ[14]pCf}",
	"{fpLLSdCIdjsJ}",
	"{ICIdcLsl}",
	"<dsjdCI[2]{fpLLSdCIdjsJ}IBid{ICIdcLsl}>",
	"<jl>",
	"{Sl[2]SCijBIpJfC}",
	"{LcIB}",
	"<Sdd{LcIB}lICLdsj>",
	"<C[5]LJISS>",
	"{IISI<C[5]LJISS>CC}",
	"<llISsLssfc[13]dp>",
	"<I{}<llISsLssfc[13]dp>ISfldSI>",
	"<CfjBSJdBpJJC[4]>",
	"<iLdjj>",
	"<fCpjCJJdclSd>",
	"{SCpsi}",
	"<Jil>",
	"<icB{SCpsi}<Jil>lsdIBiI>",
	"{isipjdlsSjlS}",
	"{sjdci}",
	"{BpfscIcLdCLd}",
	"<f{BpfscIcLdCLd}c>",
	"<pBpCspifsjlf>",
	"{pfiiCdBj<pBpCspifsjlf>jfJ}",
	"{CcLCfpCj}",
	"{llfffsddlcjf}",
	"{Sp[7]s}",
	"<cSCJJcSSjjiJ>",
	"{ifcBjsdcCsjj}",
	"{SLfCsLSIISIS}",
	"{SSjI{Sp[7]s}sj<cSCJJcSSjjiJ>{ifcBjsdcCsjj}{SLfCsLSIISIS}ps}",
	"<pIjp>",
	"<BJIJIcJ>",
	"<cfSBc[8]>",
	"{sSisSCSifCcI}",
	"{SpfdfLI[8]SpLij}",
	"{CJli[7]pcS}",
	"{<>BJ{sSisSCSifCcI}{SpfdfLI[8]SpLij}{CJli[7]pcS}cIBLCL}",
	"<iiC<cfSBc[8]>JLf<f>{<>BJ{sSisSCSifCcI}{SpfdfLI[8]SpLij}{CJli[7]pcS}cIBLCL}jdd>",
	"<CcSiffijcIiI>",
	"{LpSdI<CcSiffijcIiI>}",
	"<lBSJpiSILpBp>",
	"<BcCjiisdCdif>",
	"<CCsCjsCfLJBj>",
	"{CiclSBBC<CCsCjsCfLJBj>dcd}",
	"{cpp{CiclSBBC<CCsCjsCfLJBj>dcd}jssJSpsd}",
	"{Jidd}",
	"{dCCLJs{Jidd}CfplS}",
	"{Jids[12]BJLfscdC}",
	"<pBisLdlidddd>",
	"{ffIcdllIfiBj}",
	"{{ffIcdllIfiBj}jJjJSs}",
	"{LJJdLBcjJ}",
	"<ddBCBJBf{LJJdLBcjJ}SS>",
	"{jl{j}sISjSSpBB}",
	"{L<ddBCBJBf{LJJdLBcjJ}SS>IjfJCBlSB{jl{j}sISjSSpBB}}",
	"{Jpi}",
	"<sJCScsLsLSLL>",
	"<jSfBBcJ{Jpi}ipJ<sJCScsLsLSLL>>",
	"{Lf}",
	"{Sp[11]}",
	"{{Sp[11]}}",
	"<Bpifl{s}lIcfJL>",
	"{lff{{Sp[11]}}jcdiC<Bpifl{s}lIcfJL>c[13]j}",
	"{li}",
	"<iLlsiBljIJS[8]c>",
	"<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>",
	"<CLs<fJCd{li}<iLlsiBljIJS[8]c>BpJcpL>dpCfI>",
	"{jIScpBCCdIJ}",
	"<CjjBClii>",
	"<LjciSBjJfp<CjjBClii>J>",
	"<BssijcJdsjid>",
	"<fJd<BssijcJdsjid>dSCcIfcl>",
	"<CjJ<LjciSBjJfp<CjjBClii>J>CB<fJd<BssijcJdsjid>dSCcIfcl>Is>",
	"{IislccIiIiIl}",
	"<f[15]f>",
	"{i{IislccIiIiIl}Cd<f[15]f>fIji}",
	"<LlI[4]I<>>",
	"<SdpSl>",
	"{dSldj}",
	"{jpiSBdddLBIS}",
	"{CSLcCfLCLdiI}",
	"<pdfcLssL{CSLcCfLCLdiI}>",
	"<lIpSjjplsifI>",
	"<SslspCBcpScS>",
	"<pIBsBBJccSJB>",
	"<<pIBsBBJccSJB>CISjiJ>",
	"{fdCILSCdffJi}",
	"{piCfIsp{sf}Lf{fdCILSCdffJi}p}",
	"<Cpij{piCfIsp{sf}Lf{fdCILSCdffJi}p}CCScBdf>",
	"<cCSBcdfjJ>",
	"{ddijlJd}",
	"<Ji>",
	"{J[9]<cCSBcdfjJ>[5]d{ddijlJd}<Ji>d[11]IJSBlL}",
	"<BciIsp>",
	"{sdscC[8]IIjCfp}",
	"<sCBBIpJJCJc>",
	"{icSiBljfcps}",
	"{iBj}",
	"{pJBSiJjcIcSp}",
	"<lcddCJ>",
	"{IBi}",
	"<JBspd{IBi}BlBpf>",
	"{fBl}",
	"{CLIfsBLCdspJ}",
	"<IdcipJLcilpi[5]>",
	"{p{j}sfCs{CLIfsBLCdspJ}<><IdcipJLcilpi[5]>sdc}",
	"{flJpj{fBl}f{p{j}sfCs{CLIfsBLCdspJ}<><IdcipJLcilpi[5]>sdc}}",
	"{iCIsLIlSfiIp}",
	"<fljiScBj[16]fLdf>",
	"<SBscfICI>",
	"{iJ<SBscfICI>Jj}",
	"{{iCIsLIlSfiIp}SJpL<fljiScBj[16]fLdf>C{iJ<SBscfICI>Jj}l}",
	"<cL[13]IBBsdLLcLI>",
	"<iBLjBSCjL>",
	"<jL>",
	"<<cL[13]IBBsdLLcLI>cJs<iBLjBSCjL>L[14]c<jL>B>",
	"<LIfBLcc>",
	"<fISIspfJl>",
	"<LcJfldIidLJs>",
	"<SBiCfCcLBSpc>",
	"<s<SBiCfCcLBSpc>cSBjB>",
	"<ijC>",
	"<Bj[11]iLBISJS>",
	"<pJiLd>",
	"<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>",
	"{cpddcC<>SflCd}",
	"<<Bdd<ijC>SC<Bj[11]iLBISJS>jiiS<pJiLd>>ps{cpddcC<>SflCd}S>",
	"{liLLCpffJJpf}",
	"{Bdisjps}",
	"{LccifffsJBSS}",
	"<LiI>",
	"<IlJ>",
	"{SBCc}",
	"{Ss}",
	"<cfJlScdI>",
	"<BcS<cfJlScdI>BpBdJSSd>",
	"{cjS{Ss}f<BcS<cfJlScdI>BpBdJSSd>ifc}",
	"{IfiilBJIB}",
	"{cSSsjS[15]BJc}",
	"{cfdBdl[5]SCIBjj}",
	"{cSIBpLLlCBfs}",
	"{SlsdI}",
	"<IlC>",
	"<ppfBIlI>",
	"{SifC<IlC>J<ppfBIlI>{}sIij}",
	"<fiJSj>",
	"<lScp<fiJSj>SLSC>",
	"{<lScp<fiJSj>SLSC>JfICSL}",
	"{ICdidcl}",
	"{ICpS}",
	"<lfcIcjpBCsJ>",
	"{<>jcCfLc{ICpS}I<lfcIcjpBCsJ><p>B}",
	"<CiJ[8]B>",
	"<<CiJ[8]B>cC[10]SispSl>",
	"<cJL{ICdidcl}pcLlJ{<>jcCfLc{ICpS}I<lfcIcjpBCsJ><p>B}i<<CiJ[8]B>cC[10]SispSl>>",
	"<fcLjSSSLiLJJ>",
	"{J<fcLjSSSLiLJJ>jB}",
	"{pdJCId[10]LdIlSj}",
	"{Ijdclc{pdJCId[10]LdIlSj}c{}JLc}",
	"<SCLCdiifLpcB>",
	"<fIicBIs<SCLCdiifLpcB>>",
	"{ds{J<fcLjSSSLiLJJ>jB}SL{Ijdclc{pdJCId[10]LdIlSj}c{}JLc}<fIicBIs<SCLCdiifLpcB>>iJcS}",
	"{dL}",
	"{IiIlBsiIfssl}",
	"{lcfdJLdiCcCf}",
	"{lcj}",
	"{SJIs}",
	"{iSi<>f{IiIlBsiIfssl}{lcfdJLdiCcCf}BdJ{lcj}{SJIs}}",
	"<pL>",
	"{cLBdI}",
	"{cildlLBsfl[15]Bl}",
	"{CfJSpfScSdIJ}",
	"{<pL>JC{cLBdI}Icl{cildlLBsfl[15]Bl}dS{CfJSpfScSdIJ}}",
	"{fSsIsCfBJ}",
	"{SIifjBpCSiCB}",
	"<IjdpiLssldjC>",
	"<lIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>Is>",
	"<SjJLLIp{<pL>JC{cLBdI}Icl{cildlLBsfl[15]Bl}dS{CfJSpfScSdIJ}}I{fSsIsCfBJ}<lIssllC{SIifjBpCSiCB}p<IjdpiLssldjC>Is>l>",
	"{JLjJJIjJs}",
	"{IcLiillIdBlL}",
	"<jLBIIBJjCSBC>",
	"{CpidBsJdSpLJ}",
	"{Sj{}I{IcLiillIdBlL}c<jLBIIBJjCSBC>jSL{CpidBsJdSpLJ}s}",
	"<cilCBBISl[13]idl>",
	"<ip>",
	"<pCSB>",
	"<CJd>",
	"<iBid<CJd>LBLSjjC>",
	"{d}",
	"<fjBjpfCidfpB>",
	"<<fjBjpfCidfpB>SScflJ<Sl>i[1]{}jj>",
	"<LCiBlj>",
	"{cpCBdcL[10]i[14]l[1]LlJ}",
	"<ScJ>",
	"{pJ}",
	"{JccSBc[12]LJSfSs}",
	"{LjifIf{pJ}[4]J[15]{JccSBc[12]LJSfSs}BJp}",
	"<<L>jIIff{LjifIf{pJ}[4]J[15]{JccSBc[12]LJSfSs}BJp}dpi>",
	"<cJfcjjJlS>",
	"<Scij>",
	"<iLd<Scij>plsjJJcS>",
	"<cjsdLdBIBBlL>",
	"{cJBSdBfCJJ}",
	"{SCBSB}",
	"{sji{cJBSdBfCJJ}pBsji{SCBSB}SB}",
	"{SlscdSJJIJpl}",
	"<{SlscdSJJIJpl}cCcBBlJBLsJ[7]>",
	"<f[6]LcJSisdLl{sji{cJBSdBfCJJ}pBsji{SCBSB}SB}<{SlscdSJJIJpl}cCcBBlJBLsJ[7]>[11]>",
	"<Bjl[14]jf[14]BBSBfpC>",
	"<iJJCsiijCd<Bjl[14]jf[14]BBSBfpC>f>",
	"<lfLiJj>",
	"{SLIsJjB}",
	"<CBpBCpBspdSf>",
	"{idp}",
	"{<CBpBCpBspdSf>fSlppjc{idp}LSS}",
	"{CSLccc[5]JJ}",
	"<S{CSLccc[5]JJ}>",
	"{I[3]sfcs}",
	"<sCjCjiBiiC>",
	"{pICpfICliJcp}",
	"{djIcf<sCjCjiBiiC>{pICpfICliJcp}li[1]fSL}",
	"{dlBsSd[13]SCSiLl}",
	"<pi<>fBJ>",
	"<JcSfSJB>",
	"{diScIiiisdBC}",
	"{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}",
	"{IiccSICJjic}",
	"<JClcSd>",
	"<jdsLJSi{<JcSfSJB>fCLflf{diScIiiisdBC}cIJJ}j{IiccSICJjic}B<JClcSd>>",
	"<si>",
	"{{}Sc<>SLjLsIds}",
	"<jf[5]cjCdBj>",
	"{fIpCcfscsSiI}",
	"{iIsL}",
	"<LcLJfdLliLBp>",
	"{Bd<LcLJfdLliLBp>BpdjpLISp}",
	"<ISJ[3]ffCCl>",
	"{dLiLC<ISJ[3]ffCCl>lliSjp}",
	"{BcsfcCCCB}",
	"<fLlipc>",
	"{Iff{BcsfcCCCB}c<fLlipc>SsiClj}",
	"<{dLiLC<ISJ[3]ffCCl>lliSjp}lIisC{Iff{BcsfcCCCB}c<fLlipc>SsiClj}>",
	"<dfI[16]djjS>",
	"{sLfS<dfI[16]djjS>BfspIcc}",
	"<IlSdlLlBIpSC>",
	"<LL<IlSdlLlBIpSC>iJpLiIsfL>",
	"{BsI{sLfS<dfI[16]djjS>BfspIcc}<LL<IlSdlLlBIpSC>iJpLiIsfL>cBCi}",
	"<C{}Ls>",
	"{jJlji}",
	"{sflL}",
	"{fcSIBfjJflif}",
	"{CcJSp{sflL}js{fcSIBfjJflif}sJc}",
	"<SI[4]lCCl[4]LddL[9]Cd>",
	"<SlLJc[2]BdLpp>",
	"{siSBiCLdcIps}",
	"{dSJiJ}",
	"{JCCSlBIBjfSI}",
	"<CI[8]j{JCCSlBIBjfSI}>",
	"<BjLl>",
	"<CdL<CI[8]j{JCCSlBIBjfSI}>cdi<BjLl>idfi>",
	"{IsCCJfifBiLp}",
	"<{IsCCJfifBiLp}CcljiciBC>",
	"<SLjBBLcffSIL>",
	"<jCj>",
	"{<SLjBBLcffSIL>SBScsfdSCj<jCj>}",
	"<sipjIL>",
	"<jssjfij>",
	"<ifcjL>",
	"<SsSsfCSpfcLC>",
	"{fJcsBfJdfics}",
	"{lL}",
	"{<SsSsfCSpfcLC>li[15]cBL{fJcsBfJdfics}L{lL}Jl}",
	"{BcLIljjsLIjc}",
	"<liilCdlSSlJS>",
	"{{<SsSsfCSpfcLC>li[15]cBL{fJcsBfJdfics}L{lL}Jl}fSII{BcLIljjsLIjc}cJ[5]IIs<liilCdlSSlJS>}",
	"<Ic>",
	"{fdJijijLI{}<Ic>C}",
	"<fpBLij{fdJijijLI{}<Ic>C}sSsC[13]j>",
	"{fBdjdCBIJdLB}",
	"<CS{fBdjdCBIJdLB}dJdipJSip>",
	"{fIBIfsI<>lLsJ}",
	"<BBlJI>",
	"<sscllcpfcJIB>",
	"{IBdcJl<sscllcpfcJIB>sC}",
	"{ISCflJsf{IBdcJl<sscllcpfcJIB>sC}[3]Sf}",
	"<p[7]l[14]JLiBBLBsIl>",
	"<IdjJpsIlfJcc[6]>",
	"{jCcBd[4]JlcBSsp}",
	"<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>",
	"<l[6]fBfJpsBicBf>",
	"{jfILC}",
	"<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis>",
	"<ldlsBddf>",
	"<<sjc<p[7]l[14]JLiBBLBsIl><IdjJpsIlfJcc[6]>CC{jCcBd[4]JlcBSsp}BfJI>ISBcddj<pcLld<l[6]fBfJpsBicBf>C{jfILC}JCis><ldlsBddf>dS>",
	"<BBidSJlclJf>",
	"<d<BBidSJlclJf>jfBddIpCdI>",
	"{LpBJdfL}",
	"<sCLlJCcLBLj>",
	"{SJjLIlc[1]lisCf}",
	"<iljJijdBSsij>",
	"{piLpilplp}",
	"{ISlSi}",
	"<sI>",
	"<p{SJjLIlc[1]lisCf}pC<iljJijdBSsij>i{piLpilplp}di{ISlSi}d<sI>>",
	"<BLCJslC>",
	"{LSdpBisLfjdi}",
	"<I<BLCJslC>i{LSdpBisLfjdi}dJd[9]cdilc>",
	"{s{}l{s}BSfSILLS}",
	"{diIdBIfSJICj}",
	"<dSspdplJssdp>",
	"{SsSs{diIdBIfSJICj}jilpdp<dSspdplJssdp>[13]}",
	"<{s{}l{s}BSfSILLS}CliISpsl{SsSs{diIdBIfSJICj}jilpdp<dSspdplJssdp>[13]}{p}s>",
	"{CLScspdjfcdd}",
	"{sll{CLScspdjfcdd}sId}",
	"{BIjBJ}",
	"{p{BIjBJ}Ll}",
	"{cfBBfLiBjJjd}",
	"{jCBB[14]dJCjipfs}",
	"{SBdcLSpCiBJJ}",
	"<cJiJj[3]cfSsISj>",
	"{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}",
	"{ILLC{jCBB[14]dJCjipfs}fsf{B{SBdcLSpCiBJJ}dpjBLc<cJiJj[3]cfSsISj>Sjc}pjC}",
	"<jddBSjdSBJCi>",
	"{cCflslcdBfIB}",
	"<<jddBSjdSBJCi>SSLLcI{cCflslcdBfIB}Lssd>",
	"<ljp>",
	"<<<jddBSjdSBJCi>SSLLcI{cCflslcdBfIB}Lssd>s<ljp>ILicBIBii>",
	"{fJIllsJflLLS}",
	"<pCdlBsBpJiiI>",
	"<scCJp>",
	"<ScpJ[14]iLljIddp>",
	"{Bl<ScpJ[14]iLljIddp>sisBi}",
	"{pjs[10]}",
	"<BJifiBiSlCBJ>",
	"{IfcIJ[10]<BJifiBiSlCBJ>isJlcd}",
	"<LIlfscjif>",
	"{fdcSCjjjjliS}",
	"<SpiLJicdIISI>",
	"<fBfB<SpiLJicdIISI>c>",
	"<BlIJdpBsfiJC>",
	"<Ipj[3]dc<BlIJdpBsfiJC>lB{}lCs>",
	"<Ll>",
	"{f<fBfB<SpiLJicdIISI>c>CplfiCf<Ipj[3]dc<BlIJdpBsfiJC>lB{}lCs><Ll>c}",
	"{ldcB}",
	"<di{ldcB}fBJcJ>",
	"<<di{ldcB}fBJcJ>fis>"
};
int G_agg_sizes[] = {
	sizeof(struct A1),
	sizeof(struct A2),
	sizeof(union A3),
	sizeof(union A4),
	sizeof(struct A5),
	sizeof(struct A6),
	sizeof(struct A7),
	sizeof(union A8),
	sizeof(union A9),
	sizeof(struct A10),
	sizeof(union A11),
	sizeof(union A12),
	sizeof(union A13),
	sizeof(union A14),
	sizeof(struct A15),
	sizeof(union A16),
	sizeof(union A17),
	sizeof(struct A18),
	sizeof(union A19),
	sizeof(union A20),
	sizeof(union A21),
	sizeof(union A22),
	sizeof(union A23),
	sizeof(struct A24),
	sizeof(union A25),
	sizeof(struct A26),
	sizeof(struct A27),
	sizeof(struct A28),
	sizeof(union A29),
	sizeof(union A30),
	sizeof(union A31),
	sizeof(union A32),
	sizeof(struct A33),
	sizeof(struct A34),
	sizeof(struct A35),
	sizeof(union A36),
	sizeof(struct A37),
	sizeof(struct A38),
	sizeof(union A39),
	sizeof(union A40),
	sizeof(union A41),
	sizeof(union A42),
	sizeof(union A43),
	sizeof(struct A44),
	sizeof(struct A45),
	sizeof(union A46),
	sizeof(struct A47),
	sizeof(union A48),
	sizeof(union A49),
	sizeof(union A50),
	sizeof(union A51),
	sizeof(union A52),
	sizeof(struct A53),
	sizeof(struct A54),
	sizeof(struct A55),
	sizeof(union A56),
	sizeof(struct A57),
	sizeof(struct A58),
	sizeof(struct A59),
	sizeof(struct A60),
	sizeof(union A61),
	sizeof(union A62),
	sizeof(struct A63),
	sizeof(union A64),
	sizeof(union A65),
	sizeof(union A66),
	sizeof(union A67),
	sizeof(union A68),
	sizeof(struct A69),
	sizeof(union A70),
	sizeof(struct A71),
	sizeof(struct A72),
	sizeof(struct A73),
	sizeof(union A74),
	sizeof(union A75),
	sizeof(union A76),
	sizeof(union A77),
	sizeof(union A78),
	sizeof(union A79),
	sizeof(struct A80),
	sizeof(union A81),
	sizeof(union A82),
	sizeof(union A83),
	sizeof(struct A84),
	sizeof(struct A85),
	sizeof(union A86),
	sizeof(struct A87),
	sizeof(union A88),
	sizeof(struct A89),
	sizeof(union A90),
	sizeof(struct A91),
	sizeof(struct A92),
	sizeof(union A93),
	sizeof(struct A94),
	sizeof(struct A95),
	sizeof(struct A96),
	sizeof(union A97),
	sizeof(union A98),
	sizeof(union A99),
	sizeof(struct A100),
	sizeof(struct A101),
	sizeof(struct A102),
	sizeof(union A103),
	sizeof(union A104),
	sizeof(struct A105),
	sizeof(struct A106),
	sizeof(union A107),
	sizeof(struct A108),
	sizeof(struct A109),
	sizeof(struct A110),
	sizeof(union A111),
	sizeof(struct A112),
	sizeof(struct A113),
	sizeof(struct A114),
	sizeof(struct A115),
	sizeof(struct A116),
	sizeof(struct A117),
	sizeof(struct A118),
	sizeof(union A119),
	sizeof(union A120),
	sizeof(union A121),
	sizeof(struct A122),
	sizeof(struct A123),
	sizeof(struct A124),
	sizeof(struct A125),
	sizeof(struct A126),
	sizeof(struct A127),
	sizeof(struct A128),
	sizeof(struct A129),
	sizeof(union A130),
	sizeof(union A131),
	sizeof(union A132),
	sizeof(union A133),
	sizeof(union A134),
	sizeof(union A135),
	sizeof(struct A136),
	sizeof(union A137),
	sizeof(union A138),
	sizeof(union A139),
	sizeof(struct A140),
	sizeof(struct A141),
	sizeof(struct A142),
	sizeof(struct A143),
	sizeof(struct A144),
	sizeof(struct A145),
	sizeof(union A146),
	sizeof(struct A147),
	sizeof(union A148),
	sizeof(struct A149),
	sizeof(union A150),
	sizeof(struct A151),
	sizeof(struct A152),
	sizeof(union A153),
	sizeof(struct A154),
	sizeof(union A155),
	sizeof(union A156),
	sizeof(union A157),
	sizeof(union A158),
	sizeof(union A159),
	sizeof(union A160),
	sizeof(union A161),
	sizeof(union A162),
	sizeof(struct A163),
	sizeof(union A164),
	sizeof(union A165),
	sizeof(struct A166),
	sizeof(union A167),
	sizeof(struct A168),
	sizeof(union A169),
	sizeof(struct A170),
	sizeof(union A171),
	sizeof(union A172),
	sizeof(struct A173),
	sizeof(union A174),
	sizeof(union A175),
	sizeof(union A176),
	sizeof(struct A177),
	sizeof(union A178),
	sizeof(union A179),
	sizeof(struct A180),
	sizeof(union A181),
	sizeof(union A182),
	sizeof(struct A183),
	sizeof(union A184),
	sizeof(struct A185),
	sizeof(union A186),
	sizeof(struct A187),
	sizeof(struct A188),
	sizeof(union A189),
	sizeof(union A190),
	sizeof(union A191),
	sizeof(union A192),
	sizeof(union A193),
	sizeof(union A194),
	sizeof(union A195),
	sizeof(union A196),
	sizeof(union A197),
	sizeof(struct A198),
	sizeof(union A199),
	sizeof(union A200),
	sizeof(union A201),
	sizeof(struct A202),
	sizeof(struct A203),
	sizeof(union A204),
	sizeof(struct A205),
	sizeof(union A206),
	sizeof(union A207),
	sizeof(struct A208),
	sizeof(union A209),
	sizeof(struct A210),
	sizeof(struct A211),
	sizeof(union A212),
	sizeof(struct A213),
	sizeof(union A214),
	sizeof(struct A215),
	sizeof(struct A216),
	sizeof(struct A217),
	sizeof(struct A218),
	sizeof(struct A219),
	sizeof(union A220),
	sizeof(struct A221),
	sizeof(union A222),
	sizeof(union A223),
	sizeof(struct A224),
	sizeof(union A225),
	sizeof(struct A226),
	sizeof(union A227),
	sizeof(union A228),
	sizeof(struct A229),
	sizeof(struct A230),
	sizeof(union A231),
	sizeof(struct A232),
	sizeof(struct A233),
	sizeof(struct A234),
	sizeof(struct A235),
	sizeof(union A236),
	sizeof(union A237),
	sizeof(struct A238),
	sizeof(struct A239),
	sizeof(union A240),
	sizeof(struct A241),
	sizeof(union A242),
	sizeof(struct A243),
	sizeof(union A244),
	sizeof(union A245),
	sizeof(struct A246),
	sizeof(union A247),
	sizeof(union A248),
	sizeof(union A249),
	sizeof(union A250),
	sizeof(struct A251),
	sizeof(struct A252),
	sizeof(union A253),
	sizeof(union A254),
	sizeof(struct A255),
	sizeof(union A256),
	sizeof(struct A257),
	sizeof(struct A258),
	sizeof(union A259),
	sizeof(union A260),
	sizeof(struct A261),
	sizeof(struct A262),
	sizeof(union A263),
	sizeof(union A264),
	sizeof(struct A265),
	sizeof(union A266),
	sizeof(union A267),
	sizeof(struct A268),
	sizeof(union A269),
	sizeof(union A270),
	sizeof(union A271),
	sizeof(struct A272),
	sizeof(struct A273),
	sizeof(struct A274),
	sizeof(union A275),
	sizeof(struct A276),
	sizeof(union A277),
	sizeof(struct A278),
	sizeof(struct A279),
	sizeof(union A280),
	sizeof(union A281),
	sizeof(struct A282),
	sizeof(struct A283),
	sizeof(struct A284),
	sizeof(union A285),
	sizeof(struct A286),
	sizeof(union A287),
	sizeof(struct A288),
	sizeof(struct A289),
	sizeof(struct A290),
	sizeof(struct A291),
	sizeof(union A292),
	sizeof(struct A293),
	sizeof(union A294),
	sizeof(union A295),
	sizeof(struct A296),
	sizeof(struct A297),
	sizeof(union A298),
	sizeof(struct A299),
	sizeof(struct A300),
	sizeof(struct A301),
	sizeof(union A302),
	sizeof(union A303),
	sizeof(union A304),
	sizeof(union A305),
	sizeof(union A306),
	sizeof(struct A307),
	sizeof(struct A308),
	sizeof(union A309),
	sizeof(struct A310),
	sizeof(struct A311),
	sizeof(struct A312),
	sizeof(struct A313),
	sizeof(union A314),
	sizeof(struct A315),
	sizeof(struct A316),
	sizeof(union A317),
	sizeof(union A318),
	sizeof(union A319),
	sizeof(union A320),
	sizeof(union A321),
	sizeof(struct A322),
	sizeof(struct A323),
	sizeof(struct A324),
	sizeof(struct A325),
	sizeof(union A326),
	sizeof(union A327),
	sizeof(union A328),
	sizeof(struct A329),
	sizeof(struct A330),
	sizeof(union A331),
	sizeof(struct A332),
	sizeof(union A333),
	sizeof(struct A334),
	sizeof(union A335),
	sizeof(union A336),
	sizeof(struct A337),
	sizeof(struct A338),
	sizeof(struct A339),
	sizeof(struct A340),
	sizeof(union A341),
	sizeof(union A342),
	sizeof(union A343),
	sizeof(struct A344),
	sizeof(union A345),
	sizeof(union A346),
	sizeof(struct A347),
	sizeof(union A348),
	sizeof(struct A349),
	sizeof(union A350),
	sizeof(union A351),
	sizeof(struct A352),
	sizeof(union A353),
	sizeof(struct A354),
	sizeof(struct A355),
	sizeof(union A356),
	sizeof(union A357),
	sizeof(union A358),
	sizeof(struct A359),
	sizeof(struct A360),
	sizeof(union A361),
	sizeof(union A362),
	sizeof(union A363),
	sizeof(union A364),
	sizeof(struct A365),
	sizeof(struct A366),
	sizeof(struct A367),
	sizeof(struct A368),
	sizeof(struct A369),
	sizeof(struct A370),
	sizeof(struct A371),
	sizeof(union A372),
	sizeof(struct A373),
	sizeof(union A374),
	sizeof(union A375),
	sizeof(union A376),
	sizeof(struct A377),
	sizeof(union A378),
	sizeof(union A379),
	sizeof(struct A380),
	sizeof(union A381),
	sizeof(union A382),
	sizeof(union A383),
	sizeof(struct A384),
	sizeof(union A385),
	sizeof(union A386),
	sizeof(union A387),
	sizeof(struct A388),
	sizeof(union A389),
	sizeof(union A390),
	sizeof(union A391),
	sizeof(struct A392),
	sizeof(struct A393),
	sizeof(union A394),
	sizeof(union A395),
	sizeof(union A396),
	sizeof(union A397),
	sizeof(union A398),
	sizeof(union A399),
	sizeof(struct A400),
	sizeof(union A401),
	sizeof(union A402),
	sizeof(union A403),
	sizeof(union A404),
	sizeof(struct A405),
	sizeof(union A406),
	sizeof(union A407),
	sizeof(struct A408),
	sizeof(struct A409),
	sizeof(union A410),
	sizeof(struct A411),
	sizeof(union A412),
	sizeof(union A413),
	sizeof(struct A414),
	sizeof(union A415),
	sizeof(struct A416),
	sizeof(struct A417),
	sizeof(struct A418),
	sizeof(struct A419),
	sizeof(struct A420),
	sizeof(struct A421),
	sizeof(union A422),
	sizeof(union A423),
	sizeof(struct A424),
	sizeof(struct A425),
	sizeof(struct A426),
	sizeof(union A427),
	sizeof(struct A428),
	sizeof(union A429),
	sizeof(struct A430),
	sizeof(struct A431),
	sizeof(union A432),
	sizeof(struct A433),
	sizeof(union A434),
	sizeof(struct A435),
	sizeof(struct A436),
	sizeof(struct A437),
	sizeof(union A438),
	sizeof(struct A439),
	sizeof(struct A440),
	sizeof(struct A441),
	sizeof(struct A442),
	sizeof(struct A443),
	sizeof(union A444),
	sizeof(struct A445),
	sizeof(struct A446),
	sizeof(union A447),
	sizeof(union A448),
	sizeof(union A449),
	sizeof(struct A450),
	sizeof(union A451),
	sizeof(union A452),
	sizeof(union A453),
	sizeof(struct A454),
	sizeof(struct A455),
	sizeof(union A456),
	sizeof(union A457),
	sizeof(struct A458),
	sizeof(union A459),
	sizeof(struct A460),
	sizeof(union A461),
	sizeof(union A462),
	sizeof(union A463),
	sizeof(struct A464),
	sizeof(union A465),
	sizeof(struct A466),
	sizeof(union A467),
	sizeof(struct A468),
	sizeof(struct A469),
	sizeof(struct A470),
	sizeof(union A471),
	sizeof(struct A472),
	sizeof(union A473),
	sizeof(struct A474),
	sizeof(struct A475),
	sizeof(struct A476),
	sizeof(union A477),
	sizeof(union A478),
	sizeof(union A479),
	sizeof(union A480),
	sizeof(union A481),
	sizeof(union A482),
	sizeof(struct A483),
	sizeof(struct A484),
	sizeof(struct A485),
	sizeof(union A486),
	sizeof(struct A487),
	sizeof(union A488),
	sizeof(union A489),
	sizeof(union A490),
	sizeof(struct A491),
	sizeof(union A492),
	sizeof(struct A493),
	sizeof(struct A494),
	sizeof(struct A495),
	sizeof(union A496),
	sizeof(struct A497),
	sizeof(union A498),
	sizeof(struct A499),
	sizeof(union A500),
	sizeof(struct A501),
	sizeof(union A502),
	sizeof(struct A503),
	sizeof(union A504),
	sizeof(union A505),
	sizeof(struct A506),
	sizeof(union A507),
	sizeof(union A508),
	sizeof(union A509),
	sizeof(struct A510),
	sizeof(union A511),
	sizeof(union A512),
	sizeof(union A513),
	sizeof(struct A514),
	sizeof(union A515),
	sizeof(union A516),
	sizeof(struct A517),
	sizeof(struct A518),
	sizeof(struct A519),
	sizeof(union A520),
	sizeof(union A521),
	sizeof(struct A522),
	sizeof(struct A523),
	sizeof(union A524),
	sizeof(struct A525),
	sizeof(struct A526),
	sizeof(union A527),
	sizeof(struct A528),
	sizeof(struct A529),
	sizeof(union A530),
	sizeof(union A531),
	sizeof(union A532),
	sizeof(struct A533),
	sizeof(union A534),
	sizeof(union A535),
	sizeof(union A536),
	sizeof(struct A537),
	sizeof(union A538),
	sizeof(struct A539),
	sizeof(struct A540),
	sizeof(union A541),
	sizeof(union A542),
	sizeof(union A543),
	sizeof(struct A544),
	sizeof(union A545),
	sizeof(struct A546),
	sizeof(union A547),
	sizeof(union A548),
	sizeof(struct A549),
	sizeof(struct A550),
	sizeof(struct A551),
	sizeof(struct A552),
	sizeof(struct A553),
	sizeof(union A554),
	sizeof(struct A555),
	sizeof(struct A556),
	sizeof(struct A557),
	sizeof(struct A558),
	sizeof(union A559),
	sizeof(struct A560),
	sizeof(struct A561),
	sizeof(struct A562),
	sizeof(union A563),
	sizeof(union A564),
	sizeof(union A565),
	sizeof(union A566),
	sizeof(struct A567),
	sizeof(union A568),
	sizeof(struct A569),
	sizeof(union A570),
	sizeof(union A571),
	sizeof(struct A572),
	sizeof(union A573),
	sizeof(union A574),
	sizeof(union A575),
	sizeof(union A576),
	sizeof(struct A577),
	sizeof(union A578),
	sizeof(struct A579),
	sizeof(union A580),
	sizeof(union A581),
	sizeof(union A582),
	sizeof(union A583),
	sizeof(struct A584),
	sizeof(struct A585),
	sizeof(struct A586),
	sizeof(struct A587),
	sizeof(struct A588),
	sizeof(union A589),
	sizeof(struct A590),
	sizeof(union A591),
	sizeof(struct A592),
	sizeof(struct A593),
	sizeof(union A594),
	sizeof(struct A595),
	sizeof(union A596),
	sizeof(struct A597),
	sizeof(union A598),
	sizeof(struct A599),
	sizeof(struct A600),
	sizeof(union A601),
	sizeof(union A602),
	sizeof(struct A603),
	sizeof(struct A604),
	sizeof(union A605),
	sizeof(struct A606),
	sizeof(union A607),
	sizeof(union A608),
	sizeof(union A609),
	sizeof(union A610),
	sizeof(struct A611),
	sizeof(union A612),
	sizeof(union A613),
	sizeof(union A614),
	sizeof(struct A615),
	sizeof(union A616),
	sizeof(struct A617),
	sizeof(union A618),
	sizeof(union A619),
	sizeof(union A620),
	sizeof(struct A621),
	sizeof(struct A622),
	sizeof(struct A623),
	sizeof(struct A624),
	sizeof(union A625),
	sizeof(union A626),
	sizeof(union A627),
	sizeof(struct A628),
	sizeof(union A629),
	sizeof(struct A630),
	sizeof(struct A631),
	sizeof(struct A632),
	sizeof(union A633),
	sizeof(struct A634),
	sizeof(struct A635),
	sizeof(union A636),
	sizeof(union A637),
	sizeof(union A638),
	sizeof(struct A639),
	sizeof(union A640),
	sizeof(struct A641),
	sizeof(union A642),
	sizeof(union A643),
	sizeof(union A644),
	sizeof(union A645),
	sizeof(union A646),
	sizeof(union A647),
	sizeof(union A648),
	sizeof(union A649),
	sizeof(union A650),
	sizeof(struct A651),
	sizeof(struct A652),
	sizeof(union A653),
	sizeof(struct A654),
	sizeof(struct A655),
	sizeof(union A656),
	sizeof(union A657),
	sizeof(struct A658),
	sizeof(struct A659),
	sizeof(struct A660),
	sizeof(union A661),
	sizeof(union A662),
	sizeof(struct A663),
	sizeof(union A664),
	sizeof(union A665),
	sizeof(struct A666),
	sizeof(struct A667),
	sizeof(union A668),
	sizeof(union A669),
	sizeof(union A670),
	sizeof(union A671),
	sizeof(union A672),
	sizeof(union A673),
	sizeof(struct A674),
	sizeof(struct A675),
	sizeof(struct A676),
	sizeof(union A677),
	sizeof(struct A678),
	sizeof(union A679),
	sizeof(union A680),
	sizeof(struct A681),
	sizeof(union A682),
	sizeof(union A683),
	sizeof(union A684),
	sizeof(union A685),
	sizeof(union A686),
	sizeof(struct A687),
	sizeof(struct A688),
	sizeof(union A689),
	sizeof(union A690),
	sizeof(union A691),
	sizeof(struct A692),
	sizeof(union A693),
	sizeof(struct A694),
	sizeof(union A695),
	sizeof(union A696),
	sizeof(union A697),
	sizeof(struct A698),
	sizeof(struct A699),
	sizeof(struct A700),
	sizeof(struct A701),
	sizeof(union A702),
	sizeof(union A703),
	sizeof(union A704),
	sizeof(struct A705),
	sizeof(struct A706),
	sizeof(union A707),
	sizeof(union A708),
	sizeof(union A709),
	sizeof(union A710),
	sizeof(struct A711),
	sizeof(struct A712),
	sizeof(struct A713),
	sizeof(struct A714),
	sizeof(struct A715),
	sizeof(struct A716),
	sizeof(struct A717),
	sizeof(struct A718),
	sizeof(struct A719),
	sizeof(struct A720),
	sizeof(struct A721),
	sizeof(union A722),
	sizeof(struct A723),
	sizeof(struct A724),
	sizeof(union A725),
	sizeof(struct A726),
	sizeof(struct A727),
	sizeof(struct A728),
	sizeof(struct A729),
	sizeof(union A730),
	sizeof(struct A731),
	sizeof(union A732),
	sizeof(struct A733),
	sizeof(union A734),
	sizeof(struct A735),
	sizeof(union A736),
	sizeof(struct A737),
	sizeof(union A738),
	sizeof(struct A739),
	sizeof(struct A740),
	sizeof(struct A741),
	sizeof(union A742),
	sizeof(union A743),
	sizeof(union A744),
	sizeof(union A745),
	sizeof(union A746),
	sizeof(union A747),
	sizeof(struct A748),
	sizeof(union A749),
	sizeof(union A750),
	sizeof(union A751),
	sizeof(union A752),
	sizeof(union A753),
	sizeof(union A754),
	sizeof(union A755),
	sizeof(union A756),
	sizeof(union A757),
	sizeof(union A758),
	sizeof(union A759),
	sizeof(struct A760),
	sizeof(union A761),
	sizeof(union A762),
	sizeof(union A763),
	sizeof(struct A764),
	sizeof(union A765),
	sizeof(union A766),
	sizeof(struct A767),
	sizeof(struct A768),
	sizeof(struct A769),
	sizeof(struct A770),
	sizeof(union A771),
	sizeof(struct A772),
	sizeof(struct A773),
	sizeof(struct A774),
	sizeof(struct A775),
	sizeof(union A776),
	sizeof(union A777),
	sizeof(union A778),
	sizeof(union A779),
	sizeof(union A780),
	sizeof(struct A781),
	sizeof(struct A782),
	sizeof(struct A783),
	sizeof(struct A784),
	sizeof(union A785),
	sizeof(struct A786),
	sizeof(union A787),
	sizeof(struct A788),
	sizeof(union A789),
	sizeof(union A790),
	sizeof(union A791),
	sizeof(struct A792),
	sizeof(union A793),
	sizeof(union A794),
	sizeof(struct A795),
	sizeof(struct A796),
	sizeof(union A797),
	sizeof(struct A798),
	sizeof(union A799),
	sizeof(union A800),
	sizeof(struct A801),
	sizeof(struct A802),
	sizeof(union A803),
	sizeof(struct A804),
	sizeof(union A805),
	sizeof(union A806),
	sizeof(struct A807),
	sizeof(union A808),
	sizeof(union A809),
	sizeof(union A810),
	sizeof(struct A811),
	sizeof(union A812),
	sizeof(union A813),
	sizeof(union A814),
	sizeof(struct A815),
	sizeof(struct A816),
	sizeof(union A817),
	sizeof(struct A818),
	sizeof(union A819),
	sizeof(struct A820),
	sizeof(union A821),
	sizeof(union A822),
	sizeof(union A823),
	sizeof(union A824),
	sizeof(struct A825),
	sizeof(union A826),
	sizeof(union A827),
	sizeof(union A828),
	sizeof(struct A829),
	sizeof(struct A830),
	sizeof(struct A831),
	sizeof(struct A832),
	sizeof(struct A833),
	sizeof(struct A834),
	sizeof(struct A835),
	sizeof(union A836),
	sizeof(union A837),
	sizeof(union A838),
	sizeof(union A839),
	sizeof(struct A840),
	sizeof(struct A841),
	sizeof(struct A842),
	sizeof(union A843),
	sizeof(union A844),
	sizeof(struct A845),
	sizeof(struct A846),
	sizeof(struct A847),
	sizeof(struct A848),
	sizeof(struct A849),
	sizeof(struct A850),
	sizeof(union A851),
	sizeof(struct A852),
	sizeof(union A853),
	sizeof(struct A854),
	sizeof(struct A855),
	sizeof(union A856),
	sizeof(struct A857),
	sizeof(struct A858),
	sizeof(struct A859),
	sizeof(struct A860),
	sizeof(struct A861),
	sizeof(struct A862),
	sizeof(union A863),
	sizeof(struct A864),
	sizeof(struct A865),
	sizeof(struct A866),
	sizeof(struct A867),
	sizeof(union A868),
	sizeof(struct A869),
	sizeof(union A870),
	sizeof(struct A871),
	sizeof(union A872),
	sizeof(struct A873),
	sizeof(union A874),
	sizeof(union A875),
	sizeof(union A876),
	sizeof(union A877),
	sizeof(union A878),
	sizeof(struct A879),
	sizeof(union A880),
	sizeof(union A881),
	sizeof(struct A882),
	sizeof(struct A883),
	sizeof(union A884),
	sizeof(struct A885),
	sizeof(struct A886),
	sizeof(union A887),
	sizeof(struct A888),
	sizeof(struct A889),
	sizeof(struct A890),
	sizeof(struct A891),
	sizeof(union A892),
	sizeof(union A893),
	sizeof(struct A894),
	sizeof(struct A895),
	sizeof(union A896),
	sizeof(union A897),
	sizeof(struct A898),
	sizeof(union A899),
	sizeof(union A900),
	sizeof(union A901),
	sizeof(union A902),
	sizeof(union A903),
	sizeof(struct A904),
	sizeof(union A905),
	sizeof(union A906),
	sizeof(struct A907),
	sizeof(struct A908),
	sizeof(struct A909),
	sizeof(union A910),
	sizeof(union A911),
	sizeof(struct A912),
	sizeof(struct A913),
	sizeof(struct A914),
	sizeof(struct A915),
	sizeof(union A916),
	sizeof(struct A917),
	sizeof(struct A918),
	sizeof(struct A919),
	sizeof(union A920),
	sizeof(union A921),
	sizeof(union A922),
	sizeof(struct A923),
	sizeof(struct A924),
	sizeof(struct A925),
	sizeof(struct A926),
	sizeof(union A927),
	sizeof(union A928),
	sizeof(struct A929),
	sizeof(union A930),
	sizeof(union A931),
	sizeof(union A932),
	sizeof(struct A933),
	sizeof(struct A934),
	sizeof(struct A935),
	sizeof(struct A936),
	sizeof(struct A937),
	sizeof(union A938),
	sizeof(struct A939),
	sizeof(struct A940),
	sizeof(struct A941),
	sizeof(union A942),
	sizeof(struct A943),
	sizeof(struct A944),
	sizeof(struct A945),
	sizeof(union A946),
	sizeof(union A947),
	sizeof(struct A948),
	sizeof(struct A949),
	sizeof(struct A950),
	sizeof(union A951),
	sizeof(struct A952),
	sizeof(struct A953),
	sizeof(union A954),
	sizeof(union A955),
	sizeof(union A956),
	sizeof(struct A957),
	sizeof(union A958),
	sizeof(union A959),
	sizeof(union A960),
	sizeof(union A961),
	sizeof(union A962),
	sizeof(struct A963),
	sizeof(union A964),
	sizeof(struct A965),
	sizeof(union A966),
	sizeof(union A967),
	sizeof(struct A968),
	sizeof(struct A969),
	sizeof(struct A970),
	sizeof(union A971),
	sizeof(union A972),
	sizeof(union A973),
	sizeof(union A974),
	sizeof(union A975),
	sizeof(struct A976),
	sizeof(struct A977),
	sizeof(union A978),
	sizeof(union A979),
	sizeof(struct A980),
	sizeof(union A981),
	sizeof(struct A982),
	sizeof(union A983),
	sizeof(struct A984),
	sizeof(union A985),
	sizeof(struct A986),
	sizeof(struct A987),
	sizeof(struct A988),
	sizeof(union A989),
	sizeof(struct A990),
	sizeof(union A991),
	sizeof(struct A992),
	sizeof(struct A993),
	sizeof(union A994),
	sizeof(struct A995),
	sizeof(struct A996),
	sizeof(struct A997),
	sizeof(union A998),
	sizeof(union A999),
	sizeof(struct A1000),
	sizeof(struct A1001),
	sizeof(union A1002),
	sizeof(union A1003),
	sizeof(union A1004),
	sizeof(union A1005),
	sizeof(union A1006),
	sizeof(union A1007),
	sizeof(union A1008),
	sizeof(union A1009),
	sizeof(union A1010),
	sizeof(union A1011),
	sizeof(union A1012),
	sizeof(union A1013),
	sizeof(union A1014),
	sizeof(struct A1015),
	sizeof(union A1016),
	sizeof(struct A1017),
	sizeof(struct A1018),
	sizeof(struct A1019),
	sizeof(union A1020),
	sizeof(union A1021),
	sizeof(struct A1022),
	sizeof(struct A1023),
	sizeof(union A1024),
	sizeof(union A1025),
	sizeof(struct A1026),
	sizeof(struct A1027),
	sizeof(struct A1028),
	sizeof(struct A1029),
	sizeof(struct A1030),
	sizeof(struct A1031),
	sizeof(union A1032),
	sizeof(union A1033),
	sizeof(struct A1034),
	sizeof(union A1035),
	sizeof(union A1036),
	sizeof(struct A1037),
	sizeof(struct A1038),
	sizeof(struct A1039),
	sizeof(union A1040),
	sizeof(struct A1041),
	sizeof(union A1042),
	sizeof(union A1043),
	sizeof(union A1044),
	sizeof(union A1045),
	sizeof(struct A1046),
	sizeof(struct A1047),
	sizeof(struct A1048),
	sizeof(union A1049),
	sizeof(union A1050),
	sizeof(struct A1051),
	sizeof(struct A1052),
	sizeof(struct A1053),
	sizeof(struct A1054),
	sizeof(struct A1055),
	sizeof(struct A1056),
	sizeof(struct A1057),
	sizeof(union A1058),
	sizeof(struct A1059),
	sizeof(struct A1060),
	sizeof(struct A1061),
	sizeof(struct A1062),
	sizeof(struct A1063),
	sizeof(struct A1064),
	sizeof(union A1065),
	sizeof(union A1066),
	sizeof(union A1067),
	sizeof(struct A1068),
	sizeof(struct A1069),
	sizeof(union A1070),
	sizeof(struct A1071),
	sizeof(struct A1072),
	sizeof(union A1073),
	sizeof(union A1074),
	sizeof(union A1075),
	sizeof(union A1076),
	sizeof(union A1077),
	sizeof(struct A1078),
	sizeof(union A1079),
	sizeof(union A1080),
	sizeof(union A1081),
	sizeof(struct A1082),
	sizeof(union A1083),
	sizeof(struct A1084),
	sizeof(struct A1085),
	sizeof(struct A1086),
	sizeof(union A1087),
	sizeof(union A1088),
	sizeof(union A1089),
	sizeof(union A1090),
	sizeof(union A1091),
	sizeof(struct A1092),
	sizeof(struct A1093),
	sizeof(struct A1094),
	sizeof(struct A1095),
	sizeof(union A1096),
	sizeof(union A1097),
	sizeof(union A1098),
	sizeof(union A1099),
	sizeof(union A1100),
	sizeof(struct A1101),
	sizeof(union A1102),
	sizeof(struct A1103),
	sizeof(struct A1104),
	sizeof(struct A1105),
	sizeof(union A1106),
	sizeof(struct A1107),
	sizeof(union A1108),
	sizeof(struct A1109),
	sizeof(struct A1110),
	sizeof(struct A1111),
	sizeof(union A1112),
	sizeof(union A1113),
	sizeof(struct A1114),
	sizeof(struct A1115),
	sizeof(struct A1116),
	sizeof(union A1117),
	sizeof(union A1118),
	sizeof(union A1119),
	sizeof(struct A1120),
	sizeof(union A1121),
	sizeof(struct A1122),
	sizeof(struct A1123),
	sizeof(union A1124),
	sizeof(struct A1125),
	sizeof(union A1126),
	sizeof(struct A1127),
	sizeof(struct A1128),
	sizeof(union A1129),
	sizeof(struct A1130),
	sizeof(union A1131),
	sizeof(union A1132),
	sizeof(struct A1133),
	sizeof(union A1134),
	sizeof(union A1135),
	sizeof(struct A1136),
	sizeof(union A1137),
	sizeof(struct A1138),
	sizeof(struct A1139),
	sizeof(struct A1140),
	sizeof(struct A1141),
	sizeof(union A1142),
	sizeof(union A1143),
	sizeof(struct A1144),
	sizeof(struct A1145),
	sizeof(struct A1146),
	sizeof(union A1147),
	sizeof(union A1148),
	sizeof(union A1149),
	sizeof(struct A1150),
	sizeof(union A1151),
	sizeof(union A1152),
	sizeof(union A1153),
	sizeof(struct A1154),
	sizeof(union A1155),
	sizeof(union A1156),
	sizeof(union A1157),
	sizeof(union A1158),
	sizeof(struct A1159),
	sizeof(struct A1160),
	sizeof(struct A1161),
	sizeof(struct A1162),
	sizeof(union A1163),
	sizeof(struct A1164),
	sizeof(union A1165),
	sizeof(struct A1166),
	sizeof(union A1167),
	sizeof(struct A1168),
	sizeof(union A1169),
	sizeof(struct A1170),
	sizeof(union A1171),
	sizeof(union A1172),
	sizeof(struct A1173),
	sizeof(struct A1174),
	sizeof(union A1175),
	sizeof(union A1176),
	sizeof(struct A1177),
	sizeof(union A1178),
	sizeof(union A1179),
	sizeof(struct A1180),
	sizeof(union A1181),
	sizeof(union A1182),
	sizeof(union A1183),
	sizeof(union A1184),
	sizeof(union A1185),
	sizeof(struct A1186),
	sizeof(union A1187),
	sizeof(struct A1188),
	sizeof(union A1189),
	sizeof(struct A1190),
	sizeof(struct A1191),
	sizeof(union A1192),
	sizeof(union A1193),
	sizeof(union A1194),
	sizeof(struct A1195),
	sizeof(union A1196),
	sizeof(struct A1197),
	sizeof(struct A1198),
	sizeof(union A1199),
	sizeof(struct A1200),
	sizeof(union A1201),
	sizeof(struct A1202),
	sizeof(struct A1203),
	sizeof(struct A1204),
	sizeof(struct A1205),
	sizeof(struct A1206),
	sizeof(struct A1207),
	sizeof(struct A1208),
	sizeof(union A1209),
	sizeof(struct A1210),
	sizeof(struct A1211),
	sizeof(union A1212),
	sizeof(struct A1213),
	sizeof(union A1214),
	sizeof(union A1215),
	sizeof(union A1216),
	sizeof(struct A1217),
	sizeof(union A1218),
	sizeof(union A1219),
	sizeof(union A1220),
	sizeof(struct A1221),
	sizeof(struct A1222),
	sizeof(union A1223),
	sizeof(struct A1224),
	sizeof(union A1225),
	sizeof(struct A1226),
	sizeof(union A1227),
	sizeof(union A1228),
	sizeof(union A1229),
	sizeof(union A1230),
	sizeof(union A1231),
	sizeof(struct A1232),
	sizeof(struct A1233),
	sizeof(union A1234),
	sizeof(union A1235)
};
funptr G_agg_touchAfuncs[] = {
	(funptr)&f_touchA1,
	(funptr)&f_touchA2,
	(funptr)&f_touchA3,
	(funptr)&f_touchA4,
	(funptr)&f_touchA5,
	(funptr)&f_touchA6,
	(funptr)&f_touchA7,
	(funptr)&f_touchA8,
	(funptr)&f_touchA9,
	(funptr)&f_touchA10,
	(funptr)&f_touchA11,
	(funptr)&f_touchA12,
	(funptr)&f_touchA13,
	(funptr)&f_touchA14,
	(funptr)&f_touchA15,
	(funptr)&f_touchA16,
	(funptr)&f_touchA17,
	(funptr)&f_touchA18,
	(funptr)&f_touchA19,
	(funptr)&f_touchA20,
	(funptr)&f_touchA21,
	(funptr)&f_touchA22,
	(funptr)&f_touchA23,
	(funptr)&f_touchA24,
	(funptr)&f_touchA25,
	(funptr)&f_touchA26,
	(funptr)&f_touchA27,
	(funptr)&f_touchA28,
	(funptr)&f_touchA29,
	(funptr)&f_touchA30,
	(funptr)&f_touchA31,
	(funptr)&f_touchA32,
	(funptr)&f_touchA33,
	(funptr)&f_touchA34,
	(funptr)&f_touchA35,
	(funptr)&f_touchA36,
	(funptr)&f_touchA37,
	(funptr)&f_touchA38,
	(funptr)&f_touchA39,
	(funptr)&f_touchA40,
	(funptr)&f_touchA41,
	(funptr)&f_touchA42,
	(funptr)&f_touchA43,
	(funptr)&f_touchA44,
	(funptr)&f_touchA45,
	(funptr)&f_touchA46,
	(funptr)&f_touchA47,
	(funptr)&f_touchA48,
	(funptr)&f_touchA49,
	(funptr)&f_touchA50,
	(funptr)&f_touchA51,
	(funptr)&f_touchA52,
	(funptr)&f_touchA53,
	(funptr)&f_touchA54,
	(funptr)&f_touchA55,
	(funptr)&f_touchA56,
	(funptr)&f_touchA57,
	(funptr)&f_touchA58,
	(funptr)&f_touchA59,
	(funptr)&f_touchA60,
	(funptr)&f_touchA61,
	(funptr)&f_touchA62,
	(funptr)&f_touchA63,
	(funptr)&f_touchA64,
	(funptr)&f_touchA65,
	(funptr)&f_touchA66,
	(funptr)&f_touchA67,
	(funptr)&f_touchA68,
	(funptr)&f_touchA69,
	(funptr)&f_touchA70,
	(funptr)&f_touchA71,
	(funptr)&f_touchA72,
	(funptr)&f_touchA73,
	(funptr)&f_touchA74,
	(funptr)&f_touchA75,
	(funptr)&f_touchA76,
	(funptr)&f_touchA77,
	(funptr)&f_touchA78,
	(funptr)&f_touchA79,
	(funptr)&f_touchA80,
	(funptr)&f_touchA81,
	(funptr)&f_touchA82,
	(funptr)&f_touchA83,
	(funptr)&f_touchA84,
	(funptr)&f_touchA85,
	(funptr)&f_touchA86,
	(funptr)&f_touchA87,
	(funptr)&f_touchA88,
	(funptr)&f_touchA89,
	(funptr)&f_touchA90,
	(funptr)&f_touchA91,
	(funptr)&f_touchA92,
	(funptr)&f_touchA93,
	(funptr)&f_touchA94,
	(funptr)&f_touchA95,
	(funptr)&f_touchA96,
	(funptr)&f_touchA97,
	(funptr)&f_touchA98,
	(funptr)&f_touchA99,
	(funptr)&f_touchA100,
	(funptr)&f_touchA101,
	(funptr)&f_touchA102,
	(funptr)&f_touchA103,
	(funptr)&f_touchA104,
	(funptr)&f_touchA105,
	(funptr)&f_touchA106,
	(funptr)&f_touchA107,
	(funptr)&f_touchA108,
	(funptr)&f_touchA109,
	(funptr)&f_touchA110,
	(funptr)&f_touchA111,
	(funptr)&f_touchA112,
	(funptr)&f_touchA113,
	(funptr)&f_touchA114,
	(funptr)&f_touchA115,
	(funptr)&f_touchA116,
	(funptr)&f_touchA117,
	(funptr)&f_touchA118,
	(funptr)&f_touchA119,
	(funptr)&f_touchA120,
	(funptr)&f_touchA121,
	(funptr)&f_touchA122,
	(funptr)&f_touchA123,
	(funptr)&f_touchA124,
	(funptr)&f_touchA125,
	(funptr)&f_touchA126,
	(funptr)&f_touchA127,
	(funptr)&f_touchA128,
	(funptr)&f_touchA129,
	(funptr)&f_touchA130,
	(funptr)&f_touchA131,
	(funptr)&f_touchA132,
	(funptr)&f_touchA133,
	(funptr)&f_touchA134,
	(funptr)&f_touchA135,
	(funptr)&f_touchA136,
	(funptr)&f_touchA137,
	(funptr)&f_touchA138,
	(funptr)&f_touchA139,
	(funptr)&f_touchA140,
	(funptr)&f_touchA141,
	(funptr)&f_touchA142,
	(funptr)&f_touchA143,
	(funptr)&f_touchA144,
	(funptr)&f_touchA145,
	(funptr)&f_touchA146,
	(funptr)&f_touchA147,
	(funptr)&f_touchA148,
	(funptr)&f_touchA149,
	(funptr)&f_touchA150,
	(funptr)&f_touchA151,
	(funptr)&f_touchA152,
	(funptr)&f_touchA153,
	(funptr)&f_touchA154,
	(funptr)&f_touchA155,
	(funptr)&f_touchA156,
	(funptr)&f_touchA157,
	(funptr)&f_touchA158,
	(funptr)&f_touchA159,
	(funptr)&f_touchA160,
	(funptr)&f_touchA161,
	(funptr)&f_touchA162,
	(funptr)&f_touchA163,
	(funptr)&f_touchA164,
	(funptr)&f_touchA165,
	(funptr)&f_touchA166,
	(funptr)&f_touchA167,
	(funptr)&f_touchA168,
	(funptr)&f_touchA169,
	(funptr)&f_touchA170,
	(funptr)&f_touchA171,
	(funptr)&f_touchA172,
	(funptr)&f_touchA173,
	(funptr)&f_touchA174,
	(funptr)&f_touchA175,
	(funptr)&f_touchA176,
	(funptr)&f_touchA177,
	(funptr)&f_touchA178,
	(funptr)&f_touchA179,
	(funptr)&f_touchA180,
	(funptr)&f_touchA181,
	(funptr)&f_touchA182,
	(funptr)&f_touchA183,
	(funptr)&f_touchA184,
	(funptr)&f_touchA185,
	(funptr)&f_touchA186,
	(funptr)&f_touchA187,
	(funptr)&f_touchA188,
	(funptr)&f_touchA189,
	(funptr)&f_touchA190,
	(funptr)&f_touchA191,
	(funptr)&f_touchA192,
	(funptr)&f_touchA193,
	(funptr)&f_touchA194,
	(funptr)&f_touchA195,
	(funptr)&f_touchA196,
	(funptr)&f_touchA197,
	(funptr)&f_touchA198,
	(funptr)&f_touchA199,
	(funptr)&f_touchA200,
	(funptr)&f_touchA201,
	(funptr)&f_touchA202,
	(funptr)&f_touchA203,
	(funptr)&f_touchA204,
	(funptr)&f_touchA205,
	(funptr)&f_touchA206,
	(funptr)&f_touchA207,
	(funptr)&f_touchA208,
	(funptr)&f_touchA209,
	(funptr)&f_touchA210,
	(funptr)&f_touchA211,
	(funptr)&f_touchA212,
	(funptr)&f_touchA213,
	(funptr)&f_touchA214,
	(funptr)&f_touchA215,
	(funptr)&f_touchA216,
	(funptr)&f_touchA217,
	(funptr)&f_touchA218,
	(funptr)&f_touchA219,
	(funptr)&f_touchA220,
	(funptr)&f_touchA221,
	(funptr)&f_touchA222,
	(funptr)&f_touchA223,
	(funptr)&f_touchA224,
	(funptr)&f_touchA225,
	(funptr)&f_touchA226,
	(funptr)&f_touchA227,
	(funptr)&f_touchA228,
	(funptr)&f_touchA229,
	(funptr)&f_touchA230,
	(funptr)&f_touchA231,
	(funptr)&f_touchA232,
	(funptr)&f_touchA233,
	(funptr)&f_touchA234,
	(funptr)&f_touchA235,
	(funptr)&f_touchA236,
	(funptr)&f_touchA237,
	(funptr)&f_touchA238,
	(funptr)&f_touchA239,
	(funptr)&f_touchA240,
	(funptr)&f_touchA241,
	(funptr)&f_touchA242,
	(funptr)&f_touchA243,
	(funptr)&f_touchA244,
	(funptr)&f_touchA245,
	(funptr)&f_touchA246,
	(funptr)&f_touchA247,
	(funptr)&f_touchA248,
	(funptr)&f_touchA249,
	(funptr)&f_touchA250,
	(funptr)&f_touchA251,
	(funptr)&f_touchA252,
	(funptr)&f_touchA253,
	(funptr)&f_touchA254,
	(funptr)&f_touchA255,
	(funptr)&f_touchA256,
	(funptr)&f_touchA257,
	(funptr)&f_touchA258,
	(funptr)&f_touchA259,
	(funptr)&f_touchA260,
	(funptr)&f_touchA261,
	(funptr)&f_touchA262,
	(funptr)&f_touchA263,
	(funptr)&f_touchA264,
	(funptr)&f_touchA265,
	(funptr)&f_touchA266,
	(funptr)&f_touchA267,
	(funptr)&f_touchA268,
	(funptr)&f_touchA269,
	(funptr)&f_touchA270,
	(funptr)&f_touchA271,
	(funptr)&f_touchA272,
	(funptr)&f_touchA273,
	(funptr)&f_touchA274,
	(funptr)&f_touchA275,
	(funptr)&f_touchA276,
	(funptr)&f_touchA277,
	(funptr)&f_touchA278,
	(funptr)&f_touchA279,
	(funptr)&f_touchA280,
	(funptr)&f_touchA281,
	(funptr)&f_touchA282,
	(funptr)&f_touchA283,
	(funptr)&f_touchA284,
	(funptr)&f_touchA285,
	(funptr)&f_touchA286,
	(funptr)&f_touchA287,
	(funptr)&f_touchA288,
	(funptr)&f_touchA289,
	(funptr)&f_touchA290,
	(funptr)&f_touchA291,
	(funptr)&f_touchA292,
	(funptr)&f_touchA293,
	(funptr)&f_touchA294,
	(funptr)&f_touchA295,
	(funptr)&f_touchA296,
	(funptr)&f_touchA297,
	(funptr)&f_touchA298,
	(funptr)&f_touchA299,
	(funptr)&f_touchA300,
	(funptr)&f_touchA301,
	(funptr)&f_touchA302,
	(funptr)&f_touchA303,
	(funptr)&f_touchA304,
	(funptr)&f_touchA305,
	(funptr)&f_touchA306,
	(funptr)&f_touchA307,
	(funptr)&f_touchA308,
	(funptr)&f_touchA309,
	(funptr)&f_touchA310,
	(funptr)&f_touchA311,
	(funptr)&f_touchA312,
	(funptr)&f_touchA313,
	(funptr)&f_touchA314,
	(funptr)&f_touchA315,
	(funptr)&f_touchA316,
	(funptr)&f_touchA317,
	(funptr)&f_touchA318,
	(funptr)&f_touchA319,
	(funptr)&f_touchA320,
	(funptr)&f_touchA321,
	(funptr)&f_touchA322,
	(funptr)&f_touchA323,
	(funptr)&f_touchA324,
	(funptr)&f_touchA325,
	(funptr)&f_touchA326,
	(funptr)&f_touchA327,
	(funptr)&f_touchA328,
	(funptr)&f_touchA329,
	(funptr)&f_touchA330,
	(funptr)&f_touchA331,
	(funptr)&f_touchA332,
	(funptr)&f_touchA333,
	(funptr)&f_touchA334,
	(funptr)&f_touchA335,
	(funptr)&f_touchA336,
	(funptr)&f_touchA337,
	(funptr)&f_touchA338,
	(funptr)&f_touchA339,
	(funptr)&f_touchA340,
	(funptr)&f_touchA341,
	(funptr)&f_touchA342,
	(funptr)&f_touchA343,
	(funptr)&f_touchA344,
	(funptr)&f_touchA345,
	(funptr)&f_touchA346,
	(funptr)&f_touchA347,
	(funptr)&f_touchA348,
	(funptr)&f_touchA349,
	(funptr)&f_touchA350,
	(funptr)&f_touchA351,
	(funptr)&f_touchA352,
	(funptr)&f_touchA353,
	(funptr)&f_touchA354,
	(funptr)&f_touchA355,
	(funptr)&f_touchA356,
	(funptr)&f_touchA357,
	(funptr)&f_touchA358,
	(funptr)&f_touchA359,
	(funptr)&f_touchA360,
	(funptr)&f_touchA361,
	(funptr)&f_touchA362,
	(funptr)&f_touchA363,
	(funptr)&f_touchA364,
	(funptr)&f_touchA365,
	(funptr)&f_touchA366,
	(funptr)&f_touchA367,
	(funptr)&f_touchA368,
	(funptr)&f_touchA369,
	(funptr)&f_touchA370,
	(funptr)&f_touchA371,
	(funptr)&f_touchA372,
	(funptr)&f_touchA373,
	(funptr)&f_touchA374,
	(funptr)&f_touchA375,
	(funptr)&f_touchA376,
	(funptr)&f_touchA377,
	(funptr)&f_touchA378,
	(funptr)&f_touchA379,
	(funptr)&f_touchA380,
	(funptr)&f_touchA381,
	(funptr)&f_touchA382,
	(funptr)&f_touchA383,
	(funptr)&f_touchA384,
	(funptr)&f_touchA385,
	(funptr)&f_touchA386,
	(funptr)&f_touchA387,
	(funptr)&f_touchA388,
	(funptr)&f_touchA389,
	(funptr)&f_touchA390,
	(funptr)&f_touchA391,
	(funptr)&f_touchA392,
	(funptr)&f_touchA393,
	(funptr)&f_touchA394,
	(funptr)&f_touchA395,
	(funptr)&f_touchA396,
	(funptr)&f_touchA397,
	(funptr)&f_touchA398,
	(funptr)&f_touchA399,
	(funptr)&f_touchA400,
	(funptr)&f_touchA401,
	(funptr)&f_touchA402,
	(funptr)&f_touchA403,
	(funptr)&f_touchA404,
	(funptr)&f_touchA405,
	(funptr)&f_touchA406,
	(funptr)&f_touchA407,
	(funptr)&f_touchA408,
	(funptr)&f_touchA409,
	(funptr)&f_touchA410,
	(funptr)&f_touchA411,
	(funptr)&f_touchA412,
	(funptr)&f_touchA413,
	(funptr)&f_touchA414,
	(funptr)&f_touchA415,
	(funptr)&f_touchA416,
	(funptr)&f_touchA417,
	(funptr)&f_touchA418,
	(funptr)&f_touchA419,
	(funptr)&f_touchA420,
	(funptr)&f_touchA421,
	(funptr)&f_touchA422,
	(funptr)&f_touchA423,
	(funptr)&f_touchA424,
	(funptr)&f_touchA425,
	(funptr)&f_touchA426,
	(funptr)&f_touchA427,
	(funptr)&f_touchA428,
	(funptr)&f_touchA429,
	(funptr)&f_touchA430,
	(funptr)&f_touchA431,
	(funptr)&f_touchA432,
	(funptr)&f_touchA433,
	(funptr)&f_touchA434,
	(funptr)&f_touchA435,
	(funptr)&f_touchA436,
	(funptr)&f_touchA437,
	(funptr)&f_touchA438,
	(funptr)&f_touchA439,
	(funptr)&f_touchA440,
	(funptr)&f_touchA441,
	(funptr)&f_touchA442,
	(funptr)&f_touchA443,
	(funptr)&f_touchA444,
	(funptr)&f_touchA445,
	(funptr)&f_touchA446,
	(funptr)&f_touchA447,
	(funptr)&f_touchA448,
	(funptr)&f_touchA449,
	(funptr)&f_touchA450,
	(funptr)&f_touchA451,
	(funptr)&f_touchA452,
	(funptr)&f_touchA453,
	(funptr)&f_touchA454,
	(funptr)&f_touchA455,
	(funptr)&f_touchA456,
	(funptr)&f_touchA457,
	(funptr)&f_touchA458,
	(funptr)&f_touchA459,
	(funptr)&f_touchA460,
	(funptr)&f_touchA461,
	(funptr)&f_touchA462,
	(funptr)&f_touchA463,
	(funptr)&f_touchA464,
	(funptr)&f_touchA465,
	(funptr)&f_touchA466,
	(funptr)&f_touchA467,
	(funptr)&f_touchA468,
	(funptr)&f_touchA469,
	(funptr)&f_touchA470,
	(funptr)&f_touchA471,
	(funptr)&f_touchA472,
	(funptr)&f_touchA473,
	(funptr)&f_touchA474,
	(funptr)&f_touchA475,
	(funptr)&f_touchA476,
	(funptr)&f_touchA477,
	(funptr)&f_touchA478,
	(funptr)&f_touchA479,
	(funptr)&f_touchA480,
	(funptr)&f_touchA481,
	(funptr)&f_touchA482,
	(funptr)&f_touchA483,
	(funptr)&f_touchA484,
	(funptr)&f_touchA485,
	(funptr)&f_touchA486,
	(funptr)&f_touchA487,
	(funptr)&f_touchA488,
	(funptr)&f_touchA489,
	(funptr)&f_touchA490,
	(funptr)&f_touchA491,
	(funptr)&f_touchA492,
	(funptr)&f_touchA493,
	(funptr)&f_touchA494,
	(funptr)&f_touchA495,
	(funptr)&f_touchA496,
	(funptr)&f_touchA497,
	(funptr)&f_touchA498,
	(funptr)&f_touchA499,
	(funptr)&f_touchA500,
	(funptr)&f_touchA501,
	(funptr)&f_touchA502,
	(funptr)&f_touchA503,
	(funptr)&f_touchA504,
	(funptr)&f_touchA505,
	(funptr)&f_touchA506,
	(funptr)&f_touchA507,
	(funptr)&f_touchA508,
	(funptr)&f_touchA509,
	(funptr)&f_touchA510,
	(funptr)&f_touchA511,
	(funptr)&f_touchA512,
	(funptr)&f_touchA513,
	(funptr)&f_touchA514,
	(funptr)&f_touchA515,
	(funptr)&f_touchA516,
	(funptr)&f_touchA517,
	(funptr)&f_touchA518,
	(funptr)&f_touchA519,
	(funptr)&f_touchA520,
	(funptr)&f_touchA521,
	(funptr)&f_touchA522,
	(funptr)&f_touchA523,
	(funptr)&f_touchA524,
	(funptr)&f_touchA525,
	(funptr)&f_touchA526,
	(funptr)&f_touchA527,
	(funptr)&f_touchA528,
	(funptr)&f_touchA529,
	(funptr)&f_touchA530,
	(funptr)&f_touchA531,
	(funptr)&f_touchA532,
	(funptr)&f_touchA533,
	(funptr)&f_touchA534,
	(funptr)&f_touchA535,
	(funptr)&f_touchA536,
	(funptr)&f_touchA537,
	(funptr)&f_touchA538,
	(funptr)&f_touchA539,
	(funptr)&f_touchA540,
	(funptr)&f_touchA541,
	(funptr)&f_touchA542,
	(funptr)&f_touchA543,
	(funptr)&f_touchA544,
	(funptr)&f_touchA545,
	(funptr)&f_touchA546,
	(funptr)&f_touchA547,
	(funptr)&f_touchA548,
	(funptr)&f_touchA549,
	(funptr)&f_touchA550,
	(funptr)&f_touchA551,
	(funptr)&f_touchA552,
	(funptr)&f_touchA553,
	(funptr)&f_touchA554,
	(funptr)&f_touchA555,
	(funptr)&f_touchA556,
	(funptr)&f_touchA557,
	(funptr)&f_touchA558,
	(funptr)&f_touchA559,
	(funptr)&f_touchA560,
	(funptr)&f_touchA561,
	(funptr)&f_touchA562,
	(funptr)&f_touchA563,
	(funptr)&f_touchA564,
	(funptr)&f_touchA565,
	(funptr)&f_touchA566,
	(funptr)&f_touchA567,
	(funptr)&f_touchA568,
	(funptr)&f_touchA569,
	(funptr)&f_touchA570,
	(funptr)&f_touchA571,
	(funptr)&f_touchA572,
	(funptr)&f_touchA573,
	(funptr)&f_touchA574,
	(funptr)&f_touchA575,
	(funptr)&f_touchA576,
	(funptr)&f_touchA577,
	(funptr)&f_touchA578,
	(funptr)&f_touchA579,
	(funptr)&f_touchA580,
	(funptr)&f_touchA581,
	(funptr)&f_touchA582,
	(funptr)&f_touchA583,
	(funptr)&f_touchA584,
	(funptr)&f_touchA585,
	(funptr)&f_touchA586,
	(funptr)&f_touchA587,
	(funptr)&f_touchA588,
	(funptr)&f_touchA589,
	(funptr)&f_touchA590,
	(funptr)&f_touchA591,
	(funptr)&f_touchA592,
	(funptr)&f_touchA593,
	(funptr)&f_touchA594,
	(funptr)&f_touchA595,
	(funptr)&f_touchA596,
	(funptr)&f_touchA597,
	(funptr)&f_touchA598,
	(funptr)&f_touchA599,
	(funptr)&f_touchA600,
	(funptr)&f_touchA601,
	(funptr)&f_touchA602,
	(funptr)&f_touchA603,
	(funptr)&f_touchA604,
	(funptr)&f_touchA605,
	(funptr)&f_touchA606,
	(funptr)&f_touchA607,
	(funptr)&f_touchA608,
	(funptr)&f_touchA609,
	(funptr)&f_touchA610,
	(funptr)&f_touchA611,
	(funptr)&f_touchA612,
	(funptr)&f_touchA613,
	(funptr)&f_touchA614,
	(funptr)&f_touchA615,
	(funptr)&f_touchA616,
	(funptr)&f_touchA617,
	(funptr)&f_touchA618,
	(funptr)&f_touchA619,
	(funptr)&f_touchA620,
	(funptr)&f_touchA621,
	(funptr)&f_touchA622,
	(funptr)&f_touchA623,
	(funptr)&f_touchA624,
	(funptr)&f_touchA625,
	(funptr)&f_touchA626,
	(funptr)&f_touchA627,
	(funptr)&f_touchA628,
	(funptr)&f_touchA629,
	(funptr)&f_touchA630,
	(funptr)&f_touchA631,
	(funptr)&f_touchA632,
	(funptr)&f_touchA633,
	(funptr)&f_touchA634,
	(funptr)&f_touchA635,
	(funptr)&f_touchA636,
	(funptr)&f_touchA637,
	(funptr)&f_touchA638,
	(funptr)&f_touchA639,
	(funptr)&f_touchA640,
	(funptr)&f_touchA641,
	(funptr)&f_touchA642,
	(funptr)&f_touchA643,
	(funptr)&f_touchA644,
	(funptr)&f_touchA645,
	(funptr)&f_touchA646,
	(funptr)&f_touchA647,
	(funptr)&f_touchA648,
	(funptr)&f_touchA649,
	(funptr)&f_touchA650,
	(funptr)&f_touchA651,
	(funptr)&f_touchA652,
	(funptr)&f_touchA653,
	(funptr)&f_touchA654,
	(funptr)&f_touchA655,
	(funptr)&f_touchA656,
	(funptr)&f_touchA657,
	(funptr)&f_touchA658,
	(funptr)&f_touchA659,
	(funptr)&f_touchA660,
	(funptr)&f_touchA661,
	(funptr)&f_touchA662,
	(funptr)&f_touchA663,
	(funptr)&f_touchA664,
	(funptr)&f_touchA665,
	(funptr)&f_touchA666,
	(funptr)&f_touchA667,
	(funptr)&f_touchA668,
	(funptr)&f_touchA669,
	(funptr)&f_touchA670,
	(funptr)&f_touchA671,
	(funptr)&f_touchA672,
	(funptr)&f_touchA673,
	(funptr)&f_touchA674,
	(funptr)&f_touchA675,
	(funptr)&f_touchA676,
	(funptr)&f_touchA677,
	(funptr)&f_touchA678,
	(funptr)&f_touchA679,
	(funptr)&f_touchA680,
	(funptr)&f_touchA681,
	(funptr)&f_touchA682,
	(funptr)&f_touchA683,
	(funptr)&f_touchA684,
	(funptr)&f_touchA685,
	(funptr)&f_touchA686,
	(funptr)&f_touchA687,
	(funptr)&f_touchA688,
	(funptr)&f_touchA689,
	(funptr)&f_touchA690,
	(funptr)&f_touchA691,
	(funptr)&f_touchA692,
	(funptr)&f_touchA693,
	(funptr)&f_touchA694,
	(funptr)&f_touchA695,
	(funptr)&f_touchA696,
	(funptr)&f_touchA697,
	(funptr)&f_touchA698,
	(funptr)&f_touchA699,
	(funptr)&f_touchA700,
	(funptr)&f_touchA701,
	(funptr)&f_touchA702,
	(funptr)&f_touchA703,
	(funptr)&f_touchA704,
	(funptr)&f_touchA705,
	(funptr)&f_touchA706,
	(funptr)&f_touchA707,
	(funptr)&f_touchA708,
	(funptr)&f_touchA709,
	(funptr)&f_touchA710,
	(funptr)&f_touchA711,
	(funptr)&f_touchA712,
	(funptr)&f_touchA713,
	(funptr)&f_touchA714,
	(funptr)&f_touchA715,
	(funptr)&f_touchA716,
	(funptr)&f_touchA717,
	(funptr)&f_touchA718,
	(funptr)&f_touchA719,
	(funptr)&f_touchA720,
	(funptr)&f_touchA721,
	(funptr)&f_touchA722,
	(funptr)&f_touchA723,
	(funptr)&f_touchA724,
	(funptr)&f_touchA725,
	(funptr)&f_touchA726,
	(funptr)&f_touchA727,
	(funptr)&f_touchA728,
	(funptr)&f_touchA729,
	(funptr)&f_touchA730,
	(funptr)&f_touchA731,
	(funptr)&f_touchA732,
	(funptr)&f_touchA733,
	(funptr)&f_touchA734,
	(funptr)&f_touchA735,
	(funptr)&f_touchA736,
	(funptr)&f_touchA737,
	(funptr)&f_touchA738,
	(funptr)&f_touchA739,
	(funptr)&f_touchA740,
	(funptr)&f_touchA741,
	(funptr)&f_touchA742,
	(funptr)&f_touchA743,
	(funptr)&f_touchA744,
	(funptr)&f_touchA745,
	(funptr)&f_touchA746,
	(funptr)&f_touchA747,
	(funptr)&f_touchA748,
	(funptr)&f_touchA749,
	(funptr)&f_touchA750,
	(funptr)&f_touchA751,
	(funptr)&f_touchA752,
	(funptr)&f_touchA753,
	(funptr)&f_touchA754,
	(funptr)&f_touchA755,
	(funptr)&f_touchA756,
	(funptr)&f_touchA757,
	(funptr)&f_touchA758,
	(funptr)&f_touchA759,
	(funptr)&f_touchA760,
	(funptr)&f_touchA761,
	(funptr)&f_touchA762,
	(funptr)&f_touchA763,
	(funptr)&f_touchA764,
	(funptr)&f_touchA765,
	(funptr)&f_touchA766,
	(funptr)&f_touchA767,
	(funptr)&f_touchA768,
	(funptr)&f_touchA769,
	(funptr)&f_touchA770,
	(funptr)&f_touchA771,
	(funptr)&f_touchA772,
	(funptr)&f_touchA773,
	(funptr)&f_touchA774,
	(funptr)&f_touchA775,
	(funptr)&f_touchA776,
	(funptr)&f_touchA777,
	(funptr)&f_touchA778,
	(funptr)&f_touchA779,
	(funptr)&f_touchA780,
	(funptr)&f_touchA781,
	(funptr)&f_touchA782,
	(funptr)&f_touchA783,
	(funptr)&f_touchA784,
	(funptr)&f_touchA785,
	(funptr)&f_touchA786,
	(funptr)&f_touchA787,
	(funptr)&f_touchA788,
	(funptr)&f_touchA789,
	(funptr)&f_touchA790,
	(funptr)&f_touchA791,
	(funptr)&f_touchA792,
	(funptr)&f_touchA793,
	(funptr)&f_touchA794,
	(funptr)&f_touchA795,
	(funptr)&f_touchA796,
	(funptr)&f_touchA797,
	(funptr)&f_touchA798,
	(funptr)&f_touchA799,
	(funptr)&f_touchA800,
	(funptr)&f_touchA801,
	(funptr)&f_touchA802,
	(funptr)&f_touchA803,
	(funptr)&f_touchA804,
	(funptr)&f_touchA805,
	(funptr)&f_touchA806,
	(funptr)&f_touchA807,
	(funptr)&f_touchA808,
	(funptr)&f_touchA809,
	(funptr)&f_touchA810,
	(funptr)&f_touchA811,
	(funptr)&f_touchA812,
	(funptr)&f_touchA813,
	(funptr)&f_touchA814,
	(funptr)&f_touchA815,
	(funptr)&f_touchA816,
	(funptr)&f_touchA817,
	(funptr)&f_touchA818,
	(funptr)&f_touchA819,
	(funptr)&f_touchA820,
	(funptr)&f_touchA821,
	(funptr)&f_touchA822,
	(funptr)&f_touchA823,
	(funptr)&f_touchA824,
	(funptr)&f_touchA825,
	(funptr)&f_touchA826,
	(funptr)&f_touchA827,
	(funptr)&f_touchA828,
	(funptr)&f_touchA829,
	(funptr)&f_touchA830,
	(funptr)&f_touchA831,
	(funptr)&f_touchA832,
	(funptr)&f_touchA833,
	(funptr)&f_touchA834,
	(funptr)&f_touchA835,
	(funptr)&f_touchA836,
	(funptr)&f_touchA837,
	(funptr)&f_touchA838,
	(funptr)&f_touchA839,
	(funptr)&f_touchA840,
	(funptr)&f_touchA841,
	(funptr)&f_touchA842,
	(funptr)&f_touchA843,
	(funptr)&f_touchA844,
	(funptr)&f_touchA845,
	(funptr)&f_touchA846,
	(funptr)&f_touchA847,
	(funptr)&f_touchA848,
	(funptr)&f_touchA849,
	(funptr)&f_touchA850,
	(funptr)&f_touchA851,
	(funptr)&f_touchA852,
	(funptr)&f_touchA853,
	(funptr)&f_touchA854,
	(funptr)&f_touchA855,
	(funptr)&f_touchA856,
	(funptr)&f_touchA857,
	(funptr)&f_touchA858,
	(funptr)&f_touchA859,
	(funptr)&f_touchA860,
	(funptr)&f_touchA861,
	(funptr)&f_touchA862,
	(funptr)&f_touchA863,
	(funptr)&f_touchA864,
	(funptr)&f_touchA865,
	(funptr)&f_touchA866,
	(funptr)&f_touchA867,
	(funptr)&f_touchA868,
	(funptr)&f_touchA869,
	(funptr)&f_touchA870,
	(funptr)&f_touchA871,
	(funptr)&f_touchA872,
	(funptr)&f_touchA873,
	(funptr)&f_touchA874,
	(funptr)&f_touchA875,
	(funptr)&f_touchA876,
	(funptr)&f_touchA877,
	(funptr)&f_touchA878,
	(funptr)&f_touchA879,
	(funptr)&f_touchA880,
	(funptr)&f_touchA881,
	(funptr)&f_touchA882,
	(funptr)&f_touchA883,
	(funptr)&f_touchA884,
	(funptr)&f_touchA885,
	(funptr)&f_touchA886,
	(funptr)&f_touchA887,
	(funptr)&f_touchA888,
	(funptr)&f_touchA889,
	(funptr)&f_touchA890,
	(funptr)&f_touchA891,
	(funptr)&f_touchA892,
	(funptr)&f_touchA893,
	(funptr)&f_touchA894,
	(funptr)&f_touchA895,
	(funptr)&f_touchA896,
	(funptr)&f_touchA897,
	(funptr)&f_touchA898,
	(funptr)&f_touchA899,
	(funptr)&f_touchA900,
	(funptr)&f_touchA901,
	(funptr)&f_touchA902,
	(funptr)&f_touchA903,
	(funptr)&f_touchA904,
	(funptr)&f_touchA905,
	(funptr)&f_touchA906,
	(funptr)&f_touchA907,
	(funptr)&f_touchA908,
	(funptr)&f_touchA909,
	(funptr)&f_touchA910,
	(funptr)&f_touchA911,
	(funptr)&f_touchA912,
	(funptr)&f_touchA913,
	(funptr)&f_touchA914,
	(funptr)&f_touchA915,
	(funptr)&f_touchA916,
	(funptr)&f_touchA917,
	(funptr)&f_touchA918,
	(funptr)&f_touchA919,
	(funptr)&f_touchA920,
	(funptr)&f_touchA921,
	(funptr)&f_touchA922,
	(funptr)&f_touchA923,
	(funptr)&f_touchA924,
	(funptr)&f_touchA925,
	(funptr)&f_touchA926,
	(funptr)&f_touchA927,
	(funptr)&f_touchA928,
	(funptr)&f_touchA929,
	(funptr)&f_touchA930,
	(funptr)&f_touchA931,
	(funptr)&f_touchA932,
	(funptr)&f_touchA933,
	(funptr)&f_touchA934,
	(funptr)&f_touchA935,
	(funptr)&f_touchA936,
	(funptr)&f_touchA937,
	(funptr)&f_touchA938,
	(funptr)&f_touchA939,
	(funptr)&f_touchA940,
	(funptr)&f_touchA941,
	(funptr)&f_touchA942,
	(funptr)&f_touchA943,
	(funptr)&f_touchA944,
	(funptr)&f_touchA945,
	(funptr)&f_touchA946,
	(funptr)&f_touchA947,
	(funptr)&f_touchA948,
	(funptr)&f_touchA949,
	(funptr)&f_touchA950,
	(funptr)&f_touchA951,
	(funptr)&f_touchA952,
	(funptr)&f_touchA953,
	(funptr)&f_touchA954,
	(funptr)&f_touchA955,
	(funptr)&f_touchA956,
	(funptr)&f_touchA957,
	(funptr)&f_touchA958,
	(funptr)&f_touchA959,
	(funptr)&f_touchA960,
	(funptr)&f_touchA961,
	(funptr)&f_touchA962,
	(funptr)&f_touchA963,
	(funptr)&f_touchA964,
	(funptr)&f_touchA965,
	(funptr)&f_touchA966,
	(funptr)&f_touchA967,
	(funptr)&f_touchA968,
	(funptr)&f_touchA969,
	(funptr)&f_touchA970,
	(funptr)&f_touchA971,
	(funptr)&f_touchA972,
	(funptr)&f_touchA973,
	(funptr)&f_touchA974,
	(funptr)&f_touchA975,
	(funptr)&f_touchA976,
	(funptr)&f_touchA977,
	(funptr)&f_touchA978,
	(funptr)&f_touchA979,
	(funptr)&f_touchA980,
	(funptr)&f_touchA981,
	(funptr)&f_touchA982,
	(funptr)&f_touchA983,
	(funptr)&f_touchA984,
	(funptr)&f_touchA985,
	(funptr)&f_touchA986,
	(funptr)&f_touchA987,
	(funptr)&f_touchA988,
	(funptr)&f_touchA989,
	(funptr)&f_touchA990,
	(funptr)&f_touchA991,
	(funptr)&f_touchA992,
	(funptr)&f_touchA993,
	(funptr)&f_touchA994,
	(funptr)&f_touchA995,
	(funptr)&f_touchA996,
	(funptr)&f_touchA997,
	(funptr)&f_touchA998,
	(funptr)&f_touchA999,
	(funptr)&f_touchA1000,
	(funptr)&f_touchA1001,
	(funptr)&f_touchA1002,
	(funptr)&f_touchA1003,
	(funptr)&f_touchA1004,
	(funptr)&f_touchA1005,
	(funptr)&f_touchA1006,
	(funptr)&f_touchA1007,
	(funptr)&f_touchA1008,
	(funptr)&f_touchA1009,
	(funptr)&f_touchA1010,
	(funptr)&f_touchA1011,
	(funptr)&f_touchA1012,
	(funptr)&f_touchA1013,
	(funptr)&f_touchA1014,
	(funptr)&f_touchA1015,
	(funptr)&f_touchA1016,
	(funptr)&f_touchA1017,
	(funptr)&f_touchA1018,
	(funptr)&f_touchA1019,
	(funptr)&f_touchA1020,
	(funptr)&f_touchA1021,
	(funptr)&f_touchA1022,
	(funptr)&f_touchA1023,
	(funptr)&f_touchA1024,
	(funptr)&f_touchA1025,
	(funptr)&f_touchA1026,
	(funptr)&f_touchA1027,
	(funptr)&f_touchA1028,
	(funptr)&f_touchA1029,
	(funptr)&f_touchA1030,
	(funptr)&f_touchA1031,
	(funptr)&f_touchA1032,
	(funptr)&f_touchA1033,
	(funptr)&f_touchA1034,
	(funptr)&f_touchA1035,
	(funptr)&f_touchA1036,
	(funptr)&f_touchA1037,
	(funptr)&f_touchA1038,
	(funptr)&f_touchA1039,
	(funptr)&f_touchA1040,
	(funptr)&f_touchA1041,
	(funptr)&f_touchA1042,
	(funptr)&f_touchA1043,
	(funptr)&f_touchA1044,
	(funptr)&f_touchA1045,
	(funptr)&f_touchA1046,
	(funptr)&f_touchA1047,
	(funptr)&f_touchA1048,
	(funptr)&f_touchA1049,
	(funptr)&f_touchA1050,
	(funptr)&f_touchA1051,
	(funptr)&f_touchA1052,
	(funptr)&f_touchA1053,
	(funptr)&f_touchA1054,
	(funptr)&f_touchA1055,
	(funptr)&f_touchA1056,
	(funptr)&f_touchA1057,
	(funptr)&f_touchA1058,
	(funptr)&f_touchA1059,
	(funptr)&f_touchA1060,
	(funptr)&f_touchA1061,
	(funptr)&f_touchA1062,
	(funptr)&f_touchA1063,
	(funptr)&f_touchA1064,
	(funptr)&f_touchA1065,
	(funptr)&f_touchA1066,
	(funptr)&f_touchA1067,
	(funptr)&f_touchA1068,
	(funptr)&f_touchA1069,
	(funptr)&f_touchA1070,
	(funptr)&f_touchA1071,
	(funptr)&f_touchA1072,
	(funptr)&f_touchA1073,
	(funptr)&f_touchA1074,
	(funptr)&f_touchA1075,
	(funptr)&f_touchA1076,
	(funptr)&f_touchA1077,
	(funptr)&f_touchA1078,
	(funptr)&f_touchA1079,
	(funptr)&f_touchA1080,
	(funptr)&f_touchA1081,
	(funptr)&f_touchA1082,
	(funptr)&f_touchA1083,
	(funptr)&f_touchA1084,
	(funptr)&f_touchA1085,
	(funptr)&f_touchA1086,
	(funptr)&f_touchA1087,
	(funptr)&f_touchA1088,
	(funptr)&f_touchA1089,
	(funptr)&f_touchA1090,
	(funptr)&f_touchA1091,
	(funptr)&f_touchA1092,
	(funptr)&f_touchA1093,
	(funptr)&f_touchA1094,
	(funptr)&f_touchA1095,
	(funptr)&f_touchA1096,
	(funptr)&f_touchA1097,
	(funptr)&f_touchA1098,
	(funptr)&f_touchA1099,
	(funptr)&f_touchA1100,
	(funptr)&f_touchA1101,
	(funptr)&f_touchA1102,
	(funptr)&f_touchA1103,
	(funptr)&f_touchA1104,
	(funptr)&f_touchA1105,
	(funptr)&f_touchA1106,
	(funptr)&f_touchA1107,
	(funptr)&f_touchA1108,
	(funptr)&f_touchA1109,
	(funptr)&f_touchA1110,
	(funptr)&f_touchA1111,
	(funptr)&f_touchA1112,
	(funptr)&f_touchA1113,
	(funptr)&f_touchA1114,
	(funptr)&f_touchA1115,
	(funptr)&f_touchA1116,
	(funptr)&f_touchA1117,
	(funptr)&f_touchA1118,
	(funptr)&f_touchA1119,
	(funptr)&f_touchA1120,
	(funptr)&f_touchA1121,
	(funptr)&f_touchA1122,
	(funptr)&f_touchA1123,
	(funptr)&f_touchA1124,
	(funptr)&f_touchA1125,
	(funptr)&f_touchA1126,
	(funptr)&f_touchA1127,
	(funptr)&f_touchA1128,
	(funptr)&f_touchA1129,
	(funptr)&f_touchA1130,
	(funptr)&f_touchA1131,
	(funptr)&f_touchA1132,
	(funptr)&f_touchA1133,
	(funptr)&f_touchA1134,
	(funptr)&f_touchA1135,
	(funptr)&f_touchA1136,
	(funptr)&f_touchA1137,
	(funptr)&f_touchA1138,
	(funptr)&f_touchA1139,
	(funptr)&f_touchA1140,
	(funptr)&f_touchA1141,
	(funptr)&f_touchA1142,
	(funptr)&f_touchA1143,
	(funptr)&f_touchA1144,
	(funptr)&f_touchA1145,
	(funptr)&f_touchA1146,
	(funptr)&f_touchA1147,
	(funptr)&f_touchA1148,
	(funptr)&f_touchA1149,
	(funptr)&f_touchA1150,
	(funptr)&f_touchA1151,
	(funptr)&f_touchA1152,
	(funptr)&f_touchA1153,
	(funptr)&f_touchA1154,
	(funptr)&f_touchA1155,
	(funptr)&f_touchA1156,
	(funptr)&f_touchA1157,
	(funptr)&f_touchA1158,
	(funptr)&f_touchA1159,
	(funptr)&f_touchA1160,
	(funptr)&f_touchA1161,
	(funptr)&f_touchA1162,
	(funptr)&f_touchA1163,
	(funptr)&f_touchA1164,
	(funptr)&f_touchA1165,
	(funptr)&f_touchA1166,
	(funptr)&f_touchA1167,
	(funptr)&f_touchA1168,
	(funptr)&f_touchA1169,
	(funptr)&f_touchA1170,
	(funptr)&f_touchA1171,
	(funptr)&f_touchA1172,
	(funptr)&f_touchA1173,
	(funptr)&f_touchA1174,
	(funptr)&f_touchA1175,
	(funptr)&f_touchA1176,
	(funptr)&f_touchA1177,
	(funptr)&f_touchA1178,
	(funptr)&f_touchA1179,
	(funptr)&f_touchA1180,
	(funptr)&f_touchA1181,
	(funptr)&f_touchA1182,
	(funptr)&f_touchA1183,
	(funptr)&f_touchA1184,
	(funptr)&f_touchA1185,
	(funptr)&f_touchA1186,
	(funptr)&f_touchA1187,
	(funptr)&f_touchA1188,
	(funptr)&f_touchA1189,
	(funptr)&f_touchA1190,
	(funptr)&f_touchA1191,
	(funptr)&f_touchA1192,
	(funptr)&f_touchA1193,
	(funptr)&f_touchA1194,
	(funptr)&f_touchA1195,
	(funptr)&f_touchA1196,
	(funptr)&f_touchA1197,
	(funptr)&f_touchA1198,
	(funptr)&f_touchA1199,
	(funptr)&f_touchA1200,
	(funptr)&f_touchA1201,
	(funptr)&f_touchA1202,
	(funptr)&f_touchA1203,
	(funptr)&f_touchA1204,
	(funptr)&f_touchA1205,
	(funptr)&f_touchA1206,
	(funptr)&f_touchA1207,
	(funptr)&f_touchA1208,
	(funptr)&f_touchA1209,
	(funptr)&f_touchA1210,
	(funptr)&f_touchA1211,
	(funptr)&f_touchA1212,
	(funptr)&f_touchA1213,
	(funptr)&f_touchA1214,
	(funptr)&f_touchA1215,
	(funptr)&f_touchA1216,
	(funptr)&f_touchA1217,
	(funptr)&f_touchA1218,
	(funptr)&f_touchA1219,
	(funptr)&f_touchA1220,
	(funptr)&f_touchA1221,
	(funptr)&f_touchA1222,
	(funptr)&f_touchA1223,
	(funptr)&f_touchA1224,
	(funptr)&f_touchA1225,
	(funptr)&f_touchA1226,
	(funptr)&f_touchA1227,
	(funptr)&f_touchA1228,
	(funptr)&f_touchA1229,
	(funptr)&f_touchA1230,
	(funptr)&f_touchA1231,
	(funptr)&f_touchA1232,
	(funptr)&f_touchA1233,
	(funptr)&f_touchA1234,
	(funptr)&f_touchA1235
};
funptr G_agg_cmpfuncs[] = {
	(funptr)&f_cmpA1,
	(funptr)&f_cmpA2,
	(funptr)&f_cmpA3,
	(funptr)&f_cmpA4,
	(funptr)&f_cmpA5,
	(funptr)&f_cmpA6,
	(funptr)&f_cmpA7,
	(funptr)&f_cmpA8,
	(funptr)&f_cmpA9,
	(funptr)&f_cmpA10,
	(funptr)&f_cmpA11,
	(funptr)&f_cmpA12,
	(funptr)&f_cmpA13,
	(funptr)&f_cmpA14,
	(funptr)&f_cmpA15,
	(funptr)&f_cmpA16,
	(funptr)&f_cmpA17,
	(funptr)&f_cmpA18,
	(funptr)&f_cmpA19,
	(funptr)&f_cmpA20,
	(funptr)&f_cmpA21,
	(funptr)&f_cmpA22,
	(funptr)&f_cmpA23,
	(funptr)&f_cmpA24,
	(funptr)&f_cmpA25,
	(funptr)&f_cmpA26,
	(funptr)&f_cmpA27,
	(funptr)&f_cmpA28,
	(funptr)&f_cmpA29,
	(funptr)&f_cmpA30,
	(funptr)&f_cmpA31,
	(funptr)&f_cmpA32,
	(funptr)&f_cmpA33,
	(funptr)&f_cmpA34,
	(funptr)&f_cmpA35,
	(funptr)&f_cmpA36,
	(funptr)&f_cmpA37,
	(funptr)&f_cmpA38,
	(funptr)&f_cmpA39,
	(funptr)&f_cmpA40,
	(funptr)&f_cmpA41,
	(funptr)&f_cmpA42,
	(funptr)&f_cmpA43,
	(funptr)&f_cmpA44,
	(funptr)&f_cmpA45,
	(funptr)&f_cmpA46,
	(funptr)&f_cmpA47,
	(funptr)&f_cmpA48,
	(funptr)&f_cmpA49,
	(funptr)&f_cmpA50,
	(funptr)&f_cmpA51,
	(funptr)&f_cmpA52,
	(funptr)&f_cmpA53,
	(funptr)&f_cmpA54,
	(funptr)&f_cmpA55,
	(funptr)&f_cmpA56,
	(funptr)&f_cmpA57,
	(funptr)&f_cmpA58,
	(funptr)&f_cmpA59,
	(funptr)&f_cmpA60,
	(funptr)&f_cmpA61,
	(funptr)&f_cmpA62,
	(funptr)&f_cmpA63,
	(funptr)&f_cmpA64,
	(funptr)&f_cmpA65,
	(funptr)&f_cmpA66,
	(funptr)&f_cmpA67,
	(funptr)&f_cmpA68,
	(funptr)&f_cmpA69,
	(funptr)&f_cmpA70,
	(funptr)&f_cmpA71,
	(funptr)&f_cmpA72,
	(funptr)&f_cmpA73,
	(funptr)&f_cmpA74,
	(funptr)&f_cmpA75,
	(funptr)&f_cmpA76,
	(funptr)&f_cmpA77,
	(funptr)&f_cmpA78,
	(funptr)&f_cmpA79,
	(funptr)&f_cmpA80,
	(funptr)&f_cmpA81,
	(funptr)&f_cmpA82,
	(funptr)&f_cmpA83,
	(funptr)&f_cmpA84,
	(funptr)&f_cmpA85,
	(funptr)&f_cmpA86,
	(funptr)&f_cmpA87,
	(funptr)&f_cmpA88,
	(funptr)&f_cmpA89,
	(funptr)&f_cmpA90,
	(funptr)&f_cmpA91,
	(funptr)&f_cmpA92,
	(funptr)&f_cmpA93,
	(funptr)&f_cmpA94,
	(funptr)&f_cmpA95,
	(funptr)&f_cmpA96,
	(funptr)&f_cmpA97,
	(funptr)&f_cmpA98,
	(funptr)&f_cmpA99,
	(funptr)&f_cmpA100,
	(funptr)&f_cmpA101,
	(funptr)&f_cmpA102,
	(funptr)&f_cmpA103,
	(funptr)&f_cmpA104,
	(funptr)&f_cmpA105,
	(funptr)&f_cmpA106,
	(funptr)&f_cmpA107,
	(funptr)&f_cmpA108,
	(funptr)&f_cmpA109,
	(funptr)&f_cmpA110,
	(funptr)&f_cmpA111,
	(funptr)&f_cmpA112,
	(funptr)&f_cmpA113,
	(funptr)&f_cmpA114,
	(funptr)&f_cmpA115,
	(funptr)&f_cmpA116,
	(funptr)&f_cmpA117,
	(funptr)&f_cmpA118,
	(funptr)&f_cmpA119,
	(funptr)&f_cmpA120,
	(funptr)&f_cmpA121,
	(funptr)&f_cmpA122,
	(funptr)&f_cmpA123,
	(funptr)&f_cmpA124,
	(funptr)&f_cmpA125,
	(funptr)&f_cmpA126,
	(funptr)&f_cmpA127,
	(funptr)&f_cmpA128,
	(funptr)&f_cmpA129,
	(funptr)&f_cmpA130,
	(funptr)&f_cmpA131,
	(funptr)&f_cmpA132,
	(funptr)&f_cmpA133,
	(funptr)&f_cmpA134,
	(funptr)&f_cmpA135,
	(funptr)&f_cmpA136,
	(funptr)&f_cmpA137,
	(funptr)&f_cmpA138,
	(funptr)&f_cmpA139,
	(funptr)&f_cmpA140,
	(funptr)&f_cmpA141,
	(funptr)&f_cmpA142,
	(funptr)&f_cmpA143,
	(funptr)&f_cmpA144,
	(funptr)&f_cmpA145,
	(funptr)&f_cmpA146,
	(funptr)&f_cmpA147,
	(funptr)&f_cmpA148,
	(funptr)&f_cmpA149,
	(funptr)&f_cmpA150,
	(funptr)&f_cmpA151,
	(funptr)&f_cmpA152,
	(funptr)&f_cmpA153,
	(funptr)&f_cmpA154,
	(funptr)&f_cmpA155,
	(funptr)&f_cmpA156,
	(funptr)&f_cmpA157,
	(funptr)&f_cmpA158,
	(funptr)&f_cmpA159,
	(funptr)&f_cmpA160,
	(funptr)&f_cmpA161,
	(funptr)&f_cmpA162,
	(funptr)&f_cmpA163,
	(funptr)&f_cmpA164,
	(funptr)&f_cmpA165,
	(funptr)&f_cmpA166,
	(funptr)&f_cmpA167,
	(funptr)&f_cmpA168,
	(funptr)&f_cmpA169,
	(funptr)&f_cmpA170,
	(funptr)&f_cmpA171,
	(funptr)&f_cmpA172,
	(funptr)&f_cmpA173,
	(funptr)&f_cmpA174,
	(funptr)&f_cmpA175,
	(funptr)&f_cmpA176,
	(funptr)&f_cmpA177,
	(funptr)&f_cmpA178,
	(funptr)&f_cmpA179,
	(funptr)&f_cmpA180,
	(funptr)&f_cmpA181,
	(funptr)&f_cmpA182,
	(funptr)&f_cmpA183,
	(funptr)&f_cmpA184,
	(funptr)&f_cmpA185,
	(funptr)&f_cmpA186,
	(funptr)&f_cmpA187,
	(funptr)&f_cmpA188,
	(funptr)&f_cmpA189,
	(funptr)&f_cmpA190,
	(funptr)&f_cmpA191,
	(funptr)&f_cmpA192,
	(funptr)&f_cmpA193,
	(funptr)&f_cmpA194,
	(funptr)&f_cmpA195,
	(funptr)&f_cmpA196,
	(funptr)&f_cmpA197,
	(funptr)&f_cmpA198,
	(funptr)&f_cmpA199,
	(funptr)&f_cmpA200,
	(funptr)&f_cmpA201,
	(funptr)&f_cmpA202,
	(funptr)&f_cmpA203,
	(funptr)&f_cmpA204,
	(funptr)&f_cmpA205,
	(funptr)&f_cmpA206,
	(funptr)&f_cmpA207,
	(funptr)&f_cmpA208,
	(funptr)&f_cmpA209,
	(funptr)&f_cmpA210,
	(funptr)&f_cmpA211,
	(funptr)&f_cmpA212,
	(funptr)&f_cmpA213,
	(funptr)&f_cmpA214,
	(funptr)&f_cmpA215,
	(funptr)&f_cmpA216,
	(funptr)&f_cmpA217,
	(funptr)&f_cmpA218,
	(funptr)&f_cmpA219,
	(funptr)&f_cmpA220,
	(funptr)&f_cmpA221,
	(funptr)&f_cmpA222,
	(funptr)&f_cmpA223,
	(funptr)&f_cmpA224,
	(funptr)&f_cmpA225,
	(funptr)&f_cmpA226,
	(funptr)&f_cmpA227,
	(funptr)&f_cmpA228,
	(funptr)&f_cmpA229,
	(funptr)&f_cmpA230,
	(funptr)&f_cmpA231,
	(funptr)&f_cmpA232,
	(funptr)&f_cmpA233,
	(funptr)&f_cmpA234,
	(funptr)&f_cmpA235,
	(funptr)&f_cmpA236,
	(funptr)&f_cmpA237,
	(funptr)&f_cmpA238,
	(funptr)&f_cmpA239,
	(funptr)&f_cmpA240,
	(funptr)&f_cmpA241,
	(funptr)&f_cmpA242,
	(funptr)&f_cmpA243,
	(funptr)&f_cmpA244,
	(funptr)&f_cmpA245,
	(funptr)&f_cmpA246,
	(funptr)&f_cmpA247,
	(funptr)&f_cmpA248,
	(funptr)&f_cmpA249,
	(funptr)&f_cmpA250,
	(funptr)&f_cmpA251,
	(funptr)&f_cmpA252,
	(funptr)&f_cmpA253,
	(funptr)&f_cmpA254,
	(funptr)&f_cmpA255,
	(funptr)&f_cmpA256,
	(funptr)&f_cmpA257,
	(funptr)&f_cmpA258,
	(funptr)&f_cmpA259,
	(funptr)&f_cmpA260,
	(funptr)&f_cmpA261,
	(funptr)&f_cmpA262,
	(funptr)&f_cmpA263,
	(funptr)&f_cmpA264,
	(funptr)&f_cmpA265,
	(funptr)&f_cmpA266,
	(funptr)&f_cmpA267,
	(funptr)&f_cmpA268,
	(funptr)&f_cmpA269,
	(funptr)&f_cmpA270,
	(funptr)&f_cmpA271,
	(funptr)&f_cmpA272,
	(funptr)&f_cmpA273,
	(funptr)&f_cmpA274,
	(funptr)&f_cmpA275,
	(funptr)&f_cmpA276,
	(funptr)&f_cmpA277,
	(funptr)&f_cmpA278,
	(funptr)&f_cmpA279,
	(funptr)&f_cmpA280,
	(funptr)&f_cmpA281,
	(funptr)&f_cmpA282,
	(funptr)&f_cmpA283,
	(funptr)&f_cmpA284,
	(funptr)&f_cmpA285,
	(funptr)&f_cmpA286,
	(funptr)&f_cmpA287,
	(funptr)&f_cmpA288,
	(funptr)&f_cmpA289,
	(funptr)&f_cmpA290,
	(funptr)&f_cmpA291,
	(funptr)&f_cmpA292,
	(funptr)&f_cmpA293,
	(funptr)&f_cmpA294,
	(funptr)&f_cmpA295,
	(funptr)&f_cmpA296,
	(funptr)&f_cmpA297,
	(funptr)&f_cmpA298,
	(funptr)&f_cmpA299,
	(funptr)&f_cmpA300,
	(funptr)&f_cmpA301,
	(funptr)&f_cmpA302,
	(funptr)&f_cmpA303,
	(funptr)&f_cmpA304,
	(funptr)&f_cmpA305,
	(funptr)&f_cmpA306,
	(funptr)&f_cmpA307,
	(funptr)&f_cmpA308,
	(funptr)&f_cmpA309,
	(funptr)&f_cmpA310,
	(funptr)&f_cmpA311,
	(funptr)&f_cmpA312,
	(funptr)&f_cmpA313,
	(funptr)&f_cmpA314,
	(funptr)&f_cmpA315,
	(funptr)&f_cmpA316,
	(funptr)&f_cmpA317,
	(funptr)&f_cmpA318,
	(funptr)&f_cmpA319,
	(funptr)&f_cmpA320,
	(funptr)&f_cmpA321,
	(funptr)&f_cmpA322,
	(funptr)&f_cmpA323,
	(funptr)&f_cmpA324,
	(funptr)&f_cmpA325,
	(funptr)&f_cmpA326,
	(funptr)&f_cmpA327,
	(funptr)&f_cmpA328,
	(funptr)&f_cmpA329,
	(funptr)&f_cmpA330,
	(funptr)&f_cmpA331,
	(funptr)&f_cmpA332,
	(funptr)&f_cmpA333,
	(funptr)&f_cmpA334,
	(funptr)&f_cmpA335,
	(funptr)&f_cmpA336,
	(funptr)&f_cmpA337,
	(funptr)&f_cmpA338,
	(funptr)&f_cmpA339,
	(funptr)&f_cmpA340,
	(funptr)&f_cmpA341,
	(funptr)&f_cmpA342,
	(funptr)&f_cmpA343,
	(funptr)&f_cmpA344,
	(funptr)&f_cmpA345,
	(funptr)&f_cmpA346,
	(funptr)&f_cmpA347,
	(funptr)&f_cmpA348,
	(funptr)&f_cmpA349,
	(funptr)&f_cmpA350,
	(funptr)&f_cmpA351,
	(funptr)&f_cmpA352,
	(funptr)&f_cmpA353,
	(funptr)&f_cmpA354,
	(funptr)&f_cmpA355,
	(funptr)&f_cmpA356,
	(funptr)&f_cmpA357,
	(funptr)&f_cmpA358,
	(funptr)&f_cmpA359,
	(funptr)&f_cmpA360,
	(funptr)&f_cmpA361,
	(funptr)&f_cmpA362,
	(funptr)&f_cmpA363,
	(funptr)&f_cmpA364,
	(funptr)&f_cmpA365,
	(funptr)&f_cmpA366,
	(funptr)&f_cmpA367,
	(funptr)&f_cmpA368,
	(funptr)&f_cmpA369,
	(funptr)&f_cmpA370,
	(funptr)&f_cmpA371,
	(funptr)&f_cmpA372,
	(funptr)&f_cmpA373,
	(funptr)&f_cmpA374,
	(funptr)&f_cmpA375,
	(funptr)&f_cmpA376,
	(funptr)&f_cmpA377,
	(funptr)&f_cmpA378,
	(funptr)&f_cmpA379,
	(funptr)&f_cmpA380,
	(funptr)&f_cmpA381,
	(funptr)&f_cmpA382,
	(funptr)&f_cmpA383,
	(funptr)&f_cmpA384,
	(funptr)&f_cmpA385,
	(funptr)&f_cmpA386,
	(funptr)&f_cmpA387,
	(funptr)&f_cmpA388,
	(funptr)&f_cmpA389,
	(funptr)&f_cmpA390,
	(funptr)&f_cmpA391,
	(funptr)&f_cmpA392,
	(funptr)&f_cmpA393,
	(funptr)&f_cmpA394,
	(funptr)&f_cmpA395,
	(funptr)&f_cmpA396,
	(funptr)&f_cmpA397,
	(funptr)&f_cmpA398,
	(funptr)&f_cmpA399,
	(funptr)&f_cmpA400,
	(funptr)&f_cmpA401,
	(funptr)&f_cmpA402,
	(funptr)&f_cmpA403,
	(funptr)&f_cmpA404,
	(funptr)&f_cmpA405,
	(funptr)&f_cmpA406,
	(funptr)&f_cmpA407,
	(funptr)&f_cmpA408,
	(funptr)&f_cmpA409,
	(funptr)&f_cmpA410,
	(funptr)&f_cmpA411,
	(funptr)&f_cmpA412,
	(funptr)&f_cmpA413,
	(funptr)&f_cmpA414,
	(funptr)&f_cmpA415,
	(funptr)&f_cmpA416,
	(funptr)&f_cmpA417,
	(funptr)&f_cmpA418,
	(funptr)&f_cmpA419,
	(funptr)&f_cmpA420,
	(funptr)&f_cmpA421,
	(funptr)&f_cmpA422,
	(funptr)&f_cmpA423,
	(funptr)&f_cmpA424,
	(funptr)&f_cmpA425,
	(funptr)&f_cmpA426,
	(funptr)&f_cmpA427,
	(funptr)&f_cmpA428,
	(funptr)&f_cmpA429,
	(funptr)&f_cmpA430,
	(funptr)&f_cmpA431,
	(funptr)&f_cmpA432,
	(funptr)&f_cmpA433,
	(funptr)&f_cmpA434,
	(funptr)&f_cmpA435,
	(funptr)&f_cmpA436,
	(funptr)&f_cmpA437,
	(funptr)&f_cmpA438,
	(funptr)&f_cmpA439,
	(funptr)&f_cmpA440,
	(funptr)&f_cmpA441,
	(funptr)&f_cmpA442,
	(funptr)&f_cmpA443,
	(funptr)&f_cmpA444,
	(funptr)&f_cmpA445,
	(funptr)&f_cmpA446,
	(funptr)&f_cmpA447,
	(funptr)&f_cmpA448,
	(funptr)&f_cmpA449,
	(funptr)&f_cmpA450,
	(funptr)&f_cmpA451,
	(funptr)&f_cmpA452,
	(funptr)&f_cmpA453,
	(funptr)&f_cmpA454,
	(funptr)&f_cmpA455,
	(funptr)&f_cmpA456,
	(funptr)&f_cmpA457,
	(funptr)&f_cmpA458,
	(funptr)&f_cmpA459,
	(funptr)&f_cmpA460,
	(funptr)&f_cmpA461,
	(funptr)&f_cmpA462,
	(funptr)&f_cmpA463,
	(funptr)&f_cmpA464,
	(funptr)&f_cmpA465,
	(funptr)&f_cmpA466,
	(funptr)&f_cmpA467,
	(funptr)&f_cmpA468,
	(funptr)&f_cmpA469,
	(funptr)&f_cmpA470,
	(funptr)&f_cmpA471,
	(funptr)&f_cmpA472,
	(funptr)&f_cmpA473,
	(funptr)&f_cmpA474,
	(funptr)&f_cmpA475,
	(funptr)&f_cmpA476,
	(funptr)&f_cmpA477,
	(funptr)&f_cmpA478,
	(funptr)&f_cmpA479,
	(funptr)&f_cmpA480,
	(funptr)&f_cmpA481,
	(funptr)&f_cmpA482,
	(funptr)&f_cmpA483,
	(funptr)&f_cmpA484,
	(funptr)&f_cmpA485,
	(funptr)&f_cmpA486,
	(funptr)&f_cmpA487,
	(funptr)&f_cmpA488,
	(funptr)&f_cmpA489,
	(funptr)&f_cmpA490,
	(funptr)&f_cmpA491,
	(funptr)&f_cmpA492,
	(funptr)&f_cmpA493,
	(funptr)&f_cmpA494,
	(funptr)&f_cmpA495,
	(funptr)&f_cmpA496,
	(funptr)&f_cmpA497,
	(funptr)&f_cmpA498,
	(funptr)&f_cmpA499,
	(funptr)&f_cmpA500,
	(funptr)&f_cmpA501,
	(funptr)&f_cmpA502,
	(funptr)&f_cmpA503,
	(funptr)&f_cmpA504,
	(funptr)&f_cmpA505,
	(funptr)&f_cmpA506,
	(funptr)&f_cmpA507,
	(funptr)&f_cmpA508,
	(funptr)&f_cmpA509,
	(funptr)&f_cmpA510,
	(funptr)&f_cmpA511,
	(funptr)&f_cmpA512,
	(funptr)&f_cmpA513,
	(funptr)&f_cmpA514,
	(funptr)&f_cmpA515,
	(funptr)&f_cmpA516,
	(funptr)&f_cmpA517,
	(funptr)&f_cmpA518,
	(funptr)&f_cmpA519,
	(funptr)&f_cmpA520,
	(funptr)&f_cmpA521,
	(funptr)&f_cmpA522,
	(funptr)&f_cmpA523,
	(funptr)&f_cmpA524,
	(funptr)&f_cmpA525,
	(funptr)&f_cmpA526,
	(funptr)&f_cmpA527,
	(funptr)&f_cmpA528,
	(funptr)&f_cmpA529,
	(funptr)&f_cmpA530,
	(funptr)&f_cmpA531,
	(funptr)&f_cmpA532,
	(funptr)&f_cmpA533,
	(funptr)&f_cmpA534,
	(funptr)&f_cmpA535,
	(funptr)&f_cmpA536,
	(funptr)&f_cmpA537,
	(funptr)&f_cmpA538,
	(funptr)&f_cmpA539,
	(funptr)&f_cmpA540,
	(funptr)&f_cmpA541,
	(funptr)&f_cmpA542,
	(funptr)&f_cmpA543,
	(funptr)&f_cmpA544,
	(funptr)&f_cmpA545,
	(funptr)&f_cmpA546,
	(funptr)&f_cmpA547,
	(funptr)&f_cmpA548,
	(funptr)&f_cmpA549,
	(funptr)&f_cmpA550,
	(funptr)&f_cmpA551,
	(funptr)&f_cmpA552,
	(funptr)&f_cmpA553,
	(funptr)&f_cmpA554,
	(funptr)&f_cmpA555,
	(funptr)&f_cmpA556,
	(funptr)&f_cmpA557,
	(funptr)&f_cmpA558,
	(funptr)&f_cmpA559,
	(funptr)&f_cmpA560,
	(funptr)&f_cmpA561,
	(funptr)&f_cmpA562,
	(funptr)&f_cmpA563,
	(funptr)&f_cmpA564,
	(funptr)&f_cmpA565,
	(funptr)&f_cmpA566,
	(funptr)&f_cmpA567,
	(funptr)&f_cmpA568,
	(funptr)&f_cmpA569,
	(funptr)&f_cmpA570,
	(funptr)&f_cmpA571,
	(funptr)&f_cmpA572,
	(funptr)&f_cmpA573,
	(funptr)&f_cmpA574,
	(funptr)&f_cmpA575,
	(funptr)&f_cmpA576,
	(funptr)&f_cmpA577,
	(funptr)&f_cmpA578,
	(funptr)&f_cmpA579,
	(funptr)&f_cmpA580,
	(funptr)&f_cmpA581,
	(funptr)&f_cmpA582,
	(funptr)&f_cmpA583,
	(funptr)&f_cmpA584,
	(funptr)&f_cmpA585,
	(funptr)&f_cmpA586,
	(funptr)&f_cmpA587,
	(funptr)&f_cmpA588,
	(funptr)&f_cmpA589,
	(funptr)&f_cmpA590,
	(funptr)&f_cmpA591,
	(funptr)&f_cmpA592,
	(funptr)&f_cmpA593,
	(funptr)&f_cmpA594,
	(funptr)&f_cmpA595,
	(funptr)&f_cmpA596,
	(funptr)&f_cmpA597,
	(funptr)&f_cmpA598,
	(funptr)&f_cmpA599,
	(funptr)&f_cmpA600,
	(funptr)&f_cmpA601,
	(funptr)&f_cmpA602,
	(funptr)&f_cmpA603,
	(funptr)&f_cmpA604,
	(funptr)&f_cmpA605,
	(funptr)&f_cmpA606,
	(funptr)&f_cmpA607,
	(funptr)&f_cmpA608,
	(funptr)&f_cmpA609,
	(funptr)&f_cmpA610,
	(funptr)&f_cmpA611,
	(funptr)&f_cmpA612,
	(funptr)&f_cmpA613,
	(funptr)&f_cmpA614,
	(funptr)&f_cmpA615,
	(funptr)&f_cmpA616,
	(funptr)&f_cmpA617,
	(funptr)&f_cmpA618,
	(funptr)&f_cmpA619,
	(funptr)&f_cmpA620,
	(funptr)&f_cmpA621,
	(funptr)&f_cmpA622,
	(funptr)&f_cmpA623,
	(funptr)&f_cmpA624,
	(funptr)&f_cmpA625,
	(funptr)&f_cmpA626,
	(funptr)&f_cmpA627,
	(funptr)&f_cmpA628,
	(funptr)&f_cmpA629,
	(funptr)&f_cmpA630,
	(funptr)&f_cmpA631,
	(funptr)&f_cmpA632,
	(funptr)&f_cmpA633,
	(funptr)&f_cmpA634,
	(funptr)&f_cmpA635,
	(funptr)&f_cmpA636,
	(funptr)&f_cmpA637,
	(funptr)&f_cmpA638,
	(funptr)&f_cmpA639,
	(funptr)&f_cmpA640,
	(funptr)&f_cmpA641,
	(funptr)&f_cmpA642,
	(funptr)&f_cmpA643,
	(funptr)&f_cmpA644,
	(funptr)&f_cmpA645,
	(funptr)&f_cmpA646,
	(funptr)&f_cmpA647,
	(funptr)&f_cmpA648,
	(funptr)&f_cmpA649,
	(funptr)&f_cmpA650,
	(funptr)&f_cmpA651,
	(funptr)&f_cmpA652,
	(funptr)&f_cmpA653,
	(funptr)&f_cmpA654,
	(funptr)&f_cmpA655,
	(funptr)&f_cmpA656,
	(funptr)&f_cmpA657,
	(funptr)&f_cmpA658,
	(funptr)&f_cmpA659,
	(funptr)&f_cmpA660,
	(funptr)&f_cmpA661,
	(funptr)&f_cmpA662,
	(funptr)&f_cmpA663,
	(funptr)&f_cmpA664,
	(funptr)&f_cmpA665,
	(funptr)&f_cmpA666,
	(funptr)&f_cmpA667,
	(funptr)&f_cmpA668,
	(funptr)&f_cmpA669,
	(funptr)&f_cmpA670,
	(funptr)&f_cmpA671,
	(funptr)&f_cmpA672,
	(funptr)&f_cmpA673,
	(funptr)&f_cmpA674,
	(funptr)&f_cmpA675,
	(funptr)&f_cmpA676,
	(funptr)&f_cmpA677,
	(funptr)&f_cmpA678,
	(funptr)&f_cmpA679,
	(funptr)&f_cmpA680,
	(funptr)&f_cmpA681,
	(funptr)&f_cmpA682,
	(funptr)&f_cmpA683,
	(funptr)&f_cmpA684,
	(funptr)&f_cmpA685,
	(funptr)&f_cmpA686,
	(funptr)&f_cmpA687,
	(funptr)&f_cmpA688,
	(funptr)&f_cmpA689,
	(funptr)&f_cmpA690,
	(funptr)&f_cmpA691,
	(funptr)&f_cmpA692,
	(funptr)&f_cmpA693,
	(funptr)&f_cmpA694,
	(funptr)&f_cmpA695,
	(funptr)&f_cmpA696,
	(funptr)&f_cmpA697,
	(funptr)&f_cmpA698,
	(funptr)&f_cmpA699,
	(funptr)&f_cmpA700,
	(funptr)&f_cmpA701,
	(funptr)&f_cmpA702,
	(funptr)&f_cmpA703,
	(funptr)&f_cmpA704,
	(funptr)&f_cmpA705,
	(funptr)&f_cmpA706,
	(funptr)&f_cmpA707,
	(funptr)&f_cmpA708,
	(funptr)&f_cmpA709,
	(funptr)&f_cmpA710,
	(funptr)&f_cmpA711,
	(funptr)&f_cmpA712,
	(funptr)&f_cmpA713,
	(funptr)&f_cmpA714,
	(funptr)&f_cmpA715,
	(funptr)&f_cmpA716,
	(funptr)&f_cmpA717,
	(funptr)&f_cmpA718,
	(funptr)&f_cmpA719,
	(funptr)&f_cmpA720,
	(funptr)&f_cmpA721,
	(funptr)&f_cmpA722,
	(funptr)&f_cmpA723,
	(funptr)&f_cmpA724,
	(funptr)&f_cmpA725,
	(funptr)&f_cmpA726,
	(funptr)&f_cmpA727,
	(funptr)&f_cmpA728,
	(funptr)&f_cmpA729,
	(funptr)&f_cmpA730,
	(funptr)&f_cmpA731,
	(funptr)&f_cmpA732,
	(funptr)&f_cmpA733,
	(funptr)&f_cmpA734,
	(funptr)&f_cmpA735,
	(funptr)&f_cmpA736,
	(funptr)&f_cmpA737,
	(funptr)&f_cmpA738,
	(funptr)&f_cmpA739,
	(funptr)&f_cmpA740,
	(funptr)&f_cmpA741,
	(funptr)&f_cmpA742,
	(funptr)&f_cmpA743,
	(funptr)&f_cmpA744,
	(funptr)&f_cmpA745,
	(funptr)&f_cmpA746,
	(funptr)&f_cmpA747,
	(funptr)&f_cmpA748,
	(funptr)&f_cmpA749,
	(funptr)&f_cmpA750,
	(funptr)&f_cmpA751,
	(funptr)&f_cmpA752,
	(funptr)&f_cmpA753,
	(funptr)&f_cmpA754,
	(funptr)&f_cmpA755,
	(funptr)&f_cmpA756,
	(funptr)&f_cmpA757,
	(funptr)&f_cmpA758,
	(funptr)&f_cmpA759,
	(funptr)&f_cmpA760,
	(funptr)&f_cmpA761,
	(funptr)&f_cmpA762,
	(funptr)&f_cmpA763,
	(funptr)&f_cmpA764,
	(funptr)&f_cmpA765,
	(funptr)&f_cmpA766,
	(funptr)&f_cmpA767,
	(funptr)&f_cmpA768,
	(funptr)&f_cmpA769,
	(funptr)&f_cmpA770,
	(funptr)&f_cmpA771,
	(funptr)&f_cmpA772,
	(funptr)&f_cmpA773,
	(funptr)&f_cmpA774,
	(funptr)&f_cmpA775,
	(funptr)&f_cmpA776,
	(funptr)&f_cmpA777,
	(funptr)&f_cmpA778,
	(funptr)&f_cmpA779,
	(funptr)&f_cmpA780,
	(funptr)&f_cmpA781,
	(funptr)&f_cmpA782,
	(funptr)&f_cmpA783,
	(funptr)&f_cmpA784,
	(funptr)&f_cmpA785,
	(funptr)&f_cmpA786,
	(funptr)&f_cmpA787,
	(funptr)&f_cmpA788,
	(funptr)&f_cmpA789,
	(funptr)&f_cmpA790,
	(funptr)&f_cmpA791,
	(funptr)&f_cmpA792,
	(funptr)&f_cmpA793,
	(funptr)&f_cmpA794,
	(funptr)&f_cmpA795,
	(funptr)&f_cmpA796,
	(funptr)&f_cmpA797,
	(funptr)&f_cmpA798,
	(funptr)&f_cmpA799,
	(funptr)&f_cmpA800,
	(funptr)&f_cmpA801,
	(funptr)&f_cmpA802,
	(funptr)&f_cmpA803,
	(funptr)&f_cmpA804,
	(funptr)&f_cmpA805,
	(funptr)&f_cmpA806,
	(funptr)&f_cmpA807,
	(funptr)&f_cmpA808,
	(funptr)&f_cmpA809,
	(funptr)&f_cmpA810,
	(funptr)&f_cmpA811,
	(funptr)&f_cmpA812,
	(funptr)&f_cmpA813,
	(funptr)&f_cmpA814,
	(funptr)&f_cmpA815,
	(funptr)&f_cmpA816,
	(funptr)&f_cmpA817,
	(funptr)&f_cmpA818,
	(funptr)&f_cmpA819,
	(funptr)&f_cmpA820,
	(funptr)&f_cmpA821,
	(funptr)&f_cmpA822,
	(funptr)&f_cmpA823,
	(funptr)&f_cmpA824,
	(funptr)&f_cmpA825,
	(funptr)&f_cmpA826,
	(funptr)&f_cmpA827,
	(funptr)&f_cmpA828,
	(funptr)&f_cmpA829,
	(funptr)&f_cmpA830,
	(funptr)&f_cmpA831,
	(funptr)&f_cmpA832,
	(funptr)&f_cmpA833,
	(funptr)&f_cmpA834,
	(funptr)&f_cmpA835,
	(funptr)&f_cmpA836,
	(funptr)&f_cmpA837,
	(funptr)&f_cmpA838,
	(funptr)&f_cmpA839,
	(funptr)&f_cmpA840,
	(funptr)&f_cmpA841,
	(funptr)&f_cmpA842,
	(funptr)&f_cmpA843,
	(funptr)&f_cmpA844,
	(funptr)&f_cmpA845,
	(funptr)&f_cmpA846,
	(funptr)&f_cmpA847,
	(funptr)&f_cmpA848,
	(funptr)&f_cmpA849,
	(funptr)&f_cmpA850,
	(funptr)&f_cmpA851,
	(funptr)&f_cmpA852,
	(funptr)&f_cmpA853,
	(funptr)&f_cmpA854,
	(funptr)&f_cmpA855,
	(funptr)&f_cmpA856,
	(funptr)&f_cmpA857,
	(funptr)&f_cmpA858,
	(funptr)&f_cmpA859,
	(funptr)&f_cmpA860,
	(funptr)&f_cmpA861,
	(funptr)&f_cmpA862,
	(funptr)&f_cmpA863,
	(funptr)&f_cmpA864,
	(funptr)&f_cmpA865,
	(funptr)&f_cmpA866,
	(funptr)&f_cmpA867,
	(funptr)&f_cmpA868,
	(funptr)&f_cmpA869,
	(funptr)&f_cmpA870,
	(funptr)&f_cmpA871,
	(funptr)&f_cmpA872,
	(funptr)&f_cmpA873,
	(funptr)&f_cmpA874,
	(funptr)&f_cmpA875,
	(funptr)&f_cmpA876,
	(funptr)&f_cmpA877,
	(funptr)&f_cmpA878,
	(funptr)&f_cmpA879,
	(funptr)&f_cmpA880,
	(funptr)&f_cmpA881,
	(funptr)&f_cmpA882,
	(funptr)&f_cmpA883,
	(funptr)&f_cmpA884,
	(funptr)&f_cmpA885,
	(funptr)&f_cmpA886,
	(funptr)&f_cmpA887,
	(funptr)&f_cmpA888,
	(funptr)&f_cmpA889,
	(funptr)&f_cmpA890,
	(funptr)&f_cmpA891,
	(funptr)&f_cmpA892,
	(funptr)&f_cmpA893,
	(funptr)&f_cmpA894,
	(funptr)&f_cmpA895,
	(funptr)&f_cmpA896,
	(funptr)&f_cmpA897,
	(funptr)&f_cmpA898,
	(funptr)&f_cmpA899,
	(funptr)&f_cmpA900,
	(funptr)&f_cmpA901,
	(funptr)&f_cmpA902,
	(funptr)&f_cmpA903,
	(funptr)&f_cmpA904,
	(funptr)&f_cmpA905,
	(funptr)&f_cmpA906,
	(funptr)&f_cmpA907,
	(funptr)&f_cmpA908,
	(funptr)&f_cmpA909,
	(funptr)&f_cmpA910,
	(funptr)&f_cmpA911,
	(funptr)&f_cmpA912,
	(funptr)&f_cmpA913,
	(funptr)&f_cmpA914,
	(funptr)&f_cmpA915,
	(funptr)&f_cmpA916,
	(funptr)&f_cmpA917,
	(funptr)&f_cmpA918,
	(funptr)&f_cmpA919,
	(funptr)&f_cmpA920,
	(funptr)&f_cmpA921,
	(funptr)&f_cmpA922,
	(funptr)&f_cmpA923,
	(funptr)&f_cmpA924,
	(funptr)&f_cmpA925,
	(funptr)&f_cmpA926,
	(funptr)&f_cmpA927,
	(funptr)&f_cmpA928,
	(funptr)&f_cmpA929,
	(funptr)&f_cmpA930,
	(funptr)&f_cmpA931,
	(funptr)&f_cmpA932,
	(funptr)&f_cmpA933,
	(funptr)&f_cmpA934,
	(funptr)&f_cmpA935,
	(funptr)&f_cmpA936,
	(funptr)&f_cmpA937,
	(funptr)&f_cmpA938,
	(funptr)&f_cmpA939,
	(funptr)&f_cmpA940,
	(funptr)&f_cmpA941,
	(funptr)&f_cmpA942,
	(funptr)&f_cmpA943,
	(funptr)&f_cmpA944,
	(funptr)&f_cmpA945,
	(funptr)&f_cmpA946,
	(funptr)&f_cmpA947,
	(funptr)&f_cmpA948,
	(funptr)&f_cmpA949,
	(funptr)&f_cmpA950,
	(funptr)&f_cmpA951,
	(funptr)&f_cmpA952,
	(funptr)&f_cmpA953,
	(funptr)&f_cmpA954,
	(funptr)&f_cmpA955,
	(funptr)&f_cmpA956,
	(funptr)&f_cmpA957,
	(funptr)&f_cmpA958,
	(funptr)&f_cmpA959,
	(funptr)&f_cmpA960,
	(funptr)&f_cmpA961,
	(funptr)&f_cmpA962,
	(funptr)&f_cmpA963,
	(funptr)&f_cmpA964,
	(funptr)&f_cmpA965,
	(funptr)&f_cmpA966,
	(funptr)&f_cmpA967,
	(funptr)&f_cmpA968,
	(funptr)&f_cmpA969,
	(funptr)&f_cmpA970,
	(funptr)&f_cmpA971,
	(funptr)&f_cmpA972,
	(funptr)&f_cmpA973,
	(funptr)&f_cmpA974,
	(funptr)&f_cmpA975,
	(funptr)&f_cmpA976,
	(funptr)&f_cmpA977,
	(funptr)&f_cmpA978,
	(funptr)&f_cmpA979,
	(funptr)&f_cmpA980,
	(funptr)&f_cmpA981,
	(funptr)&f_cmpA982,
	(funptr)&f_cmpA983,
	(funptr)&f_cmpA984,
	(funptr)&f_cmpA985,
	(funptr)&f_cmpA986,
	(funptr)&f_cmpA987,
	(funptr)&f_cmpA988,
	(funptr)&f_cmpA989,
	(funptr)&f_cmpA990,
	(funptr)&f_cmpA991,
	(funptr)&f_cmpA992,
	(funptr)&f_cmpA993,
	(funptr)&f_cmpA994,
	(funptr)&f_cmpA995,
	(funptr)&f_cmpA996,
	(funptr)&f_cmpA997,
	(funptr)&f_cmpA998,
	(funptr)&f_cmpA999,
	(funptr)&f_cmpA1000,
	(funptr)&f_cmpA1001,
	(funptr)&f_cmpA1002,
	(funptr)&f_cmpA1003,
	(funptr)&f_cmpA1004,
	(funptr)&f_cmpA1005,
	(funptr)&f_cmpA1006,
	(funptr)&f_cmpA1007,
	(funptr)&f_cmpA1008,
	(funptr)&f_cmpA1009,
	(funptr)&f_cmpA1010,
	(funptr)&f_cmpA1011,
	(funptr)&f_cmpA1012,
	(funptr)&f_cmpA1013,
	(funptr)&f_cmpA1014,
	(funptr)&f_cmpA1015,
	(funptr)&f_cmpA1016,
	(funptr)&f_cmpA1017,
	(funptr)&f_cmpA1018,
	(funptr)&f_cmpA1019,
	(funptr)&f_cmpA1020,
	(funptr)&f_cmpA1021,
	(funptr)&f_cmpA1022,
	(funptr)&f_cmpA1023,
	(funptr)&f_cmpA1024,
	(funptr)&f_cmpA1025,
	(funptr)&f_cmpA1026,
	(funptr)&f_cmpA1027,
	(funptr)&f_cmpA1028,
	(funptr)&f_cmpA1029,
	(funptr)&f_cmpA1030,
	(funptr)&f_cmpA1031,
	(funptr)&f_cmpA1032,
	(funptr)&f_cmpA1033,
	(funptr)&f_cmpA1034,
	(funptr)&f_cmpA1035,
	(funptr)&f_cmpA1036,
	(funptr)&f_cmpA1037,
	(funptr)&f_cmpA1038,
	(funptr)&f_cmpA1039,
	(funptr)&f_cmpA1040,
	(funptr)&f_cmpA1041,
	(funptr)&f_cmpA1042,
	(funptr)&f_cmpA1043,
	(funptr)&f_cmpA1044,
	(funptr)&f_cmpA1045,
	(funptr)&f_cmpA1046,
	(funptr)&f_cmpA1047,
	(funptr)&f_cmpA1048,
	(funptr)&f_cmpA1049,
	(funptr)&f_cmpA1050,
	(funptr)&f_cmpA1051,
	(funptr)&f_cmpA1052,
	(funptr)&f_cmpA1053,
	(funptr)&f_cmpA1054,
	(funptr)&f_cmpA1055,
	(funptr)&f_cmpA1056,
	(funptr)&f_cmpA1057,
	(funptr)&f_cmpA1058,
	(funptr)&f_cmpA1059,
	(funptr)&f_cmpA1060,
	(funptr)&f_cmpA1061,
	(funptr)&f_cmpA1062,
	(funptr)&f_cmpA1063,
	(funptr)&f_cmpA1064,
	(funptr)&f_cmpA1065,
	(funptr)&f_cmpA1066,
	(funptr)&f_cmpA1067,
	(funptr)&f_cmpA1068,
	(funptr)&f_cmpA1069,
	(funptr)&f_cmpA1070,
	(funptr)&f_cmpA1071,
	(funptr)&f_cmpA1072,
	(funptr)&f_cmpA1073,
	(funptr)&f_cmpA1074,
	(funptr)&f_cmpA1075,
	(funptr)&f_cmpA1076,
	(funptr)&f_cmpA1077,
	(funptr)&f_cmpA1078,
	(funptr)&f_cmpA1079,
	(funptr)&f_cmpA1080,
	(funptr)&f_cmpA1081,
	(funptr)&f_cmpA1082,
	(funptr)&f_cmpA1083,
	(funptr)&f_cmpA1084,
	(funptr)&f_cmpA1085,
	(funptr)&f_cmpA1086,
	(funptr)&f_cmpA1087,
	(funptr)&f_cmpA1088,
	(funptr)&f_cmpA1089,
	(funptr)&f_cmpA1090,
	(funptr)&f_cmpA1091,
	(funptr)&f_cmpA1092,
	(funptr)&f_cmpA1093,
	(funptr)&f_cmpA1094,
	(funptr)&f_cmpA1095,
	(funptr)&f_cmpA1096,
	(funptr)&f_cmpA1097,
	(funptr)&f_cmpA1098,
	(funptr)&f_cmpA1099,
	(funptr)&f_cmpA1100,
	(funptr)&f_cmpA1101,
	(funptr)&f_cmpA1102,
	(funptr)&f_cmpA1103,
	(funptr)&f_cmpA1104,
	(funptr)&f_cmpA1105,
	(funptr)&f_cmpA1106,
	(funptr)&f_cmpA1107,
	(funptr)&f_cmpA1108,
	(funptr)&f_cmpA1109,
	(funptr)&f_cmpA1110,
	(funptr)&f_cmpA1111,
	(funptr)&f_cmpA1112,
	(funptr)&f_cmpA1113,
	(funptr)&f_cmpA1114,
	(funptr)&f_cmpA1115,
	(funptr)&f_cmpA1116,
	(funptr)&f_cmpA1117,
	(funptr)&f_cmpA1118,
	(funptr)&f_cmpA1119,
	(funptr)&f_cmpA1120,
	(funptr)&f_cmpA1121,
	(funptr)&f_cmpA1122,
	(funptr)&f_cmpA1123,
	(funptr)&f_cmpA1124,
	(funptr)&f_cmpA1125,
	(funptr)&f_cmpA1126,
	(funptr)&f_cmpA1127,
	(funptr)&f_cmpA1128,
	(funptr)&f_cmpA1129,
	(funptr)&f_cmpA1130,
	(funptr)&f_cmpA1131,
	(funptr)&f_cmpA1132,
	(funptr)&f_cmpA1133,
	(funptr)&f_cmpA1134,
	(funptr)&f_cmpA1135,
	(funptr)&f_cmpA1136,
	(funptr)&f_cmpA1137,
	(funptr)&f_cmpA1138,
	(funptr)&f_cmpA1139,
	(funptr)&f_cmpA1140,
	(funptr)&f_cmpA1141,
	(funptr)&f_cmpA1142,
	(funptr)&f_cmpA1143,
	(funptr)&f_cmpA1144,
	(funptr)&f_cmpA1145,
	(funptr)&f_cmpA1146,
	(funptr)&f_cmpA1147,
	(funptr)&f_cmpA1148,
	(funptr)&f_cmpA1149,
	(funptr)&f_cmpA1150,
	(funptr)&f_cmpA1151,
	(funptr)&f_cmpA1152,
	(funptr)&f_cmpA1153,
	(funptr)&f_cmpA1154,
	(funptr)&f_cmpA1155,
	(funptr)&f_cmpA1156,
	(funptr)&f_cmpA1157,
	(funptr)&f_cmpA1158,
	(funptr)&f_cmpA1159,
	(funptr)&f_cmpA1160,
	(funptr)&f_cmpA1161,
	(funptr)&f_cmpA1162,
	(funptr)&f_cmpA1163,
	(funptr)&f_cmpA1164,
	(funptr)&f_cmpA1165,
	(funptr)&f_cmpA1166,
	(funptr)&f_cmpA1167,
	(funptr)&f_cmpA1168,
	(funptr)&f_cmpA1169,
	(funptr)&f_cmpA1170,
	(funptr)&f_cmpA1171,
	(funptr)&f_cmpA1172,
	(funptr)&f_cmpA1173,
	(funptr)&f_cmpA1174,
	(funptr)&f_cmpA1175,
	(funptr)&f_cmpA1176,
	(funptr)&f_cmpA1177,
	(funptr)&f_cmpA1178,
	(funptr)&f_cmpA1179,
	(funptr)&f_cmpA1180,
	(funptr)&f_cmpA1181,
	(funptr)&f_cmpA1182,
	(funptr)&f_cmpA1183,
	(funptr)&f_cmpA1184,
	(funptr)&f_cmpA1185,
	(funptr)&f_cmpA1186,
	(funptr)&f_cmpA1187,
	(funptr)&f_cmpA1188,
	(funptr)&f_cmpA1189,
	(funptr)&f_cmpA1190,
	(funptr)&f_cmpA1191,
	(funptr)&f_cmpA1192,
	(funptr)&f_cmpA1193,
	(funptr)&f_cmpA1194,
	(funptr)&f_cmpA1195,
	(funptr)&f_cmpA1196,
	(funptr)&f_cmpA1197,
	(funptr)&f_cmpA1198,
	(funptr)&f_cmpA1199,
	(funptr)&f_cmpA1200,
	(funptr)&f_cmpA1201,
	(funptr)&f_cmpA1202,
	(funptr)&f_cmpA1203,
	(funptr)&f_cmpA1204,
	(funptr)&f_cmpA1205,
	(funptr)&f_cmpA1206,
	(funptr)&f_cmpA1207,
	(funptr)&f_cmpA1208,
	(funptr)&f_cmpA1209,
	(funptr)&f_cmpA1210,
	(funptr)&f_cmpA1211,
	(funptr)&f_cmpA1212,
	(funptr)&f_cmpA1213,
	(funptr)&f_cmpA1214,
	(funptr)&f_cmpA1215,
	(funptr)&f_cmpA1216,
	(funptr)&f_cmpA1217,
	(funptr)&f_cmpA1218,
	(funptr)&f_cmpA1219,
	(funptr)&f_cmpA1220,
	(funptr)&f_cmpA1221,
	(funptr)&f_cmpA1222,
	(funptr)&f_cmpA1223,
	(funptr)&f_cmpA1224,
	(funptr)&f_cmpA1225,
	(funptr)&f_cmpA1226,
	(funptr)&f_cmpA1227,
	(funptr)&f_cmpA1228,
	(funptr)&f_cmpA1229,
	(funptr)&f_cmpA1230,
	(funptr)&f_cmpA1231,
	(funptr)&f_cmpA1232,
	(funptr)&f_cmpA1233,
	(funptr)&f_cmpA1234,
	(funptr)&f_cmpA1235
};
int G_maxargs = 16;
